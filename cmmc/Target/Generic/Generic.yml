InstInfo:
  Jump:
    Format: Jump $Tgt:Reloc[Metadata]
    Flag: [Terminator, Branch, NoFallthrough]
  Branch:
    Format: Branch $Cond:Bool[Use], $Tgt:Reloc[Metadata], $Prob:Prob[Metadata]
    Flag: [Terminator, Branch]
  Unreachable:
    Format: Unreachable
    Flag: [Terminator, NoFallthrough]
  Load:
    Format: Load $Dst:VReg[Def], $Addr:VReg[Use]
    Flag: [Load]
  Store:
    Format: Store $Addr:VReg[Use], $Src:Val[Use]
    Flag: [Store]
  IntegerArithmetic:
    Format: $Op:Template $Dst:IReg[Def], $Lhs:IVal[Use], $Rhs:IVal[Use]
    Instances:
      Add:
        Op: Add
        Flag: [Commutative]
      Sub:
        Op: Sub
      Mul:
        Op: Mul
        Flag: [Commutative]
      SDiv:
        Op: SDiv
      SRem:
        Op: SRem
      UDiv:
        Op: UDiv
      URem:
        Op: URem
      And:
        Op: And
        Flag: [Commutative]
      Or:
        Op: Or
        Flag: [Commutative]
      Xor:
        Op: Xor
        Flag: [Commutative]
      Shl:
        Op: Shl
      LShr:
        Op: LShr
      AShr:
        Op: AShr
  IntegerUnary:
    Format: $Op:Template $Dst:IReg[Def], $Src:IVal[Use]
    Instances:
      Neg:
        Op: Neg
  FloatArithmetic:
    Format: $Op:Template $Dst:FReg[Def], $Lhs:FReg[Use], $Rhs:FReg[Use]
    Instances:
      FAdd:
        Op: FAdd
        Flag: [Commutative]
      FSub:
        Op: FSub
      FMul:
        Op: FMul
        Flag: [Commutative]
      FDiv:
        Op: FDiv
  FNeg:
    Format: FNeg $Dst:FReg[Def], $Src:FReg[Use]
  FFma:
    Format: FFma $Dst:FReg[Def], $Lhs:FReg[Use], $Rhs:FReg[Use], $Acc:FReg[Use]
  SCmp:
    Format: SCmp $Dst:BoolReg[Def], $Lhs:IVal[Use], $Rhs:IVal[Use], $Op:Flag[Metadata]
  UCmp:
    Format: UCmp $Dst:BoolReg[Def], $Lhs:IVal[Use], $Rhs:IVal[Use], $Op:Flag[Metadata]
  FCmp:
    Format: FCmp $Dst:BoolReg[Def], $Lhs:FVal[Use], $Rhs:FVal[Use], $Op:Flag[Metadata]
  SExt:
    Format: SExt $Dst:IReg[Def], $Src:IVal[Use]
  ZExt:
    Format: ZExt $Dst:IReg[Def], $Src:IVal[Use]
  Trunc:
    Format: Trunc $Dst:IReg[Def], $Src:IVal[Use]
  F2U:
    Format: F2U $Dst:IReg[Def], $Src:FReg[Use]
  F2S:
    Format: F2S $Dst:IReg[Def], $Src:FReg[Use]
  U2F:
    Format: U2F $Dst:FReg[Def], $Src:IVal[Use]
  S2F:
    Format: S2F $Dst:FReg[Def], $Src:IVal[Use]
  FCast:
    Format: FCast $Dst:FReg[Def], $Src:FReg[Use]
  Copy:
    Format: Copy $Dst:VRegOrISAReg[Def], $Src:VRegOrISAReg[Use]
  Select:
    Format: Select $Dst:VReg[Def], $Cond:Bool[Use], $Lhs:Val[Use], $Rhs:Val[Use]
  LoadGlobalAddress:
    Format: LoadGlobalAddress $Dst:IReg[Def], $Addr:Reloc[Metadata]
    Flag: [LoadConstant]
  LoadImm:
    Format: LoadImm $Dst:IReg[Def], $Imm:Imm[Metadata]
    Flag: [LoadConstant]
  LoadStackObjectAddr:
    Format: LoadStackObjectAddr $Dst:IReg[Def], $Obj:StackObject[Metadata]
    Flag: [LoadConstant]
  CopyFromReg:
    Format: CopyFromReg $Dst:VRegOrISAReg[Def], $Src:ISAReg[Use]
    CustomVerifier: true
  CopyToReg:
    Format: CopyToReg $Dst:ISAReg[Def], $Src:VRegOrISAReg[Use]
    CustomVerifier: true
    Flag: [RegCopy]
  LoadImmToReg:
    Format: LoadImmToReg $Dst:ISAReg[Def], $Imm:Imm[Metadata]
    Flag: [RegCopy]
  LoadRegFromStack:
    Format: LoadRegFromStack $Dst:VRegOrISAReg[Def], $Obj:StackObject[Metadata]
    Flag: [Load]
  StoreRegToStack:
    Format: StoreRegToStack $Val:VRegOrISAReg[Use], $Obj:StackObject[Metadata]
    Flag: [Store]
