struct foo3 {};
struct foo2 {i32 x, i32 y};
struct foo {i32 c, [10 * i32] d, struct foo2 w, struct foo3 a, [2 * struct foo3] b};

func @test([2 * i32]* %x) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
  ^entry:
    i32* %0 = getelementptr &([2 * i32]* %x)[i32 0][i32 1];
    i32 %1 = load i32* %0;
    ret i32 %1;
}
func @test1([3 * struct foo]* %x, struct foo* %0) -> void { NoRecurse } {
  ^entry:
    i32* %1 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].c;
    i32 %2 = load i32* %1;
    i32* %3 = getelementptr &(struct foo* %0)[i32 0].c;
    store i32* %3 with i32 %2;
    i32* %4 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 0];
    i32 %5 = load i32* %4;
    i32* %6 = getelementptr &(struct foo* %0)[i32 0].d[i32 0];
    store i32* %6 with i32 %5;
    i32* %7 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 1];
    i32 %8 = load i32* %7;
    i32* %9 = getelementptr &(struct foo* %0)[i32 0].d[i32 1];
    store i32* %9 with i32 %8;
    i32* %10 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 2];
    i32 %11 = load i32* %10;
    i32* %12 = getelementptr &(struct foo* %0)[i32 0].d[i32 2];
    store i32* %12 with i32 %11;
    i32* %13 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 3];
    i32 %14 = load i32* %13;
    i32* %15 = getelementptr &(struct foo* %0)[i32 0].d[i32 3];
    store i32* %15 with i32 %14;
    i32* %16 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 4];
    i32 %17 = load i32* %16;
    i32* %18 = getelementptr &(struct foo* %0)[i32 0].d[i32 4];
    store i32* %18 with i32 %17;
    i32* %19 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 5];
    i32 %20 = load i32* %19;
    i32* %21 = getelementptr &(struct foo* %0)[i32 0].d[i32 5];
    store i32* %21 with i32 %20;
    i32* %22 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 6];
    i32 %23 = load i32* %22;
    i32* %24 = getelementptr &(struct foo* %0)[i32 0].d[i32 6];
    store i32* %24 with i32 %23;
    i32* %25 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 7];
    i32 %26 = load i32* %25;
    i32* %27 = getelementptr &(struct foo* %0)[i32 0].d[i32 7];
    store i32* %27 with i32 %26;
    i32* %28 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 8];
    i32 %29 = load i32* %28;
    i32* %30 = getelementptr &(struct foo* %0)[i32 0].d[i32 8];
    store i32* %30 with i32 %29;
    i32* %31 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 9];
    i32 %32 = load i32* %31;
    i32* %33 = getelementptr &(struct foo* %0)[i32 0].d[i32 9];
    store i32* %33 with i32 %32;
    i32* %34 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].w.x;
    i32 %35 = load i32* %34;
    i32* %36 = getelementptr &(struct foo* %0)[i32 0].w.x;
    store i32* %36 with i32 %35;
    i32* %37 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].w.y;
    i32 %38 = load i32* %37;
    i32* %39 = getelementptr &(struct foo* %0)[i32 0].w.y;
    store i32* %39 with i32 %38;
    ret;
}
func @test2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -1;
    ret i32 %0;
}
func @test3(struct foo2* %x) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
  ^entry:
    i32* %0 = getelementptr &(struct foo2* %x)[i32 0].x;
    i32 %1 = load i32* %0;
    i32 %2 = strunc i32 %1 to i32;
    ret i32 %2;
}
[10 * struct foo]* @www, align 8;
func @loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogfunc() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoReturn NoRecurse } {
  ^entry:
    unreachable;
}
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
