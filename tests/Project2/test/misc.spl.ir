struct foo3 {};
struct foo2 {i32 x, i32 y};
struct foo {i32 c, [10 * i32] d, struct foo2 w, struct foo3 a, [2 * struct foo3] b};

func @test([2 * i32]* %x) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
^entry:
    i32* %0 = getelementptr &([2 * i32]* %x)[i32 0][i32 1];
    i32 %1 = load i32* %0;
    ret i32 %1;
}
func @test1([3 * struct foo]* %x, struct foo* %0) -> void { NoRecurse } {
^entry:
    i32* %1 = getelementptr &(struct foo* %0)[i32 0].c;
    i32* %2 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].c;
    i32 %3 = load i32* %2;
    store i32* %1 with i32 %3;
    i32* %4 = getelementptr &(struct foo* %0)[i32 0].d[i32 0];
    i32* %5 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 0];
    i32 %6 = load i32* %5;
    store i32* %4 with i32 %6;
    i32* %7 = getelementptr &(struct foo* %0)[i32 0].d[i32 1];
    i32* %8 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 1];
    i32 %9 = load i32* %8;
    store i32* %7 with i32 %9;
    i32* %10 = getelementptr &(struct foo* %0)[i32 0].d[i32 2];
    i32* %11 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 2];
    i32 %12 = load i32* %11;
    store i32* %10 with i32 %12;
    i32* %13 = getelementptr &(struct foo* %0)[i32 0].d[i32 3];
    i32* %14 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 3];
    i32 %15 = load i32* %14;
    store i32* %13 with i32 %15;
    i32* %16 = getelementptr &(struct foo* %0)[i32 0].d[i32 4];
    i32* %17 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 4];
    i32 %18 = load i32* %17;
    store i32* %16 with i32 %18;
    i32* %19 = getelementptr &(struct foo* %0)[i32 0].d[i32 5];
    i32* %20 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 5];
    i32 %21 = load i32* %20;
    store i32* %19 with i32 %21;
    i32* %22 = getelementptr &(struct foo* %0)[i32 0].d[i32 6];
    i32* %23 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 6];
    i32 %24 = load i32* %23;
    store i32* %22 with i32 %24;
    i32* %25 = getelementptr &(struct foo* %0)[i32 0].d[i32 7];
    i32* %26 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 7];
    i32 %27 = load i32* %26;
    store i32* %25 with i32 %27;
    i32* %28 = getelementptr &(struct foo* %0)[i32 0].d[i32 8];
    i32* %29 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 8];
    i32 %30 = load i32* %29;
    store i32* %28 with i32 %30;
    i32* %31 = getelementptr &(struct foo* %0)[i32 0].d[i32 9];
    i32* %32 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].d[i32 9];
    i32 %33 = load i32* %32;
    store i32* %31 with i32 %33;
    i32* %34 = getelementptr &(struct foo* %0)[i32 0].w.x;
    i32* %35 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].w.x;
    i32 %36 = load i32* %35;
    store i32* %34 with i32 %36;
    i32* %37 = getelementptr &(struct foo* %0)[i32 0].w.y;
    i32* %38 = getelementptr &([3 * struct foo]* %x)[i32 0][i32 0].w.y;
    i32 %39 = load i32* %38;
    store i32* %37 with i32 %39;
    ret;
}
func @test2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
^entry:
    i32 %0 = add i32 %x, i32 -1;
    ret i32 %0;
}
func @test3(struct foo2* %x) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
^entry:
    i32* %0 = getelementptr &(struct foo2* %x)[i32 0].x;
    i32 %1 = load i32* %0;
    ret i32 %1;
}
[10 * struct foo]* @www;
func @loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogfunc() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoReturn NoRecurse } {
^entry:
    unreachable;
}
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
^entry:
    ret i32 0;
}
