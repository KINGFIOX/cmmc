func @read() -> i32 { NoMemoryRead NoMemoryWrite };
func @write() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 {
^entry:
    i32* %year = alloc i32;
    i32* %month = alloc i32;
    store i32* %month with i32 0;
    store i32* %year with i32 0;
    i32 %0 = call () -> i32 @read();
    store i32* %year with i32 %0;
    i32 %1 = call () -> i32 @read();
    store i32* %month with i32 %1;
    i32 %2 = load i32* %year;
    i32 %3 = load i32* %year;
    i32 %4 = sdiv i32 %3, i32 100;
    i32 %5 = mul i32 %4, i32 100;
    i1 %6 = scmp eq i32 %2, i32 %5;
    i32 %7 = zext i1 %6 to i32;
    i1 %8 = scmp neq i32 %7, i32 0;
    cbr i1 %8(prob = 0.5), ^if.then, ^if.else;
^if.then:
    i32 %9 = load i32* %year;
    i32 %10 = load i32* %year;
    i32 %11 = sdiv i32 %10, i32 400;
    i32 %12 = mul i32 %11, i32 400;
    i1 %13 = scmp eq i32 %9, i32 %12;
    i32 %14 = zext i1 %13 to i32;
    i1 %15 = scmp neq i32 %14, i32 0;
    cbr i1 %15(prob = 0.5), ^if.then1, ^if.else1;
^if.else:
    i32 %16 = load i32* %year;
    i32 %17 = load i32* %year;
    i32 %18 = sdiv i32 %17, i32 4;
    i32 %19 = mul i32 %18, i32 4;
    i1 %20 = scmp eq i32 %16, i32 %19;
    i32 %21 = zext i1 %20 to i32;
    i1 %22 = scmp neq i32 %21, i32 0;
    cbr i1 %22(prob = 0.5), ^if.then2, ^if.else2;
^if.then1:
    i32 %23 = load i32* %month;
    i1 %24 = scmp eq i32 %23, i32 2;
    i32 %25 = zext i1 %24 to i32;
    i1 %26 = scmp neq i32 %25, i32 0;
    cbr i1 %26(prob = 0.5), ^if.then3, ^if.else3;
^if.else1:
    i32 %27 = load i32* %month;
    i1 %28 = scmp eq i32 %27, i32 2;
    i32 %29 = zext i1 %28 to i32;
    i1 %30 = scmp neq i32 %29, i32 0;
    cbr i1 %30(prob = 0.5), ^if.then4, ^if.else4;
^if.then2:
    i32 %31 = load i32* %month;
    i1 %32 = scmp eq i32 %31, i32 2;
    i32 %33 = zext i1 %32 to i32;
    i1 %34 = scmp neq i32 %33, i32 0;
    cbr i1 %34(prob = 0.5), ^if.then5, ^if.else5;
^if.else2:
    i32 %35 = load i32* %month;
    i1 %36 = scmp eq i32 %35, i32 2;
    i32 %37 = zext i1 %36 to i32;
    i1 %38 = scmp neq i32 %37, i32 0;
    cbr i1 %38(prob = 0.5), ^if.then6, ^if.else6;
^if.then3:
    call (i32) -> void @write(i32 29);
    ubr ^b;
^if.then4:
    call (i32) -> void @write(i32 28);
    ubr ^b1;
^if.then5:
    call (i32) -> void @write(i32 29);
    ubr ^b2;
^if.then6:
    call (i32) -> void @write(i32 28);
    ubr ^b3;
^if.else3:
    i32 %39 = load i32* %month;
    i32 %40 = load i32* %month;
    i32 %41 = sdiv i32 %40, i32 2;
    i32 %42 = mul i32 %41, i32 2;
    i1 %43 = scmp eq i32 %39, i32 %42;
    i32 %44 = zext i1 %43 to i32;
    i1 %45 = scmp neq i32 %44, i32 0;
    cbr i1 %45(prob = 0.5), ^if.then7, ^if.else7;
^if.else4:
    i32 %46 = load i32* %month;
    i32 %47 = load i32* %month;
    i32 %48 = sdiv i32 %47, i32 2;
    i32 %49 = mul i32 %48, i32 2;
    i1 %50 = scmp eq i32 %46, i32 %49;
    i32 %51 = zext i1 %50 to i32;
    i1 %52 = scmp neq i32 %51, i32 0;
    cbr i1 %52(prob = 0.5), ^if.then8, ^if.else8;
^if.else5:
    i32 %53 = load i32* %month;
    i32 %54 = load i32* %month;
    i32 %55 = sdiv i32 %54, i32 2;
    i32 %56 = mul i32 %55, i32 2;
    i1 %57 = scmp eq i32 %53, i32 %56;
    i32 %58 = zext i1 %57 to i32;
    i1 %59 = scmp neq i32 %58, i32 0;
    cbr i1 %59(prob = 0.5), ^if.then9, ^if.else9;
^if.else6:
    i32 %60 = load i32* %month;
    i32 %61 = load i32* %month;
    i32 %62 = sdiv i32 %61, i32 2;
    i32 %63 = mul i32 %62, i32 2;
    i1 %64 = scmp eq i32 %60, i32 %63;
    i32 %65 = zext i1 %64 to i32;
    i1 %66 = scmp neq i32 %65, i32 0;
    cbr i1 %66(prob = 0.5), ^if.then10, ^if.else10;
^b:
    ubr ^b4;
^if.then7:
    call (i32) -> void @write(i32 30);
    ubr ^b5;
^b1:
    ubr ^b4;
^b2:
    ubr ^b6;
^if.else7:
    call (i32) -> void @write(i32 31);
    ubr ^b5;
^if.then8:
    call (i32) -> void @write(i32 30);
    ubr ^b7;
^if.then9:
    call (i32) -> void @write(i32 30);
    ubr ^b8;
^b3:
    ubr ^b6;
^if.else8:
    call (i32) -> void @write(i32 31);
    ubr ^b7;
^if.else9:
    call (i32) -> void @write(i32 31);
    ubr ^b8;
^if.then10:
    call (i32) -> void @write(i32 30);
    ubr ^b9;
^if.else10:
    call (i32) -> void @write(i32 31);
    ubr ^b9;
^b4:
    ubr ^b10;
^b5:
    ubr ^b;
^b6:
    ubr ^b10;
^b7:
    ubr ^b1;
^b8:
    ubr ^b2;
^b9:
    ubr ^b3;
^b10:
    ret i32 0;
}
