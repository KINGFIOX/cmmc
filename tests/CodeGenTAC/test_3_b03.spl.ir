struct Worker {i32 id, i32 salary, i32 group};
struct Group {i32 group_id, [10 * struct Worker] workers, i32 avg_salary};

internal func @write() -> void { NoMemoryRead NoMemoryWrite };
func @calculate_avg(struct Group* %g) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
^entry:
    struct Group* %g1 = alloc struct Group;
    i32* %0 = getelementptr &(struct Group* %g1)[i32 0].group_id;
    i32* %1 = getelementptr &(struct Group* %g)[i32 0].group_id;
    i32 %2 = load i32* %1;
    store i32* %0 with i32 %2;
    i32* %3 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 0].id;
    i32* %4 = getelementptr &(struct Group* %g)[i32 0].workers[i32 0].id;
    i32 %5 = load i32* %4;
    store i32* %3 with i32 %5;
    i32* %6 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 0].salary;
    i32* %7 = getelementptr &(struct Group* %g)[i32 0].workers[i32 0].salary;
    i32 %8 = load i32* %7;
    store i32* %6 with i32 %8;
    i32* %9 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 0].group;
    i32* %10 = getelementptr &(struct Group* %g)[i32 0].workers[i32 0].group;
    i32 %11 = load i32* %10;
    store i32* %9 with i32 %11;
    i32* %12 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 1].id;
    i32* %13 = getelementptr &(struct Group* %g)[i32 0].workers[i32 1].id;
    i32 %14 = load i32* %13;
    store i32* %12 with i32 %14;
    i32* %15 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 1].salary;
    i32* %16 = getelementptr &(struct Group* %g)[i32 0].workers[i32 1].salary;
    i32 %17 = load i32* %16;
    store i32* %15 with i32 %17;
    i32* %18 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 1].group;
    i32* %19 = getelementptr &(struct Group* %g)[i32 0].workers[i32 1].group;
    i32 %20 = load i32* %19;
    store i32* %18 with i32 %20;
    i32* %21 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 2].id;
    i32* %22 = getelementptr &(struct Group* %g)[i32 0].workers[i32 2].id;
    i32 %23 = load i32* %22;
    store i32* %21 with i32 %23;
    i32* %24 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 2].salary;
    i32* %25 = getelementptr &(struct Group* %g)[i32 0].workers[i32 2].salary;
    i32 %26 = load i32* %25;
    store i32* %24 with i32 %26;
    i32* %27 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 2].group;
    i32* %28 = getelementptr &(struct Group* %g)[i32 0].workers[i32 2].group;
    i32 %29 = load i32* %28;
    store i32* %27 with i32 %29;
    i32* %30 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 3].id;
    i32* %31 = getelementptr &(struct Group* %g)[i32 0].workers[i32 3].id;
    i32 %32 = load i32* %31;
    store i32* %30 with i32 %32;
    i32* %33 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 3].salary;
    i32* %34 = getelementptr &(struct Group* %g)[i32 0].workers[i32 3].salary;
    i32 %35 = load i32* %34;
    store i32* %33 with i32 %35;
    i32* %36 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 3].group;
    i32* %37 = getelementptr &(struct Group* %g)[i32 0].workers[i32 3].group;
    i32 %38 = load i32* %37;
    store i32* %36 with i32 %38;
    i32* %39 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 4].id;
    i32* %40 = getelementptr &(struct Group* %g)[i32 0].workers[i32 4].id;
    i32 %41 = load i32* %40;
    store i32* %39 with i32 %41;
    i32* %42 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 4].salary;
    i32* %43 = getelementptr &(struct Group* %g)[i32 0].workers[i32 4].salary;
    i32 %44 = load i32* %43;
    store i32* %42 with i32 %44;
    i32* %45 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 4].group;
    i32* %46 = getelementptr &(struct Group* %g)[i32 0].workers[i32 4].group;
    i32 %47 = load i32* %46;
    store i32* %45 with i32 %47;
    i32* %48 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 5].id;
    i32* %49 = getelementptr &(struct Group* %g)[i32 0].workers[i32 5].id;
    i32 %50 = load i32* %49;
    store i32* %48 with i32 %50;
    i32* %51 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 5].salary;
    i32* %52 = getelementptr &(struct Group* %g)[i32 0].workers[i32 5].salary;
    i32 %53 = load i32* %52;
    store i32* %51 with i32 %53;
    i32* %54 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 5].group;
    i32* %55 = getelementptr &(struct Group* %g)[i32 0].workers[i32 5].group;
    i32 %56 = load i32* %55;
    store i32* %54 with i32 %56;
    i32* %57 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 6].id;
    i32* %58 = getelementptr &(struct Group* %g)[i32 0].workers[i32 6].id;
    i32 %59 = load i32* %58;
    store i32* %57 with i32 %59;
    i32* %60 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 6].salary;
    i32* %61 = getelementptr &(struct Group* %g)[i32 0].workers[i32 6].salary;
    i32 %62 = load i32* %61;
    store i32* %60 with i32 %62;
    i32* %63 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 6].group;
    i32* %64 = getelementptr &(struct Group* %g)[i32 0].workers[i32 6].group;
    i32 %65 = load i32* %64;
    store i32* %63 with i32 %65;
    i32* %66 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 7].id;
    i32* %67 = getelementptr &(struct Group* %g)[i32 0].workers[i32 7].id;
    i32 %68 = load i32* %67;
    store i32* %66 with i32 %68;
    i32* %69 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 7].salary;
    i32* %70 = getelementptr &(struct Group* %g)[i32 0].workers[i32 7].salary;
    i32 %71 = load i32* %70;
    store i32* %69 with i32 %71;
    i32* %72 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 7].group;
    i32* %73 = getelementptr &(struct Group* %g)[i32 0].workers[i32 7].group;
    i32 %74 = load i32* %73;
    store i32* %72 with i32 %74;
    i32* %75 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 8].id;
    i32* %76 = getelementptr &(struct Group* %g)[i32 0].workers[i32 8].id;
    i32 %77 = load i32* %76;
    store i32* %75 with i32 %77;
    i32* %78 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 8].salary;
    i32* %79 = getelementptr &(struct Group* %g)[i32 0].workers[i32 8].salary;
    i32 %80 = load i32* %79;
    store i32* %78 with i32 %80;
    i32* %81 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 8].group;
    i32* %82 = getelementptr &(struct Group* %g)[i32 0].workers[i32 8].group;
    i32 %83 = load i32* %82;
    store i32* %81 with i32 %83;
    i32* %84 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 9].id;
    i32* %85 = getelementptr &(struct Group* %g)[i32 0].workers[i32 9].id;
    i32 %86 = load i32* %85;
    store i32* %84 with i32 %86;
    i32* %87 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 9].salary;
    i32* %88 = getelementptr &(struct Group* %g)[i32 0].workers[i32 9].salary;
    i32 %89 = load i32* %88;
    store i32* %87 with i32 %89;
    i32* %90 = getelementptr &(struct Group* %g1)[i32 0].workers[i32 9].group;
    i32* %91 = getelementptr &(struct Group* %g)[i32 0].workers[i32 9].group;
    i32 %92 = load i32* %91;
    store i32* %90 with i32 %92;
    i32* %93 = getelementptr &(struct Group* %g1)[i32 0].avg_salary;
    i32* %94 = getelementptr &(struct Group* %g)[i32 0].avg_salary;
    i32 %95 = load i32* %94;
    store i32* %93 with i32 %95;
    i32 %96 = add i32 %8, i32 %17;
    i32 %97 = add i32 %96, i32 %26;
    i32 %98 = add i32 %97, i32 %35;
    i32 %99 = add i32 %98, i32 %44;
    i32 %100 = add i32 %99, i32 %53;
    i32 %101 = add i32 %100, i32 %62;
    i32 %102 = add i32 %101, i32 %71;
    i32 %103 = add i32 %102, i32 %80;
    i32 %104 = add i32 %103, i32 %89;
    i32 %105 = sdiv i32 %104, i32 10;
    ret i32 %105;
}
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry:
    struct Group* %g = alloc struct Group;
    [5 * struct Group]* %company = alloc [5 * struct Group];
    i32* %0 = getelementptr &(struct Group* %g)[i32 0].group_id;
    i32* %1 = getelementptr &(struct Group* %g)[i32 0].workers[i32 0].id;
    i32* %2 = getelementptr &(struct Group* %g)[i32 0].workers[i32 0].salary;
    i32* %3 = getelementptr &(struct Group* %g)[i32 0].workers[i32 0].group;
    i32* %4 = getelementptr &(struct Group* %g)[i32 0].workers[i32 1].id;
    i32* %5 = getelementptr &(struct Group* %g)[i32 0].workers[i32 1].salary;
    i32* %6 = getelementptr &(struct Group* %g)[i32 0].workers[i32 1].group;
    i32* %7 = getelementptr &(struct Group* %g)[i32 0].workers[i32 2].id;
    i32* %8 = getelementptr &(struct Group* %g)[i32 0].workers[i32 2].salary;
    i32* %9 = getelementptr &(struct Group* %g)[i32 0].workers[i32 2].group;
    i32* %10 = getelementptr &(struct Group* %g)[i32 0].workers[i32 3].id;
    i32* %11 = getelementptr &(struct Group* %g)[i32 0].workers[i32 3].salary;
    i32* %12 = getelementptr &(struct Group* %g)[i32 0].workers[i32 3].group;
    i32* %13 = getelementptr &(struct Group* %g)[i32 0].workers[i32 4].id;
    i32* %14 = getelementptr &(struct Group* %g)[i32 0].workers[i32 4].salary;
    i32* %15 = getelementptr &(struct Group* %g)[i32 0].workers[i32 4].group;
    i32* %16 = getelementptr &(struct Group* %g)[i32 0].workers[i32 5].id;
    i32* %17 = getelementptr &(struct Group* %g)[i32 0].workers[i32 5].salary;
    i32* %18 = getelementptr &(struct Group* %g)[i32 0].workers[i32 5].group;
    i32* %19 = getelementptr &(struct Group* %g)[i32 0].workers[i32 6].id;
    i32* %20 = getelementptr &(struct Group* %g)[i32 0].workers[i32 6].salary;
    i32* %21 = getelementptr &(struct Group* %g)[i32 0].workers[i32 6].group;
    i32* %22 = getelementptr &(struct Group* %g)[i32 0].workers[i32 7].id;
    i32* %23 = getelementptr &(struct Group* %g)[i32 0].workers[i32 7].salary;
    i32* %24 = getelementptr &(struct Group* %g)[i32 0].workers[i32 7].group;
    i32* %25 = getelementptr &(struct Group* %g)[i32 0].workers[i32 8].id;
    i32* %26 = getelementptr &(struct Group* %g)[i32 0].workers[i32 8].salary;
    i32* %27 = getelementptr &(struct Group* %g)[i32 0].workers[i32 8].group;
    i32* %28 = getelementptr &(struct Group* %g)[i32 0].workers[i32 9].id;
    i32* %29 = getelementptr &(struct Group* %g)[i32 0].workers[i32 9].salary;
    i32* %30 = getelementptr &(struct Group* %g)[i32 0].workers[i32 9].group;
    i32* %31 = getelementptr &(struct Group* %g)[i32 0].avg_salary;
    ubr ^while.body;
^while.body:
    i32 %32 = phi [^entry, i32 0] [^while.body, i32 %120];
    i32 %33 = phi [^entry, i32 0] [^while.body, i32 %119];
    struct Group* %34 = getelementptr &([5 * struct Group]* %company)[i32 0][i32 %32];
    i32* %35 = getelementptr &(struct Group* %34)[i32 0].group_id;
    store i32* %35 with i32 %32;
    i32 %36 = mul i32 %32, i32 100;
    i32 %37 = add i32 %36, i32 3000;
    i32* %38 = getelementptr &(struct Group* %34)[i32 0].workers[i32 0].salary;
    store i32* %38 with i32 %37;
    i32* %39 = getelementptr &(struct Group* %34)[i32 0].workers[i32 1].salary;
    i32 %40 = add i32 %36, i32 3150;
    store i32* %39 with i32 %40;
    i32* %41 = getelementptr &(struct Group* %34)[i32 0].workers[i32 2].salary;
    i32 %42 = add i32 %36, i32 3300;
    store i32* %41 with i32 %42;
    i32* %43 = getelementptr &(struct Group* %34)[i32 0].workers[i32 3].salary;
    i32 %44 = add i32 %36, i32 3450;
    store i32* %43 with i32 %44;
    i32* %45 = getelementptr &(struct Group* %34)[i32 0].workers[i32 4].salary;
    i32 %46 = add i32 %36, i32 3600;
    store i32* %45 with i32 %46;
    i32* %47 = getelementptr &(struct Group* %34)[i32 0].workers[i32 5].salary;
    i32 %48 = add i32 %36, i32 3750;
    store i32* %47 with i32 %48;
    i32* %49 = getelementptr &(struct Group* %34)[i32 0].workers[i32 6].salary;
    i32 %50 = add i32 %36, i32 3900;
    store i32* %49 with i32 %50;
    i32* %51 = getelementptr &(struct Group* %34)[i32 0].workers[i32 7].salary;
    i32 %52 = add i32 %36, i32 4050;
    store i32* %51 with i32 %52;
    i32* %53 = getelementptr &(struct Group* %34)[i32 0].workers[i32 8].salary;
    i32 %54 = add i32 %36, i32 4200;
    store i32* %53 with i32 %54;
    i32* %55 = getelementptr &(struct Group* %34)[i32 0].workers[i32 9].salary;
    i32 %56 = add i32 %36, i32 4350;
    store i32* %55 with i32 %56;
    i32* %57 = getelementptr &(struct Group* %34)[i32 0].avg_salary;
    store i32* %0 with i32 %32;
    i32* %58 = getelementptr &(struct Group* %34)[i32 0].workers[i32 0].id;
    i32 %59 = load i32* %58;
    store i32* %1 with i32 %59;
    i32 %60 = load i32* %38;
    store i32* %2 with i32 %60;
    i32* %61 = getelementptr &(struct Group* %34)[i32 0].workers[i32 0].group;
    i32 %62 = load i32* %61;
    store i32* %3 with i32 %62;
    i32* %63 = getelementptr &(struct Group* %34)[i32 0].workers[i32 1].id;
    i32 %64 = load i32* %63;
    store i32* %4 with i32 %64;
    i32 %65 = load i32* %39;
    store i32* %5 with i32 %65;
    i32* %66 = getelementptr &(struct Group* %34)[i32 0].workers[i32 1].group;
    i32 %67 = load i32* %66;
    store i32* %6 with i32 %67;
    i32* %68 = getelementptr &(struct Group* %34)[i32 0].workers[i32 2].id;
    i32 %69 = load i32* %68;
    store i32* %7 with i32 %69;
    i32 %70 = load i32* %41;
    store i32* %8 with i32 %70;
    i32* %71 = getelementptr &(struct Group* %34)[i32 0].workers[i32 2].group;
    i32 %72 = load i32* %71;
    store i32* %9 with i32 %72;
    i32* %73 = getelementptr &(struct Group* %34)[i32 0].workers[i32 3].id;
    i32 %74 = load i32* %73;
    store i32* %10 with i32 %74;
    i32 %75 = load i32* %43;
    store i32* %11 with i32 %75;
    i32* %76 = getelementptr &(struct Group* %34)[i32 0].workers[i32 3].group;
    i32 %77 = load i32* %76;
    store i32* %12 with i32 %77;
    i32* %78 = getelementptr &(struct Group* %34)[i32 0].workers[i32 4].id;
    i32 %79 = load i32* %78;
    store i32* %13 with i32 %79;
    i32 %80 = load i32* %45;
    store i32* %14 with i32 %80;
    i32* %81 = getelementptr &(struct Group* %34)[i32 0].workers[i32 4].group;
    i32 %82 = load i32* %81;
    store i32* %15 with i32 %82;
    i32* %83 = getelementptr &(struct Group* %34)[i32 0].workers[i32 5].id;
    i32 %84 = load i32* %83;
    store i32* %16 with i32 %84;
    i32 %85 = load i32* %47;
    store i32* %17 with i32 %85;
    i32* %86 = getelementptr &(struct Group* %34)[i32 0].workers[i32 5].group;
    i32 %87 = load i32* %86;
    store i32* %18 with i32 %87;
    i32* %88 = getelementptr &(struct Group* %34)[i32 0].workers[i32 6].id;
    i32 %89 = load i32* %88;
    store i32* %19 with i32 %89;
    i32 %90 = load i32* %49;
    store i32* %20 with i32 %90;
    i32* %91 = getelementptr &(struct Group* %34)[i32 0].workers[i32 6].group;
    i32 %92 = load i32* %91;
    store i32* %21 with i32 %92;
    i32* %93 = getelementptr &(struct Group* %34)[i32 0].workers[i32 7].id;
    i32 %94 = load i32* %93;
    store i32* %22 with i32 %94;
    i32 %95 = load i32* %51;
    store i32* %23 with i32 %95;
    i32* %96 = getelementptr &(struct Group* %34)[i32 0].workers[i32 7].group;
    i32 %97 = load i32* %96;
    store i32* %24 with i32 %97;
    i32* %98 = getelementptr &(struct Group* %34)[i32 0].workers[i32 8].id;
    i32 %99 = load i32* %98;
    store i32* %25 with i32 %99;
    i32 %100 = load i32* %53;
    store i32* %26 with i32 %100;
    i32* %101 = getelementptr &(struct Group* %34)[i32 0].workers[i32 8].group;
    i32 %102 = load i32* %101;
    store i32* %27 with i32 %102;
    i32* %103 = getelementptr &(struct Group* %34)[i32 0].workers[i32 9].id;
    i32 %104 = load i32* %103;
    store i32* %28 with i32 %104;
    i32 %105 = load i32* %55;
    store i32* %29 with i32 %105;
    i32* %106 = getelementptr &(struct Group* %34)[i32 0].workers[i32 9].group;
    i32 %107 = load i32* %106;
    store i32* %30 with i32 %107;
    i32 %108 = load i32* %57;
    store i32* %31 with i32 %108;
    i32 %109 = add i32 %60, i32 %65;
    i32 %110 = add i32 %109, i32 %70;
    i32 %111 = add i32 %110, i32 %75;
    i32 %112 = add i32 %111, i32 %80;
    i32 %113 = add i32 %112, i32 %85;
    i32 %114 = add i32 %113, i32 %90;
    i32 %115 = add i32 %114, i32 %95;
    i32 %116 = add i32 %115, i32 %100;
    i32 %117 = add i32 %116, i32 %105;
    i32 %118 = sdiv i32 %117, i32 10;
    store i32* %57 with i32 %118;
    i32 %119 = add i32 %33, i32 %118;
    i32 %120 = add i32 %32, i32 1;
    i1 %121 = scmp lt i32 %120, i32 5;
    cbr i1 %121(prob = 0.8), ^while.body, ^b;
^b:
    i32 %122 = sdiv i32 %119, i32 5;
    call (i32) -> void @write(i32 %122);
    ret i32 0;
}
