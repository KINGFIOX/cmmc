internal func @write() -> void { NoMemoryRead NoMemoryWrite };
func @add([2 * i32]* %temp) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
  ^entry:
    i32* %0 = getelementptr &([2 * i32]* %temp)[i32 0][i32 0];
    i32 %1 = load i32* %0;
    i32* %2 = getelementptr &([2 * i32]* %temp)[i32 0][i32 1];
    i32 %3 = load i32* %2;
    i32 %4 = add i32 %1, i32 %3;
    ret i32 %4;
}
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
  ^entry:
    ubr ^while.body;
  ^while.body:
    i32 %0 = phi [^entry, i32 0] [^while.body, i32 %5];
    i32 %1 = phi [^entry, i32 0] [^while.body, i32 %3];
    i32 %2 = add i32 %0, i32 1;
    call (i32) -> void @write(i32 %2);
    i32 %3 = add i32 %1, i32 1;
    i1 %4 = icmp slt i32 %3, i32 2;
    i32 %5 = add i32 %0, i32 2;
    cbr i1 %4(prob = 0.5), ^while.body, ^b;
  ^b:
    ret i32 0;
}
