func @read() -> i32 { NoMemoryRead NoMemoryWrite };
func @write() -> void { NoMemoryRead NoMemoryWrite };
func @sqr(i32 %i1) -> i32 {
^entry:
    i32* %i11 = alloc i32;
    store i32* %i11 with i32 %i1;
    i32 %0 = load i32* %i11;
    i32 %1 = load i32* %i11;
    i32 %2 = mul i32 %0, i32 %1;
    ret i32 %2;
}
func @cbc(i32 %i2) -> i32 {
^entry:
    i32* %i21 = alloc i32;
    store i32* %i21 with i32 %i2;
    i32 %0 = load i32* %i21;
    i32 %1 = load i32* %i21;
    i32 %2 = mul i32 %0, i32 %1;
    i32 %3 = load i32* %i21;
    i32 %4 = mul i32 %2, i32 %3;
    ret i32 %4;
}
func @main() -> i32 {
^entry:
    i32* %r = alloc i32;
    i32* %a = alloc i32;
    store i32* %a with i32 0;
    store i32* %r with i32 0;
    i32 %0 = call () -> i32 @read();
    store i32* %a with i32 %0;
    i32 %1 = load i32* %a;
    call (i32) -> void @write(i32 %1);
    i32 %2 = load i32* %a;
    i32 %3 = call (i32) -> i32 @sqr(i32 %2);
    store i32* %r with i32 %3;
    i32 %4 = load i32* %r;
    call (i32) -> void @write(i32 %4);
    i32 %5 = load i32* %a;
    i32 %6 = call (i32) -> i32 @cbc(i32 %5);
    store i32* %r with i32 %6;
    i32 %7 = load i32* %r;
    call (i32) -> void @write(i32 %7);
    ret i32 0;
}
