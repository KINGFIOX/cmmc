internal func @read() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @write() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
  ^entry:
    i32 %0 = call () -> i32 @read();
    ubr ^while.header;
  ^while.header:
    i32 %1 = phi [^entry, i32 0] [^b3, i32 %8];
    i1 %2 = icmp sgt i32 %0, i32 %1;
    cbr i1 %2(prob = 0.97), ^while.body, ^b;
  ^while.body:
    i32 %3 = call () -> i32 @read();
    i1 %4 = icmp sgt i32 %3, i32 0;
    cbr i1 %4(prob = 0.5), ^b1, ^b2;
  ^b:
    ret i32 0;
  ^b1:
    i1 %5 = icmp slt i32 %3, i32 100;
    ubr ^b2;
  ^b2:
    i1 %6 = phi [^while.body, i1 false] [^b1, i1 %5];
    cbr i1 %6(prob = 0.5), ^if.then, ^b3;
  ^b3:
    i32 %7 = phi [^b2, i32 100] [^b5, i32 99] [^b7, i32 98] [^if.then2, i32 97] [^b8, i32 97] [^b9, i32 96] [^b10, i32 95] [^b11, i32 94] [^b12, i32 93] [^b13, i32 92] [^b14, i32 91] [^b15, i32 90] [^b16, i32 89] [^b17, i32 88] [^b18, i32 87] [^b19, i32 86] [^b20, i32 85] [^b21, i32 84] [^b22, i32 83] [^b23, i32 82] [^b24, i32 81] [^b25, i32 80] [^b26, i32 79] [^b27, i32 78] [^b28, i32 77] [^b29, i32 76] [^b30, i32 75] [^b31, i32 74] [^b32, i32 73] [^b33, i32 72] [^b34, i32 71] [^b35, i32 70] [^b36, i32 69] [^b37, i32 68] [^b38, i32 67] [^b39, i32 66] [^b40, i32 65] [^b41, i32 64] [^b42, i32 63] [^b43, i32 62] [^b44, i32 61] [^b45, i32 60] [^b46, i32 59] [^b47, i32 58] [^b48, i32 57] [^b49, i32 56] [^b50, i32 55] [^b51, i32 54] [^b52, i32 53] [^b53, i32 52] [^b54, i32 51] [^b55, i32 50] [^b56, i32 49] [^b57, i32 48] [^b58, i32 47] [^b59, i32 46] [^b60, i32 45] [^b61, i32 44] [^b62, i32 43] [^b63, i32 42] [^b64, i32 41] [^b65, i32 40] [^b66, i32 39] [^b67, i32 38] [^b68, i32 37] [^b69, i32 36] [^b70, i32 35] [^b71, i32 34] [^b72, i32 33] [^b73, i32 32] [^b74, i32 31] [^b75, i32 30] [^b76, i32 29] [^b77, i32 28] [^b78, i32 27] [^b79, i32 26] [^b80, i32 25] [^b81, i32 24] [^b82, i32 23] [^b83, i32 22] [^b84, i32 21] [^b85, i32 20] [^b86, i32 19] [^b87, i32 18] [^b88, i32 17] [^b89, i32 16] [^b90, i32 15] [^b91, i32 14] [^b92, i32 13] [^b93, i32 12] [^b94, i32 11] [^b95, i32 10] [^b96, i32 9] [^b97, i32 8] [^b98, i32 7] [^b99, i32 6] [^b100, i32 5] [^b101, i32 4] [^b102, i32 3] [^b103, i32 1] [^if.else, i32 2];
    call (i32) -> void @write(i32 %7);
    i32 %8 = add i32 %1, i32 1;
    ubr ^while.header;
  ^if.then:
    i1 %9 = icmp sgt i32 %3, i32 0;
    cbr i1 %9(prob = 0.5), ^b4, ^b5;
  ^b4:
    i1 %10 = icmp slt i32 %3, i32 99;
    ubr ^b5;
  ^b5:
    i1 %11 = phi [^if.then, i1 false] [^b4, i1 %10];
    cbr i1 %11(prob = 0.5), ^if.then1, ^b3;
  ^if.then1:
    i1 %12 = icmp sgt i32 %3, i32 0;
    cbr i1 %12(prob = 0.5), ^b6, ^b7;
  ^b6:
    i1 %13 = icmp slt i32 %3, i32 98;
    ubr ^b7;
  ^b7:
    i1 %14 = phi [^if.then1, i1 false] [^b6, i1 %13];
    cbr i1 %14(prob = 0.5), ^if.then2, ^b3;
  ^if.then2:
    i1 %15 = icmp sgt i32 %3, i32 0;
    cbr i1 %15(prob = 0.5), ^b8, ^b3;
  ^b8:
    i1 %16 = icmp slt i32 %3, i32 97;
    cbr i1 %16(prob = 0.5), ^b9, ^b3;
  ^b9:
    i1 %17 = icmp slt i32 %3, i32 96;
    cbr i1 %17(prob = 0.5), ^b10, ^b3;
  ^b10:
    i1 %18 = icmp slt i32 %3, i32 95;
    cbr i1 %18(prob = 0.5), ^b11, ^b3;
  ^b11:
    i1 %19 = icmp slt i32 %3, i32 94;
    cbr i1 %19(prob = 0.5), ^b12, ^b3;
  ^b12:
    i1 %20 = icmp slt i32 %3, i32 93;
    cbr i1 %20(prob = 0.5), ^b13, ^b3;
  ^b13:
    i1 %21 = icmp slt i32 %3, i32 92;
    cbr i1 %21(prob = 0.5), ^b14, ^b3;
  ^b14:
    i1 %22 = icmp slt i32 %3, i32 91;
    cbr i1 %22(prob = 0.5), ^b15, ^b3;
  ^b15:
    i1 %23 = icmp slt i32 %3, i32 90;
    cbr i1 %23(prob = 0.5), ^b16, ^b3;
  ^b16:
    i1 %24 = icmp slt i32 %3, i32 89;
    cbr i1 %24(prob = 0.5), ^b17, ^b3;
  ^b17:
    i1 %25 = icmp slt i32 %3, i32 88;
    cbr i1 %25(prob = 0.5), ^b18, ^b3;
  ^b18:
    i1 %26 = icmp slt i32 %3, i32 87;
    cbr i1 %26(prob = 0.5), ^b19, ^b3;
  ^b19:
    i1 %27 = icmp slt i32 %3, i32 86;
    cbr i1 %27(prob = 0.5), ^b20, ^b3;
  ^b20:
    i1 %28 = icmp slt i32 %3, i32 85;
    cbr i1 %28(prob = 0.5), ^b21, ^b3;
  ^b21:
    i1 %29 = icmp slt i32 %3, i32 84;
    cbr i1 %29(prob = 0.5), ^b22, ^b3;
  ^b22:
    i1 %30 = icmp slt i32 %3, i32 83;
    cbr i1 %30(prob = 0.5), ^b23, ^b3;
  ^b23:
    i1 %31 = icmp slt i32 %3, i32 82;
    cbr i1 %31(prob = 0.5), ^b24, ^b3;
  ^b24:
    i1 %32 = icmp slt i32 %3, i32 81;
    cbr i1 %32(prob = 0.5), ^b25, ^b3;
  ^b25:
    i1 %33 = icmp slt i32 %3, i32 80;
    cbr i1 %33(prob = 0.5), ^b26, ^b3;
  ^b26:
    i1 %34 = icmp slt i32 %3, i32 79;
    cbr i1 %34(prob = 0.5), ^b27, ^b3;
  ^b27:
    i1 %35 = icmp slt i32 %3, i32 78;
    cbr i1 %35(prob = 0.5), ^b28, ^b3;
  ^b28:
    i1 %36 = icmp slt i32 %3, i32 77;
    cbr i1 %36(prob = 0.5), ^b29, ^b3;
  ^b29:
    i1 %37 = icmp slt i32 %3, i32 76;
    cbr i1 %37(prob = 0.5), ^b30, ^b3;
  ^b30:
    i1 %38 = icmp slt i32 %3, i32 75;
    cbr i1 %38(prob = 0.5), ^b31, ^b3;
  ^b31:
    i1 %39 = icmp slt i32 %3, i32 74;
    cbr i1 %39(prob = 0.5), ^b32, ^b3;
  ^b32:
    i1 %40 = icmp slt i32 %3, i32 73;
    cbr i1 %40(prob = 0.5), ^b33, ^b3;
  ^b33:
    i1 %41 = icmp slt i32 %3, i32 72;
    cbr i1 %41(prob = 0.5), ^b34, ^b3;
  ^b34:
    i1 %42 = icmp slt i32 %3, i32 71;
    cbr i1 %42(prob = 0.5), ^b35, ^b3;
  ^b35:
    i1 %43 = icmp slt i32 %3, i32 70;
    cbr i1 %43(prob = 0.5), ^b36, ^b3;
  ^b36:
    i1 %44 = icmp slt i32 %3, i32 69;
    cbr i1 %44(prob = 0.5), ^b37, ^b3;
  ^b37:
    i1 %45 = icmp slt i32 %3, i32 68;
    cbr i1 %45(prob = 0.5), ^b38, ^b3;
  ^b38:
    i1 %46 = icmp slt i32 %3, i32 67;
    cbr i1 %46(prob = 0.5), ^b39, ^b3;
  ^b39:
    i1 %47 = icmp slt i32 %3, i32 66;
    cbr i1 %47(prob = 0.5), ^b40, ^b3;
  ^b40:
    i1 %48 = icmp slt i32 %3, i32 65;
    cbr i1 %48(prob = 0.5), ^b41, ^b3;
  ^b41:
    i1 %49 = icmp slt i32 %3, i32 64;
    cbr i1 %49(prob = 0.5), ^b42, ^b3;
  ^b42:
    i1 %50 = icmp slt i32 %3, i32 63;
    cbr i1 %50(prob = 0.5), ^b43, ^b3;
  ^b43:
    i1 %51 = icmp slt i32 %3, i32 62;
    cbr i1 %51(prob = 0.5), ^b44, ^b3;
  ^b44:
    i1 %52 = icmp slt i32 %3, i32 61;
    cbr i1 %52(prob = 0.5), ^b45, ^b3;
  ^b45:
    i1 %53 = icmp slt i32 %3, i32 60;
    cbr i1 %53(prob = 0.5), ^b46, ^b3;
  ^b46:
    i1 %54 = icmp slt i32 %3, i32 59;
    cbr i1 %54(prob = 0.5), ^b47, ^b3;
  ^b47:
    i1 %55 = icmp slt i32 %3, i32 58;
    cbr i1 %55(prob = 0.5), ^b48, ^b3;
  ^b48:
    i1 %56 = icmp slt i32 %3, i32 57;
    cbr i1 %56(prob = 0.5), ^b49, ^b3;
  ^b49:
    i1 %57 = icmp slt i32 %3, i32 56;
    cbr i1 %57(prob = 0.5), ^b50, ^b3;
  ^b50:
    i1 %58 = icmp slt i32 %3, i32 55;
    cbr i1 %58(prob = 0.5), ^b51, ^b3;
  ^b51:
    i1 %59 = icmp slt i32 %3, i32 54;
    cbr i1 %59(prob = 0.5), ^b52, ^b3;
  ^b52:
    i1 %60 = icmp slt i32 %3, i32 53;
    cbr i1 %60(prob = 0.5), ^b53, ^b3;
  ^b53:
    i1 %61 = icmp slt i32 %3, i32 52;
    cbr i1 %61(prob = 0.5), ^b54, ^b3;
  ^b54:
    i1 %62 = icmp slt i32 %3, i32 51;
    cbr i1 %62(prob = 0.5), ^b55, ^b3;
  ^b55:
    i1 %63 = icmp slt i32 %3, i32 50;
    cbr i1 %63(prob = 0.5), ^b56, ^b3;
  ^b56:
    i1 %64 = icmp slt i32 %3, i32 49;
    cbr i1 %64(prob = 0.5), ^b57, ^b3;
  ^b57:
    i1 %65 = icmp slt i32 %3, i32 48;
    cbr i1 %65(prob = 0.5), ^b58, ^b3;
  ^b58:
    i1 %66 = icmp slt i32 %3, i32 47;
    cbr i1 %66(prob = 0.5), ^b59, ^b3;
  ^b59:
    i1 %67 = icmp slt i32 %3, i32 46;
    cbr i1 %67(prob = 0.5), ^b60, ^b3;
  ^b60:
    i1 %68 = icmp slt i32 %3, i32 45;
    cbr i1 %68(prob = 0.5), ^b61, ^b3;
  ^b61:
    i1 %69 = icmp slt i32 %3, i32 44;
    cbr i1 %69(prob = 0.5), ^b62, ^b3;
  ^b62:
    i1 %70 = icmp slt i32 %3, i32 43;
    cbr i1 %70(prob = 0.5), ^b63, ^b3;
  ^b63:
    i1 %71 = icmp slt i32 %3, i32 42;
    cbr i1 %71(prob = 0.5), ^b64, ^b3;
  ^b64:
    i1 %72 = icmp slt i32 %3, i32 41;
    cbr i1 %72(prob = 0.5), ^b65, ^b3;
  ^b65:
    i1 %73 = icmp slt i32 %3, i32 40;
    cbr i1 %73(prob = 0.5), ^b66, ^b3;
  ^b66:
    i1 %74 = icmp slt i32 %3, i32 39;
    cbr i1 %74(prob = 0.5), ^b67, ^b3;
  ^b67:
    i1 %75 = icmp slt i32 %3, i32 38;
    cbr i1 %75(prob = 0.5), ^b68, ^b3;
  ^b68:
    i1 %76 = icmp slt i32 %3, i32 37;
    cbr i1 %76(prob = 0.5), ^b69, ^b3;
  ^b69:
    i1 %77 = icmp slt i32 %3, i32 36;
    cbr i1 %77(prob = 0.5), ^b70, ^b3;
  ^b70:
    i1 %78 = icmp slt i32 %3, i32 35;
    cbr i1 %78(prob = 0.5), ^b71, ^b3;
  ^b71:
    i1 %79 = icmp slt i32 %3, i32 34;
    cbr i1 %79(prob = 0.5), ^b72, ^b3;
  ^b72:
    i1 %80 = icmp slt i32 %3, i32 33;
    cbr i1 %80(prob = 0.5), ^b73, ^b3;
  ^b73:
    i1 %81 = icmp slt i32 %3, i32 32;
    cbr i1 %81(prob = 0.5), ^b74, ^b3;
  ^b74:
    i1 %82 = icmp slt i32 %3, i32 31;
    cbr i1 %82(prob = 0.5), ^b75, ^b3;
  ^b75:
    i1 %83 = icmp slt i32 %3, i32 30;
    cbr i1 %83(prob = 0.5), ^b76, ^b3;
  ^b76:
    i1 %84 = icmp slt i32 %3, i32 29;
    cbr i1 %84(prob = 0.5), ^b77, ^b3;
  ^b77:
    i1 %85 = icmp slt i32 %3, i32 28;
    cbr i1 %85(prob = 0.5), ^b78, ^b3;
  ^b78:
    i1 %86 = icmp slt i32 %3, i32 27;
    cbr i1 %86(prob = 0.5), ^b79, ^b3;
  ^b79:
    i1 %87 = icmp slt i32 %3, i32 26;
    cbr i1 %87(prob = 0.5), ^b80, ^b3;
  ^b80:
    i1 %88 = icmp slt i32 %3, i32 25;
    cbr i1 %88(prob = 0.5), ^b81, ^b3;
  ^b81:
    i1 %89 = icmp slt i32 %3, i32 24;
    cbr i1 %89(prob = 0.5), ^b82, ^b3;
  ^b82:
    i1 %90 = icmp slt i32 %3, i32 23;
    cbr i1 %90(prob = 0.5), ^b83, ^b3;
  ^b83:
    i1 %91 = icmp slt i32 %3, i32 22;
    cbr i1 %91(prob = 0.5), ^b84, ^b3;
  ^b84:
    i1 %92 = icmp slt i32 %3, i32 21;
    cbr i1 %92(prob = 0.5), ^b85, ^b3;
  ^b85:
    i1 %93 = icmp slt i32 %3, i32 20;
    cbr i1 %93(prob = 0.5), ^b86, ^b3;
  ^b86:
    i1 %94 = icmp slt i32 %3, i32 19;
    cbr i1 %94(prob = 0.5), ^b87, ^b3;
  ^b87:
    i1 %95 = icmp slt i32 %3, i32 18;
    cbr i1 %95(prob = 0.5), ^b88, ^b3;
  ^b88:
    i1 %96 = icmp slt i32 %3, i32 17;
    cbr i1 %96(prob = 0.5), ^b89, ^b3;
  ^b89:
    i1 %97 = icmp slt i32 %3, i32 16;
    cbr i1 %97(prob = 0.5), ^b90, ^b3;
  ^b90:
    i1 %98 = icmp slt i32 %3, i32 15;
    cbr i1 %98(prob = 0.5), ^b91, ^b3;
  ^b91:
    i1 %99 = icmp slt i32 %3, i32 14;
    cbr i1 %99(prob = 0.5), ^b92, ^b3;
  ^b92:
    i1 %100 = icmp slt i32 %3, i32 13;
    cbr i1 %100(prob = 0.5), ^b93, ^b3;
  ^b93:
    i1 %101 = icmp slt i32 %3, i32 12;
    cbr i1 %101(prob = 0.5), ^b94, ^b3;
  ^b94:
    i1 %102 = icmp slt i32 %3, i32 11;
    cbr i1 %102(prob = 0.5), ^b95, ^b3;
  ^b95:
    i1 %103 = icmp slt i32 %3, i32 10;
    cbr i1 %103(prob = 0.5), ^b96, ^b3;
  ^b96:
    i1 %104 = icmp slt i32 %3, i32 9;
    cbr i1 %104(prob = 0.5), ^b97, ^b3;
  ^b97:
    i1 %105 = icmp slt i32 %3, i32 8;
    cbr i1 %105(prob = 0.5), ^b98, ^b3;
  ^b98:
    i1 %106 = icmp slt i32 %3, i32 7;
    cbr i1 %106(prob = 0.5), ^b99, ^b3;
  ^b99:
    i1 %107 = icmp slt i32 %3, i32 6;
    cbr i1 %107(prob = 0.5), ^b100, ^b3;
  ^b100:
    i1 %108 = icmp slt i32 %3, i32 5;
    cbr i1 %108(prob = 0.5), ^b101, ^b3;
  ^b101:
    i1 %109 = icmp slt i32 %3, i32 4;
    cbr i1 %109(prob = 0.5), ^b102, ^b3;
  ^b102:
    i1 %110 = icmp slt i32 %3, i32 3;
    cbr i1 %110(prob = 0.5), ^b103, ^b3;
  ^b103:
    i1 %111 = icmp slt i32 %3, i32 2;
    cbr i1 %111(prob = 0.5), ^b3, ^if.else;
  ^if.else:
    ubr ^b3;
}
