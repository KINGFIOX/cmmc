func @test_12011543_5(i32 %n) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
^entry:
    i1 %0 = scmp gt i32 %n, i32 0;
    cbr i1 %0(prob = 0.97), ^super.header, ^b;
^super.header:
    i32 %1 = phi [^entry, i32 1] [^while.body, i32 %36];
    i32 %2 = phi [^entry, i32 %n] [^while.body, i32 %3];
    i32 %3 = add i32 %2, i32 -16;
    i1 %4 = scmp gt i32 %3, i32 0;
    cbr i1 %4(prob = 0.67), ^while.body, ^super.header1;
^b:
    i32 %5 = phi [^entry, i32 1] [^while.body2, i32 %74];
    ret i32 %5;
^while.body:
    i32 %6 = add i32 %2, i32 -1;
    i32 %7 = add i32 %2, i32 -2;
    i32 %8 = add i32 %2, i32 -3;
    i32 %9 = add i32 %2, i32 -4;
    i32 %10 = add i32 %2, i32 -5;
    i32 %11 = add i32 %2, i32 -6;
    i32 %12 = add i32 %2, i32 -7;
    i32 %13 = add i32 %2, i32 -8;
    i32 %14 = add i32 %2, i32 -9;
    i32 %15 = add i32 %2, i32 -10;
    i32 %16 = add i32 %2, i32 -11;
    i32 %17 = add i32 %2, i32 -12;
    i32 %18 = add i32 %2, i32 -13;
    i32 %19 = add i32 %2, i32 -14;
    i32 %20 = add i32 %2, i32 -15;
    i32 %21 = mul i32 %6, i32 %7;
    i32 %22 = mul i32 %21, i32 %8;
    i32 %23 = mul i32 %22, i32 %9;
    i32 %24 = mul i32 %23, i32 %10;
    i32 %25 = mul i32 %24, i32 %11;
    i32 %26 = mul i32 %25, i32 %12;
    i32 %27 = mul i32 %26, i32 %13;
    i32 %28 = mul i32 %27, i32 %14;
    i32 %29 = mul i32 %28, i32 %15;
    i32 %30 = mul i32 %29, i32 %16;
    i32 %31 = mul i32 %30, i32 %17;
    i32 %32 = mul i32 %31, i32 %18;
    i32 %33 = mul i32 %32, i32 %19;
    i32 %34 = mul i32 %33, i32 %20;
    i32 %35 = mul i32 %34, i32 %1;
    i32 %36 = mul i32 %35, i32 %2;
    ubr ^super.header;
^super.header1:
    i32 %37 = phi [^super.header, i32 %1] [^while.body1, i32 %71];
    i32 %38 = phi [^super.header, i32 %2] [^while.body1, i32 %39];
    i32 %39 = add i32 %38, i32 -16;
    i1 %40 = scmp gt i32 %39, i32 0;
    cbr i1 %40(prob = 0.67), ^while.body1, ^while.body2;
^while.body1:
    i32 %41 = add i32 %38, i32 -1;
    i32 %42 = add i32 %38, i32 -2;
    i32 %43 = add i32 %38, i32 -3;
    i32 %44 = add i32 %38, i32 -4;
    i32 %45 = add i32 %38, i32 -5;
    i32 %46 = add i32 %38, i32 -6;
    i32 %47 = add i32 %38, i32 -7;
    i32 %48 = add i32 %38, i32 -8;
    i32 %49 = add i32 %38, i32 -9;
    i32 %50 = add i32 %38, i32 -10;
    i32 %51 = add i32 %38, i32 -11;
    i32 %52 = add i32 %38, i32 -12;
    i32 %53 = add i32 %38, i32 -13;
    i32 %54 = add i32 %38, i32 -14;
    i32 %55 = add i32 %38, i32 -15;
    i32 %56 = mul i32 %37, i32 %38;
    i32 %57 = mul i32 %56, i32 %41;
    i32 %58 = mul i32 %57, i32 %42;
    i32 %59 = mul i32 %58, i32 %43;
    i32 %60 = mul i32 %59, i32 %44;
    i32 %61 = mul i32 %60, i32 %45;
    i32 %62 = mul i32 %61, i32 %46;
    i32 %63 = mul i32 %62, i32 %47;
    i32 %64 = mul i32 %63, i32 %48;
    i32 %65 = mul i32 %64, i32 %49;
    i32 %66 = mul i32 %65, i32 %50;
    i32 %67 = mul i32 %66, i32 %51;
    i32 %68 = mul i32 %67, i32 %52;
    i32 %69 = mul i32 %68, i32 %53;
    i32 %70 = mul i32 %69, i32 %54;
    i32 %71 = mul i32 %70, i32 %55;
    ubr ^super.header1;
^while.body2:
    i32 %72 = phi [^super.header1, i32 %37] [^while.body2, i32 %74];
    i32 %73 = phi [^super.header1, i32 %38] [^while.body2, i32 %75];
    i32 %74 = mul i32 %73, i32 %72;
    i32 %75 = add i32 %73, i32 -1;
    i1 %76 = scmp gt i32 %75, i32 0;
    cbr i1 %76(prob = 0.97), ^while.body2, ^b;
}
