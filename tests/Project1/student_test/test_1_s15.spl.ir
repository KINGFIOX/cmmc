func @test_12011543_5(i32 %n) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sgt i32 %n, i32 0;
    cbr i1 %0(prob = 0.97), ^super.header, ^b;
  ^super.header:
    i32 %1 = add i32 %n, i32 -4;
    i1 %2 = icmp sgt i32 %1, i32 0;
    cbr i1 %2(prob = 0.89), ^while.body, ^while.body1;
  ^b:
    i32 %3 = phi [^entry, i32 1] [^while.body1, i32 %17];
    ret i32 %3;
  ^while.body:
    i32 %4 = phi [^super.header, i32 1] [^while.body, i32 %12];
    i32 %5 = phi [^super.header, i32 %n] [^while.body, i32 %13];
    i32 %6 = add i32 %5, i32 -1;
    i32 %7 = add i32 %5, i32 -2;
    i32 %8 = mul i32 %6, i32 %7;
    i32 %9 = add i32 %5, i32 -3;
    i32 %10 = mul i32 %8, i32 %9;
    i32 %11 = mul i32 %4, i32 %10;
    i32 %12 = mul i32 %5, i32 %11;
    i32 %13 = add i32 %5, i32 -4;
    i1 %14 = icmp sgt i32 %13, i32 4;
    cbr i1 %14(prob = 0.89), ^while.body, ^while.body1;
  ^while.body1 {scalar}:
    i32 %15 = phi [^super.header, i32 %n] [^while.body, i32 %13] [^while.body1, i32 %18];
    i32 %16 = phi [^super.header, i32 1] [^while.body, i32 %12] [^while.body1, i32 %17];
    i32 %17 = mul i32 %15, i32 %16;
    i32 %18 = add i32 %15, i32 -1;
    i1 %19 = icmp sgt i32 %18, i32 0;
    cbr i1 %19(prob = 0.75), ^while.body1, ^b;
}
