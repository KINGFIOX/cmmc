func @main() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse Entry } {
^entry:
    ubr ^while.header;
^while.header:
    i32 %0 = phi [^b1, i32 %3] [^entry, i32 0];
    i32 %1 = phi [^b1, i32 %6] [^entry, i32 0];
    i1 %2 = scmp lt i32 %1, i32 3;
    cbr i1 %2(prob = 0.97), ^while.header1, ^b;
^while.header1:
    i32 %3 = phi [^while.header, i32 %0] [^b2, i32 %7];
    i32 %4 = phi [^while.header, i32 0] [^b2, i32 %10];
    i1 %5 = scmp lt i32 %4, i32 4;
    cbr i1 %5(prob = 0.97), ^while.header2, ^b1;
^b:
    ret i32 %0;
^b1:
    i32 %6 = add i32 %1, i32 1;
    ubr ^while.header;
^while.header2:
    i32 %7 = phi [^while.header1, i32 %3] [^b3, i32 %11];
    i32 %8 = phi [^while.header1, i32 0] [^b3, i32 %14];
    i1 %9 = scmp lt i32 %8, i32 5;
    cbr i1 %9(prob = 0.97), ^while.header3, ^b2;
^b2:
    i32 %10 = add i32 %4, i32 1;
    ubr ^while.header1;
^while.header3:
    i32 %11 = phi [^while.header2, i32 %7] [^b4, i32 %15];
    i32 %12 = phi [^while.header2, i32 0] [^b4, i32 %18];
    i1 %13 = scmp lt i32 %12, i32 3;
    cbr i1 %13(prob = 0.97), ^while.header4, ^b3;
^b3:
    i32 %14 = add i32 %8, i32 1;
    ubr ^while.header2;
^while.header4:
    i32 %15 = phi [^while.header3, i32 %11] [^b5, i32 %19];
    i32 %16 = phi [^while.header3, i32 0] [^b5, i32 %22];
    i1 %17 = scmp lt i32 %16, i32 5;
    cbr i1 %17(prob = 0.97), ^while.header5, ^b4;
^b4:
    i32 %18 = add i32 %12, i32 1;
    ubr ^while.header3;
^while.header5:
    i32 %19 = phi [^while.header4, i32 %15] [^b6, i32 %23];
    i32 %20 = phi [^while.header4, i32 0] [^b6, i32 %26];
    i1 %21 = scmp lt i32 %20, i32 4;
    cbr i1 %21(prob = 0.97), ^while.header6, ^b5;
^b5:
    i32 %22 = add i32 %16, i32 1;
    ubr ^while.header4;
^while.header6:
    i32 %23 = phi [^while.header5, i32 %19] [^b7, i32 %27];
    i32 %24 = phi [^while.header5, i32 0] [^b7, i32 %30];
    i1 %25 = scmp lt i32 %24, i32 6;
    cbr i1 %25(prob = 0.97), ^while.header7, ^b6;
^b6:
    i32 %26 = add i32 %20, i32 1;
    ubr ^while.header5;
^while.header7:
    i32 %27 = phi [^while.header6, i32 %23] [^b8, i32 %31];
    i32 %28 = phi [^while.header6, i32 0] [^b8, i32 %34];
    i1 %29 = scmp lt i32 %28, i32 5;
    cbr i1 %29(prob = 0.97), ^while.header8, ^b7;
^b7:
    i32 %30 = add i32 %24, i32 1;
    ubr ^while.header6;
^while.header8:
    i32 %31 = phi [^while.header7, i32 %27] [^b9, i32 %35];
    i32 %32 = phi [^while.header7, i32 0] [^b9, i32 %38];
    i1 %33 = scmp lt i32 %32, i32 5;
    cbr i1 %33(prob = 0.97), ^while.header9, ^b8;
^b8:
    i32 %34 = add i32 %28, i32 1;
    ubr ^while.header7;
^while.header9:
    i32 %35 = phi [^while.header8, i32 %31] [^b10, i32 %39];
    i32 %36 = phi [^while.header8, i32 0] [^b10, i32 %42];
    i1 %37 = scmp lt i32 %36, i32 3;
    cbr i1 %37(prob = 0.97), ^while.header10, ^b9;
^b9:
    i32 %38 = add i32 %32, i32 1;
    ubr ^while.header8;
^while.header10:
    i32 %39 = phi [^while.header9, i32 %35] [^b11, i32 %43];
    i32 %40 = phi [^while.header9, i32 0] [^b11, i32 %46];
    i1 %41 = scmp lt i32 %40, i32 6;
    cbr i1 %41(prob = 0.97), ^while.header11, ^b10;
^b10:
    i32 %42 = add i32 %36, i32 1;
    ubr ^while.header9;
^while.header11:
    i32 %43 = phi [^while.header10, i32 %39] [^b12, i32 %47];
    i32 %44 = phi [^while.header10, i32 0] [^b12, i32 %50];
    i1 %45 = scmp lt i32 %44, i32 7;
    cbr i1 %45(prob = 0.97), ^while.header12, ^b11;
^b11:
    i32 %46 = add i32 %40, i32 2;
    ubr ^while.header10;
^while.header12:
    i32 %47 = phi [^while.header11, i32 %43] [^b13, i32 %51];
    i32 %48 = phi [^while.header11, i32 0] [^b13, i32 %54];
    i1 %49 = scmp lt i32 %48, i32 5;
    cbr i1 %49(prob = 0.97), ^while.header13, ^b12;
^b12:
    i32 %50 = add i32 %44, i32 2;
    ubr ^while.header11;
^while.header13:
    i32 %51 = phi [^while.header12, i32 %47] [^b14, i32 %55];
    i32 %52 = phi [^while.header12, i32 0] [^b14, i32 %61];
    i1 %53 = scmp lt i32 %52, i32 3;
    cbr i1 %53(prob = 0.97), ^while.header14, ^b13;
^b13:
    i32 %54 = add i32 %48, i32 2;
    ubr ^while.header12;
^while.header14:
    i32 %55 = phi [^while.header13, i32 %51] [^while.body, i32 %59];
    i32 %56 = phi [^while.header13, i32 0] [^while.body, i32 %60];
    i1 %57 = scmp lt i32 %56, i32 6;
    cbr i1 %57(prob = 0.97), ^while.body, ^b14;
^while.body:
    i32 %58 = add i32 %55, i32 3;
    i32 %59 = srem i32 %58, i32 999;
    i32 %60 = add i32 %56, i32 3;
    ubr ^while.header14;
^b14:
    i32 %61 = add i32 %52, i32 1;
    ubr ^while.header13;
}
