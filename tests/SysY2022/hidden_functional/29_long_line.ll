; ModuleID = 'tests//SysY2022/hidden_functional/29_long_line.sy'
source_filename = "tests//SysY2022/hidden_functional/29_long_line.sy"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: mustprogress nofree nosync nounwind readnone uwtable willreturn
define dso_local noundef i32 @_Z3fibi(i32 noundef %0) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 3
  br i1 %2, label %3, label %5

3:                                                ; preds = %1, %5
  %4 = phi i32 [ %584, %5 ], [ 1, %1 ]
  ret i32 %4

5:                                                ; preds = %1
  %6 = and i32 %0, 1
  %7 = lshr i32 %0, 1
  %8 = and i32 %7, 1
  %9 = lshr i32 %0, 2
  %10 = and i32 %9, 1
  %11 = lshr i32 %0, 3
  %12 = and i32 %11, 1
  %13 = lshr i32 %0, 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %6, 0
  %16 = icmp eq i32 %8, 0
  %17 = xor i1 %15, %16
  %18 = select i1 %17, i32 0, i32 2
  %19 = or i32 %8, %6
  %20 = icmp ne i32 %19, 0
  %21 = icmp eq i32 %10, 0
  %22 = xor i1 %21, %20
  %23 = select i1 %22, i32 4, i32 0
  %24 = or i32 %19, %10
  %25 = icmp ne i32 %24, 0
  %26 = icmp eq i32 %12, 0
  %27 = xor i1 %26, %25
  %28 = zext i1 %27 to i32
  %29 = or i32 %24, %12
  %30 = icmp ne i32 %29, 0
  %31 = icmp eq i32 %14, 0
  %32 = xor i1 %31, %30
  %33 = select i1 %32, i32 2, i32 0
  %34 = xor i1 %31, true
  %35 = or i1 %30, %34
  %36 = and i32 %0, 32
  %37 = icmp eq i32 %36, 0
  %38 = and i1 %37, %35
  %39 = xor i1 %37, %35
  %40 = select i1 %39, i32 4, i32 0
  %41 = xor i1 %37, true
  %42 = select i1 %41, i1 true, i1 %38
  %43 = and i32 %0, 64
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i1 true, i1 %42
  %46 = select i1 %44, i1 %42, i1 false
  %47 = xor i1 %46, true
  %48 = select i1 %45, i1 %47, i1 false
  %49 = select i1 %48, i32 8, i32 0
  %50 = xor i1 %44, true
  %51 = select i1 %50, i1 true, i1 %46
  %52 = and i32 %0, 128
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i1 true, i1 %51
  %55 = select i1 %53, i1 %51, i1 false
  %56 = xor i1 %55, true
  %57 = select i1 %54, i1 %56, i1 false
  %58 = select i1 %57, i32 16, i32 0
  %59 = xor i1 %53, true
  %60 = select i1 %59, i1 true, i1 %55
  %61 = and i32 %0, 256
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i1 true, i1 %60
  %64 = select i1 %62, i1 %60, i1 false
  %65 = xor i1 %64, true
  %66 = select i1 %63, i1 %65, i1 false
  %67 = select i1 %66, i32 32, i32 0
  %68 = xor i1 %62, true
  %69 = select i1 %68, i1 true, i1 %64
  %70 = and i32 %0, 512
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i1 true, i1 %69
  %73 = select i1 %71, i1 %69, i1 false
  %74 = xor i1 %73, true
  %75 = select i1 %72, i1 %74, i1 false
  %76 = zext i1 %75 to i32
  %77 = xor i1 %71, true
  %78 = select i1 %77, i1 true, i1 %73
  %79 = and i32 %0, 1024
  %80 = icmp eq i32 %79, 0
  %81 = select i1 %80, i1 true, i1 %78
  %82 = select i1 %80, i1 %78, i1 false
  %83 = xor i1 %82, true
  %84 = select i1 %81, i1 %83, i1 false
  %85 = select i1 %84, i32 2, i32 0
  %86 = xor i1 %80, true
  %87 = select i1 %86, i1 true, i1 %82
  %88 = and i32 %0, 2048
  %89 = icmp eq i32 %88, 0
  %90 = select i1 %89, i1 true, i1 %87
  %91 = select i1 %89, i1 %87, i1 false
  %92 = xor i1 %91, true
  %93 = select i1 %90, i1 %92, i1 false
  %94 = select i1 %93, i32 4, i32 0
  %95 = xor i1 %89, true
  %96 = select i1 %95, i1 true, i1 %91
  %97 = and i32 %0, 4096
  %98 = icmp eq i32 %97, 0
  %99 = select i1 %98, i1 true, i1 %96
  %100 = select i1 %98, i1 %96, i1 false
  %101 = xor i1 %100, true
  %102 = select i1 %99, i1 %101, i1 false
  %103 = select i1 %102, i32 8, i32 0
  %104 = xor i1 %98, true
  %105 = select i1 %104, i1 true, i1 %100
  %106 = and i32 %0, 8192
  %107 = icmp eq i32 %106, 0
  %108 = select i1 %107, i1 true, i1 %105
  %109 = select i1 %107, i1 %105, i1 false
  %110 = xor i1 %109, true
  %111 = select i1 %108, i1 %110, i1 false
  %112 = select i1 %111, i32 16, i32 0
  %113 = xor i1 %107, true
  %114 = select i1 %113, i1 true, i1 %109
  %115 = and i32 %0, 16384
  %116 = icmp eq i32 %115, 0
  %117 = select i1 %116, i1 true, i1 %114
  %118 = select i1 %116, i1 %114, i1 false
  %119 = xor i1 %118, true
  %120 = select i1 %117, i1 %119, i1 false
  %121 = select i1 %120, i32 32, i32 0
  %122 = xor i1 %116, true
  %123 = select i1 %122, i1 true, i1 %118
  %124 = and i32 %0, 32768
  %125 = icmp eq i32 %124, 0
  %126 = select i1 %125, i1 true, i1 %123
  %127 = select i1 %125, i1 %123, i1 false
  %128 = xor i1 %127, true
  %129 = select i1 %126, i1 %128, i1 false
  %130 = select i1 %129, i32 64, i32 0
  %131 = or i32 %85, %76
  %132 = or i32 %131, %94
  %133 = or i32 %132, %103
  %134 = or i32 %133, %112
  %135 = or i32 %134, %121
  %136 = or i32 %135, %130
  %137 = shl i32 %136, 6
  %138 = or i32 %137, %67
  %139 = or i32 %138, %58
  %140 = or i32 %139, %49
  %141 = or i32 %140, %40
  %142 = or i32 %141, %33
  %143 = or i32 %142, %28
  %144 = shl i32 %143, 3
  %145 = or i32 %144, %23
  %146 = or i32 %145, %18
  %147 = or i32 %146, %6
  %148 = xor i32 %147, 1
  %149 = tail call noundef i32 @_Z3fibi(i32 noundef %148)
  %150 = xor i1 %15, true
  %151 = zext i1 %150 to i32
  %152 = shl nuw nsw i32 %8, 1
  %153 = xor i1 %16, %21
  %154 = select i1 %153, i32 0, i32 4
  %155 = or i32 %8, %10
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %26, %156
  %158 = zext i1 %157 to i32
  %159 = or i32 %155, %12
  %160 = icmp ne i32 %159, 0
  %161 = xor i1 %31, %160
  %162 = select i1 %161, i32 2, i32 0
  %163 = or i32 %159, %14
  %164 = icmp ne i32 %163, 0
  %165 = xor i1 %37, %164
  %166 = select i1 %165, i32 4, i32 0
  %167 = or i1 %164, %41
  %168 = and i1 %44, %167
  %169 = xor i1 %44, %167
  %170 = select i1 %169, i32 8, i32 0
  %171 = select i1 %50, i1 true, i1 %168
  %172 = select i1 %53, i1 true, i1 %171
  %173 = select i1 %53, i1 %171, i1 false
  %174 = xor i1 %173, true
  %175 = select i1 %172, i1 %174, i1 false
  %176 = select i1 %175, i32 16, i32 0
  %177 = select i1 %59, i1 true, i1 %173
  %178 = select i1 %62, i1 true, i1 %177
  %179 = select i1 %62, i1 %177, i1 false
  %180 = xor i1 %179, true
  %181 = select i1 %178, i1 %180, i1 false
  %182 = select i1 %181, i32 32, i32 0
  %183 = select i1 %68, i1 true, i1 %179
  %184 = select i1 %71, i1 true, i1 %183
  %185 = select i1 %71, i1 %183, i1 false
  %186 = xor i1 %185, true
  %187 = select i1 %184, i1 %186, i1 false
  %188 = zext i1 %187 to i32
  %189 = select i1 %77, i1 true, i1 %185
  %190 = select i1 %80, i1 true, i1 %189
  %191 = select i1 %80, i1 %189, i1 false
  %192 = xor i1 %191, true
  %193 = select i1 %190, i1 %192, i1 false
  %194 = select i1 %193, i32 2, i32 0
  %195 = select i1 %86, i1 true, i1 %191
  %196 = select i1 %89, i1 true, i1 %195
  %197 = select i1 %89, i1 %195, i1 false
  %198 = xor i1 %197, true
  %199 = select i1 %196, i1 %198, i1 false
  %200 = select i1 %199, i32 4, i32 0
  %201 = select i1 %95, i1 true, i1 %197
  %202 = select i1 %98, i1 true, i1 %201
  %203 = select i1 %98, i1 %201, i1 false
  %204 = xor i1 %203, true
  %205 = select i1 %202, i1 %204, i1 false
  %206 = select i1 %205, i32 8, i32 0
  %207 = select i1 %104, i1 true, i1 %203
  %208 = select i1 %107, i1 true, i1 %207
  %209 = select i1 %107, i1 %207, i1 false
  %210 = xor i1 %209, true
  %211 = select i1 %208, i1 %210, i1 false
  %212 = select i1 %211, i32 16, i32 0
  %213 = select i1 %113, i1 true, i1 %209
  %214 = select i1 %116, i1 true, i1 %213
  %215 = select i1 %116, i1 %213, i1 false
  %216 = xor i1 %215, true
  %217 = select i1 %214, i1 %216, i1 false
  %218 = select i1 %217, i32 32, i32 0
  %219 = select i1 %122, i1 true, i1 %215
  %220 = select i1 %125, i1 true, i1 %219
  %221 = select i1 %125, i1 %219, i1 false
  %222 = xor i1 %221, true
  %223 = select i1 %220, i1 %222, i1 false
  %224 = select i1 %223, i32 64, i32 0
  %225 = or i32 %194, %188
  %226 = or i32 %225, %200
  %227 = or i32 %226, %206
  %228 = or i32 %227, %212
  %229 = or i32 %228, %218
  %230 = or i32 %229, %224
  %231 = shl i32 %230, 6
  %232 = or i32 %231, %182
  %233 = or i32 %232, %176
  %234 = or i32 %233, %170
  %235 = or i32 %234, %166
  %236 = or i32 %235, %162
  %237 = or i32 %236, %158
  %238 = shl i32 %237, 3
  %239 = or i32 %238, %154
  %240 = or i32 %239, %152
  %241 = or i32 %240, %151
  %242 = xor i32 %241, 2
  %243 = tail call noundef i32 @_Z3fibi(i32 noundef %242)
  %244 = and i32 %149, 1
  %245 = sdiv i32 %149, 2
  %246 = srem i32 %245, 2
  %247 = icmp slt i32 %246, 0
  %248 = select i1 %247, i32 1, i32 %246
  %249 = sdiv i32 %149, 4
  %250 = srem i32 %249, 2
  %251 = icmp slt i32 %250, 0
  %252 = select i1 %251, i32 1, i32 %250
  %253 = sdiv i32 %149, 8
  %254 = srem i32 %253, 2
  %255 = icmp slt i32 %254, 0
  %256 = select i1 %255, i32 1, i32 %254
  %257 = sdiv i32 %149, 16
  %258 = srem i32 %257, 2
  %259 = icmp slt i32 %258, 0
  %260 = select i1 %259, i32 1, i32 %258
  %261 = sdiv i32 %149, 32
  %262 = srem i32 %261, 2
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 1, i32 %262
  %265 = sdiv i32 %149, 64
  %266 = srem i32 %265, 2
  %267 = icmp slt i32 %266, 0
  %268 = select i1 %267, i32 1, i32 %266
  %269 = sdiv i32 %149, 128
  %270 = srem i32 %269, 2
  %271 = icmp slt i32 %270, 0
  %272 = select i1 %271, i32 1, i32 %270
  %273 = sdiv i32 %149, 256
  %274 = srem i32 %273, 2
  %275 = icmp slt i32 %274, 0
  %276 = select i1 %275, i32 1, i32 %274
  %277 = sdiv i32 %149, 512
  %278 = srem i32 %277, 2
  %279 = icmp slt i32 %278, 0
  %280 = select i1 %279, i32 1, i32 %278
  %281 = sdiv i32 %149, 1024
  %282 = srem i32 %281, 2
  %283 = icmp slt i32 %282, 0
  %284 = select i1 %283, i32 1, i32 %282
  %285 = sdiv i32 %149, 2048
  %286 = srem i32 %285, 2
  %287 = icmp slt i32 %286, 0
  %288 = select i1 %287, i32 1, i32 %286
  %289 = sdiv i32 %149, 4096
  %290 = srem i32 %289, 2
  %291 = icmp slt i32 %290, 0
  %292 = select i1 %291, i32 1, i32 %290
  %293 = sdiv i32 %149, 8192
  %294 = srem i32 %293, 2
  %295 = icmp slt i32 %294, 0
  %296 = select i1 %295, i32 1, i32 %294
  %297 = sdiv i32 %149, 16384
  %298 = srem i32 %297, 2
  %299 = icmp slt i32 %298, 0
  %300 = select i1 %299, i32 1, i32 %298
  %301 = sdiv i32 %149, 32768
  %302 = srem i32 %301, 2
  %303 = icmp slt i32 %302, 0
  %304 = select i1 %303, i32 1, i32 %302
  %305 = srem i32 %243, 2
  %306 = icmp slt i32 %305, 0
  %307 = select i1 %306, i32 1, i32 %305
  %308 = sdiv i32 %243, 2
  %309 = srem i32 %308, 2
  %310 = icmp slt i32 %309, 0
  %311 = select i1 %310, i32 1, i32 %309
  %312 = sdiv i32 %243, 4
  %313 = srem i32 %312, 2
  %314 = icmp slt i32 %313, 0
  %315 = select i1 %314, i32 1, i32 %313
  %316 = sdiv i32 %243, 8
  %317 = srem i32 %316, 2
  %318 = icmp slt i32 %317, 0
  %319 = select i1 %318, i32 1, i32 %317
  %320 = sdiv i32 %243, 16
  %321 = srem i32 %320, 2
  %322 = icmp slt i32 %321, 0
  %323 = select i1 %322, i32 1, i32 %321
  %324 = sdiv i32 %243, 32
  %325 = srem i32 %324, 2
  %326 = icmp slt i32 %325, 0
  %327 = select i1 %326, i32 1, i32 %325
  %328 = sdiv i32 %243, 64
  %329 = srem i32 %328, 2
  %330 = icmp slt i32 %329, 0
  %331 = select i1 %330, i32 1, i32 %329
  %332 = sdiv i32 %243, 128
  %333 = srem i32 %332, 2
  %334 = icmp slt i32 %333, 0
  %335 = select i1 %334, i32 1, i32 %333
  %336 = sdiv i32 %243, 256
  %337 = srem i32 %336, 2
  %338 = icmp slt i32 %337, 0
  %339 = select i1 %338, i32 1, i32 %337
  %340 = sdiv i32 %243, 512
  %341 = srem i32 %340, 2
  %342 = icmp slt i32 %341, 0
  %343 = select i1 %342, i32 1, i32 %341
  %344 = sdiv i32 %243, 1024
  %345 = srem i32 %344, 2
  %346 = icmp slt i32 %345, 0
  %347 = select i1 %346, i32 1, i32 %345
  %348 = sdiv i32 %243, 2048
  %349 = srem i32 %348, 2
  %350 = icmp slt i32 %349, 0
  %351 = select i1 %350, i32 1, i32 %349
  %352 = sdiv i32 %243, 4096
  %353 = srem i32 %352, 2
  %354 = icmp slt i32 %353, 0
  %355 = select i1 %354, i32 1, i32 %353
  %356 = sdiv i32 %243, 8192
  %357 = srem i32 %356, 2
  %358 = icmp slt i32 %357, 0
  %359 = select i1 %358, i32 1, i32 %357
  %360 = sdiv i32 %243, 16384
  %361 = srem i32 %360, 2
  %362 = icmp slt i32 %361, 0
  %363 = select i1 %362, i32 1, i32 %361
  %364 = sdiv i32 %243, 32768
  %365 = srem i32 %364, 2
  %366 = icmp slt i32 %365, 0
  %367 = select i1 %366, i32 1, i32 %365
  %368 = icmp ne i32 %244, 0
  %369 = icmp ne i32 %307, 0
  %370 = or i32 %307, %244
  %371 = icmp eq i32 %370, 0
  %372 = and i1 %368, %369
  %373 = or i1 %371, %372
  %374 = xor i1 %373, true
  %375 = zext i1 %374 to i32
  %376 = icmp ne i32 %248, 0
  %377 = icmp ne i32 %311, 0
  %378 = or i32 %311, %248
  %379 = icmp eq i32 %378, 0
  %380 = and i1 %376, %377
  %381 = or i1 %379, %380
  %382 = xor i1 %381, true
  %383 = and i1 %372, %382
  %384 = xor i1 %372, %382
  %385 = select i1 %384, i32 2, i32 0
  %386 = select i1 %380, i1 true, i1 %383
  %387 = icmp ne i32 %252, 0
  %388 = icmp ne i32 %315, 0
  %389 = or i32 %315, %252
  %390 = icmp eq i32 %389, 0
  %391 = and i1 %387, %388
  %392 = or i1 %390, %391
  %393 = xor i1 %392, true
  %394 = select i1 %393, i1 true, i1 %386
  %395 = select i1 %393, i1 %386, i1 false
  %396 = xor i1 %395, true
  %397 = select i1 %394, i1 %396, i1 false
  %398 = select i1 %397, i32 4, i32 0
  %399 = select i1 %391, i1 true, i1 %395
  %400 = icmp ne i32 %256, 0
  %401 = icmp ne i32 %319, 0
  %402 = or i32 %319, %256
  %403 = icmp eq i32 %402, 0
  %404 = and i1 %400, %401
  %405 = or i1 %403, %404
  %406 = xor i1 %405, true
  %407 = select i1 %406, i1 true, i1 %399
  %408 = select i1 %406, i1 %399, i1 false
  %409 = xor i1 %408, true
  %410 = select i1 %407, i1 %409, i1 false
  %411 = zext i1 %410 to i32
  %412 = select i1 %404, i1 true, i1 %408
  %413 = icmp ne i32 %260, 0
  %414 = icmp ne i32 %323, 0
  %415 = or i32 %323, %260
  %416 = icmp eq i32 %415, 0
  %417 = and i1 %413, %414
  %418 = or i1 %416, %417
  %419 = xor i1 %418, true
  %420 = select i1 %419, i1 true, i1 %412
  %421 = select i1 %419, i1 %412, i1 false
  %422 = xor i1 %421, true
  %423 = select i1 %420, i1 %422, i1 false
  %424 = select i1 %423, i32 2, i32 0
  %425 = select i1 %417, i1 true, i1 %421
  %426 = icmp ne i32 %264, 0
  %427 = icmp ne i32 %327, 0
  %428 = or i32 %327, %264
  %429 = icmp eq i32 %428, 0
  %430 = and i1 %426, %427
  %431 = or i1 %429, %430
  %432 = xor i1 %431, true
  %433 = select i1 %432, i1 true, i1 %425
  %434 = select i1 %432, i1 %425, i1 false
  %435 = xor i1 %434, true
  %436 = select i1 %433, i1 %435, i1 false
  %437 = select i1 %436, i32 4, i32 0
  %438 = select i1 %430, i1 true, i1 %434
  %439 = icmp ne i32 %268, 0
  %440 = icmp ne i32 %331, 0
  %441 = or i32 %331, %268
  %442 = icmp eq i32 %441, 0
  %443 = and i1 %439, %440
  %444 = or i1 %442, %443
  %445 = xor i1 %444, true
  %446 = select i1 %445, i1 true, i1 %438
  %447 = select i1 %445, i1 %438, i1 false
  %448 = xor i1 %447, true
  %449 = select i1 %446, i1 %448, i1 false
  %450 = select i1 %449, i32 8, i32 0
  %451 = select i1 %443, i1 true, i1 %447
  %452 = icmp ne i32 %272, 0
  %453 = icmp ne i32 %335, 0
  %454 = or i32 %335, %272
  %455 = icmp eq i32 %454, 0
  %456 = and i1 %452, %453
  %457 = or i1 %455, %456
  %458 = xor i1 %457, true
  %459 = select i1 %458, i1 true, i1 %451
  %460 = select i1 %458, i1 %451, i1 false
  %461 = xor i1 %460, true
  %462 = select i1 %459, i1 %461, i1 false
  %463 = select i1 %462, i32 16, i32 0
  %464 = select i1 %456, i1 true, i1 %460
  %465 = icmp ne i32 %276, 0
  %466 = icmp ne i32 %339, 0
  %467 = or i32 %339, %276
  %468 = icmp eq i32 %467, 0
  %469 = and i1 %465, %466
  %470 = or i1 %468, %469
  %471 = xor i1 %470, true
  %472 = select i1 %471, i1 true, i1 %464
  %473 = select i1 %471, i1 %464, i1 false
  %474 = xor i1 %473, true
  %475 = select i1 %472, i1 %474, i1 false
  %476 = select i1 %475, i32 32, i32 0
  %477 = select i1 %469, i1 true, i1 %473
  %478 = icmp ne i32 %280, 0
  %479 = icmp ne i32 %343, 0
  %480 = or i32 %343, %280
  %481 = icmp eq i32 %480, 0
  %482 = and i1 %478, %479
  %483 = or i1 %481, %482
  %484 = xor i1 %483, true
  %485 = select i1 %484, i1 true, i1 %477
  %486 = select i1 %484, i1 %477, i1 false
  %487 = xor i1 %486, true
  %488 = select i1 %485, i1 %487, i1 false
  %489 = zext i1 %488 to i32
  %490 = select i1 %482, i1 true, i1 %486
  %491 = icmp ne i32 %284, 0
  %492 = icmp ne i32 %347, 0
  %493 = or i32 %347, %284
  %494 = icmp eq i32 %493, 0
  %495 = and i1 %491, %492
  %496 = or i1 %494, %495
  %497 = xor i1 %496, true
  %498 = select i1 %497, i1 true, i1 %490
  %499 = select i1 %497, i1 %490, i1 false
  %500 = xor i1 %499, true
  %501 = select i1 %498, i1 %500, i1 false
  %502 = select i1 %501, i32 2, i32 0
  %503 = select i1 %495, i1 true, i1 %499
  %504 = icmp ne i32 %288, 0
  %505 = icmp ne i32 %351, 0
  %506 = or i32 %351, %288
  %507 = icmp eq i32 %506, 0
  %508 = and i1 %504, %505
  %509 = or i1 %507, %508
  %510 = xor i1 %509, true
  %511 = select i1 %510, i1 true, i1 %503
  %512 = select i1 %510, i1 %503, i1 false
  %513 = xor i1 %512, true
  %514 = select i1 %511, i1 %513, i1 false
  %515 = select i1 %514, i32 4, i32 0
  %516 = select i1 %508, i1 true, i1 %512
  %517 = icmp ne i32 %292, 0
  %518 = icmp ne i32 %355, 0
  %519 = or i32 %355, %292
  %520 = icmp eq i32 %519, 0
  %521 = and i1 %517, %518
  %522 = or i1 %520, %521
  %523 = xor i1 %522, true
  %524 = select i1 %523, i1 true, i1 %516
  %525 = select i1 %523, i1 %516, i1 false
  %526 = xor i1 %525, true
  %527 = select i1 %524, i1 %526, i1 false
  %528 = select i1 %527, i32 8, i32 0
  %529 = select i1 %521, i1 true, i1 %525
  %530 = icmp ne i32 %296, 0
  %531 = icmp ne i32 %359, 0
  %532 = or i32 %359, %296
  %533 = icmp eq i32 %532, 0
  %534 = and i1 %530, %531
  %535 = or i1 %533, %534
  %536 = xor i1 %535, true
  %537 = select i1 %536, i1 true, i1 %529
  %538 = select i1 %536, i1 %529, i1 false
  %539 = xor i1 %538, true
  %540 = select i1 %537, i1 %539, i1 false
  %541 = select i1 %540, i32 16, i32 0
  %542 = select i1 %534, i1 true, i1 %538
  %543 = icmp ne i32 %300, 0
  %544 = icmp ne i32 %363, 0
  %545 = or i32 %363, %300
  %546 = icmp eq i32 %545, 0
  %547 = and i1 %543, %544
  %548 = or i1 %546, %547
  %549 = xor i1 %548, true
  %550 = select i1 %549, i1 true, i1 %542
  %551 = select i1 %549, i1 %542, i1 false
  %552 = xor i1 %551, true
  %553 = select i1 %550, i1 %552, i1 false
  %554 = select i1 %553, i32 32, i32 0
  %555 = select i1 %547, i1 true, i1 %551
  %556 = icmp ne i32 %304, 0
  %557 = icmp ne i32 %367, 0
  %558 = or i32 %367, %304
  %559 = icmp eq i32 %558, 0
  %560 = and i1 %556, %557
  %561 = or i1 %559, %560
  %562 = xor i1 %561, true
  %563 = select i1 %562, i1 true, i1 %555
  %564 = xor i1 %555, true
  %565 = select i1 %561, i1 true, i1 %564
  %566 = select i1 %563, i1 %565, i1 false
  %567 = select i1 %566, i32 64, i32 0
  %568 = or i32 %502, %489
  %569 = or i32 %568, %515
  %570 = or i32 %569, %528
  %571 = or i32 %570, %541
  %572 = or i32 %571, %554
  %573 = or i32 %572, %567
  %574 = shl i32 %573, 6
  %575 = or i32 %574, %476
  %576 = or i32 %575, %463
  %577 = or i32 %576, %450
  %578 = or i32 %577, %437
  %579 = or i32 %578, %424
  %580 = or i32 %579, %411
  %581 = shl i32 %580, 3
  %582 = or i32 %581, %398
  %583 = or i32 %582, %385
  %584 = or i32 %583, %375
  br label %3
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local noundef i32 @main() local_unnamed_addr #1 {
  br label %1

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 1, %0 ], [ %4, %1 ]
  tail call void @_Z5putchi(i32 noundef 102)
  tail call void @_Z5putchi(i32 noundef 105)
  tail call void @_Z5putchi(i32 noundef 98)
  tail call void @_Z5putchi(i32 noundef 40)
  tail call void @_Z6putinti(i32 noundef %2)
  tail call void @_Z5putchi(i32 noundef 41)
  tail call void @_Z5putchi(i32 noundef 32)
  tail call void @_Z5putchi(i32 noundef 61)
  tail call void @_Z5putchi(i32 noundef 32)
  %3 = tail call noundef i32 @_Z3fibi(i32 noundef %2)
  tail call void @_Z6putinti(i32 noundef %3)
  tail call void @_Z5putchi(i32 noundef 10)
  %4 = add nuw nsw i32 %2, 1
  %5 = icmp eq i32 %4, 21
  br i1 %5, label %6, label %1, !llvm.loop !4

6:                                                ; preds = %1
  ret i32 0
}

declare void @_Z5putchi(i32 noundef) local_unnamed_addr #2

declare void @_Z6putinti(i32 noundef) local_unnamed_addr #2

attributes #0 = { mustprogress nofree nosync nounwind readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.mustprogress"}
