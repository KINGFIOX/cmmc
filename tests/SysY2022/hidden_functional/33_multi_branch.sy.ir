internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    ubr ^while.header;
  ^while.header:
    i32 %1 = phi [^entry, i32 0] [^b1, i32 %8];
    i1 %2 = scmp lt i32 %1, i32 %0;
    cbr i1 %2(prob = 0.97), ^while.body, ^b;
  ^while.body:
    i32 %3 = call () -> i32 @getint();
    i1 %4 = scmp gt i32 %3, i32 0;
    i1 %5 = scmp lt i32 %3, i32 100;
    i1 %6 = and i1 %4, i1 %5;
    cbr i1 %6(prob = 0.5), ^if.then, ^b1;
  ^b:
    ret i32 0;
  ^b1:
    i32 %7 = phi [^while.body, i32 100] [^if.then, i32 99] [^if.then1, i32 98] [^if.then2, i32 97] [^if.then3, i32 96] [^if.then4, i32 95] [^if.then5, i32 94] [^if.then6, i32 93] [^if.then7, i32 92] [^if.then8, i32 91] [^if.then9, i32 90] [^if.then10, i32 89] [^if.then11, i32 88] [^if.then12, i32 87] [^if.then13, i32 86] [^if.then14, i32 85] [^if.then15, i32 84] [^if.then16, i32 83] [^if.then17, i32 82] [^if.then18, i32 81] [^if.then19, i32 80] [^if.then20, i32 79] [^if.then21, i32 78] [^if.then22, i32 77] [^if.then23, i32 76] [^if.then24, i32 75] [^if.then25, i32 74] [^if.then26, i32 73] [^if.then27, i32 72] [^if.then28, i32 71] [^if.then29, i32 70] [^if.then30, i32 69] [^if.then31, i32 68] [^if.then32, i32 67] [^if.then33, i32 66] [^if.then34, i32 65] [^if.then35, i32 64] [^if.then36, i32 63] [^if.then37, i32 62] [^if.then38, i32 61] [^if.then39, i32 60] [^if.then40, i32 59] [^if.then41, i32 58] [^if.then42, i32 57] [^if.then43, i32 56] [^if.then44, i32 55] [^if.then45, i32 54] [^if.then46, i32 53] [^if.then47, i32 52] [^if.then48, i32 51] [^if.then49, i32 50] [^if.then50, i32 49] [^if.then51, i32 48] [^if.then52, i32 47] [^if.then53, i32 46] [^if.then54, i32 45] [^if.then55, i32 44] [^if.then56, i32 43] [^if.then57, i32 42] [^if.then58, i32 41] [^if.then59, i32 40] [^if.then60, i32 39] [^if.then61, i32 38] [^if.then62, i32 37] [^if.then63, i32 36] [^if.then64, i32 35] [^if.then65, i32 34] [^if.then66, i32 33] [^if.then67, i32 32] [^if.then68, i32 31] [^if.then69, i32 30] [^if.then70, i32 29] [^if.then71, i32 28] [^if.then72, i32 27] [^if.then73, i32 26] [^if.then74, i32 25] [^if.then75, i32 24] [^if.then76, i32 23] [^if.then77, i32 22] [^if.then78, i32 21] [^if.then79, i32 20] [^if.then80, i32 19] [^if.then81, i32 18] [^if.then82, i32 17] [^if.then83, i32 16] [^if.then84, i32 15] [^if.then85, i32 14] [^if.then86, i32 13] [^if.then87, i32 12] [^if.then88, i32 11] [^if.then89, i32 10] [^if.then90, i32 9] [^if.then91, i32 8] [^if.then92, i32 7] [^if.then93, i32 6] [^if.then94, i32 5] [^if.then95, i32 4] [^if.then96, i32 3] [^if.then97, i32 %206];
    call (i32) -> void @putint(i32 %7);
    call (i32) -> void @putch(i32 10);
    i32 %8 = add i32 %1, i32 1;
    ubr ^while.header;
  ^if.then:
    i1 %9 = scmp lt i32 %3, i32 99;
    i1 %10 = and i1 %4, i1 %9;
    cbr i1 %10(prob = 0.5), ^if.then1, ^b1;
  ^if.then1:
    i1 %11 = scmp lt i32 %3, i32 98;
    i1 %12 = and i1 %4, i1 %11;
    cbr i1 %12(prob = 0.5), ^if.then2, ^b1;
  ^if.then2:
    i1 %13 = scmp lt i32 %3, i32 97;
    i1 %14 = and i1 %4, i1 %13;
    cbr i1 %14(prob = 0.5), ^if.then3, ^b1;
  ^if.then3:
    i1 %15 = scmp lt i32 %3, i32 96;
    i1 %16 = and i1 %4, i1 %15;
    cbr i1 %16(prob = 0.5), ^if.then4, ^b1;
  ^if.then4:
    i1 %17 = scmp lt i32 %3, i32 95;
    i1 %18 = and i1 %4, i1 %17;
    cbr i1 %18(prob = 0.5), ^if.then5, ^b1;
  ^if.then5:
    i1 %19 = scmp lt i32 %3, i32 94;
    i1 %20 = and i1 %4, i1 %19;
    cbr i1 %20(prob = 0.5), ^if.then6, ^b1;
  ^if.then6:
    i1 %21 = scmp lt i32 %3, i32 93;
    i1 %22 = and i1 %4, i1 %21;
    cbr i1 %22(prob = 0.5), ^if.then7, ^b1;
  ^if.then7:
    i1 %23 = scmp lt i32 %3, i32 92;
    i1 %24 = and i1 %4, i1 %23;
    cbr i1 %24(prob = 0.5), ^if.then8, ^b1;
  ^if.then8:
    i1 %25 = scmp lt i32 %3, i32 91;
    i1 %26 = and i1 %4, i1 %25;
    cbr i1 %26(prob = 0.5), ^if.then9, ^b1;
  ^if.then9:
    i1 %27 = scmp lt i32 %3, i32 90;
    i1 %28 = and i1 %4, i1 %27;
    cbr i1 %28(prob = 0.5), ^if.then10, ^b1;
  ^if.then10:
    i1 %29 = scmp lt i32 %3, i32 89;
    i1 %30 = and i1 %4, i1 %29;
    cbr i1 %30(prob = 0.5), ^if.then11, ^b1;
  ^if.then11:
    i1 %31 = scmp lt i32 %3, i32 88;
    i1 %32 = and i1 %4, i1 %31;
    cbr i1 %32(prob = 0.5), ^if.then12, ^b1;
  ^if.then12:
    i1 %33 = scmp lt i32 %3, i32 87;
    i1 %34 = and i1 %4, i1 %33;
    cbr i1 %34(prob = 0.5), ^if.then13, ^b1;
  ^if.then13:
    i1 %35 = scmp lt i32 %3, i32 86;
    i1 %36 = and i1 %4, i1 %35;
    cbr i1 %36(prob = 0.5), ^if.then14, ^b1;
  ^if.then14:
    i1 %37 = scmp lt i32 %3, i32 85;
    i1 %38 = and i1 %4, i1 %37;
    cbr i1 %38(prob = 0.5), ^if.then15, ^b1;
  ^if.then15:
    i1 %39 = scmp lt i32 %3, i32 84;
    i1 %40 = and i1 %4, i1 %39;
    cbr i1 %40(prob = 0.5), ^if.then16, ^b1;
  ^if.then16:
    i1 %41 = scmp lt i32 %3, i32 83;
    i1 %42 = and i1 %4, i1 %41;
    cbr i1 %42(prob = 0.5), ^if.then17, ^b1;
  ^if.then17:
    i1 %43 = scmp lt i32 %3, i32 82;
    i1 %44 = and i1 %4, i1 %43;
    cbr i1 %44(prob = 0.5), ^if.then18, ^b1;
  ^if.then18:
    i1 %45 = scmp lt i32 %3, i32 81;
    i1 %46 = and i1 %4, i1 %45;
    cbr i1 %46(prob = 0.5), ^if.then19, ^b1;
  ^if.then19:
    i1 %47 = scmp lt i32 %3, i32 80;
    i1 %48 = and i1 %4, i1 %47;
    cbr i1 %48(prob = 0.5), ^if.then20, ^b1;
  ^if.then20:
    i1 %49 = scmp lt i32 %3, i32 79;
    i1 %50 = and i1 %4, i1 %49;
    cbr i1 %50(prob = 0.5), ^if.then21, ^b1;
  ^if.then21:
    i1 %51 = scmp lt i32 %3, i32 78;
    i1 %52 = and i1 %4, i1 %51;
    cbr i1 %52(prob = 0.5), ^if.then22, ^b1;
  ^if.then22:
    i1 %53 = scmp lt i32 %3, i32 77;
    i1 %54 = and i1 %4, i1 %53;
    cbr i1 %54(prob = 0.5), ^if.then23, ^b1;
  ^if.then23:
    i1 %55 = scmp lt i32 %3, i32 76;
    i1 %56 = and i1 %4, i1 %55;
    cbr i1 %56(prob = 0.5), ^if.then24, ^b1;
  ^if.then24:
    i1 %57 = scmp lt i32 %3, i32 75;
    i1 %58 = and i1 %4, i1 %57;
    cbr i1 %58(prob = 0.5), ^if.then25, ^b1;
  ^if.then25:
    i1 %59 = scmp lt i32 %3, i32 74;
    i1 %60 = and i1 %4, i1 %59;
    cbr i1 %60(prob = 0.5), ^if.then26, ^b1;
  ^if.then26:
    i1 %61 = scmp lt i32 %3, i32 73;
    i1 %62 = and i1 %4, i1 %61;
    cbr i1 %62(prob = 0.5), ^if.then27, ^b1;
  ^if.then27:
    i1 %63 = scmp lt i32 %3, i32 72;
    i1 %64 = and i1 %4, i1 %63;
    cbr i1 %64(prob = 0.5), ^if.then28, ^b1;
  ^if.then28:
    i1 %65 = scmp lt i32 %3, i32 71;
    i1 %66 = and i1 %4, i1 %65;
    cbr i1 %66(prob = 0.5), ^if.then29, ^b1;
  ^if.then29:
    i1 %67 = scmp lt i32 %3, i32 70;
    i1 %68 = and i1 %4, i1 %67;
    cbr i1 %68(prob = 0.5), ^if.then30, ^b1;
  ^if.then30:
    i1 %69 = scmp lt i32 %3, i32 69;
    i1 %70 = and i1 %4, i1 %69;
    cbr i1 %70(prob = 0.5), ^if.then31, ^b1;
  ^if.then31:
    i1 %71 = scmp lt i32 %3, i32 68;
    i1 %72 = and i1 %4, i1 %71;
    cbr i1 %72(prob = 0.5), ^if.then32, ^b1;
  ^if.then32:
    i1 %73 = scmp lt i32 %3, i32 67;
    i1 %74 = and i1 %4, i1 %73;
    cbr i1 %74(prob = 0.5), ^if.then33, ^b1;
  ^if.then33:
    i1 %75 = scmp lt i32 %3, i32 66;
    i1 %76 = and i1 %4, i1 %75;
    cbr i1 %76(prob = 0.5), ^if.then34, ^b1;
  ^if.then34:
    i1 %77 = scmp lt i32 %3, i32 65;
    i1 %78 = and i1 %4, i1 %77;
    cbr i1 %78(prob = 0.5), ^if.then35, ^b1;
  ^if.then35:
    i1 %79 = scmp lt i32 %3, i32 64;
    i1 %80 = and i1 %4, i1 %79;
    cbr i1 %80(prob = 0.5), ^if.then36, ^b1;
  ^if.then36:
    i1 %81 = scmp lt i32 %3, i32 63;
    i1 %82 = and i1 %4, i1 %81;
    cbr i1 %82(prob = 0.5), ^if.then37, ^b1;
  ^if.then37:
    i1 %83 = scmp lt i32 %3, i32 62;
    i1 %84 = and i1 %4, i1 %83;
    cbr i1 %84(prob = 0.5), ^if.then38, ^b1;
  ^if.then38:
    i1 %85 = scmp lt i32 %3, i32 61;
    i1 %86 = and i1 %4, i1 %85;
    cbr i1 %86(prob = 0.5), ^if.then39, ^b1;
  ^if.then39:
    i1 %87 = scmp lt i32 %3, i32 60;
    i1 %88 = and i1 %4, i1 %87;
    cbr i1 %88(prob = 0.5), ^if.then40, ^b1;
  ^if.then40:
    i1 %89 = scmp lt i32 %3, i32 59;
    i1 %90 = and i1 %4, i1 %89;
    cbr i1 %90(prob = 0.5), ^if.then41, ^b1;
  ^if.then41:
    i1 %91 = scmp lt i32 %3, i32 58;
    i1 %92 = and i1 %4, i1 %91;
    cbr i1 %92(prob = 0.5), ^if.then42, ^b1;
  ^if.then42:
    i1 %93 = scmp lt i32 %3, i32 57;
    i1 %94 = and i1 %4, i1 %93;
    cbr i1 %94(prob = 0.5), ^if.then43, ^b1;
  ^if.then43:
    i1 %95 = scmp lt i32 %3, i32 56;
    i1 %96 = and i1 %4, i1 %95;
    cbr i1 %96(prob = 0.5), ^if.then44, ^b1;
  ^if.then44:
    i1 %97 = scmp lt i32 %3, i32 55;
    i1 %98 = and i1 %4, i1 %97;
    cbr i1 %98(prob = 0.5), ^if.then45, ^b1;
  ^if.then45:
    i1 %99 = scmp lt i32 %3, i32 54;
    i1 %100 = and i1 %4, i1 %99;
    cbr i1 %100(prob = 0.5), ^if.then46, ^b1;
  ^if.then46:
    i1 %101 = scmp lt i32 %3, i32 53;
    i1 %102 = and i1 %4, i1 %101;
    cbr i1 %102(prob = 0.5), ^if.then47, ^b1;
  ^if.then47:
    i1 %103 = scmp lt i32 %3, i32 52;
    i1 %104 = and i1 %4, i1 %103;
    cbr i1 %104(prob = 0.5), ^if.then48, ^b1;
  ^if.then48:
    i1 %105 = scmp lt i32 %3, i32 51;
    i1 %106 = and i1 %4, i1 %105;
    cbr i1 %106(prob = 0.5), ^if.then49, ^b1;
  ^if.then49:
    i1 %107 = scmp lt i32 %3, i32 50;
    i1 %108 = and i1 %4, i1 %107;
    cbr i1 %108(prob = 0.5), ^if.then50, ^b1;
  ^if.then50:
    i1 %109 = scmp lt i32 %3, i32 49;
    i1 %110 = and i1 %4, i1 %109;
    cbr i1 %110(prob = 0.5), ^if.then51, ^b1;
  ^if.then51:
    i1 %111 = scmp lt i32 %3, i32 48;
    i1 %112 = and i1 %4, i1 %111;
    cbr i1 %112(prob = 0.5), ^if.then52, ^b1;
  ^if.then52:
    i1 %113 = scmp lt i32 %3, i32 47;
    i1 %114 = and i1 %4, i1 %113;
    cbr i1 %114(prob = 0.5), ^if.then53, ^b1;
  ^if.then53:
    i1 %115 = scmp lt i32 %3, i32 46;
    i1 %116 = and i1 %4, i1 %115;
    cbr i1 %116(prob = 0.5), ^if.then54, ^b1;
  ^if.then54:
    i1 %117 = scmp lt i32 %3, i32 45;
    i1 %118 = and i1 %4, i1 %117;
    cbr i1 %118(prob = 0.5), ^if.then55, ^b1;
  ^if.then55:
    i1 %119 = scmp lt i32 %3, i32 44;
    i1 %120 = and i1 %4, i1 %119;
    cbr i1 %120(prob = 0.5), ^if.then56, ^b1;
  ^if.then56:
    i1 %121 = scmp lt i32 %3, i32 43;
    i1 %122 = and i1 %4, i1 %121;
    cbr i1 %122(prob = 0.5), ^if.then57, ^b1;
  ^if.then57:
    i1 %123 = scmp lt i32 %3, i32 42;
    i1 %124 = and i1 %4, i1 %123;
    cbr i1 %124(prob = 0.5), ^if.then58, ^b1;
  ^if.then58:
    i1 %125 = scmp lt i32 %3, i32 41;
    i1 %126 = and i1 %4, i1 %125;
    cbr i1 %126(prob = 0.5), ^if.then59, ^b1;
  ^if.then59:
    i1 %127 = scmp lt i32 %3, i32 40;
    i1 %128 = and i1 %4, i1 %127;
    cbr i1 %128(prob = 0.5), ^if.then60, ^b1;
  ^if.then60:
    i1 %129 = scmp lt i32 %3, i32 39;
    i1 %130 = and i1 %4, i1 %129;
    cbr i1 %130(prob = 0.5), ^if.then61, ^b1;
  ^if.then61:
    i1 %131 = scmp lt i32 %3, i32 38;
    i1 %132 = and i1 %4, i1 %131;
    cbr i1 %132(prob = 0.5), ^if.then62, ^b1;
  ^if.then62:
    i1 %133 = scmp lt i32 %3, i32 37;
    i1 %134 = and i1 %4, i1 %133;
    cbr i1 %134(prob = 0.5), ^if.then63, ^b1;
  ^if.then63:
    i1 %135 = scmp lt i32 %3, i32 36;
    i1 %136 = and i1 %4, i1 %135;
    cbr i1 %136(prob = 0.5), ^if.then64, ^b1;
  ^if.then64:
    i1 %137 = scmp lt i32 %3, i32 35;
    i1 %138 = and i1 %4, i1 %137;
    cbr i1 %138(prob = 0.5), ^if.then65, ^b1;
  ^if.then65:
    i1 %139 = scmp lt i32 %3, i32 34;
    i1 %140 = and i1 %4, i1 %139;
    cbr i1 %140(prob = 0.5), ^if.then66, ^b1;
  ^if.then66:
    i1 %141 = scmp lt i32 %3, i32 33;
    i1 %142 = and i1 %4, i1 %141;
    cbr i1 %142(prob = 0.5), ^if.then67, ^b1;
  ^if.then67:
    i1 %143 = scmp lt i32 %3, i32 32;
    i1 %144 = and i1 %4, i1 %143;
    cbr i1 %144(prob = 0.5), ^if.then68, ^b1;
  ^if.then68:
    i1 %145 = scmp lt i32 %3, i32 31;
    i1 %146 = and i1 %4, i1 %145;
    cbr i1 %146(prob = 0.5), ^if.then69, ^b1;
  ^if.then69:
    i1 %147 = scmp lt i32 %3, i32 30;
    i1 %148 = and i1 %4, i1 %147;
    cbr i1 %148(prob = 0.5), ^if.then70, ^b1;
  ^if.then70:
    i1 %149 = scmp lt i32 %3, i32 29;
    i1 %150 = and i1 %4, i1 %149;
    cbr i1 %150(prob = 0.5), ^if.then71, ^b1;
  ^if.then71:
    i1 %151 = scmp lt i32 %3, i32 28;
    i1 %152 = and i1 %4, i1 %151;
    cbr i1 %152(prob = 0.5), ^if.then72, ^b1;
  ^if.then72:
    i1 %153 = scmp lt i32 %3, i32 27;
    i1 %154 = and i1 %4, i1 %153;
    cbr i1 %154(prob = 0.5), ^if.then73, ^b1;
  ^if.then73:
    i1 %155 = scmp lt i32 %3, i32 26;
    i1 %156 = and i1 %4, i1 %155;
    cbr i1 %156(prob = 0.5), ^if.then74, ^b1;
  ^if.then74:
    i1 %157 = scmp lt i32 %3, i32 25;
    i1 %158 = and i1 %4, i1 %157;
    cbr i1 %158(prob = 0.5), ^if.then75, ^b1;
  ^if.then75:
    i1 %159 = scmp lt i32 %3, i32 24;
    i1 %160 = and i1 %4, i1 %159;
    cbr i1 %160(prob = 0.5), ^if.then76, ^b1;
  ^if.then76:
    i1 %161 = scmp lt i32 %3, i32 23;
    i1 %162 = and i1 %4, i1 %161;
    cbr i1 %162(prob = 0.5), ^if.then77, ^b1;
  ^if.then77:
    i1 %163 = scmp lt i32 %3, i32 22;
    i1 %164 = and i1 %4, i1 %163;
    cbr i1 %164(prob = 0.5), ^if.then78, ^b1;
  ^if.then78:
    i1 %165 = scmp lt i32 %3, i32 21;
    i1 %166 = and i1 %4, i1 %165;
    cbr i1 %166(prob = 0.5), ^if.then79, ^b1;
  ^if.then79:
    i1 %167 = scmp lt i32 %3, i32 20;
    i1 %168 = and i1 %4, i1 %167;
    cbr i1 %168(prob = 0.5), ^if.then80, ^b1;
  ^if.then80:
    i1 %169 = scmp lt i32 %3, i32 19;
    i1 %170 = and i1 %4, i1 %169;
    cbr i1 %170(prob = 0.5), ^if.then81, ^b1;
  ^if.then81:
    i1 %171 = scmp lt i32 %3, i32 18;
    i1 %172 = and i1 %4, i1 %171;
    cbr i1 %172(prob = 0.5), ^if.then82, ^b1;
  ^if.then82:
    i1 %173 = scmp lt i32 %3, i32 17;
    i1 %174 = and i1 %4, i1 %173;
    cbr i1 %174(prob = 0.5), ^if.then83, ^b1;
  ^if.then83:
    i1 %175 = scmp lt i32 %3, i32 16;
    i1 %176 = and i1 %4, i1 %175;
    cbr i1 %176(prob = 0.5), ^if.then84, ^b1;
  ^if.then84:
    i1 %177 = scmp lt i32 %3, i32 15;
    i1 %178 = and i1 %4, i1 %177;
    cbr i1 %178(prob = 0.5), ^if.then85, ^b1;
  ^if.then85:
    i1 %179 = scmp lt i32 %3, i32 14;
    i1 %180 = and i1 %4, i1 %179;
    cbr i1 %180(prob = 0.5), ^if.then86, ^b1;
  ^if.then86:
    i1 %181 = scmp lt i32 %3, i32 13;
    i1 %182 = and i1 %4, i1 %181;
    cbr i1 %182(prob = 0.5), ^if.then87, ^b1;
  ^if.then87:
    i1 %183 = scmp lt i32 %3, i32 12;
    i1 %184 = and i1 %4, i1 %183;
    cbr i1 %184(prob = 0.5), ^if.then88, ^b1;
  ^if.then88:
    i1 %185 = scmp lt i32 %3, i32 11;
    i1 %186 = and i1 %4, i1 %185;
    cbr i1 %186(prob = 0.5), ^if.then89, ^b1;
  ^if.then89:
    i1 %187 = scmp lt i32 %3, i32 10;
    i1 %188 = and i1 %4, i1 %187;
    cbr i1 %188(prob = 0.5), ^if.then90, ^b1;
  ^if.then90:
    i1 %189 = scmp lt i32 %3, i32 9;
    i1 %190 = and i1 %4, i1 %189;
    cbr i1 %190(prob = 0.5), ^if.then91, ^b1;
  ^if.then91:
    i1 %191 = scmp lt i32 %3, i32 8;
    i1 %192 = and i1 %4, i1 %191;
    cbr i1 %192(prob = 0.5), ^if.then92, ^b1;
  ^if.then92:
    i1 %193 = scmp lt i32 %3, i32 7;
    i1 %194 = and i1 %4, i1 %193;
    cbr i1 %194(prob = 0.5), ^if.then93, ^b1;
  ^if.then93:
    i1 %195 = scmp lt i32 %3, i32 6;
    i1 %196 = and i1 %4, i1 %195;
    cbr i1 %196(prob = 0.5), ^if.then94, ^b1;
  ^if.then94:
    i1 %197 = scmp lt i32 %3, i32 5;
    i1 %198 = and i1 %4, i1 %197;
    cbr i1 %198(prob = 0.5), ^if.then95, ^b1;
  ^if.then95:
    i1 %199 = scmp lt i32 %3, i32 4;
    i1 %200 = and i1 %4, i1 %199;
    cbr i1 %200(prob = 0.5), ^if.then96, ^b1;
  ^if.then96:
    i1 %201 = scmp lt i32 %3, i32 3;
    i1 %202 = and i1 %4, i1 %201;
    cbr i1 %202(prob = 0.5), ^if.then97, ^b1;
  ^if.then97:
    i1 %203 = scmp lt i32 %3, i32 2;
    i1 %204 = and i1 %4, i1 %203;
    i32 %205 = zext i1 %204 to i32;
    i32 %206 = sub i32 2, i32 %205;
    ubr ^b1;
}
