internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry():
    i32* %sum = alloc i32;
    [20 * i32]* %array = alloc [20 * i32];
    i32* %0 = getelementptr &([20 * i32]* %array)[i32 0][i32 0];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %array)[i32 0][i32 1];
    store i32* %1 with i32 0;
    i32* %2 = getelementptr &([20 * i32]* %array)[i32 0][i32 2];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &([20 * i32]* %array)[i32 0][i32 3];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([20 * i32]* %array)[i32 0][i32 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([20 * i32]* %array)[i32 0][i32 5];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([20 * i32]* %array)[i32 0][i32 6];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &([20 * i32]* %array)[i32 0][i32 7];
    store i32* %7 with i32 0;
    i32* %8 = getelementptr &([20 * i32]* %array)[i32 0][i32 8];
    store i32* %8 with i32 0;
    i32* %9 = getelementptr &([20 * i32]* %array)[i32 0][i32 9];
    store i32* %9 with i32 0;
    i32* %10 = getelementptr &([20 * i32]* %array)[i32 0][i32 10];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &([20 * i32]* %array)[i32 0][i32 11];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &([20 * i32]* %array)[i32 0][i32 12];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &([20 * i32]* %array)[i32 0][i32 13];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &([20 * i32]* %array)[i32 0][i32 14];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &([20 * i32]* %array)[i32 0][i32 15];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &([20 * i32]* %array)[i32 0][i32 16];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &([20 * i32]* %array)[i32 0][i32 17];
    store i32* %17 with i32 0;
    i32* %18 = getelementptr &([20 * i32]* %array)[i32 0][i32 18];
    store i32* %18 with i32 0;
    i32* %19 = getelementptr &([20 * i32]* %array)[i32 0][i32 19];
    store i32* %19 with i32 0;
    i32* %i = alloc i32;
    store i32* %i with i32 0;
    ubr [ ^while.body i32* %i, [20 * i32]* %array, i32* %sum, i32 0, i32 0 ];
^while.body(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3, i32 %arg4):
    i32 %0 = add i32 %arg3, i32 1;
    store i32* %arg2 with i32 %0;
    i1 %1 = scmp ge i32 0, i32 %arg4;
    i1 %2 = select i1 %1 ? i1 true : i1 false;
    cbr i1 %2, [ ^indirect i32* %arg, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect1 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg, i32 %0 ];
^indirect(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    ubr [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ];
^indirect1([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 0];
    store i32* %0 with i32 1;
    i32 %1 = load i32* %arg3;
    i32 %2 = add i32 %arg4, i32 1;
    store i32* %arg1 with i32 %2;
    i1 %3 = scmp ge i32 1, i32 %1;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg3, [20 * i32]* %arg2, i32* %arg1, i32 %1 ], [ ^indirect3 [20 * i32]* %arg2, [20 * i32]* %arg2, i32* %arg1, i32* %arg3 ];
^indirect2(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = add i32 %arg3, i32 1;
    store i32* %arg with i32 %0;
    ubr [ ^while.header i32* %arg, i32 %0, i32* %arg2, [20 * i32]* %arg1 ];
^indirect3([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 1];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 0];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^while.header(i32* %arg, i32 %arg1, i32* %arg2, [20 * i32]* %arg3):
    i1 %0 = scmp lt i32 %arg1, i32 20;
    cbr i1 %0, [ ^indirect4 i32* %arg, [20 * i32]* %arg3, i32* %arg2 ], [ ^b1 i32* %arg, [20 * i32]* %arg3, i32* %arg2 ];
^b(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 2, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect5 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect4(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    ubr [ ^while.body i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %1, i32 %0 ];
^b1(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    store i32* %arg with i32 0;
    ubr [ ^while.body1 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 0 ];
^indirect5([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 2];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 1];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b2 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^while.body1(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = load i32* %arg2;
    i32 %1 = add i32 %0, i32 2;
    store i32* %arg2 with i32 %1;
    i1 %2 = scmp ge i32 0, i32 %arg3;
    i1 %3 = select i1 %2 ? i1 true : i1 false;
    cbr i1 %3, [ ^indirect6 i32* %arg, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect7 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg, i32 %1 ];
^b2(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 3, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect8 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect6(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    ubr [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ];
^indirect7([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 0];
    store i32* %0 with i32 0;
    i32 %1 = load i32* %arg3;
    i32 %2 = add i32 %arg4, i32 2;
    store i32* %arg1 with i32 %2;
    i1 %3 = scmp ge i32 1, i32 %1;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg3, [20 * i32]* %arg2, i32* %arg1, i32 %1 ], [ ^indirect10 [20 * i32]* %arg2, i32* %arg1, [20 * i32]* %arg2, i32* %arg3 ];
^indirect8([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 3];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 2];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b3 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect9(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = add i32 %arg3, i32 1;
    store i32* %arg with i32 %0;
    ubr [ ^while.header1 i32* %arg, i32 %0, i32* %arg2, [20 * i32]* %arg1 ];
^indirect10([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 1];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 0];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b4 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^b3(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 4, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect11 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^while.header1(i32* %arg, i32 %arg1, i32* %arg2, [20 * i32]* %arg3):
    i1 %0 = scmp lt i32 %arg1, i32 20;
    cbr i1 %0, [ ^indirect12 i32* %arg, [20 * i32]* %arg3, i32* %arg2 ], [ ^b5 i32* %arg, [20 * i32]* %arg3, i32* %arg2 ];
^b4(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 2, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect13 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect11([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 4];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 3];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect12(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    ubr [ ^while.body1 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ];
^b5(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    store i32* %arg with i32 1;
    ubr [ ^b7 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 1 ];
^b6(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 5, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect14 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^indirect13([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 2];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 1];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b8 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b7(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = sub i32 %arg3, i32 1;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 %0, i32 %arg3;
    cbr i1 %3, [ ^b9 [20 * i32]* %arg1, i32* %arg2, i32 %2 ], [ ^indirect15 i32 %0, [20 * i32]* %arg1, i32* %arg, i32* %arg2, [20 * i32]* %arg1, i32 %0 ];
^indirect14([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 5];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 4];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b10 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^indirect i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^b8(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 3, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect16 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^b9([20 * i32]* %arg, i32* %arg1, i32 %arg2):
    i32* %ans = alloc i32;
    i32 %0 = add i32 %arg2, i32 3;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 0];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect18 i32* %arg1, [20 * i32]* %arg, i32* %ans, [20 * i32]* %arg, i32* %arg1, i32 %0 ], [ ^entry1 i32* %arg1, [20 * i32]* %arg, i32* %ans, i32* %arg1, [20 * i32]* %arg, i32 %0 ];
^indirect15(i32 %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4, i32 %arg5):
    i1 %0 = scmp ge i32 %arg, i32 20;
    cbr i1 %0, [ ^indirect17 [20 * i32]* %arg4, i32* %arg3 ], [ ^b11 [20 * i32]* %arg1, [20 * i32]* %arg4, i32* %arg3, i32* %arg2, i32 %arg5 ];
^b10(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 6, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect19 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect16([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 3];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 2];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b12 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^indirect17([20 * i32]* %arg, i32* %arg1):
    i32 %0 = load i32* %arg1;
    ubr [ ^b9 [20 * i32]* %arg, i32* %arg1, i32 %0 ];
^indirect18(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4, i32 %arg5):
    i32 %0 = add i32 %arg5, i32 3;
    store i32* %arg with i32 %0;
    i32* %1 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 1];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^entry2 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ], [ ^indirect20 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ];
^entry1(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4, i32 %arg5):
    i32 %0 = add i32 %arg5, i32 3;
    store i32* %arg with i32 %0;
    i32* %1 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 2];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    i1 %4 = xor i1 %3, i1 true;
    cbr i1 %4, [ ^entry2 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ], [ ^entry3 i32* %arg3, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ];
^b11([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 %arg4];
    store i32* %0 with i32 1;
    i1 %1 = scmp eq i32 %arg4, i32 0;
    cbr i1 %1, [ ^if.then [20 * i32]* %arg, i32* %arg3, i32* %arg2, [20 * i32]* %arg1 ], [ ^indirect21 i32 %arg4, [20 * i32]* %arg, i32* %arg3, i32* %arg2, [20 * i32]* %arg1 ];
^indirect19([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 6];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 5];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b13 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b12(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 4, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect22 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect20(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    ubr [ ^entry1 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4, i32 %0 ];
^entry2(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 4];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b14 i1 true, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ], [ ^entry4 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ];
^entry3(i32* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    ubr [ ^entry2 i32* %arg3, [20 * i32]* %arg2, i32* %arg1, i32* %arg3, [20 * i32]* %arg2 ];
^if.then([20 * i32]* %arg, i32* %arg1, i32* %arg2, [20 * i32]* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 0];
    i32 %1 = load i32* %0;
    i1 %2 = scmp neq i32 %1, i32 0;
    cbr i1 %2, [ ^while.body2 i32* %arg1, [20 * i32]* %arg3, i32* %arg2 ], [ ^indirect17 [20 * i32]* %arg3, i32* %arg2 ];
^indirect21(i32 %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = sub i32 %arg, i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 %0];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^while.body2 i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ], [ ^indirect17 [20 * i32]* %arg4, i32* %arg3 ];
^b13(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 7, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect23 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect22([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 4];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 3];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b15 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b14(i1 %arg, i32* %arg1, i32* %arg2, [20 * i32]* %arg3):
    cbr i1 %arg, [ ^entry6 i32* %arg2, [20 * i32]* %arg3, i32* %arg1, [20 * i32]* %arg3, i32* %arg2 ], [ ^entry5 i32* %arg2, i32* %arg1, [20 * i32]* %arg3, i32* %arg2 ];
^entry4(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 5];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4, [ ^entry7 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ], [ ^b14 i1 false, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ];
^while.body2(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 1;
    store i32* %arg with i32 %1;
    i1 %2 = scmp lt i32 %1, i32 20;
    cbr i1 %2, [ ^b7 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %1 ], [ ^indirect17 [20 * i32]* %arg1, i32* %arg2 ];
^indirect23([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 7];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 6];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b16 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b15(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 5, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect24 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^entry5(i32* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    ubr [ ^entry6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1, [20 * i32]* %arg2, i32* %arg3 ];
^entry6(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 9];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4, [ ^entry8 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ], [ ^entry10 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ];
^entry7(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 6];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^entry9 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ], [ ^b14 i1 false, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ];
^b16(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 8, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect25 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect24([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 5];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 4];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b17 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^entry8(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 10];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b18 i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ], [ ^entry10 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ];
^entry9(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 7];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4, [ ^entry6 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ], [ ^entry5 i32* %arg3, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ];
^entry10(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 11];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b18 i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ], [ ^entry11 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ];
^indirect25([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 8];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 7];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b19 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b17(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 6, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect26 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^b18(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    store i32* %arg with i32 0;
    i32 %0 = load i32* %arg2;
    i32 %1 = add i32 %0, i32 3;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 0];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4, [ ^indirect27 i32* %arg2, [20 * i32]* %arg1, i32* %arg, i32* %arg2, [20 * i32]* %arg1, i32 %1 ], [ ^entry12 i32* %arg2, [20 * i32]* %arg1, i32* %arg, i32* %arg2, [20 * i32]* %arg1, i32 %1 ];
^entry11(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 12];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b18 i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ], [ ^entry13 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ];
^b19(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 9, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect28 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect26([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 6];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 5];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b20 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect27(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4, i32 %arg5):
    i32 %0 = add i32 %arg5, i32 3;
    store i32* %arg with i32 %0;
    i32* %1 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 2];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^entry14 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ], [ ^indirect29 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ];
^entry12(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4, i32 %arg5):
    i32 %0 = add i32 %arg5, i32 3;
    store i32* %arg with i32 %0;
    i32* %1 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 5];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b21 i1 true, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ], [ ^entry15 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ];
^entry13(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 13];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b18 i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ], [ ^entry16 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ];
^indirect28([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 9];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 8];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b22 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b20(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 7, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect30 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect29(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    ubr [ ^entry12 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4, i32 %0 ];
^entry14(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3, [20 * i32]* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 3];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^entry17 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, [20 * i32]* %arg4, i32* %arg3 ], [ ^indirect29 i32* %arg3, [20 * i32]* %arg4, i32* %arg2, i32* %arg3, [20 * i32]* %arg4 ];
^b21(i1 %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    cbr i1 %arg, [ ^b23 i32* %arg3 ], [ ^entry19 i32* %arg3, [20 * i32]* %arg2, i32* %arg1, i32* %arg3 ];
^entry15(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 6];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4, [ ^entry20 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ], [ ^b21 i1 false, i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ];
^entry16(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 14];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4, [ ^entry18 i32* %arg4, i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ], [ ^b18 i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ];
^b22(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 10, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect31 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect30([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 7];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 6];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b24 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^entry17(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 4];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b21 i1 true, i32* %arg2, [20 * i32]* %arg3, i32* %arg4 ], [ ^indirect29 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4, [20 * i32]* %arg3 ];
^entry18(i32* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    ubr [ ^b18 i32* %arg1, [20 * i32]* %arg2, i32* %arg3 ];
^entry19(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32 %2 = load i32* %arg2;
    i32* %3 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 8];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^b23 i32* %arg3 ], [ ^indirect32 i32* %arg3, i32 %2 ];
^entry20(i32* %arg, [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg3, i32* %arg4):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 3;
    store i32* %arg with i32 %1;
    i32* %2 = getelementptr &([20 * i32]* %arg1)[i32 0][i32 7];
    i32 %3 = load i32* %2;
    i1 %4 = scmp neq i32 %3, i32 0;
    i1 %5 = xor i1 %4, i1 true;
    cbr i1 %5, [ ^b23 i32* %arg4 ], [ ^entry19 i32* %arg4, [20 * i32]* %arg3, i32* %arg2, i32* %arg4 ];
^indirect31([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 10];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 9];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b25 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b23(i32* %arg):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 1;
    call (i32) -> void @putint(i32 %1);
    ret i32 0;
^b24(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 8, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect33 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^b25(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 11, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect34 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect32(i32* %arg, i32 %arg1):
    i32 %0 = load i32* %arg;
    i32 %1 = add i32 %0, i32 %arg1;
    call (i32) -> void @putint(i32 %1);
    ret i32 0;
^indirect33([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 8];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 7];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b26 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect34([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 11];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 10];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b27 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b26(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 9, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect35 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^b27(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 12, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect36 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect35([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 9];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 8];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b28 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^indirect36([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 12];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 11];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b29 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b28(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 10, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect37 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^b29(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 13, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect38 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect37([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 10];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 9];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b30 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^indirect38([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 13];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 12];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b31 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b30(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 11, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect39 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^b31(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 14, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect40 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect39([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 11];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 10];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b32 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^indirect40([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 14];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 13];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b33 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b32(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 12, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect41 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^b33(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 15, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect42 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect41([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 12];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 11];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b34 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect42([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 15];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 14];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b35 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b34(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 13, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect43 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^b35(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 16, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect44 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect43([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 13];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 12];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b36 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^indirect44([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 16];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 15];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b37 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b36(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 14, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect45 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^b37(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 17, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect46 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect45([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 14];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 13];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b38 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect46([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 17];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 16];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b39 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b38(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 15, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect47 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^b39(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 18, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect2 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect48 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect47([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 15];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 14];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b40 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect48([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 18];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 17];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^b41 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^indirect i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b40(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 16, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect49 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^b41(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 1;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 19, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^b42 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect50 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg, i32 %0 ];
^indirect49([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 16];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 15];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b43 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^indirect50([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 19];
    store i32* %0 with i32 1;
    i32 %1 = add i32 %arg4, i32 1;
    store i32* %arg3 with i32 %1;
    ubr [ ^while.header i32* %arg3, i32 %1, i32* %arg1, [20 * i32]* %arg2 ];
^b42(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = add i32 %arg3, i32 1;
    store i32* %arg with i32 %0;
    i1 %1 = scmp lt i32 %0, i32 20;
    cbr i1 %1, [ ^indirect51 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^b1 i32* %arg, [20 * i32]* %arg1, i32* %arg2 ];
^b43(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 17, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect52 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg ];
^indirect51(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = load i32* %arg2;
    ubr [ ^while.body i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0, i32 %arg3 ];
^indirect52([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 17];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 16];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ], [ ^b44 i32* %arg3, [20 * i32]* %arg2, i32* %arg1 ];
^b44(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 18, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^indirect9 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect53 [20 * i32]* %arg1, [20 * i32]* %arg1, i32* %arg2, i32* %arg ];
^indirect53([20 * i32]* %arg, [20 * i32]* %arg1, i32* %arg2, i32* %arg3):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 18];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([20 * i32]* %arg)[i32 0][i32 17];
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^indirect6 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ], [ ^b45 i32* %arg3, [20 * i32]* %arg1, i32* %arg2 ];
^b45(i32* %arg, [20 * i32]* %arg1, i32* %arg2):
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    i32 %2 = add i32 %1, i32 2;
    store i32* %arg2 with i32 %2;
    i1 %3 = scmp ge i32 19, i32 %0;
    i1 %4 = select i1 %3 ? i1 true : i1 false;
    cbr i1 %4, [ ^b46 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^indirect54 [20 * i32]* %arg1, i32* %arg2, [20 * i32]* %arg1, i32* %arg, i32 %0 ];
^indirect54([20 * i32]* %arg, i32* %arg1, [20 * i32]* %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &([20 * i32]* %arg)[i32 0][i32 19];
    store i32* %0 with i32 0;
    i32 %1 = add i32 %arg4, i32 1;
    store i32* %arg3 with i32 %1;
    ubr [ ^while.header1 i32* %arg3, i32 %1, i32* %arg1, [20 * i32]* %arg2 ];
^b46(i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32 %0 = add i32 %arg3, i32 1;
    store i32* %arg with i32 %0;
    i1 %1 = scmp lt i32 %0, i32 20;
    cbr i1 %1, [ ^while.body1 i32* %arg, [20 * i32]* %arg1, i32* %arg2, i32 %0 ], [ ^b5 i32* %arg, [20 * i32]* %arg1, i32* %arg2 ];
}
