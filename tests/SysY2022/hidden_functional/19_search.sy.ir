internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal [30 * [30 * i32]]* @a, align 8 { Flexible Transposed };
internal func @search(i32 %x, i32 %y, i32 %n, [4 * [2 * i32]]* %0, i32* %1, i32* %2, i32* %3, i32* %4) -> i32 {
  ^entry:
    i1 %5 = icmp sgt i32 %n, i32 10;
    cbr i1 %5(prob = 0.5), ^b, ^succ;
  ^succ:
    [30 * [30 * i32]]* %6 = ptrcast [30 * [30 * i32]]* @a to [30 * [30 * i32]]*;
    ubr ^while.header;
  ^b:
    i32 %7 = phi [^entry, i32 1073741824] [^b1, i32 %15] [^b5, i32 1];
    ret i32 %7;
  ^while.header:
    i32 %8 = phi [^succ, i32 1073741824] [^b6, i32 %8] [^b7, i32 %8] [^b8, i32 %8] [^b9, i32 %8] [^b11, i32 %55];
    i32 %9 = phi [^succ, i32 0] [^b6, i32 %37] [^b7, i32 %37] [^b8, i32 %37] [^b9, i32 %37] [^b11, i32 %37];
    [2 * i32]* %10 = getelementptr &([4 * [2 * i32]]* %0)[i64 0][i32 %9];
    i32* %11 = getelementptr &([2 * i32]* %10)[i64 0][i64 0];
    i32* %12 = getelementptr &([2 * i32]* %10)[i64 0][i64 1];
    i1 %13 = icmp slt i32 %9, i32 4;
    cbr i1 %13(prob = 0.984615), ^while.header1, ^b1;
  ^b1:
    i1 %14 = icmp sgt i32 %8, i32 10;
    i32 %15 = select i1 %14 ? i32 1073741824 : i32 %8;
    ubr ^b;
  ^while.header1:
    i32 %16 = phi [^while.header, i32 0] [^b3, i32 %31];
    i32 %17 = phi [^while.header, i32 %y] [^b3, i32 %30];
    i32 %18 = phi [^while.header, i32 %x] [^b3, i32 %28];
    [30 * i32]* %19 = getelementptr &([30 * [30 * i32]]* %6)[i64 0][i32 %17];
    i32* %20 = getelementptr &([30 * i32]* %19)[i64 0][i32 %18];
    i32 %21 = load i32* %20;
    i1 %22 = icmp neq i32 %21, i32 1;
    cbr i1 %22(prob = 0.984615), ^while.body, ^b2;
  ^while.body:
    i32 %23 = load i32* %3;
    i1 %24 = icmp eq i32 %18, i32 %23;
    cbr i1 %24(prob = 0.5), ^b4, ^b3;
  ^b2:
    i32 %25 = load i32* %3;
    i1 %26 = icmp eq i32 %18, i32 %25;
    cbr i1 %26(prob = 0.5), ^b5, ^b6;
  ^b3:
    i32 %27 = load i32* %11;
    i32 %28 = add i32 %18, i32 %27;
    i32 %29 = load i32* %12;
    i32 %30 = add i32 %17, i32 %29;
    i32 %31 = add i32 %16, i32 1;
    ubr ^while.header1;
  ^b4:
    i32 %32 = load i32* %4;
    i1 %33 = icmp eq i32 %17, i32 %32;
    cbr i1 %33(prob = 0.5), ^b2, ^b3;
  ^b5:
    i32 %34 = load i32* %4;
    i1 %35 = icmp eq i32 %17, i32 %34;
    cbr i1 %35(prob = 0.5), ^b, ^b6;
  ^b6:
    i1 %36 = icmp slt i32 %16, i32 2;
    i32 %37 = add i32 %9, i32 1;
    cbr i1 %36(prob = 0.5), ^while.header, ^b7;
  ^b7:
    i1 %38 = icmp eq i32 %18, i32 0;
    cbr i1 %38(prob = 0.5), ^while.header, ^b8;
  ^b8:
    i32 %39 = load i32* %2;
    i32 %40 = add i32 %39, i32 1;
    i1 %41 = icmp eq i32 %18, i32 %40;
    i1 %42 = icmp eq i32 %17, i32 0;
    i1 %43 = or i1 %41, i1 %42;
    cbr i1 %43(prob = 0.5), ^while.header, ^b9;
  ^b9:
    i32 %44 = load i32* %1;
    i32 %45 = add i32 %44, i32 1;
    i1 %46 = icmp eq i32 %17, i32 %45;
    cbr i1 %46(prob = 0.5), ^while.header, ^b10;
  ^b10:
    store i32* %20 with i32 0;
    i32 %47 = load i32* %11;
    i32 %48 = sub i32 %18, i32 %47;
    i32 %49 = load i32* %12;
    i32 %50 = sub i32 %17, i32 %49;
    i32 %51 = add i32 %n, i32 1;
    i1 %52 = icmp sgt i32 %51, i32 10;
    cbr i1 %52(prob = 0.5), ^b11, ^while.header2;
  ^b11:
    i32 %53 = phi [^b10, i32 1073741824] [^b12, i32 %63] [^b16, i32 1];
    i32 %54 = add i32 %53, i32 1;
    i32 %55 = smin i32 %8, i32 %54;
    store i32* %20 with i32 1;
    ubr ^while.header;
  ^while.header2:
    i32 %56 = phi [^b10, i32 1073741824] [^b17, i32 %56] [^b18, i32 %56] [^b19, i32 %56] [^b20, i32 %56] [^b21, i32 %102];
    i32 %57 = phi [^b10, i32 0] [^b17, i32 %85] [^b18, i32 %85] [^b19, i32 %85] [^b20, i32 %85] [^b21, i32 %85];
    [2 * i32]* %58 = getelementptr &([4 * [2 * i32]]* %0)[i64 0][i32 %57];
    i32* %59 = getelementptr &([2 * i32]* %58)[i64 0][i64 0];
    i32* %60 = getelementptr &([2 * i32]* %58)[i64 0][i64 1];
    i1 %61 = icmp slt i32 %57, i32 4;
    cbr i1 %61(prob = 0.984615), ^while.header3, ^b12;
  ^b12:
    i1 %62 = icmp sgt i32 %56, i32 10;
    i32 %63 = select i1 %62 ? i32 1073741824 : i32 %56;
    ubr ^b11;
  ^while.header3:
    i32 %64 = phi [^while.header2, i32 0] [^b14, i32 %79];
    i32 %65 = phi [^while.header2, i32 %50] [^b14, i32 %78];
    i32 %66 = phi [^while.header2, i32 %48] [^b14, i32 %76];
    [30 * i32]* %67 = getelementptr &([30 * [30 * i32]]* %6)[i64 0][i32 %65];
    i32* %68 = getelementptr &([30 * i32]* %67)[i64 0][i32 %66];
    i32 %69 = load i32* %68;
    i1 %70 = icmp neq i32 %69, i32 1;
    cbr i1 %70(prob = 0.984615), ^while.body1, ^b13;
  ^while.body1:
    i32 %71 = load i32* %3;
    i1 %72 = icmp eq i32 %66, i32 %71;
    cbr i1 %72(prob = 0.5), ^b15, ^b14;
  ^b13:
    i32 %73 = load i32* %3;
    i1 %74 = icmp eq i32 %66, i32 %73;
    cbr i1 %74(prob = 0.5), ^b16, ^b17;
  ^b14:
    i32 %75 = load i32* %59;
    i32 %76 = add i32 %66, i32 %75;
    i32 %77 = load i32* %60;
    i32 %78 = add i32 %65, i32 %77;
    i32 %79 = add i32 %64, i32 1;
    ubr ^while.header3;
  ^b15:
    i32 %80 = load i32* %4;
    i1 %81 = icmp eq i32 %65, i32 %80;
    cbr i1 %81(prob = 0.5), ^b13, ^b14;
  ^b16:
    i32 %82 = load i32* %4;
    i1 %83 = icmp eq i32 %65, i32 %82;
    cbr i1 %83(prob = 0.5), ^b11, ^b17;
  ^b17:
    i1 %84 = icmp slt i32 %64, i32 2;
    i32 %85 = add i32 %57, i32 1;
    cbr i1 %84(prob = 0.5), ^while.header2, ^b18;
  ^b18:
    i1 %86 = icmp eq i32 %66, i32 0;
    cbr i1 %86(prob = 0.5), ^while.header2, ^b19;
  ^b19:
    i32 %87 = load i32* %2;
    i32 %88 = add i32 %87, i32 1;
    i1 %89 = icmp eq i32 %66, i32 %88;
    i1 %90 = icmp eq i32 %65, i32 0;
    i1 %91 = or i1 %89, i1 %90;
    cbr i1 %91(prob = 0.5), ^while.header2, ^b20;
  ^b20:
    i32 %92 = load i32* %1;
    i32 %93 = add i32 %92, i32 1;
    i1 %94 = icmp eq i32 %65, i32 %93;
    cbr i1 %94(prob = 0.5), ^while.header2, ^b21;
  ^b21:
    store i32* %68 with i32 0;
    i32 %95 = load i32* %59;
    i32 %96 = sub i32 %66, i32 %95;
    i32 %97 = load i32* %60;
    i32 %98 = sub i32 %65, i32 %97;
    i32 %99 = add i32 %n, i32 2;
    i32 %100 = call (i32, i32, i32, [4 * [2 * i32]]*, i32*, i32*, i32*, i32*) -> i32 @search(i32 %96, i32 %98, i32 %99, [4 * [2 * i32]]* %0, i32* %1, i32* %2, i32* %3, i32* %4);
    i32 %101 = add i32 %100, i32 1;
    i32 %102 = smin i32 %56, i32 %101;
    store i32* %68 with i32 1;
    ubr ^while.header2;
}
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    i32* %y_1 = alloc i32, align 4;
    i32* %x_1 = alloc i32, align 4;
    i32* %h = alloc i32, align 4;
    i32* %w = alloc i32, align 4;
    [4 * [2 * i32]]* %step = alloc [4 * [2 * i32]], align 8;
    i32* %0 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 0][i64 0];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 0][i64 1];
    store i32* %1 with i32 0;
    i32* %2 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 1][i64 0];
    store i32* %2 with i32 -1;
    i32* %3 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 1][i64 1];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 2][i64 0];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 2][i64 1];
    store i32* %5 with i32 1;
    i32* %6 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 3][i64 0];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &([4 * [2 * i32]]* %step)[i64 0][i64 3][i64 1];
    store i32* %7 with i32 -1;
    store i32* %x_1 with i32 0;
    store i32* %y_1 with i32 0;
    [30 * [30 * i32]]* %8 = ptrcast [30 * [30 * i32]]* @a to [30 * [30 * i32]]*;
    ubr ^b;
  ^b:
    i32 %9 = phi [^entry, i32 0] [^b4, i32 %200];
    i32 %10 = phi [^entry, i32 0] [^b4, i32 %201];
    i32 %11 = call () -> i32 @getint();
    store i32* %w with i32 %11;
    i32 %12 = call () -> i32 @getint();
    store i32* %h with i32 %12;
    i1 %13 = icmp neq i32 %11, i32 0;
    cbr i1 %13(prob = 0.984615), ^b1, ^b2;
  ^b1:
    i32 %14 = phi [^b, i32 0] [^b1, i32 %136];
    [30 * i32]* %15 = getelementptr &([30 * [30 * i32]]* %8)[i64 0][i32 %14];
    i32* %16 = getelementptr &([30 * i32]* %15)[i64 0][i64 0];
    store i32* %16 with i32 1;
    i32* %17 = getelementptr &([30 * i32]* %15)[i64 0][i64 1];
    store i32* %17 with i32 1;
    i32* %18 = getelementptr &([30 * i32]* %15)[i64 0][i64 2];
    store i32* %18 with i32 1;
    i32* %19 = getelementptr &([30 * i32]* %15)[i64 0][i64 3];
    store i32* %19 with i32 1;
    i32* %20 = getelementptr &([30 * i32]* %15)[i64 0][i64 4];
    store i32* %20 with i32 1;
    i32* %21 = getelementptr &([30 * i32]* %15)[i64 0][i64 5];
    store i32* %21 with i32 1;
    i32* %22 = getelementptr &([30 * i32]* %15)[i64 0][i64 6];
    store i32* %22 with i32 1;
    i32* %23 = getelementptr &([30 * i32]* %15)[i64 0][i64 7];
    store i32* %23 with i32 1;
    i32* %24 = getelementptr &([30 * i32]* %15)[i64 0][i64 8];
    store i32* %24 with i32 1;
    i32* %25 = getelementptr &([30 * i32]* %15)[i64 0][i64 9];
    store i32* %25 with i32 1;
    i32* %26 = getelementptr &([30 * i32]* %15)[i64 0][i64 10];
    store i32* %26 with i32 1;
    i32* %27 = getelementptr &([30 * i32]* %15)[i64 0][i64 11];
    store i32* %27 with i32 1;
    i32* %28 = getelementptr &([30 * i32]* %15)[i64 0][i64 12];
    store i32* %28 with i32 1;
    i32* %29 = getelementptr &([30 * i32]* %15)[i64 0][i64 13];
    store i32* %29 with i32 1;
    i32* %30 = getelementptr &([30 * i32]* %15)[i64 0][i64 14];
    store i32* %30 with i32 1;
    i32* %31 = getelementptr &([30 * i32]* %15)[i64 0][i64 15];
    store i32* %31 with i32 1;
    i32* %32 = getelementptr &([30 * i32]* %15)[i64 0][i64 16];
    store i32* %32 with i32 1;
    i32* %33 = getelementptr &([30 * i32]* %15)[i64 0][i64 17];
    store i32* %33 with i32 1;
    i32* %34 = getelementptr &([30 * i32]* %15)[i64 0][i64 18];
    store i32* %34 with i32 1;
    i32* %35 = getelementptr &([30 * i32]* %15)[i64 0][i64 19];
    store i32* %35 with i32 1;
    i32* %36 = getelementptr &([30 * i32]* %15)[i64 0][i64 20];
    store i32* %36 with i32 1;
    i32* %37 = getelementptr &([30 * i32]* %15)[i64 0][i64 21];
    store i32* %37 with i32 1;
    i32* %38 = getelementptr &([30 * i32]* %15)[i64 0][i64 22];
    store i32* %38 with i32 1;
    i32* %39 = getelementptr &([30 * i32]* %15)[i64 0][i64 23];
    store i32* %39 with i32 1;
    i32* %40 = getelementptr &([30 * i32]* %15)[i64 0][i64 24];
    store i32* %40 with i32 1;
    i32* %41 = getelementptr &([30 * i32]* %15)[i64 0][i64 25];
    store i32* %41 with i32 1;
    i32* %42 = getelementptr &([30 * i32]* %15)[i64 0][i64 26];
    store i32* %42 with i32 1;
    i32* %43 = getelementptr &([30 * i32]* %15)[i64 0][i64 27];
    store i32* %43 with i32 1;
    i32* %44 = getelementptr &([30 * i32]* %15)[i64 0][i64 28];
    store i32* %44 with i32 1;
    i32* %45 = getelementptr &([30 * i32]* %15)[i64 0][i64 29];
    store i32* %45 with i32 1;
    i32* %46 = getelementptr &([30 * i32]* %15)[i64 1][i64 0];
    store i32* %46 with i32 1;
    i32* %47 = getelementptr &([30 * i32]* %15)[i64 1][i64 1];
    store i32* %47 with i32 1;
    i32* %48 = getelementptr &([30 * i32]* %15)[i64 1][i64 2];
    store i32* %48 with i32 1;
    i32* %49 = getelementptr &([30 * i32]* %15)[i64 1][i64 3];
    store i32* %49 with i32 1;
    i32* %50 = getelementptr &([30 * i32]* %15)[i64 1][i64 4];
    store i32* %50 with i32 1;
    i32* %51 = getelementptr &([30 * i32]* %15)[i64 1][i64 5];
    store i32* %51 with i32 1;
    i32* %52 = getelementptr &([30 * i32]* %15)[i64 1][i64 6];
    store i32* %52 with i32 1;
    i32* %53 = getelementptr &([30 * i32]* %15)[i64 1][i64 7];
    store i32* %53 with i32 1;
    i32* %54 = getelementptr &([30 * i32]* %15)[i64 1][i64 8];
    store i32* %54 with i32 1;
    i32* %55 = getelementptr &([30 * i32]* %15)[i64 1][i64 9];
    store i32* %55 with i32 1;
    i32* %56 = getelementptr &([30 * i32]* %15)[i64 1][i64 10];
    store i32* %56 with i32 1;
    i32* %57 = getelementptr &([30 * i32]* %15)[i64 1][i64 11];
    store i32* %57 with i32 1;
    i32* %58 = getelementptr &([30 * i32]* %15)[i64 1][i64 12];
    store i32* %58 with i32 1;
    i32* %59 = getelementptr &([30 * i32]* %15)[i64 1][i64 13];
    store i32* %59 with i32 1;
    i32* %60 = getelementptr &([30 * i32]* %15)[i64 1][i64 14];
    store i32* %60 with i32 1;
    i32* %61 = getelementptr &([30 * i32]* %15)[i64 1][i64 15];
    store i32* %61 with i32 1;
    i32* %62 = getelementptr &([30 * i32]* %15)[i64 1][i64 16];
    store i32* %62 with i32 1;
    i32* %63 = getelementptr &([30 * i32]* %15)[i64 1][i64 17];
    store i32* %63 with i32 1;
    i32* %64 = getelementptr &([30 * i32]* %15)[i64 1][i64 18];
    store i32* %64 with i32 1;
    i32* %65 = getelementptr &([30 * i32]* %15)[i64 1][i64 19];
    store i32* %65 with i32 1;
    i32* %66 = getelementptr &([30 * i32]* %15)[i64 1][i64 20];
    store i32* %66 with i32 1;
    i32* %67 = getelementptr &([30 * i32]* %15)[i64 1][i64 21];
    store i32* %67 with i32 1;
    i32* %68 = getelementptr &([30 * i32]* %15)[i64 1][i64 22];
    store i32* %68 with i32 1;
    i32* %69 = getelementptr &([30 * i32]* %15)[i64 1][i64 23];
    store i32* %69 with i32 1;
    i32* %70 = getelementptr &([30 * i32]* %15)[i64 1][i64 24];
    store i32* %70 with i32 1;
    i32* %71 = getelementptr &([30 * i32]* %15)[i64 1][i64 25];
    store i32* %71 with i32 1;
    i32* %72 = getelementptr &([30 * i32]* %15)[i64 1][i64 26];
    store i32* %72 with i32 1;
    i32* %73 = getelementptr &([30 * i32]* %15)[i64 1][i64 27];
    store i32* %73 with i32 1;
    i32* %74 = getelementptr &([30 * i32]* %15)[i64 1][i64 28];
    store i32* %74 with i32 1;
    i32* %75 = getelementptr &([30 * i32]* %15)[i64 1][i64 29];
    store i32* %75 with i32 1;
    i32* %76 = getelementptr &([30 * i32]* %15)[i64 2][i64 0];
    store i32* %76 with i32 1;
    i32* %77 = getelementptr &([30 * i32]* %15)[i64 2][i64 1];
    store i32* %77 with i32 1;
    i32* %78 = getelementptr &([30 * i32]* %15)[i64 2][i64 2];
    store i32* %78 with i32 1;
    i32* %79 = getelementptr &([30 * i32]* %15)[i64 2][i64 3];
    store i32* %79 with i32 1;
    i32* %80 = getelementptr &([30 * i32]* %15)[i64 2][i64 4];
    store i32* %80 with i32 1;
    i32* %81 = getelementptr &([30 * i32]* %15)[i64 2][i64 5];
    store i32* %81 with i32 1;
    i32* %82 = getelementptr &([30 * i32]* %15)[i64 2][i64 6];
    store i32* %82 with i32 1;
    i32* %83 = getelementptr &([30 * i32]* %15)[i64 2][i64 7];
    store i32* %83 with i32 1;
    i32* %84 = getelementptr &([30 * i32]* %15)[i64 2][i64 8];
    store i32* %84 with i32 1;
    i32* %85 = getelementptr &([30 * i32]* %15)[i64 2][i64 9];
    store i32* %85 with i32 1;
    i32* %86 = getelementptr &([30 * i32]* %15)[i64 2][i64 10];
    store i32* %86 with i32 1;
    i32* %87 = getelementptr &([30 * i32]* %15)[i64 2][i64 11];
    store i32* %87 with i32 1;
    i32* %88 = getelementptr &([30 * i32]* %15)[i64 2][i64 12];
    store i32* %88 with i32 1;
    i32* %89 = getelementptr &([30 * i32]* %15)[i64 2][i64 13];
    store i32* %89 with i32 1;
    i32* %90 = getelementptr &([30 * i32]* %15)[i64 2][i64 14];
    store i32* %90 with i32 1;
    i32* %91 = getelementptr &([30 * i32]* %15)[i64 2][i64 15];
    store i32* %91 with i32 1;
    i32* %92 = getelementptr &([30 * i32]* %15)[i64 2][i64 16];
    store i32* %92 with i32 1;
    i32* %93 = getelementptr &([30 * i32]* %15)[i64 2][i64 17];
    store i32* %93 with i32 1;
    i32* %94 = getelementptr &([30 * i32]* %15)[i64 2][i64 18];
    store i32* %94 with i32 1;
    i32* %95 = getelementptr &([30 * i32]* %15)[i64 2][i64 19];
    store i32* %95 with i32 1;
    i32* %96 = getelementptr &([30 * i32]* %15)[i64 2][i64 20];
    store i32* %96 with i32 1;
    i32* %97 = getelementptr &([30 * i32]* %15)[i64 2][i64 21];
    store i32* %97 with i32 1;
    i32* %98 = getelementptr &([30 * i32]* %15)[i64 2][i64 22];
    store i32* %98 with i32 1;
    i32* %99 = getelementptr &([30 * i32]* %15)[i64 2][i64 23];
    store i32* %99 with i32 1;
    i32* %100 = getelementptr &([30 * i32]* %15)[i64 2][i64 24];
    store i32* %100 with i32 1;
    i32* %101 = getelementptr &([30 * i32]* %15)[i64 2][i64 25];
    store i32* %101 with i32 1;
    i32* %102 = getelementptr &([30 * i32]* %15)[i64 2][i64 26];
    store i32* %102 with i32 1;
    i32* %103 = getelementptr &([30 * i32]* %15)[i64 2][i64 27];
    store i32* %103 with i32 1;
    i32* %104 = getelementptr &([30 * i32]* %15)[i64 2][i64 28];
    store i32* %104 with i32 1;
    i32* %105 = getelementptr &([30 * i32]* %15)[i64 2][i64 29];
    store i32* %105 with i32 1;
    i32* %106 = getelementptr &([30 * i32]* %15)[i64 3][i64 0];
    store i32* %106 with i32 1;
    i32* %107 = getelementptr &([30 * i32]* %15)[i64 3][i64 1];
    store i32* %107 with i32 1;
    i32* %108 = getelementptr &([30 * i32]* %15)[i64 3][i64 2];
    store i32* %108 with i32 1;
    i32* %109 = getelementptr &([30 * i32]* %15)[i64 3][i64 3];
    store i32* %109 with i32 1;
    i32* %110 = getelementptr &([30 * i32]* %15)[i64 3][i64 4];
    store i32* %110 with i32 1;
    i32* %111 = getelementptr &([30 * i32]* %15)[i64 3][i64 5];
    store i32* %111 with i32 1;
    i32* %112 = getelementptr &([30 * i32]* %15)[i64 3][i64 6];
    store i32* %112 with i32 1;
    i32* %113 = getelementptr &([30 * i32]* %15)[i64 3][i64 7];
    store i32* %113 with i32 1;
    i32* %114 = getelementptr &([30 * i32]* %15)[i64 3][i64 8];
    store i32* %114 with i32 1;
    i32* %115 = getelementptr &([30 * i32]* %15)[i64 3][i64 9];
    store i32* %115 with i32 1;
    i32* %116 = getelementptr &([30 * i32]* %15)[i64 3][i64 10];
    store i32* %116 with i32 1;
    i32* %117 = getelementptr &([30 * i32]* %15)[i64 3][i64 11];
    store i32* %117 with i32 1;
    i32* %118 = getelementptr &([30 * i32]* %15)[i64 3][i64 12];
    store i32* %118 with i32 1;
    i32* %119 = getelementptr &([30 * i32]* %15)[i64 3][i64 13];
    store i32* %119 with i32 1;
    i32* %120 = getelementptr &([30 * i32]* %15)[i64 3][i64 14];
    store i32* %120 with i32 1;
    i32* %121 = getelementptr &([30 * i32]* %15)[i64 3][i64 15];
    store i32* %121 with i32 1;
    i32* %122 = getelementptr &([30 * i32]* %15)[i64 3][i64 16];
    store i32* %122 with i32 1;
    i32* %123 = getelementptr &([30 * i32]* %15)[i64 3][i64 17];
    store i32* %123 with i32 1;
    i32* %124 = getelementptr &([30 * i32]* %15)[i64 3][i64 18];
    store i32* %124 with i32 1;
    i32* %125 = getelementptr &([30 * i32]* %15)[i64 3][i64 19];
    store i32* %125 with i32 1;
    i32* %126 = getelementptr &([30 * i32]* %15)[i64 3][i64 20];
    store i32* %126 with i32 1;
    i32* %127 = getelementptr &([30 * i32]* %15)[i64 3][i64 21];
    store i32* %127 with i32 1;
    i32* %128 = getelementptr &([30 * i32]* %15)[i64 3][i64 22];
    store i32* %128 with i32 1;
    i32* %129 = getelementptr &([30 * i32]* %15)[i64 3][i64 23];
    store i32* %129 with i32 1;
    i32* %130 = getelementptr &([30 * i32]* %15)[i64 3][i64 24];
    store i32* %130 with i32 1;
    i32* %131 = getelementptr &([30 * i32]* %15)[i64 3][i64 25];
    store i32* %131 with i32 1;
    i32* %132 = getelementptr &([30 * i32]* %15)[i64 3][i64 26];
    store i32* %132 with i32 1;
    i32* %133 = getelementptr &([30 * i32]* %15)[i64 3][i64 27];
    store i32* %133 with i32 1;
    i32* %134 = getelementptr &([30 * i32]* %15)[i64 3][i64 28];
    store i32* %134 with i32 1;
    i32* %135 = getelementptr &([30 * i32]* %15)[i64 3][i64 29];
    store i32* %135 with i32 1;
    i32 %136 = add i32 %14, i32 4;
    i1 %137 = icmp slt i32 %136, i32 28;
    cbr i1 %137(prob = 0.857143), ^b1, ^b3;
  ^b2:
    ret i32 0;
  ^b3:
    i32* %138 = getelementptr &([30 * i32]* %15)[i64 4][i64 0];
    store i32* %138 with i32 1;
    i32* %139 = getelementptr &([30 * i32]* %15)[i64 4][i64 1];
    store i32* %139 with i32 1;
    i32* %140 = getelementptr &([30 * i32]* %15)[i64 4][i64 2];
    store i32* %140 with i32 1;
    i32* %141 = getelementptr &([30 * i32]* %15)[i64 4][i64 3];
    store i32* %141 with i32 1;
    i32* %142 = getelementptr &([30 * i32]* %15)[i64 4][i64 4];
    store i32* %142 with i32 1;
    i32* %143 = getelementptr &([30 * i32]* %15)[i64 4][i64 5];
    store i32* %143 with i32 1;
    i32* %144 = getelementptr &([30 * i32]* %15)[i64 4][i64 6];
    store i32* %144 with i32 1;
    i32* %145 = getelementptr &([30 * i32]* %15)[i64 4][i64 7];
    store i32* %145 with i32 1;
    i32* %146 = getelementptr &([30 * i32]* %15)[i64 4][i64 8];
    store i32* %146 with i32 1;
    i32* %147 = getelementptr &([30 * i32]* %15)[i64 4][i64 9];
    store i32* %147 with i32 1;
    i32* %148 = getelementptr &([30 * i32]* %15)[i64 4][i64 10];
    store i32* %148 with i32 1;
    i32* %149 = getelementptr &([30 * i32]* %15)[i64 4][i64 11];
    store i32* %149 with i32 1;
    i32* %150 = getelementptr &([30 * i32]* %15)[i64 4][i64 12];
    store i32* %150 with i32 1;
    i32* %151 = getelementptr &([30 * i32]* %15)[i64 4][i64 13];
    store i32* %151 with i32 1;
    i32* %152 = getelementptr &([30 * i32]* %15)[i64 4][i64 14];
    store i32* %152 with i32 1;
    i32* %153 = getelementptr &([30 * i32]* %15)[i64 4][i64 15];
    store i32* %153 with i32 1;
    i32* %154 = getelementptr &([30 * i32]* %15)[i64 4][i64 16];
    store i32* %154 with i32 1;
    i32* %155 = getelementptr &([30 * i32]* %15)[i64 4][i64 17];
    store i32* %155 with i32 1;
    i32* %156 = getelementptr &([30 * i32]* %15)[i64 4][i64 18];
    store i32* %156 with i32 1;
    i32* %157 = getelementptr &([30 * i32]* %15)[i64 4][i64 19];
    store i32* %157 with i32 1;
    i32* %158 = getelementptr &([30 * i32]* %15)[i64 4][i64 20];
    store i32* %158 with i32 1;
    i32* %159 = getelementptr &([30 * i32]* %15)[i64 4][i64 21];
    store i32* %159 with i32 1;
    i32* %160 = getelementptr &([30 * i32]* %15)[i64 4][i64 22];
    store i32* %160 with i32 1;
    i32* %161 = getelementptr &([30 * i32]* %15)[i64 4][i64 23];
    store i32* %161 with i32 1;
    i32* %162 = getelementptr &([30 * i32]* %15)[i64 4][i64 24];
    store i32* %162 with i32 1;
    i32* %163 = getelementptr &([30 * i32]* %15)[i64 4][i64 25];
    store i32* %163 with i32 1;
    i32* %164 = getelementptr &([30 * i32]* %15)[i64 4][i64 26];
    store i32* %164 with i32 1;
    i32* %165 = getelementptr &([30 * i32]* %15)[i64 4][i64 27];
    store i32* %165 with i32 1;
    i32* %166 = getelementptr &([30 * i32]* %15)[i64 4][i64 28];
    store i32* %166 with i32 1;
    i32* %167 = getelementptr &([30 * i32]* %15)[i64 4][i64 29];
    store i32* %167 with i32 1;
    i32* %168 = getelementptr &([30 * i32]* %15)[i64 5][i64 0];
    store i32* %168 with i32 1;
    i32* %169 = getelementptr &([30 * i32]* %15)[i64 5][i64 1];
    store i32* %169 with i32 1;
    i32* %170 = getelementptr &([30 * i32]* %15)[i64 5][i64 2];
    store i32* %170 with i32 1;
    i32* %171 = getelementptr &([30 * i32]* %15)[i64 5][i64 3];
    store i32* %171 with i32 1;
    i32* %172 = getelementptr &([30 * i32]* %15)[i64 5][i64 4];
    store i32* %172 with i32 1;
    i32* %173 = getelementptr &([30 * i32]* %15)[i64 5][i64 5];
    store i32* %173 with i32 1;
    i32* %174 = getelementptr &([30 * i32]* %15)[i64 5][i64 6];
    store i32* %174 with i32 1;
    i32* %175 = getelementptr &([30 * i32]* %15)[i64 5][i64 7];
    store i32* %175 with i32 1;
    i32* %176 = getelementptr &([30 * i32]* %15)[i64 5][i64 8];
    store i32* %176 with i32 1;
    i32* %177 = getelementptr &([30 * i32]* %15)[i64 5][i64 9];
    store i32* %177 with i32 1;
    i32* %178 = getelementptr &([30 * i32]* %15)[i64 5][i64 10];
    store i32* %178 with i32 1;
    i32* %179 = getelementptr &([30 * i32]* %15)[i64 5][i64 11];
    store i32* %179 with i32 1;
    i32* %180 = getelementptr &([30 * i32]* %15)[i64 5][i64 12];
    store i32* %180 with i32 1;
    i32* %181 = getelementptr &([30 * i32]* %15)[i64 5][i64 13];
    store i32* %181 with i32 1;
    i32* %182 = getelementptr &([30 * i32]* %15)[i64 5][i64 14];
    store i32* %182 with i32 1;
    i32* %183 = getelementptr &([30 * i32]* %15)[i64 5][i64 15];
    store i32* %183 with i32 1;
    i32* %184 = getelementptr &([30 * i32]* %15)[i64 5][i64 16];
    store i32* %184 with i32 1;
    i32* %185 = getelementptr &([30 * i32]* %15)[i64 5][i64 17];
    store i32* %185 with i32 1;
    i32* %186 = getelementptr &([30 * i32]* %15)[i64 5][i64 18];
    store i32* %186 with i32 1;
    i32* %187 = getelementptr &([30 * i32]* %15)[i64 5][i64 19];
    store i32* %187 with i32 1;
    i32* %188 = getelementptr &([30 * i32]* %15)[i64 5][i64 20];
    store i32* %188 with i32 1;
    i32* %189 = getelementptr &([30 * i32]* %15)[i64 5][i64 21];
    store i32* %189 with i32 1;
    i32* %190 = getelementptr &([30 * i32]* %15)[i64 5][i64 22];
    store i32* %190 with i32 1;
    i32* %191 = getelementptr &([30 * i32]* %15)[i64 5][i64 23];
    store i32* %191 with i32 1;
    i32* %192 = getelementptr &([30 * i32]* %15)[i64 5][i64 24];
    store i32* %192 with i32 1;
    i32* %193 = getelementptr &([30 * i32]* %15)[i64 5][i64 25];
    store i32* %193 with i32 1;
    i32* %194 = getelementptr &([30 * i32]* %15)[i64 5][i64 26];
    store i32* %194 with i32 1;
    i32* %195 = getelementptr &([30 * i32]* %15)[i64 5][i64 27];
    store i32* %195 with i32 1;
    i32* %196 = getelementptr &([30 * i32]* %15)[i64 5][i64 28];
    store i32* %196 with i32 1;
    i32* %197 = getelementptr &([30 * i32]* %15)[i64 5][i64 29];
    store i32* %197 with i32 1;
    i32 %198 = load i32* %h;
    i1 %199 = icmp sgt i32 %198, i32 0;
    cbr i1 %199(prob = 0.984615), ^while.body, ^b4;
  ^b4:
    i32 %200 = phi [^b3, i32 %9] [^b5, i32 %217];
    i32 %201 = phi [^b3, i32 %10] [^b5, i32 %218];
    i32 %202 = call (i32, i32, i32, [4 * [2 * i32]]*, i32*, i32*, i32*, i32*) -> i32 @search(i32 %201, i32 %200, i32 1, [4 * [2 * i32]]* %step, i32* %w, i32* %h, i32* %x_1, i32* %y_1);
    i1 %203 = icmp slt i32 %202, i32 11;
    i32 %204 = select i1 %203 ? i32 %202 : i32 -1;
    call (i32) -> void @putint(i32 %204);
    call (i32) -> void @putch(i32 10);
    ubr ^b;
  ^while.body:
    i32 %205 = phi [^b3, i32 %9] [^b5, i32 %217];
    i32 %206 = phi [^b3, i32 %10] [^b5, i32 %218];
    i32 %207 = phi [^b3, i32 1] [^b5, i32 %219];
    i32 %208 = load i32* %w;
    i1 %209 = icmp sgt i32 %208, i32 0;
    cbr i1 %209(prob = 0.984615), ^while.body1, ^b5;
  ^while.body1:
    i32 %210 = phi [^while.body, i32 %205] [^b6, i32 %222];
    i32 %211 = phi [^while.body, i32 %206] [^b6, i32 %223];
    i32 %212 = phi [^while.body, i32 1] [^b6, i32 %224];
    i32 %213 = call () -> i32 @getint();
    [30 * i32]* %214 = getelementptr &([30 * [30 * i32]]* %8)[i64 0][i32 %212];
    i32* %215 = getelementptr &([30 * i32]* %214)[i64 0][i32 %207];
    store i32* %215 with i32 %213;
    i1 %216 = icmp eq i32 %213, i32 2;
    cbr i1 %216(prob = 0.5), ^b6, ^if.else;
  ^b5:
    i32 %217 = phi [^while.body, i32 %205] [^b6, i32 %222];
    i32 %218 = phi [^while.body, i32 %206] [^b6, i32 %223];
    i32 %219 = add i32 %207, i32 1;
    i32 %220 = load i32* %h;
    i1 %221 = icmp sle i32 %219, i32 %220;
    cbr i1 %221(prob = 0.984615), ^while.body, ^b4;
  ^b6:
    i32 %222 = phi [^while.body1, i32 %212] [^if.else, i32 %210] [^if.then, i32 %210];
    i32 %223 = phi [^while.body1, i32 %207] [^if.else, i32 %211] [^if.then, i32 %211];
    i32 %224 = add i32 %212, i32 1;
    i32 %225 = load i32* %w;
    i1 %226 = icmp sle i32 %224, i32 %225;
    cbr i1 %226(prob = 0.984615), ^while.body1, ^b5;
  ^if.else:
    i1 %227 = icmp eq i32 %213, i32 3;
    cbr i1 %227(prob = 0.5), ^if.then, ^b6;
  ^if.then:
    store i32* %x_1 with i32 %207;
    store i32* %y_1 with i32 %212;
    ubr ^b6;
}
