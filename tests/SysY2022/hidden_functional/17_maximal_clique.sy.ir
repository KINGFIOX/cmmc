internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal [30 * [30 * i32]]* @graph;
internal func @maxCliques(i32 %k, [30 * i32]* %0, i32 %1) -> i32 {
^entry:
    i32* %2 = getelementptr &([30 * i32]* %0)[i64 0][i32 %k];
    i32 %3 = add i32 %k, i32 1;
    ubr ^while.header;
^while.header:
    i32 %4 = phi [^entry, i32 0] [^b2, i32 %15];
    i32 %5 = phi [^entry, i32 1] [^b2, i32 %16];
    i1 %6 = scmp le i32 %5, i32 %1;
    cbr i1 %6(prob = 0.97), ^while.body, ^b;
^while.body:
    store i32* %2 with i32 %5;
    ubr ^while.header1;
^b:
    ret i32 %4;
^while.header1:
    i32 %7 = phi [^while.body, i32 1] [^while.header2, i32 %10];
    i1 %8 = scmp lt i32 %7, i32 %3;
    cbr i1 %8(prob = 0.97), ^while.body1, ^b1;
^while.body1:
    i32* %9 = getelementptr &([30 * i32]* %0)[i64 0][i32 %7];
    i32 %10 = add i32 %7, i32 1;
    ubr ^while.header2;
^b1:
    i32 %11 = phi [^while.header1, i32 1] [^while.body2, i32 0];
    i1 %12 = scmp neq i32 %11, i32 0;
    cbr i1 %12(prob = 0.5), ^if.then, ^b2;
^while.header2:
    i32 %13 = phi [^while.body1, i32 %10] [^b3, i32 %28];
    i1 %14 = scmp lt i32 %13, i32 %3;
    cbr i1 %14(prob = 0.97), ^while.body2, ^while.header1;
^b2:
    i32 %15 = phi [^b1, i32 %4] [^if.then, i32 %19] [^indirect, i32 %18];
    i32 %16 = add i32 %5, i32 1;
    ubr ^while.header;
^if.then:
    i1 %17 = scmp gt i32 %k, i32 %4;
    i32 %18 = select i1 %17 ? i32 %k : i32 %4;
    i32 %19 = call (i32, [30 * i32]*, i32) -> i32 @maxCliques(i32 %3, [30 * i32]* %0, i32 %1);
    i1 %20 = scmp gt i32 %19, i32 %18;
    cbr i1 %20(prob = 0.5), ^b2, ^indirect;
^while.body2:
    i32 %21 = load i32* %9;
    [30 * i32]* %22 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %21];
    i32* %23 = getelementptr &([30 * i32]* %0)[i64 0][i32 %13];
    i32 %24 = load i32* %23;
    i32* %25 = getelementptr &([30 * i32]* %22)[i64 0][i32 %24];
    i32 %26 = load i32* %25;
    i1 %27 = scmp eq i32 %26, i32 0;
    cbr i1 %27(prob = 0.5), ^b1, ^b3;
^indirect:
    ubr ^b2;
^b3:
    i32 %28 = add i32 %13, i32 1;
    ubr ^while.header2;
}
func @main() -> i32 { NoRecurse Entry } {
^entry:
    i32* %n = alloc i32;
    [30 * i32]* %store = alloc [30 * i32];
    [600 * [2 * i32]]* %edges = alloc [600 * [2 * i32]];
    i32* %0 = getelementptr &([30 * i32]* %store)[i64 0][i64 0];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([30 * i32]* %store)[i64 0][i64 1];
    store i32* %1 with i32 0;
    i32* %2 = getelementptr &([30 * i32]* %store)[i64 0][i64 2];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &([30 * i32]* %store)[i64 0][i64 3];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([30 * i32]* %store)[i64 0][i64 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([30 * i32]* %store)[i64 0][i64 5];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([30 * i32]* %store)[i64 0][i64 6];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &([30 * i32]* %store)[i64 0][i64 7];
    store i32* %7 with i32 0;
    i32* %8 = getelementptr &([30 * i32]* %store)[i64 0][i64 8];
    store i32* %8 with i32 0;
    i32* %9 = getelementptr &([30 * i32]* %store)[i64 0][i64 9];
    store i32* %9 with i32 0;
    i32* %10 = getelementptr &([30 * i32]* %store)[i64 0][i64 10];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &([30 * i32]* %store)[i64 0][i64 11];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &([30 * i32]* %store)[i64 0][i64 12];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &([30 * i32]* %store)[i64 0][i64 13];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &([30 * i32]* %store)[i64 0][i64 14];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &([30 * i32]* %store)[i64 0][i64 15];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &([30 * i32]* %store)[i64 0][i64 16];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &([30 * i32]* %store)[i64 0][i64 17];
    store i32* %17 with i32 0;
    i32* %18 = getelementptr &([30 * i32]* %store)[i64 0][i64 18];
    store i32* %18 with i32 0;
    i32* %19 = getelementptr &([30 * i32]* %store)[i64 0][i64 19];
    store i32* %19 with i32 0;
    i32* %20 = getelementptr &([30 * i32]* %store)[i64 0][i64 20];
    store i32* %20 with i32 0;
    i32* %21 = getelementptr &([30 * i32]* %store)[i64 0][i64 21];
    store i32* %21 with i32 0;
    i32* %22 = getelementptr &([30 * i32]* %store)[i64 0][i64 22];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &([30 * i32]* %store)[i64 0][i64 23];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &([30 * i32]* %store)[i64 0][i64 24];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &([30 * i32]* %store)[i64 0][i64 25];
    store i32* %25 with i32 0;
    i32* %26 = getelementptr &([30 * i32]* %store)[i64 0][i64 26];
    store i32* %26 with i32 0;
    i32* %27 = getelementptr &([30 * i32]* %store)[i64 0][i64 27];
    store i32* %27 with i32 0;
    i32* %28 = getelementptr &([30 * i32]* %store)[i64 0][i64 28];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([30 * i32]* %store)[i64 0][i64 29];
    store i32* %29 with i32 0;
    i32 %30 = call () -> i32 @getint();
    store i32* %n with i32 %30;
    i32 %31 = call () -> i32 @getint();
    i1 %32 = scmp gt i32 %31, i32 0;
    cbr i1 %32(prob = 0.97), ^while.body, ^b;
^while.body:
    i32 %33 = phi [^entry, i32 0] [^while.body, i32 %39];
    [2 * i32]* %34 = getelementptr &([600 * [2 * i32]]* %edges)[i64 0][i32 %33];
    i32* %35 = getelementptr &([2 * i32]* %34)[i64 0][i64 0];
    i32 %36 = call () -> i32 @getint();
    store i32* %35 with i32 %36;
    i32* %37 = getelementptr &([2 * i32]* %34)[i64 0][i64 1];
    i32 %38 = call () -> i32 @getint();
    store i32* %37 with i32 %38;
    i32 %39 = add i32 %33, i32 1;
    i1 %40 = scmp lt i32 %39, i32 %31;
    cbr i1 %40(prob = 0.97), ^while.body, ^b;
^b:
    cbr i1 %32(prob = 0.97), ^super.header, ^b1;
^super.header:
    i32 %41 = phi [^b, i32 0] [^while.body1, i32 %42];
    i32 %42 = add i32 %41, i32 16;
    i1 %43 = scmp lt i32 %42, i32 %31;
    cbr i1 %43(prob = 0.67), ^while.body1, ^super.header1;
^b1:
    i32 %44 = call (i32, [30 * i32]*, i32*) -> i32 @maxCliques_wrapper(i32 1, [30 * i32]* %store, i32* %n);
    call (i32) -> void @putint(i32 %44);
    ret i32 0;
^while.body1:
    [2 * i32]* %45 = getelementptr &([600 * [2 * i32]]* %edges)[i64 0][i32 %41];
    i32* %46 = getelementptr &([2 * i32]* %45)[i64 0][i64 0];
    i32 %47 = load i32* %46;
    [30 * i32]* %48 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %47];
    i32* %49 = getelementptr &([2 * i32]* %45)[i64 0][i64 1];
    i32 %50 = load i32* %49;
    i32* %51 = getelementptr &([30 * i32]* %48)[i64 0][i32 %50];
    store i32* %51 with i32 1;
    [30 * i32]* %52 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %50];
    i32* %53 = getelementptr &([30 * i32]* %52)[i64 0][i32 %47];
    store i32* %53 with i32 1;
    i32* %54 = getelementptr &([2 * i32]* %45)[i64 1][i64 0];
    i32 %55 = load i32* %54;
    [30 * i32]* %56 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %55];
    i32* %57 = getelementptr &([2 * i32]* %45)[i64 1][i64 1];
    i32 %58 = load i32* %57;
    i32* %59 = getelementptr &([30 * i32]* %56)[i64 0][i32 %58];
    store i32* %59 with i32 1;
    [30 * i32]* %60 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %58];
    i32* %61 = getelementptr &([30 * i32]* %60)[i64 0][i32 %55];
    store i32* %61 with i32 1;
    i32* %62 = getelementptr &([2 * i32]* %45)[i64 2][i64 0];
    i32 %63 = load i32* %62;
    [30 * i32]* %64 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %63];
    i32* %65 = getelementptr &([2 * i32]* %45)[i64 2][i64 1];
    i32 %66 = load i32* %65;
    i32* %67 = getelementptr &([30 * i32]* %64)[i64 0][i32 %66];
    store i32* %67 with i32 1;
    [30 * i32]* %68 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %66];
    i32* %69 = getelementptr &([30 * i32]* %68)[i64 0][i32 %63];
    store i32* %69 with i32 1;
    i32* %70 = getelementptr &([2 * i32]* %45)[i64 3][i64 0];
    i32 %71 = load i32* %70;
    [30 * i32]* %72 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %71];
    i32* %73 = getelementptr &([2 * i32]* %45)[i64 3][i64 1];
    i32 %74 = load i32* %73;
    i32* %75 = getelementptr &([30 * i32]* %72)[i64 0][i32 %74];
    store i32* %75 with i32 1;
    [30 * i32]* %76 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %74];
    i32* %77 = getelementptr &([30 * i32]* %76)[i64 0][i32 %71];
    store i32* %77 with i32 1;
    i32* %78 = getelementptr &([2 * i32]* %45)[i64 4][i64 0];
    i32 %79 = load i32* %78;
    [30 * i32]* %80 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %79];
    i32* %81 = getelementptr &([2 * i32]* %45)[i64 4][i64 1];
    i32 %82 = load i32* %81;
    i32* %83 = getelementptr &([30 * i32]* %80)[i64 0][i32 %82];
    store i32* %83 with i32 1;
    [30 * i32]* %84 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %82];
    i32* %85 = getelementptr &([30 * i32]* %84)[i64 0][i32 %79];
    store i32* %85 with i32 1;
    i32* %86 = getelementptr &([2 * i32]* %45)[i64 5][i64 0];
    i32 %87 = load i32* %86;
    [30 * i32]* %88 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %87];
    i32* %89 = getelementptr &([2 * i32]* %45)[i64 5][i64 1];
    i32 %90 = load i32* %89;
    i32* %91 = getelementptr &([30 * i32]* %88)[i64 0][i32 %90];
    store i32* %91 with i32 1;
    [30 * i32]* %92 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %90];
    i32* %93 = getelementptr &([30 * i32]* %92)[i64 0][i32 %87];
    store i32* %93 with i32 1;
    i32* %94 = getelementptr &([2 * i32]* %45)[i64 6][i64 0];
    i32 %95 = load i32* %94;
    [30 * i32]* %96 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %95];
    i32* %97 = getelementptr &([2 * i32]* %45)[i64 6][i64 1];
    i32 %98 = load i32* %97;
    i32* %99 = getelementptr &([30 * i32]* %96)[i64 0][i32 %98];
    store i32* %99 with i32 1;
    [30 * i32]* %100 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %98];
    i32* %101 = getelementptr &([30 * i32]* %100)[i64 0][i32 %95];
    store i32* %101 with i32 1;
    i32* %102 = getelementptr &([2 * i32]* %45)[i64 7][i64 0];
    i32 %103 = load i32* %102;
    [30 * i32]* %104 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %103];
    i32* %105 = getelementptr &([2 * i32]* %45)[i64 7][i64 1];
    i32 %106 = load i32* %105;
    i32* %107 = getelementptr &([30 * i32]* %104)[i64 0][i32 %106];
    store i32* %107 with i32 1;
    [30 * i32]* %108 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %106];
    i32* %109 = getelementptr &([30 * i32]* %108)[i64 0][i32 %103];
    store i32* %109 with i32 1;
    i32* %110 = getelementptr &([2 * i32]* %45)[i64 8][i64 0];
    i32 %111 = load i32* %110;
    [30 * i32]* %112 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %111];
    i32* %113 = getelementptr &([2 * i32]* %45)[i64 8][i64 1];
    i32 %114 = load i32* %113;
    i32* %115 = getelementptr &([30 * i32]* %112)[i64 0][i32 %114];
    store i32* %115 with i32 1;
    [30 * i32]* %116 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %114];
    i32* %117 = getelementptr &([30 * i32]* %116)[i64 0][i32 %111];
    store i32* %117 with i32 1;
    i32* %118 = getelementptr &([2 * i32]* %45)[i64 9][i64 0];
    i32 %119 = load i32* %118;
    [30 * i32]* %120 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %119];
    i32* %121 = getelementptr &([2 * i32]* %45)[i64 9][i64 1];
    i32 %122 = load i32* %121;
    i32* %123 = getelementptr &([30 * i32]* %120)[i64 0][i32 %122];
    store i32* %123 with i32 1;
    [30 * i32]* %124 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %122];
    i32* %125 = getelementptr &([30 * i32]* %124)[i64 0][i32 %119];
    store i32* %125 with i32 1;
    i32* %126 = getelementptr &([2 * i32]* %45)[i64 10][i64 0];
    i32 %127 = load i32* %126;
    [30 * i32]* %128 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %127];
    i32* %129 = getelementptr &([2 * i32]* %45)[i64 10][i64 1];
    i32 %130 = load i32* %129;
    i32* %131 = getelementptr &([30 * i32]* %128)[i64 0][i32 %130];
    store i32* %131 with i32 1;
    [30 * i32]* %132 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %130];
    i32* %133 = getelementptr &([30 * i32]* %132)[i64 0][i32 %127];
    store i32* %133 with i32 1;
    i32* %134 = getelementptr &([2 * i32]* %45)[i64 11][i64 0];
    i32 %135 = load i32* %134;
    [30 * i32]* %136 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %135];
    i32* %137 = getelementptr &([2 * i32]* %45)[i64 11][i64 1];
    i32 %138 = load i32* %137;
    i32* %139 = getelementptr &([30 * i32]* %136)[i64 0][i32 %138];
    store i32* %139 with i32 1;
    [30 * i32]* %140 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %138];
    i32* %141 = getelementptr &([30 * i32]* %140)[i64 0][i32 %135];
    store i32* %141 with i32 1;
    i32* %142 = getelementptr &([2 * i32]* %45)[i64 12][i64 0];
    i32 %143 = load i32* %142;
    [30 * i32]* %144 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %143];
    i32* %145 = getelementptr &([2 * i32]* %45)[i64 12][i64 1];
    i32 %146 = load i32* %145;
    i32* %147 = getelementptr &([30 * i32]* %144)[i64 0][i32 %146];
    store i32* %147 with i32 1;
    [30 * i32]* %148 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %146];
    i32* %149 = getelementptr &([30 * i32]* %148)[i64 0][i32 %143];
    store i32* %149 with i32 1;
    i32* %150 = getelementptr &([2 * i32]* %45)[i64 13][i64 0];
    i32 %151 = load i32* %150;
    [30 * i32]* %152 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %151];
    i32* %153 = getelementptr &([2 * i32]* %45)[i64 13][i64 1];
    i32 %154 = load i32* %153;
    i32* %155 = getelementptr &([30 * i32]* %152)[i64 0][i32 %154];
    store i32* %155 with i32 1;
    [30 * i32]* %156 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %154];
    i32* %157 = getelementptr &([30 * i32]* %156)[i64 0][i32 %151];
    store i32* %157 with i32 1;
    i32* %158 = getelementptr &([2 * i32]* %45)[i64 14][i64 0];
    i32 %159 = load i32* %158;
    [30 * i32]* %160 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %159];
    i32* %161 = getelementptr &([2 * i32]* %45)[i64 14][i64 1];
    i32 %162 = load i32* %161;
    i32* %163 = getelementptr &([30 * i32]* %160)[i64 0][i32 %162];
    store i32* %163 with i32 1;
    [30 * i32]* %164 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %162];
    i32* %165 = getelementptr &([30 * i32]* %164)[i64 0][i32 %159];
    store i32* %165 with i32 1;
    i32* %166 = getelementptr &([2 * i32]* %45)[i64 15][i64 0];
    i32 %167 = load i32* %166;
    [30 * i32]* %168 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %167];
    i32* %169 = getelementptr &([2 * i32]* %45)[i64 15][i64 1];
    i32 %170 = load i32* %169;
    i32* %171 = getelementptr &([30 * i32]* %168)[i64 0][i32 %170];
    store i32* %171 with i32 1;
    [30 * i32]* %172 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %170];
    i32* %173 = getelementptr &([30 * i32]* %172)[i64 0][i32 %167];
    store i32* %173 with i32 1;
    ubr ^super.header;
^super.header1:
    i32 %174 = phi [^super.header, i32 %41] [^while.body2, i32 %175];
    i32 %175 = add i32 %174, i32 16;
    i1 %176 = scmp lt i32 %175, i32 %31;
    cbr i1 %176(prob = 0.67), ^while.body2, ^while.body3;
^while.body2:
    [2 * i32]* %177 = getelementptr &([600 * [2 * i32]]* %edges)[i64 0][i32 %174];
    i32* %178 = getelementptr &([2 * i32]* %177)[i64 0][i64 0];
    i32 %179 = load i32* %178;
    [30 * i32]* %180 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %179];
    i32* %181 = getelementptr &([2 * i32]* %177)[i64 0][i64 1];
    i32 %182 = load i32* %181;
    i32* %183 = getelementptr &([30 * i32]* %180)[i64 0][i32 %182];
    store i32* %183 with i32 1;
    [30 * i32]* %184 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %182];
    i32* %185 = getelementptr &([30 * i32]* %184)[i64 0][i32 %179];
    store i32* %185 with i32 1;
    i32* %186 = getelementptr &([2 * i32]* %177)[i64 1][i64 0];
    i32 %187 = load i32* %186;
    [30 * i32]* %188 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %187];
    i32* %189 = getelementptr &([2 * i32]* %177)[i64 1][i64 1];
    i32 %190 = load i32* %189;
    i32* %191 = getelementptr &([30 * i32]* %188)[i64 0][i32 %190];
    store i32* %191 with i32 1;
    [30 * i32]* %192 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %190];
    i32* %193 = getelementptr &([30 * i32]* %192)[i64 0][i32 %187];
    store i32* %193 with i32 1;
    i32* %194 = getelementptr &([2 * i32]* %177)[i64 2][i64 0];
    i32 %195 = load i32* %194;
    [30 * i32]* %196 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %195];
    i32* %197 = getelementptr &([2 * i32]* %177)[i64 2][i64 1];
    i32 %198 = load i32* %197;
    i32* %199 = getelementptr &([30 * i32]* %196)[i64 0][i32 %198];
    store i32* %199 with i32 1;
    [30 * i32]* %200 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %198];
    i32* %201 = getelementptr &([30 * i32]* %200)[i64 0][i32 %195];
    store i32* %201 with i32 1;
    i32* %202 = getelementptr &([2 * i32]* %177)[i64 3][i64 0];
    i32 %203 = load i32* %202;
    [30 * i32]* %204 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %203];
    i32* %205 = getelementptr &([2 * i32]* %177)[i64 3][i64 1];
    i32 %206 = load i32* %205;
    i32* %207 = getelementptr &([30 * i32]* %204)[i64 0][i32 %206];
    store i32* %207 with i32 1;
    [30 * i32]* %208 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %206];
    i32* %209 = getelementptr &([30 * i32]* %208)[i64 0][i32 %203];
    store i32* %209 with i32 1;
    i32* %210 = getelementptr &([2 * i32]* %177)[i64 4][i64 0];
    i32 %211 = load i32* %210;
    [30 * i32]* %212 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %211];
    i32* %213 = getelementptr &([2 * i32]* %177)[i64 4][i64 1];
    i32 %214 = load i32* %213;
    i32* %215 = getelementptr &([30 * i32]* %212)[i64 0][i32 %214];
    store i32* %215 with i32 1;
    [30 * i32]* %216 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %214];
    i32* %217 = getelementptr &([30 * i32]* %216)[i64 0][i32 %211];
    store i32* %217 with i32 1;
    i32* %218 = getelementptr &([2 * i32]* %177)[i64 5][i64 0];
    i32 %219 = load i32* %218;
    [30 * i32]* %220 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %219];
    i32* %221 = getelementptr &([2 * i32]* %177)[i64 5][i64 1];
    i32 %222 = load i32* %221;
    i32* %223 = getelementptr &([30 * i32]* %220)[i64 0][i32 %222];
    store i32* %223 with i32 1;
    [30 * i32]* %224 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %222];
    i32* %225 = getelementptr &([30 * i32]* %224)[i64 0][i32 %219];
    store i32* %225 with i32 1;
    i32* %226 = getelementptr &([2 * i32]* %177)[i64 6][i64 0];
    i32 %227 = load i32* %226;
    [30 * i32]* %228 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %227];
    i32* %229 = getelementptr &([2 * i32]* %177)[i64 6][i64 1];
    i32 %230 = load i32* %229;
    i32* %231 = getelementptr &([30 * i32]* %228)[i64 0][i32 %230];
    store i32* %231 with i32 1;
    [30 * i32]* %232 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %230];
    i32* %233 = getelementptr &([30 * i32]* %232)[i64 0][i32 %227];
    store i32* %233 with i32 1;
    i32* %234 = getelementptr &([2 * i32]* %177)[i64 7][i64 0];
    i32 %235 = load i32* %234;
    [30 * i32]* %236 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %235];
    i32* %237 = getelementptr &([2 * i32]* %177)[i64 7][i64 1];
    i32 %238 = load i32* %237;
    i32* %239 = getelementptr &([30 * i32]* %236)[i64 0][i32 %238];
    store i32* %239 with i32 1;
    [30 * i32]* %240 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %238];
    i32* %241 = getelementptr &([30 * i32]* %240)[i64 0][i32 %235];
    store i32* %241 with i32 1;
    i32* %242 = getelementptr &([2 * i32]* %177)[i64 8][i64 0];
    i32 %243 = load i32* %242;
    [30 * i32]* %244 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %243];
    i32* %245 = getelementptr &([2 * i32]* %177)[i64 8][i64 1];
    i32 %246 = load i32* %245;
    i32* %247 = getelementptr &([30 * i32]* %244)[i64 0][i32 %246];
    store i32* %247 with i32 1;
    [30 * i32]* %248 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %246];
    i32* %249 = getelementptr &([30 * i32]* %248)[i64 0][i32 %243];
    store i32* %249 with i32 1;
    i32* %250 = getelementptr &([2 * i32]* %177)[i64 9][i64 0];
    i32 %251 = load i32* %250;
    [30 * i32]* %252 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %251];
    i32* %253 = getelementptr &([2 * i32]* %177)[i64 9][i64 1];
    i32 %254 = load i32* %253;
    i32* %255 = getelementptr &([30 * i32]* %252)[i64 0][i32 %254];
    store i32* %255 with i32 1;
    [30 * i32]* %256 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %254];
    i32* %257 = getelementptr &([30 * i32]* %256)[i64 0][i32 %251];
    store i32* %257 with i32 1;
    i32* %258 = getelementptr &([2 * i32]* %177)[i64 10][i64 0];
    i32 %259 = load i32* %258;
    [30 * i32]* %260 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %259];
    i32* %261 = getelementptr &([2 * i32]* %177)[i64 10][i64 1];
    i32 %262 = load i32* %261;
    i32* %263 = getelementptr &([30 * i32]* %260)[i64 0][i32 %262];
    store i32* %263 with i32 1;
    [30 * i32]* %264 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %262];
    i32* %265 = getelementptr &([30 * i32]* %264)[i64 0][i32 %259];
    store i32* %265 with i32 1;
    i32* %266 = getelementptr &([2 * i32]* %177)[i64 11][i64 0];
    i32 %267 = load i32* %266;
    [30 * i32]* %268 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %267];
    i32* %269 = getelementptr &([2 * i32]* %177)[i64 11][i64 1];
    i32 %270 = load i32* %269;
    i32* %271 = getelementptr &([30 * i32]* %268)[i64 0][i32 %270];
    store i32* %271 with i32 1;
    [30 * i32]* %272 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %270];
    i32* %273 = getelementptr &([30 * i32]* %272)[i64 0][i32 %267];
    store i32* %273 with i32 1;
    i32* %274 = getelementptr &([2 * i32]* %177)[i64 12][i64 0];
    i32 %275 = load i32* %274;
    [30 * i32]* %276 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %275];
    i32* %277 = getelementptr &([2 * i32]* %177)[i64 12][i64 1];
    i32 %278 = load i32* %277;
    i32* %279 = getelementptr &([30 * i32]* %276)[i64 0][i32 %278];
    store i32* %279 with i32 1;
    [30 * i32]* %280 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %278];
    i32* %281 = getelementptr &([30 * i32]* %280)[i64 0][i32 %275];
    store i32* %281 with i32 1;
    i32* %282 = getelementptr &([2 * i32]* %177)[i64 13][i64 0];
    i32 %283 = load i32* %282;
    [30 * i32]* %284 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %283];
    i32* %285 = getelementptr &([2 * i32]* %177)[i64 13][i64 1];
    i32 %286 = load i32* %285;
    i32* %287 = getelementptr &([30 * i32]* %284)[i64 0][i32 %286];
    store i32* %287 with i32 1;
    [30 * i32]* %288 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %286];
    i32* %289 = getelementptr &([30 * i32]* %288)[i64 0][i32 %283];
    store i32* %289 with i32 1;
    i32* %290 = getelementptr &([2 * i32]* %177)[i64 14][i64 0];
    i32 %291 = load i32* %290;
    [30 * i32]* %292 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %291];
    i32* %293 = getelementptr &([2 * i32]* %177)[i64 14][i64 1];
    i32 %294 = load i32* %293;
    i32* %295 = getelementptr &([30 * i32]* %292)[i64 0][i32 %294];
    store i32* %295 with i32 1;
    [30 * i32]* %296 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %294];
    i32* %297 = getelementptr &([30 * i32]* %296)[i64 0][i32 %291];
    store i32* %297 with i32 1;
    i32* %298 = getelementptr &([2 * i32]* %177)[i64 15][i64 0];
    i32 %299 = load i32* %298;
    [30 * i32]* %300 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %299];
    i32* %301 = getelementptr &([2 * i32]* %177)[i64 15][i64 1];
    i32 %302 = load i32* %301;
    i32* %303 = getelementptr &([30 * i32]* %300)[i64 0][i32 %302];
    store i32* %303 with i32 1;
    [30 * i32]* %304 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %302];
    i32* %305 = getelementptr &([30 * i32]* %304)[i64 0][i32 %299];
    store i32* %305 with i32 1;
    ubr ^super.header1;
^while.body3:
    i32 %306 = phi [^super.header1, i32 %174] [^while.body3, i32 %316];
    [2 * i32]* %307 = getelementptr &([600 * [2 * i32]]* %edges)[i64 0][i32 %306];
    i32* %308 = getelementptr &([2 * i32]* %307)[i64 0][i64 0];
    i32 %309 = load i32* %308;
    [30 * i32]* %310 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %309];
    i32* %311 = getelementptr &([2 * i32]* %307)[i64 0][i64 1];
    i32 %312 = load i32* %311;
    i32* %313 = getelementptr &([30 * i32]* %310)[i64 0][i32 %312];
    store i32* %313 with i32 1;
    [30 * i32]* %314 = getelementptr &([30 * [30 * i32]]* @graph)[i64 0][i32 %312];
    i32* %315 = getelementptr &([30 * i32]* %314)[i64 0][i32 %309];
    store i32* %315 with i32 1;
    i32 %316 = add i32 %306, i32 1;
    i1 %317 = scmp lt i32 %316, i32 %31;
    cbr i1 %317(prob = 0.97), ^while.body3, ^b1;
}
internal func @maxCliques_wrapper(i32 %0, [30 * i32]* %1, i32* %2) -> i32 { NoRecurse } {
^b:
    i32 %3 = load i32* %2;
    i32 %4 = call (i32, [30 * i32]*, i32) -> i32 @maxCliques(i32 %0, [30 * i32]* %1, i32 %3);
    ret i32 %4;
}
