internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal [400020 * i32]* @cnt;
internal [100005 * i32]* @a;
internal [100005 * i32]* @b;
internal [100005 * i32]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getch();
    i1 %1 = scmp lt i32 %0, i32 48;
    i1 %2 = scmp gt i32 %0, i32 57;
    i1 %3 = or i1 %1, i1 %2;
    cbr i1 %3(prob = 0.97), ^while.body, ^indirect;
  ^while.body:
    i32 %4 = phi [^entry, i32 %0] [^while.body, i32 %6];
    i32 %5 = phi [^entry, i32 0] [^while.body, i32 %11];
    i32 %6 = call () -> i32 @getch();
    i1 %7 = scmp lt i32 %6, i32 48;
    i1 %8 = scmp gt i32 %6, i32 57;
    i1 %9 = or i1 %7, i1 %8;
    i1 %10 = scmp eq i32 %4, i32 45;
    i32 %11 = select i1 %10 ? i32 1 : i32 %5;
    cbr i1 %9(prob = 0.97), ^while.body, ^indirect;
  ^indirect:
    i32 %12 = phi [^entry, i32 %0] [^while.body, i32 %6];
    i32 %13 = phi [^entry, i32 0] [^while.body, i32 %11];
    i32 %14 = add i32 %12, i32 -48;
    i1 %15 = ucmp lt i32 %14, i32 10;
    cbr i1 %15(prob = 0.97), ^while.body1, ^b;
  ^while.body1:
    i32 %16 = phi [^indirect, i32 0] [^while.body1, i32 %23];
    i32 %17 = phi [^indirect, i32 %12] [^while.body1, i32 %18];
    i32 %18 = call () -> i32 @getch();
    i32 %19 = add i32 %18, i32 -48;
    i1 %20 = ucmp lt i32 %19, i32 10;
    i32 %21 = mul i32 %16, i32 10;
    i32 %22 = add i32 %21, i32 -48;
    i32 %23 = add i32 %22, i32 %17;
    cbr i1 %20(prob = 0.97), ^while.body1, ^b;
  ^b:
    i32 %24 = phi [^indirect, i32 0] [^while.body1, i32 %23];
    i32 %25 = neg i32 %24;
    i1 %26 = scmp neq i32 %13, i32 0;
    i32 %27 = select i1 %26 ? i32 %25 : i32 %24;
    i1 %28 = scmp neq i32 %27, i32 0;
    [100005 * i32]* %29 = ptrcast [100005 * i32]* @a to [100005 * i32]*;
    [100005 * i32]* %30 = ptrcast [100005 * i32]* @b to [100005 * i32]*;
    [100005 * i32]* %31 = ptrcast [100005 * i32]* @c to [100005 * i32]*;
    cbr i1 %28(prob = 0.97), ^while.body2, ^b1;
  ^b1:
    i32* %32 = getelementptr &([100005 * i32]* %29)[i64 0][i64 0];
    ubr ^while.header;
  ^while.body2:
    i32 %33 = phi [^b, i32 0] [^b3, i32 %71];
    i32 %34 = call () -> i32 @getch();
    i1 %35 = scmp lt i32 %34, i32 48;
    i1 %36 = scmp gt i32 %34, i32 57;
    i1 %37 = or i1 %35, i1 %36;
    i32* %38 = getelementptr &([100005 * i32]* %29)[i64 0][i32 %33];
    cbr i1 %37(prob = 0.97), ^while.body3, ^indirect1;
  ^while.body3:
    i32 %39 = phi [^while.body2, i32 %34] [^while.body3, i32 %41];
    i32 %40 = phi [^while.body2, i32 0] [^while.body3, i32 %46];
    i32 %41 = call () -> i32 @getch();
    i1 %42 = scmp lt i32 %41, i32 48;
    i1 %43 = scmp gt i32 %41, i32 57;
    i1 %44 = or i1 %42, i1 %43;
    i1 %45 = scmp eq i32 %39, i32 45;
    i32 %46 = select i1 %45 ? i32 1 : i32 %40;
    cbr i1 %44(prob = 0.97), ^while.body3, ^indirect1;
  ^indirect1:
    i32 %47 = phi [^while.body2, i32 %34] [^while.body3, i32 %41];
    i32 %48 = phi [^while.body2, i32 0] [^while.body3, i32 %46];
    i32 %49 = add i32 %47, i32 -48;
    i1 %50 = ucmp lt i32 %49, i32 10;
    cbr i1 %50(prob = 0.97), ^while.body5, ^b3;
  ^while.header:
    i32 %51 = phi [^b1, i32 0] [^while.header1, i32 %54];
    i1 %52 = scmp lt i32 %51, i32 %27;
    cbr i1 %52(prob = 0.97), ^while.body4, ^b2;
  ^while.body4:
    i32* %53 = getelementptr &(i32* %32)[i32 %51];
    i32 %54 = add i32 %51, i32 1;
    ubr ^while.header1;
  ^b2:
    i32* %55 = getelementptr &([100005 * i32]* %30)[i64 0][i64 0];
    [400020 * i32]* %56 = ptrcast [400020 * i32]* @cnt to [400020 * i32]*;
    ubr ^while.header2;
  ^while.body5:
    i32 %57 = phi [^indirect1, i32 0] [^while.body5, i32 %64];
    i32 %58 = phi [^indirect1, i32 %47] [^while.body5, i32 %59];
    i32 %59 = call () -> i32 @getch();
    i32 %60 = add i32 %59, i32 -48;
    i1 %61 = ucmp lt i32 %60, i32 10;
    i32 %62 = mul i32 %57, i32 10;
    i32 %63 = add i32 %62, i32 -48;
    i32 %64 = add i32 %63, i32 %58;
    cbr i1 %61(prob = 0.97), ^while.body5, ^b3;
  ^b3:
    i32 %65 = phi [^indirect1, i32 0] [^while.body5, i32 %64];
    i32 %66 = neg i32 %65;
    i1 %67 = scmp neq i32 %48, i32 0;
    i32 %68 = select i1 %67 ? i32 %66 : i32 %65;
    store i32* %38 with i32 %68;
    i32* %69 = getelementptr &([100005 * i32]* %30)[i64 0][i32 %33];
    store i32* %69 with i32 %68;
    i32* %70 = getelementptr &([100005 * i32]* %31)[i64 0][i32 %33];
    store i32* %70 with i32 %68;
    i32 %71 = add i32 %33, i32 1;
    i1 %72 = scmp neq i32 %71, i32 %27;
    cbr i1 %72(prob = 0.97), ^while.body2, ^b1;
  ^while.header1:
    i32 %73 = phi [^while.body4, i32 %54] [^b4, i32 %93];
    i1 %74 = scmp lt i32 %73, i32 %27;
    cbr i1 %74(prob = 0.97), ^while.body7, ^while.header;
  ^while.header2:
    i32 %75 = phi [^b2, i32 -100] [^while.body6, i32 %83];
    i32 %76 = phi [^b2, i32 0] [^while.body6, i32 %84];
    i1 %77 = scmp lt i32 %76, i32 %27;
    cbr i1 %77(prob = 0.97), ^while.body6, ^while.header3;
  ^while.body6:
    i32* %78 = getelementptr &(i32* %55)[i32 %76];
    i32 %79 = load i32* %78;
    i32* %80 = getelementptr &([400020 * i32]* %56)[i64 0][i32 %79];
    i32 %81 = load i32* %80;
    i32 %82 = add i32 %81, i32 1;
    store i32* %80 with i32 %82;
    i32 %83 = smax i32 %79, i32 %75;
    i32 %84 = add i32 %76, i32 1;
    ubr ^while.header2;
  ^while.body7:
    i32 %85 = load i32* %53;
    i32* %86 = getelementptr &(i32* %32)[i32 %73];
    i32 %87 = load i32* %86;
    i1 %88 = scmp gt i32 %85, i32 %87;
    cbr i1 %88(prob = 0.5), ^if.then, ^b4;
  ^while.header3:
    i32 %89 = phi [^while.header2, i32 0] [^b6, i32 %98];
    i32 %90 = phi [^while.header2, i32 0] [^b6, i32 %99];
    i1 %91 = scmp le i32 %90, i32 %75;
    cbr i1 %91(prob = 0.97), ^while.body8, ^b5;
  ^if.then:
    i32 %92 = load i32* %53;
    store i32* %53 with i32 %87;
    store i32* %86 with i32 %92;
    ubr ^b4;
  ^b4:
    i32 %93 = add i32 %73, i32 1;
    ubr ^while.header1;
  ^b5:
    i32* %94 = getelementptr &([100005 * i32]* %31)[i64 0][i64 0];
    ubr ^while.header4;
  ^while.body8:
    i32* %95 = getelementptr &([400020 * i32]* %56)[i64 0][i32 %90];
    i32 %96 = load i32* %95;
    i1 %97 = scmp neq i32 %96, i32 0;
    cbr i1 %97(prob = 0.97), ^while.body9, ^b6;
  ^b6:
    i32 %98 = phi [^while.body8, i32 %89] [^while.body9, i32 %105];
    i32 %99 = add i32 %90, i32 1;
    ubr ^while.header3;
  ^while.body9:
    i32 %100 = phi [^while.body8, i32 %96] [^while.body9, i32 %103];
    i32 %101 = phi [^while.body8, i32 %89] [^while.body9, i32 %105];
    i32* %102 = getelementptr &(i32* %55)[i32 %101];
    store i32* %102 with i32 %90;
    i32 %103 = add i32 %100, i32 -1;
    i1 %104 = scmp neq i32 %103, i32 0;
    i32 %105 = add i32 %101, i32 1;
    cbr i1 %104(prob = 0.97), ^while.body9, ^b6;
  ^while.header4:
    i32 %106 = phi [^b5, i32 0] [^b8, i32 %108];
    i1 %107 = scmp lt i32 %106, i32 %27;
    cbr i1 %107(prob = 0.97), ^while.body10, ^b7;
  ^while.body10:
    i32 %108 = add i32 %106, i32 1;
    i1 %109 = scmp lt i32 %108, i32 %27;
    cbr i1 %109(prob = 0.97), ^super.header, ^b8;
  ^b7:
    cbr i1 %28(prob = 0.97), ^while.body11, ^while.header5;
  ^b8:
    i32 %110 = phi [^while.body10, i32 %106] [^while.body16, i32 %491];
    i32* %111 = getelementptr &(i32* %94)[i32 %106];
    i32 %112 = load i32* %111;
    i32* %113 = getelementptr &(i32* %94)[i32 %110];
    i32 %114 = load i32* %113;
    store i32* %111 with i32 %114;
    store i32* %113 with i32 %112;
    ubr ^while.header4;
  ^super.header:
    i32 %115 = phi [^while.body10, i32 %106] [^while.body12, i32 %245];
    i32 %116 = phi [^while.body10, i32 %108] [^while.body12, i32 %117];
    i32 %117 = add i32 %116, i32 16;
    i1 %118 = scmp lt i32 %117, i32 %27;
    cbr i1 %118(prob = 0.67), ^while.body12, ^super.header1;
  ^while.body11:
    i32 %119 = phi [^b7, i32 0] [^while.body11, i32 %129];
    i32* %120 = getelementptr &([100005 * i32]* %30)[i64 0][i32 %119];
    i32 %121 = load i32* %120;
    i32* %122 = getelementptr &([100005 * i32]* %29)[i64 0][i32 %119];
    i32 %123 = load i32* %122;
    i32 %124 = sub i32 %121, i32 %123;
    store i32* %120 with i32 %124;
    i32* %125 = getelementptr &([100005 * i32]* %31)[i64 0][i32 %119];
    i32 %126 = load i32* %125;
    i32 %127 = sub i32 %126, i32 %124;
    i32 %128 = sub i32 %127, i32 %123;
    store i32* %125 with i32 %128;
    i32 %129 = add i32 %119, i32 1;
    i32 %130 = sub i32 %27, i32 %129;
    i1 %131 = scmp neq i32 %130, i32 0;
    cbr i1 %131(prob = 0.97), ^while.body11, ^while.header5;
  ^while.header5:
    i32 %132 = phi [^b7, i32 0] [^while.body11, i32 0] [^b11, i32 %483];
    i32 %133 = sub i32 %132, i32 %27;
    i1 %134 = scmp neq i32 %133, i32 0;
    cbr i1 %134(prob = 0.97), ^while.body13, ^b9;
  ^while.body12:
    i32* %135 = getelementptr &(i32* %94)[i32 %116];
    i32 %136 = load i32* %135;
    i32* %137 = getelementptr &(i32* %94)[i32 %115];
    i32 %138 = load i32* %137;
    i1 %139 = scmp lt i32 %136, i32 %138;
    i32 %140 = select i1 %139 ? i32 %116 : i32 %115;
    i32* %141 = getelementptr &(i32* %94)[i32 %140];
    i32 %142 = add i32 %116, i32 1;
    i32* %143 = getelementptr &(i32* %94)[i32 %142];
    i32 %144 = load i32* %143;
    i32 %145 = load i32* %141;
    i1 %146 = scmp lt i32 %144, i32 %145;
    i32 %147 = select i1 %146 ? i32 %142 : i32 %140;
    i32* %148 = getelementptr &(i32* %94)[i32 %147];
    i32 %149 = add i32 %116, i32 2;
    i32* %150 = getelementptr &(i32* %94)[i32 %149];
    i32 %151 = load i32* %150;
    i32 %152 = load i32* %148;
    i1 %153 = scmp lt i32 %151, i32 %152;
    i32 %154 = select i1 %153 ? i32 %149 : i32 %147;
    i32* %155 = getelementptr &(i32* %94)[i32 %154];
    i32 %156 = add i32 %116, i32 3;
    i32* %157 = getelementptr &(i32* %94)[i32 %156];
    i32 %158 = load i32* %157;
    i32 %159 = load i32* %155;
    i1 %160 = scmp lt i32 %158, i32 %159;
    i32 %161 = select i1 %160 ? i32 %156 : i32 %154;
    i32* %162 = getelementptr &(i32* %94)[i32 %161];
    i32 %163 = add i32 %116, i32 4;
    i32* %164 = getelementptr &(i32* %94)[i32 %163];
    i32 %165 = load i32* %164;
    i32 %166 = load i32* %162;
    i1 %167 = scmp lt i32 %165, i32 %166;
    i32 %168 = select i1 %167 ? i32 %163 : i32 %161;
    i32* %169 = getelementptr &(i32* %94)[i32 %168];
    i32 %170 = add i32 %116, i32 5;
    i32* %171 = getelementptr &(i32* %94)[i32 %170];
    i32 %172 = load i32* %171;
    i32 %173 = load i32* %169;
    i1 %174 = scmp lt i32 %172, i32 %173;
    i32 %175 = select i1 %174 ? i32 %170 : i32 %168;
    i32* %176 = getelementptr &(i32* %94)[i32 %175];
    i32 %177 = add i32 %116, i32 6;
    i32* %178 = getelementptr &(i32* %94)[i32 %177];
    i32 %179 = load i32* %178;
    i32 %180 = load i32* %176;
    i1 %181 = scmp lt i32 %179, i32 %180;
    i32 %182 = select i1 %181 ? i32 %177 : i32 %175;
    i32* %183 = getelementptr &(i32* %94)[i32 %182];
    i32 %184 = add i32 %116, i32 7;
    i32* %185 = getelementptr &(i32* %94)[i32 %184];
    i32 %186 = load i32* %185;
    i32 %187 = load i32* %183;
    i1 %188 = scmp lt i32 %186, i32 %187;
    i32 %189 = select i1 %188 ? i32 %184 : i32 %182;
    i32* %190 = getelementptr &(i32* %94)[i32 %189];
    i32 %191 = add i32 %116, i32 8;
    i32* %192 = getelementptr &(i32* %94)[i32 %191];
    i32 %193 = load i32* %192;
    i32 %194 = load i32* %190;
    i1 %195 = scmp lt i32 %193, i32 %194;
    i32 %196 = select i1 %195 ? i32 %191 : i32 %189;
    i32* %197 = getelementptr &(i32* %94)[i32 %196];
    i32 %198 = add i32 %116, i32 9;
    i32* %199 = getelementptr &(i32* %94)[i32 %198];
    i32 %200 = load i32* %199;
    i32 %201 = load i32* %197;
    i1 %202 = scmp lt i32 %200, i32 %201;
    i32 %203 = select i1 %202 ? i32 %198 : i32 %196;
    i32* %204 = getelementptr &(i32* %94)[i32 %203];
    i32 %205 = add i32 %116, i32 10;
    i32* %206 = getelementptr &(i32* %94)[i32 %205];
    i32 %207 = load i32* %206;
    i32 %208 = load i32* %204;
    i1 %209 = scmp lt i32 %207, i32 %208;
    i32 %210 = select i1 %209 ? i32 %205 : i32 %203;
    i32* %211 = getelementptr &(i32* %94)[i32 %210];
    i32 %212 = add i32 %116, i32 11;
    i32* %213 = getelementptr &(i32* %94)[i32 %212];
    i32 %214 = load i32* %213;
    i32 %215 = load i32* %211;
    i1 %216 = scmp lt i32 %214, i32 %215;
    i32 %217 = select i1 %216 ? i32 %212 : i32 %210;
    i32* %218 = getelementptr &(i32* %94)[i32 %217];
    i32 %219 = add i32 %116, i32 12;
    i32* %220 = getelementptr &(i32* %94)[i32 %219];
    i32 %221 = load i32* %220;
    i32 %222 = load i32* %218;
    i1 %223 = scmp lt i32 %221, i32 %222;
    i32 %224 = select i1 %223 ? i32 %219 : i32 %217;
    i32* %225 = getelementptr &(i32* %94)[i32 %224];
    i32 %226 = add i32 %116, i32 13;
    i32* %227 = getelementptr &(i32* %94)[i32 %226];
    i32 %228 = load i32* %227;
    i32 %229 = load i32* %225;
    i1 %230 = scmp lt i32 %228, i32 %229;
    i32 %231 = select i1 %230 ? i32 %226 : i32 %224;
    i32* %232 = getelementptr &(i32* %94)[i32 %231];
    i32 %233 = add i32 %116, i32 14;
    i32* %234 = getelementptr &(i32* %94)[i32 %233];
    i32 %235 = load i32* %234;
    i32 %236 = load i32* %232;
    i1 %237 = scmp lt i32 %235, i32 %236;
    i32 %238 = select i1 %237 ? i32 %233 : i32 %231;
    i32* %239 = getelementptr &(i32* %94)[i32 %238];
    i32 %240 = add i32 %116, i32 15;
    i32* %241 = getelementptr &(i32* %94)[i32 %240];
    i32 %242 = load i32* %241;
    i32 %243 = load i32* %239;
    i1 %244 = scmp lt i32 %242, i32 %243;
    i32 %245 = select i1 %244 ? i32 %240 : i32 %238;
    ubr ^super.header;
  ^super.header1:
    i32 %246 = phi [^super.header, i32 %115] [^while.body14, i32 %364];
    i32 %247 = phi [^super.header, i32 %116] [^while.body14, i32 %248];
    i32 %248 = add i32 %247, i32 16;
    i1 %249 = scmp lt i32 %248, i32 %27;
    cbr i1 %249(prob = 0.67), ^while.body14, ^super.header2;
  ^while.body13:
    i32* %250 = getelementptr &([100005 * i32]* %30)[i64 0][i32 %132];
    i32 %251 = load i32* %250;
    i1 %252 = scmp neq i32 %251, i32 0;
    cbr i1 %252(prob = 0.5), ^b9, ^b10;
  ^b9:
    i32 %253 = phi [^while.header5, i32 -123] [^while.body13, i32 1] [^b10, i32 2];
    ret i32 %253;
  ^while.body14:
    i32* %254 = getelementptr &(i32* %94)[i32 %247];
    i32 %255 = load i32* %254;
    i32* %256 = getelementptr &(i32* %94)[i32 %246];
    i32 %257 = load i32* %256;
    i1 %258 = scmp lt i32 %255, i32 %257;
    i32 %259 = select i1 %258 ? i32 %247 : i32 %246;
    i32* %260 = getelementptr &(i32* %94)[i32 %259];
    i32 %261 = add i32 %247, i32 1;
    i32* %262 = getelementptr &(i32* %94)[i32 %261];
    i32 %263 = load i32* %262;
    i32 %264 = load i32* %260;
    i1 %265 = scmp lt i32 %263, i32 %264;
    i32 %266 = select i1 %265 ? i32 %261 : i32 %259;
    i32* %267 = getelementptr &(i32* %94)[i32 %266];
    i32 %268 = add i32 %247, i32 2;
    i32* %269 = getelementptr &(i32* %94)[i32 %268];
    i32 %270 = load i32* %269;
    i32 %271 = load i32* %267;
    i1 %272 = scmp lt i32 %270, i32 %271;
    i32 %273 = select i1 %272 ? i32 %268 : i32 %266;
    i32* %274 = getelementptr &(i32* %94)[i32 %273];
    i32 %275 = add i32 %247, i32 3;
    i32* %276 = getelementptr &(i32* %94)[i32 %275];
    i32 %277 = load i32* %276;
    i32 %278 = load i32* %274;
    i1 %279 = scmp lt i32 %277, i32 %278;
    i32 %280 = select i1 %279 ? i32 %275 : i32 %273;
    i32* %281 = getelementptr &(i32* %94)[i32 %280];
    i32 %282 = add i32 %247, i32 4;
    i32* %283 = getelementptr &(i32* %94)[i32 %282];
    i32 %284 = load i32* %283;
    i32 %285 = load i32* %281;
    i1 %286 = scmp lt i32 %284, i32 %285;
    i32 %287 = select i1 %286 ? i32 %282 : i32 %280;
    i32* %288 = getelementptr &(i32* %94)[i32 %287];
    i32 %289 = add i32 %247, i32 5;
    i32* %290 = getelementptr &(i32* %94)[i32 %289];
    i32 %291 = load i32* %290;
    i32 %292 = load i32* %288;
    i1 %293 = scmp lt i32 %291, i32 %292;
    i32 %294 = select i1 %293 ? i32 %289 : i32 %287;
    i32* %295 = getelementptr &(i32* %94)[i32 %294];
    i32 %296 = add i32 %247, i32 6;
    i32* %297 = getelementptr &(i32* %94)[i32 %296];
    i32 %298 = load i32* %297;
    i32 %299 = load i32* %295;
    i1 %300 = scmp lt i32 %298, i32 %299;
    i32 %301 = select i1 %300 ? i32 %296 : i32 %294;
    i32* %302 = getelementptr &(i32* %94)[i32 %301];
    i32 %303 = add i32 %247, i32 7;
    i32* %304 = getelementptr &(i32* %94)[i32 %303];
    i32 %305 = load i32* %304;
    i32 %306 = load i32* %302;
    i1 %307 = scmp lt i32 %305, i32 %306;
    i32 %308 = select i1 %307 ? i32 %303 : i32 %301;
    i32* %309 = getelementptr &(i32* %94)[i32 %308];
    i32 %310 = add i32 %247, i32 8;
    i32* %311 = getelementptr &(i32* %94)[i32 %310];
    i32 %312 = load i32* %311;
    i32 %313 = load i32* %309;
    i1 %314 = scmp lt i32 %312, i32 %313;
    i32 %315 = select i1 %314 ? i32 %310 : i32 %308;
    i32* %316 = getelementptr &(i32* %94)[i32 %315];
    i32 %317 = add i32 %247, i32 9;
    i32* %318 = getelementptr &(i32* %94)[i32 %317];
    i32 %319 = load i32* %318;
    i32 %320 = load i32* %316;
    i1 %321 = scmp lt i32 %319, i32 %320;
    i32 %322 = select i1 %321 ? i32 %317 : i32 %315;
    i32* %323 = getelementptr &(i32* %94)[i32 %322];
    i32 %324 = add i32 %247, i32 10;
    i32* %325 = getelementptr &(i32* %94)[i32 %324];
    i32 %326 = load i32* %325;
    i32 %327 = load i32* %323;
    i1 %328 = scmp lt i32 %326, i32 %327;
    i32 %329 = select i1 %328 ? i32 %324 : i32 %322;
    i32* %330 = getelementptr &(i32* %94)[i32 %329];
    i32 %331 = add i32 %247, i32 11;
    i32* %332 = getelementptr &(i32* %94)[i32 %331];
    i32 %333 = load i32* %332;
    i32 %334 = load i32* %330;
    i1 %335 = scmp lt i32 %333, i32 %334;
    i32 %336 = select i1 %335 ? i32 %331 : i32 %329;
    i32* %337 = getelementptr &(i32* %94)[i32 %336];
    i32 %338 = add i32 %247, i32 12;
    i32* %339 = getelementptr &(i32* %94)[i32 %338];
    i32 %340 = load i32* %339;
    i32 %341 = load i32* %337;
    i1 %342 = scmp lt i32 %340, i32 %341;
    i32 %343 = select i1 %342 ? i32 %338 : i32 %336;
    i32* %344 = getelementptr &(i32* %94)[i32 %343];
    i32 %345 = add i32 %247, i32 13;
    i32* %346 = getelementptr &(i32* %94)[i32 %345];
    i32 %347 = load i32* %346;
    i32 %348 = load i32* %344;
    i1 %349 = scmp lt i32 %347, i32 %348;
    i32 %350 = select i1 %349 ? i32 %345 : i32 %343;
    i32* %351 = getelementptr &(i32* %94)[i32 %350];
    i32 %352 = add i32 %247, i32 14;
    i32* %353 = getelementptr &(i32* %94)[i32 %352];
    i32 %354 = load i32* %353;
    i32 %355 = load i32* %351;
    i1 %356 = scmp lt i32 %354, i32 %355;
    i32 %357 = select i1 %356 ? i32 %352 : i32 %350;
    i32* %358 = getelementptr &(i32* %94)[i32 %357];
    i32 %359 = add i32 %247, i32 15;
    i32* %360 = getelementptr &(i32* %94)[i32 %359];
    i32 %361 = load i32* %360;
    i32 %362 = load i32* %358;
    i1 %363 = scmp lt i32 %361, i32 %362;
    i32 %364 = select i1 %363 ? i32 %359 : i32 %357;
    ubr ^super.header1;
  ^super.header2:
    i32 %365 = phi [^super.header1, i32 %246] [^while.body15, i32 %482];
    i32 %366 = phi [^super.header1, i32 %247] [^while.body15, i32 %367];
    i32 %367 = add i32 %366, i32 16;
    i1 %368 = scmp lt i32 %367, i32 %27;
    cbr i1 %368(prob = 0.67), ^while.body15, ^while.body16;
  ^b10:
    i32* %369 = getelementptr &([100005 * i32]* %31)[i64 0][i32 %132];
    i32 %370 = load i32* %369;
    i1 %371 = scmp neq i32 %370, i32 0;
    cbr i1 %371(prob = 0.5), ^b9, ^b11;
  ^while.body15:
    i32* %372 = getelementptr &(i32* %94)[i32 %366];
    i32 %373 = load i32* %372;
    i32* %374 = getelementptr &(i32* %94)[i32 %365];
    i32 %375 = load i32* %374;
    i1 %376 = scmp lt i32 %373, i32 %375;
    i32 %377 = select i1 %376 ? i32 %366 : i32 %365;
    i32* %378 = getelementptr &(i32* %94)[i32 %377];
    i32 %379 = add i32 %366, i32 1;
    i32* %380 = getelementptr &(i32* %94)[i32 %379];
    i32 %381 = load i32* %380;
    i32 %382 = load i32* %378;
    i1 %383 = scmp lt i32 %381, i32 %382;
    i32 %384 = select i1 %383 ? i32 %379 : i32 %377;
    i32* %385 = getelementptr &(i32* %94)[i32 %384];
    i32 %386 = add i32 %366, i32 2;
    i32* %387 = getelementptr &(i32* %94)[i32 %386];
    i32 %388 = load i32* %387;
    i32 %389 = load i32* %385;
    i1 %390 = scmp lt i32 %388, i32 %389;
    i32 %391 = select i1 %390 ? i32 %386 : i32 %384;
    i32* %392 = getelementptr &(i32* %94)[i32 %391];
    i32 %393 = add i32 %366, i32 3;
    i32* %394 = getelementptr &(i32* %94)[i32 %393];
    i32 %395 = load i32* %394;
    i32 %396 = load i32* %392;
    i1 %397 = scmp lt i32 %395, i32 %396;
    i32 %398 = select i1 %397 ? i32 %393 : i32 %391;
    i32* %399 = getelementptr &(i32* %94)[i32 %398];
    i32 %400 = add i32 %366, i32 4;
    i32* %401 = getelementptr &(i32* %94)[i32 %400];
    i32 %402 = load i32* %401;
    i32 %403 = load i32* %399;
    i1 %404 = scmp lt i32 %402, i32 %403;
    i32 %405 = select i1 %404 ? i32 %400 : i32 %398;
    i32* %406 = getelementptr &(i32* %94)[i32 %405];
    i32 %407 = add i32 %366, i32 5;
    i32* %408 = getelementptr &(i32* %94)[i32 %407];
    i32 %409 = load i32* %408;
    i32 %410 = load i32* %406;
    i1 %411 = scmp lt i32 %409, i32 %410;
    i32 %412 = select i1 %411 ? i32 %407 : i32 %405;
    i32* %413 = getelementptr &(i32* %94)[i32 %412];
    i32 %414 = add i32 %366, i32 6;
    i32* %415 = getelementptr &(i32* %94)[i32 %414];
    i32 %416 = load i32* %415;
    i32 %417 = load i32* %413;
    i1 %418 = scmp lt i32 %416, i32 %417;
    i32 %419 = select i1 %418 ? i32 %414 : i32 %412;
    i32* %420 = getelementptr &(i32* %94)[i32 %419];
    i32 %421 = add i32 %366, i32 7;
    i32* %422 = getelementptr &(i32* %94)[i32 %421];
    i32 %423 = load i32* %422;
    i32 %424 = load i32* %420;
    i1 %425 = scmp lt i32 %423, i32 %424;
    i32 %426 = select i1 %425 ? i32 %421 : i32 %419;
    i32* %427 = getelementptr &(i32* %94)[i32 %426];
    i32 %428 = add i32 %366, i32 8;
    i32* %429 = getelementptr &(i32* %94)[i32 %428];
    i32 %430 = load i32* %429;
    i32 %431 = load i32* %427;
    i1 %432 = scmp lt i32 %430, i32 %431;
    i32 %433 = select i1 %432 ? i32 %428 : i32 %426;
    i32* %434 = getelementptr &(i32* %94)[i32 %433];
    i32 %435 = add i32 %366, i32 9;
    i32* %436 = getelementptr &(i32* %94)[i32 %435];
    i32 %437 = load i32* %436;
    i32 %438 = load i32* %434;
    i1 %439 = scmp lt i32 %437, i32 %438;
    i32 %440 = select i1 %439 ? i32 %435 : i32 %433;
    i32* %441 = getelementptr &(i32* %94)[i32 %440];
    i32 %442 = add i32 %366, i32 10;
    i32* %443 = getelementptr &(i32* %94)[i32 %442];
    i32 %444 = load i32* %443;
    i32 %445 = load i32* %441;
    i1 %446 = scmp lt i32 %444, i32 %445;
    i32 %447 = select i1 %446 ? i32 %442 : i32 %440;
    i32* %448 = getelementptr &(i32* %94)[i32 %447];
    i32 %449 = add i32 %366, i32 11;
    i32* %450 = getelementptr &(i32* %94)[i32 %449];
    i32 %451 = load i32* %450;
    i32 %452 = load i32* %448;
    i1 %453 = scmp lt i32 %451, i32 %452;
    i32 %454 = select i1 %453 ? i32 %449 : i32 %447;
    i32* %455 = getelementptr &(i32* %94)[i32 %454];
    i32 %456 = add i32 %366, i32 12;
    i32* %457 = getelementptr &(i32* %94)[i32 %456];
    i32 %458 = load i32* %457;
    i32 %459 = load i32* %455;
    i1 %460 = scmp lt i32 %458, i32 %459;
    i32 %461 = select i1 %460 ? i32 %456 : i32 %454;
    i32* %462 = getelementptr &(i32* %94)[i32 %461];
    i32 %463 = add i32 %366, i32 13;
    i32* %464 = getelementptr &(i32* %94)[i32 %463];
    i32 %465 = load i32* %464;
    i32 %466 = load i32* %462;
    i1 %467 = scmp lt i32 %465, i32 %466;
    i32 %468 = select i1 %467 ? i32 %463 : i32 %461;
    i32* %469 = getelementptr &(i32* %94)[i32 %468];
    i32 %470 = add i32 %366, i32 14;
    i32* %471 = getelementptr &(i32* %94)[i32 %470];
    i32 %472 = load i32* %471;
    i32 %473 = load i32* %469;
    i1 %474 = scmp lt i32 %472, i32 %473;
    i32 %475 = select i1 %474 ? i32 %470 : i32 %468;
    i32* %476 = getelementptr &(i32* %94)[i32 %475];
    i32 %477 = add i32 %366, i32 15;
    i32* %478 = getelementptr &(i32* %94)[i32 %477];
    i32 %479 = load i32* %478;
    i32 %480 = load i32* %476;
    i1 %481 = scmp lt i32 %479, i32 %480;
    i32 %482 = select i1 %481 ? i32 %477 : i32 %475;
    ubr ^super.header2;
  ^b11:
    i32 %483 = add i32 %132, i32 1;
    ubr ^while.header5;
  ^while.body16:
    i32 %484 = phi [^super.header2, i32 %365] [^while.body16, i32 %491];
    i32 %485 = phi [^super.header2, i32 %366] [^while.body16, i32 %492];
    i32* %486 = getelementptr &(i32* %94)[i32 %485];
    i32 %487 = load i32* %486;
    i32* %488 = getelementptr &(i32* %94)[i32 %484];
    i32 %489 = load i32* %488;
    i1 %490 = scmp lt i32 %487, i32 %489;
    i32 %491 = select i1 %490 ? i32 %485 : i32 %484;
    i32 %492 = add i32 %485, i32 1;
    i1 %493 = scmp lt i32 %492, i32 %27;
    cbr i1 %493(prob = 0.97), ^while.body16, ^b8;
}
