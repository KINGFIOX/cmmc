internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal [400020 * i32]* @cnt;
internal [100005 * i32]* @a;
internal [100005 * i32]* @b;
internal [100005 * i32]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getch();
    ubr ^while.header;
  ^while.header:
    i32 %1 = phi [^entry, i32 0] [^while.body, i32 %8];
    i32 %2 = phi [^entry, i32 %0] [^while.body, i32 %6];
    i1 %3 = scmp lt i32 %2, i32 48;
    cbr i1 %3(prob = 0.5), ^b1, ^b;
  ^b:
    i1 %4 = scmp gt i32 %2, i32 57;
    ubr ^b1;
  ^b1:
    i1 %5 = phi [^while.header, i1 true] [^b, i1 %4];
    cbr i1 %5(prob = 0.97), ^while.body, ^while.header1;
  ^while.body:
    i32 %6 = call () -> i32 @getch();
    i1 %7 = scmp eq i32 %2, i32 45;
    i32 %8 = select i1 %7 ? i32 1 : i32 %1;
    ubr ^while.header;
  ^while.header1:
    i32 %9 = phi [^b1, i32 0] [^while.body1, i32 %17];
    i32 %10 = phi [^b1, i32 %2] [^while.body1, i32 %14];
    i1 %11 = scmp gt i32 %10, i32 47;
    cbr i1 %11(prob = 0.5), ^b2, ^b3;
  ^b2:
    i1 %12 = scmp le i32 %10, i32 57;
    ubr ^b3;
  ^b3:
    i1 %13 = phi [^while.header1, i1 false] [^b2, i1 %12];
    cbr i1 %13(prob = 0.97), ^while.body1, ^b4;
  ^while.body1:
    i32 %14 = call () -> i32 @getch();
    i32 %15 = mul i32 %9, i32 10;
    i32 %16 = add i32 %10, i32 -48;
    i32 %17 = add i32 %16, i32 %15;
    ubr ^while.header1;
  ^b4:
    i1 %18 = scmp neq i32 %1, i32 0;
    cbr i1 %18(prob = 0.5), ^if.then, ^b5;
  ^if.then:
    i32 %19 = neg i32 %9;
    ubr ^b5;
  ^b5:
    i32 %20 = phi [^b4, i32 %9] [^if.then, i32 %19];
    i1 %21 = scmp neq i32 %20, i32 0;
    [100005 * i32]* %22 = ptrcast [100005 * i32]* @a to [100005 * i32]*;
    [100005 * i32]* %23 = ptrcast [100005 * i32]* @b to [100005 * i32]*;
    [100005 * i32]* %24 = ptrcast [100005 * i32]* @c to [100005 * i32]*;
    cbr i1 %21(prob = 0.97), ^while.body2, ^b6;
  ^while.body2:
    i32 %25 = phi [^b5, i32 0] [^b16, i32 %91];
    i32 %26 = call () -> i32 @getch();
    i32* %27 = getelementptr &([100005 * i32]* %22)[i64 0][i32 %25];
    ubr ^while.header2;
  ^b6:
    i32* %28 = getelementptr &([100005 * i32]* %22)[i64 0][i64 0];
    ubr ^while.header3;
  ^while.header2:
    i32 %29 = phi [^while.body2, i32 0] [^while.body4, i32 %42];
    i32 %30 = phi [^while.body2, i32 %26] [^while.body4, i32 %40];
    i1 %31 = scmp lt i32 %30, i32 48;
    cbr i1 %31(prob = 0.5), ^b8, ^b7;
  ^while.header3:
    i32 %32 = phi [^b6, i32 0] [^while.header5, i32 %36];
    i1 %33 = scmp lt i32 %32, i32 %20;
    cbr i1 %33(prob = 0.97), ^while.body3, ^b9;
  ^b7:
    i1 %34 = scmp gt i32 %30, i32 57;
    ubr ^b8;
  ^while.body3:
    i32* %35 = getelementptr &(i32* %28)[i32 %32];
    i32 %36 = add i32 %32, i32 1;
    ubr ^while.header5;
  ^b8:
    i1 %37 = phi [^while.header2, i1 true] [^b7, i1 %34];
    cbr i1 %37(prob = 0.97), ^while.body4, ^while.header4;
  ^b9:
    i32* %38 = getelementptr &([100005 * i32]* %23)[i64 0][i64 0];
    [400020 * i32]* %39 = ptrcast [400020 * i32]* @cnt to [400020 * i32]*;
    ubr ^while.header6;
  ^while.body4:
    i32 %40 = call () -> i32 @getch();
    i1 %41 = scmp eq i32 %30, i32 45;
    i32 %42 = select i1 %41 ? i32 1 : i32 %29;
    ubr ^while.header2;
  ^while.header4:
    i32 %43 = phi [^b8, i32 0] [^while.body7, i32 %72];
    i32 %44 = phi [^b8, i32 %30] [^while.body7, i32 %69];
    i1 %45 = scmp gt i32 %44, i32 47;
    cbr i1 %45(prob = 0.5), ^b10, ^b11;
  ^while.header5:
    i32 %46 = phi [^while.body3, i32 %36] [^b12, i32 %73];
    i1 %47 = scmp lt i32 %46, i32 %20;
    cbr i1 %47(prob = 0.97), ^while.body6, ^while.header3;
  ^while.header6:
    i32 %48 = phi [^b9, i32 0] [^while.body5, i32 %59];
    i32 %49 = phi [^b9, i32 -100] [^while.body5, i32 %58];
    i1 %50 = scmp lt i32 %48, i32 %20;
    cbr i1 %50(prob = 0.97), ^while.body5, ^while.header7;
  ^b10:
    i1 %51 = scmp le i32 %44, i32 57;
    ubr ^b11;
  ^while.body5:
    i32* %52 = getelementptr &(i32* %38)[i32 %48];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &([400020 * i32]* %39)[i64 0][i32 %53];
    i32 %55 = load i32* %54;
    i32 %56 = add i32 %55, i32 1;
    store i32* %54 with i32 %56;
    i1 %57 = scmp gt i32 %53, i32 %49;
    i32 %58 = select i1 %57 ? i32 %53 : i32 %49;
    i32 %59 = add i32 %48, i32 1;
    ubr ^while.header6;
  ^while.body6:
    i32 %60 = load i32* %35;
    i32* %61 = getelementptr &(i32* %28)[i32 %46];
    i32 %62 = load i32* %61;
    i1 %63 = scmp gt i32 %60, i32 %62;
    cbr i1 %63(prob = 0.5), ^if.then1, ^b12;
  ^b11:
    i1 %64 = phi [^while.header4, i1 false] [^b10, i1 %51];
    cbr i1 %64(prob = 0.97), ^while.body7, ^b14;
  ^while.header7:
    i32 %65 = phi [^while.header6, i32 0] [^b15, i32 %80];
    i32 %66 = phi [^while.header6, i32 0] [^b15, i32 %81];
    i1 %67 = scmp le i32 %66, i32 %49;
    cbr i1 %67(prob = 0.97), ^while.body8, ^b13;
  ^if.then1:
    i32 %68 = load i32* %35;
    store i32* %35 with i32 %62;
    store i32* %61 with i32 %68;
    ubr ^b12;
  ^while.body7:
    i32 %69 = call () -> i32 @getch();
    i32 %70 = mul i32 %43, i32 10;
    i32 %71 = add i32 %44, i32 -48;
    i32 %72 = add i32 %71, i32 %70;
    ubr ^while.header4;
  ^b12:
    i32 %73 = add i32 %46, i32 1;
    ubr ^while.header5;
  ^b13:
    i32* %74 = getelementptr &([100005 * i32]* %24)[i64 0][i64 0];
    ubr ^while.header8;
  ^b14:
    i1 %75 = scmp neq i32 %29, i32 0;
    cbr i1 %75(prob = 0.5), ^if.then2, ^b16;
  ^while.body8:
    i32* %76 = getelementptr &([400020 * i32]* %39)[i64 0][i32 %66];
    i32 %77 = load i32* %76;
    i1 %78 = scmp neq i32 %77, i32 0;
    cbr i1 %78(prob = 0.97), ^while.body9, ^b15;
  ^if.then2:
    i32 %79 = neg i32 %43;
    ubr ^b16;
  ^b15:
    i32 %80 = phi [^while.body8, i32 %65] [^while.body9, i32 %87];
    i32 %81 = add i32 %66, i32 1;
    ubr ^while.header7;
  ^while.body9:
    i32 %82 = phi [^while.body8, i32 %77] [^while.body9, i32 %85];
    i32 %83 = phi [^while.body8, i32 %65] [^while.body9, i32 %87];
    i32* %84 = getelementptr &(i32* %38)[i32 %83];
    store i32* %84 with i32 %66;
    i32 %85 = add i32 %82, i32 -1;
    i1 %86 = scmp neq i32 %85, i32 0;
    i32 %87 = add i32 %83, i32 1;
    cbr i1 %86(prob = 0.97), ^while.body9, ^b15;
  ^b16:
    i32 %88 = phi [^b14, i32 %43] [^if.then2, i32 %79];
    store i32* %27 with i32 %88;
    i32* %89 = getelementptr &([100005 * i32]* %23)[i64 0][i32 %25];
    store i32* %89 with i32 %88;
    i32* %90 = getelementptr &([100005 * i32]* %24)[i64 0][i32 %25];
    store i32* %90 with i32 %88;
    i32 %91 = add i32 %25, i32 1;
    i1 %92 = scmp neq i32 %91, i32 %20;
    cbr i1 %92(prob = 0.97), ^while.body2, ^b6;
  ^while.header8:
    i32 %93 = phi [^b13, i32 0] [^b18, i32 %95];
    i1 %94 = scmp lt i32 %93, i32 %20;
    cbr i1 %94(prob = 0.97), ^while.body10, ^b17;
  ^while.body10:
    i32 %95 = add i32 %93, i32 1;
    i1 %96 = scmp lt i32 %95, i32 %20;
    cbr i1 %96(prob = 0.97), ^super.header, ^b18;
  ^b17:
    cbr i1 %21(prob = 0.97), ^while.body11, ^while.header9;
  ^b18:
    i32 %97 = phi [^while.body10, i32 %93] [^while.body16, i32 %478];
    i32* %98 = getelementptr &(i32* %74)[i32 %93];
    i32 %99 = load i32* %98;
    i32* %100 = getelementptr &(i32* %74)[i32 %97];
    i32 %101 = load i32* %100;
    store i32* %98 with i32 %101;
    store i32* %100 with i32 %99;
    ubr ^while.header8;
  ^super.header:
    i32 %102 = phi [^while.body10, i32 %93] [^while.body12, i32 %232];
    i32 %103 = phi [^while.body10, i32 %95] [^while.body12, i32 %104];
    i32 %104 = add i32 %103, i32 16;
    i1 %105 = scmp lt i32 %104, i32 %20;
    cbr i1 %105(prob = 0.67), ^while.body12, ^super.header1;
  ^while.body11:
    i32 %106 = phi [^b17, i32 0] [^while.body11, i32 %116];
    i32* %107 = getelementptr &([100005 * i32]* %23)[i64 0][i32 %106];
    i32 %108 = load i32* %107;
    i32* %109 = getelementptr &([100005 * i32]* %22)[i64 0][i32 %106];
    i32 %110 = load i32* %109;
    i32 %111 = sub i32 %108, i32 %110;
    store i32* %107 with i32 %111;
    i32* %112 = getelementptr &([100005 * i32]* %24)[i64 0][i32 %106];
    i32 %113 = load i32* %112;
    i32 %114 = sub i32 %113, i32 %111;
    i32 %115 = sub i32 %114, i32 %110;
    store i32* %112 with i32 %115;
    i32 %116 = add i32 %106, i32 1;
    i32 %117 = sub i32 %20, i32 %116;
    i1 %118 = scmp neq i32 %117, i32 0;
    cbr i1 %118(prob = 0.97), ^while.body11, ^while.header9;
  ^while.header9:
    i32 %119 = phi [^b17, i32 0] [^while.body11, i32 0] [^b21, i32 %470];
    i32 %120 = sub i32 %119, i32 %20;
    i1 %121 = scmp neq i32 %120, i32 0;
    cbr i1 %121(prob = 0.97), ^while.body13, ^b19;
  ^while.body12:
    i32* %122 = getelementptr &(i32* %74)[i32 %103];
    i32 %123 = load i32* %122;
    i32* %124 = getelementptr &(i32* %74)[i32 %102];
    i32 %125 = load i32* %124;
    i1 %126 = scmp lt i32 %123, i32 %125;
    i32 %127 = select i1 %126 ? i32 %103 : i32 %102;
    i32* %128 = getelementptr &(i32* %74)[i32 %127];
    i32 %129 = add i32 %103, i32 1;
    i32* %130 = getelementptr &(i32* %74)[i32 %129];
    i32 %131 = load i32* %130;
    i32 %132 = load i32* %128;
    i1 %133 = scmp lt i32 %131, i32 %132;
    i32 %134 = select i1 %133 ? i32 %129 : i32 %127;
    i32* %135 = getelementptr &(i32* %74)[i32 %134];
    i32 %136 = add i32 %103, i32 2;
    i32* %137 = getelementptr &(i32* %74)[i32 %136];
    i32 %138 = load i32* %137;
    i32 %139 = load i32* %135;
    i1 %140 = scmp lt i32 %138, i32 %139;
    i32 %141 = select i1 %140 ? i32 %136 : i32 %134;
    i32* %142 = getelementptr &(i32* %74)[i32 %141];
    i32 %143 = add i32 %103, i32 3;
    i32* %144 = getelementptr &(i32* %74)[i32 %143];
    i32 %145 = load i32* %144;
    i32 %146 = load i32* %142;
    i1 %147 = scmp lt i32 %145, i32 %146;
    i32 %148 = select i1 %147 ? i32 %143 : i32 %141;
    i32* %149 = getelementptr &(i32* %74)[i32 %148];
    i32 %150 = add i32 %103, i32 4;
    i32* %151 = getelementptr &(i32* %74)[i32 %150];
    i32 %152 = load i32* %151;
    i32 %153 = load i32* %149;
    i1 %154 = scmp lt i32 %152, i32 %153;
    i32 %155 = select i1 %154 ? i32 %150 : i32 %148;
    i32* %156 = getelementptr &(i32* %74)[i32 %155];
    i32 %157 = add i32 %103, i32 5;
    i32* %158 = getelementptr &(i32* %74)[i32 %157];
    i32 %159 = load i32* %158;
    i32 %160 = load i32* %156;
    i1 %161 = scmp lt i32 %159, i32 %160;
    i32 %162 = select i1 %161 ? i32 %157 : i32 %155;
    i32* %163 = getelementptr &(i32* %74)[i32 %162];
    i32 %164 = add i32 %103, i32 6;
    i32* %165 = getelementptr &(i32* %74)[i32 %164];
    i32 %166 = load i32* %165;
    i32 %167 = load i32* %163;
    i1 %168 = scmp lt i32 %166, i32 %167;
    i32 %169 = select i1 %168 ? i32 %164 : i32 %162;
    i32* %170 = getelementptr &(i32* %74)[i32 %169];
    i32 %171 = add i32 %103, i32 7;
    i32* %172 = getelementptr &(i32* %74)[i32 %171];
    i32 %173 = load i32* %172;
    i32 %174 = load i32* %170;
    i1 %175 = scmp lt i32 %173, i32 %174;
    i32 %176 = select i1 %175 ? i32 %171 : i32 %169;
    i32* %177 = getelementptr &(i32* %74)[i32 %176];
    i32 %178 = add i32 %103, i32 8;
    i32* %179 = getelementptr &(i32* %74)[i32 %178];
    i32 %180 = load i32* %179;
    i32 %181 = load i32* %177;
    i1 %182 = scmp lt i32 %180, i32 %181;
    i32 %183 = select i1 %182 ? i32 %178 : i32 %176;
    i32* %184 = getelementptr &(i32* %74)[i32 %183];
    i32 %185 = add i32 %103, i32 9;
    i32* %186 = getelementptr &(i32* %74)[i32 %185];
    i32 %187 = load i32* %186;
    i32 %188 = load i32* %184;
    i1 %189 = scmp lt i32 %187, i32 %188;
    i32 %190 = select i1 %189 ? i32 %185 : i32 %183;
    i32* %191 = getelementptr &(i32* %74)[i32 %190];
    i32 %192 = add i32 %103, i32 10;
    i32* %193 = getelementptr &(i32* %74)[i32 %192];
    i32 %194 = load i32* %193;
    i32 %195 = load i32* %191;
    i1 %196 = scmp lt i32 %194, i32 %195;
    i32 %197 = select i1 %196 ? i32 %192 : i32 %190;
    i32* %198 = getelementptr &(i32* %74)[i32 %197];
    i32 %199 = add i32 %103, i32 11;
    i32* %200 = getelementptr &(i32* %74)[i32 %199];
    i32 %201 = load i32* %200;
    i32 %202 = load i32* %198;
    i1 %203 = scmp lt i32 %201, i32 %202;
    i32 %204 = select i1 %203 ? i32 %199 : i32 %197;
    i32* %205 = getelementptr &(i32* %74)[i32 %204];
    i32 %206 = add i32 %103, i32 12;
    i32* %207 = getelementptr &(i32* %74)[i32 %206];
    i32 %208 = load i32* %207;
    i32 %209 = load i32* %205;
    i1 %210 = scmp lt i32 %208, i32 %209;
    i32 %211 = select i1 %210 ? i32 %206 : i32 %204;
    i32* %212 = getelementptr &(i32* %74)[i32 %211];
    i32 %213 = add i32 %103, i32 13;
    i32* %214 = getelementptr &(i32* %74)[i32 %213];
    i32 %215 = load i32* %214;
    i32 %216 = load i32* %212;
    i1 %217 = scmp lt i32 %215, i32 %216;
    i32 %218 = select i1 %217 ? i32 %213 : i32 %211;
    i32* %219 = getelementptr &(i32* %74)[i32 %218];
    i32 %220 = add i32 %103, i32 14;
    i32* %221 = getelementptr &(i32* %74)[i32 %220];
    i32 %222 = load i32* %221;
    i32 %223 = load i32* %219;
    i1 %224 = scmp lt i32 %222, i32 %223;
    i32 %225 = select i1 %224 ? i32 %220 : i32 %218;
    i32* %226 = getelementptr &(i32* %74)[i32 %225];
    i32 %227 = add i32 %103, i32 15;
    i32* %228 = getelementptr &(i32* %74)[i32 %227];
    i32 %229 = load i32* %228;
    i32 %230 = load i32* %226;
    i1 %231 = scmp lt i32 %229, i32 %230;
    i32 %232 = select i1 %231 ? i32 %227 : i32 %225;
    ubr ^super.header;
  ^super.header1:
    i32 %233 = phi [^super.header, i32 %102] [^while.body14, i32 %351];
    i32 %234 = phi [^super.header, i32 %103] [^while.body14, i32 %235];
    i32 %235 = add i32 %234, i32 16;
    i1 %236 = scmp lt i32 %235, i32 %20;
    cbr i1 %236(prob = 0.67), ^while.body14, ^super.header2;
  ^while.body13:
    i32* %237 = getelementptr &([100005 * i32]* %23)[i64 0][i32 %119];
    i32 %238 = load i32* %237;
    i1 %239 = scmp neq i32 %238, i32 0;
    cbr i1 %239(prob = 0.5), ^b19, ^b20;
  ^b19:
    i32 %240 = phi [^while.header9, i32 -123] [^while.body13, i32 1] [^b20, i32 2];
    ret i32 %240;
  ^while.body14:
    i32* %241 = getelementptr &(i32* %74)[i32 %234];
    i32 %242 = load i32* %241;
    i32* %243 = getelementptr &(i32* %74)[i32 %233];
    i32 %244 = load i32* %243;
    i1 %245 = scmp lt i32 %242, i32 %244;
    i32 %246 = select i1 %245 ? i32 %234 : i32 %233;
    i32* %247 = getelementptr &(i32* %74)[i32 %246];
    i32 %248 = add i32 %234, i32 1;
    i32* %249 = getelementptr &(i32* %74)[i32 %248];
    i32 %250 = load i32* %249;
    i32 %251 = load i32* %247;
    i1 %252 = scmp lt i32 %250, i32 %251;
    i32 %253 = select i1 %252 ? i32 %248 : i32 %246;
    i32* %254 = getelementptr &(i32* %74)[i32 %253];
    i32 %255 = add i32 %234, i32 2;
    i32* %256 = getelementptr &(i32* %74)[i32 %255];
    i32 %257 = load i32* %256;
    i32 %258 = load i32* %254;
    i1 %259 = scmp lt i32 %257, i32 %258;
    i32 %260 = select i1 %259 ? i32 %255 : i32 %253;
    i32* %261 = getelementptr &(i32* %74)[i32 %260];
    i32 %262 = add i32 %234, i32 3;
    i32* %263 = getelementptr &(i32* %74)[i32 %262];
    i32 %264 = load i32* %263;
    i32 %265 = load i32* %261;
    i1 %266 = scmp lt i32 %264, i32 %265;
    i32 %267 = select i1 %266 ? i32 %262 : i32 %260;
    i32* %268 = getelementptr &(i32* %74)[i32 %267];
    i32 %269 = add i32 %234, i32 4;
    i32* %270 = getelementptr &(i32* %74)[i32 %269];
    i32 %271 = load i32* %270;
    i32 %272 = load i32* %268;
    i1 %273 = scmp lt i32 %271, i32 %272;
    i32 %274 = select i1 %273 ? i32 %269 : i32 %267;
    i32* %275 = getelementptr &(i32* %74)[i32 %274];
    i32 %276 = add i32 %234, i32 5;
    i32* %277 = getelementptr &(i32* %74)[i32 %276];
    i32 %278 = load i32* %277;
    i32 %279 = load i32* %275;
    i1 %280 = scmp lt i32 %278, i32 %279;
    i32 %281 = select i1 %280 ? i32 %276 : i32 %274;
    i32* %282 = getelementptr &(i32* %74)[i32 %281];
    i32 %283 = add i32 %234, i32 6;
    i32* %284 = getelementptr &(i32* %74)[i32 %283];
    i32 %285 = load i32* %284;
    i32 %286 = load i32* %282;
    i1 %287 = scmp lt i32 %285, i32 %286;
    i32 %288 = select i1 %287 ? i32 %283 : i32 %281;
    i32* %289 = getelementptr &(i32* %74)[i32 %288];
    i32 %290 = add i32 %234, i32 7;
    i32* %291 = getelementptr &(i32* %74)[i32 %290];
    i32 %292 = load i32* %291;
    i32 %293 = load i32* %289;
    i1 %294 = scmp lt i32 %292, i32 %293;
    i32 %295 = select i1 %294 ? i32 %290 : i32 %288;
    i32* %296 = getelementptr &(i32* %74)[i32 %295];
    i32 %297 = add i32 %234, i32 8;
    i32* %298 = getelementptr &(i32* %74)[i32 %297];
    i32 %299 = load i32* %298;
    i32 %300 = load i32* %296;
    i1 %301 = scmp lt i32 %299, i32 %300;
    i32 %302 = select i1 %301 ? i32 %297 : i32 %295;
    i32* %303 = getelementptr &(i32* %74)[i32 %302];
    i32 %304 = add i32 %234, i32 9;
    i32* %305 = getelementptr &(i32* %74)[i32 %304];
    i32 %306 = load i32* %305;
    i32 %307 = load i32* %303;
    i1 %308 = scmp lt i32 %306, i32 %307;
    i32 %309 = select i1 %308 ? i32 %304 : i32 %302;
    i32* %310 = getelementptr &(i32* %74)[i32 %309];
    i32 %311 = add i32 %234, i32 10;
    i32* %312 = getelementptr &(i32* %74)[i32 %311];
    i32 %313 = load i32* %312;
    i32 %314 = load i32* %310;
    i1 %315 = scmp lt i32 %313, i32 %314;
    i32 %316 = select i1 %315 ? i32 %311 : i32 %309;
    i32* %317 = getelementptr &(i32* %74)[i32 %316];
    i32 %318 = add i32 %234, i32 11;
    i32* %319 = getelementptr &(i32* %74)[i32 %318];
    i32 %320 = load i32* %319;
    i32 %321 = load i32* %317;
    i1 %322 = scmp lt i32 %320, i32 %321;
    i32 %323 = select i1 %322 ? i32 %318 : i32 %316;
    i32* %324 = getelementptr &(i32* %74)[i32 %323];
    i32 %325 = add i32 %234, i32 12;
    i32* %326 = getelementptr &(i32* %74)[i32 %325];
    i32 %327 = load i32* %326;
    i32 %328 = load i32* %324;
    i1 %329 = scmp lt i32 %327, i32 %328;
    i32 %330 = select i1 %329 ? i32 %325 : i32 %323;
    i32* %331 = getelementptr &(i32* %74)[i32 %330];
    i32 %332 = add i32 %234, i32 13;
    i32* %333 = getelementptr &(i32* %74)[i32 %332];
    i32 %334 = load i32* %333;
    i32 %335 = load i32* %331;
    i1 %336 = scmp lt i32 %334, i32 %335;
    i32 %337 = select i1 %336 ? i32 %332 : i32 %330;
    i32* %338 = getelementptr &(i32* %74)[i32 %337];
    i32 %339 = add i32 %234, i32 14;
    i32* %340 = getelementptr &(i32* %74)[i32 %339];
    i32 %341 = load i32* %340;
    i32 %342 = load i32* %338;
    i1 %343 = scmp lt i32 %341, i32 %342;
    i32 %344 = select i1 %343 ? i32 %339 : i32 %337;
    i32* %345 = getelementptr &(i32* %74)[i32 %344];
    i32 %346 = add i32 %234, i32 15;
    i32* %347 = getelementptr &(i32* %74)[i32 %346];
    i32 %348 = load i32* %347;
    i32 %349 = load i32* %345;
    i1 %350 = scmp lt i32 %348, i32 %349;
    i32 %351 = select i1 %350 ? i32 %346 : i32 %344;
    ubr ^super.header1;
  ^super.header2:
    i32 %352 = phi [^super.header1, i32 %233] [^while.body15, i32 %469];
    i32 %353 = phi [^super.header1, i32 %234] [^while.body15, i32 %354];
    i32 %354 = add i32 %353, i32 16;
    i1 %355 = scmp lt i32 %354, i32 %20;
    cbr i1 %355(prob = 0.67), ^while.body15, ^while.body16;
  ^b20:
    i32* %356 = getelementptr &([100005 * i32]* %24)[i64 0][i32 %119];
    i32 %357 = load i32* %356;
    i1 %358 = scmp neq i32 %357, i32 0;
    cbr i1 %358(prob = 0.5), ^b19, ^b21;
  ^while.body15:
    i32* %359 = getelementptr &(i32* %74)[i32 %353];
    i32 %360 = load i32* %359;
    i32* %361 = getelementptr &(i32* %74)[i32 %352];
    i32 %362 = load i32* %361;
    i1 %363 = scmp lt i32 %360, i32 %362;
    i32 %364 = select i1 %363 ? i32 %353 : i32 %352;
    i32* %365 = getelementptr &(i32* %74)[i32 %364];
    i32 %366 = add i32 %353, i32 1;
    i32* %367 = getelementptr &(i32* %74)[i32 %366];
    i32 %368 = load i32* %367;
    i32 %369 = load i32* %365;
    i1 %370 = scmp lt i32 %368, i32 %369;
    i32 %371 = select i1 %370 ? i32 %366 : i32 %364;
    i32* %372 = getelementptr &(i32* %74)[i32 %371];
    i32 %373 = add i32 %353, i32 2;
    i32* %374 = getelementptr &(i32* %74)[i32 %373];
    i32 %375 = load i32* %374;
    i32 %376 = load i32* %372;
    i1 %377 = scmp lt i32 %375, i32 %376;
    i32 %378 = select i1 %377 ? i32 %373 : i32 %371;
    i32* %379 = getelementptr &(i32* %74)[i32 %378];
    i32 %380 = add i32 %353, i32 3;
    i32* %381 = getelementptr &(i32* %74)[i32 %380];
    i32 %382 = load i32* %381;
    i32 %383 = load i32* %379;
    i1 %384 = scmp lt i32 %382, i32 %383;
    i32 %385 = select i1 %384 ? i32 %380 : i32 %378;
    i32* %386 = getelementptr &(i32* %74)[i32 %385];
    i32 %387 = add i32 %353, i32 4;
    i32* %388 = getelementptr &(i32* %74)[i32 %387];
    i32 %389 = load i32* %388;
    i32 %390 = load i32* %386;
    i1 %391 = scmp lt i32 %389, i32 %390;
    i32 %392 = select i1 %391 ? i32 %387 : i32 %385;
    i32* %393 = getelementptr &(i32* %74)[i32 %392];
    i32 %394 = add i32 %353, i32 5;
    i32* %395 = getelementptr &(i32* %74)[i32 %394];
    i32 %396 = load i32* %395;
    i32 %397 = load i32* %393;
    i1 %398 = scmp lt i32 %396, i32 %397;
    i32 %399 = select i1 %398 ? i32 %394 : i32 %392;
    i32* %400 = getelementptr &(i32* %74)[i32 %399];
    i32 %401 = add i32 %353, i32 6;
    i32* %402 = getelementptr &(i32* %74)[i32 %401];
    i32 %403 = load i32* %402;
    i32 %404 = load i32* %400;
    i1 %405 = scmp lt i32 %403, i32 %404;
    i32 %406 = select i1 %405 ? i32 %401 : i32 %399;
    i32* %407 = getelementptr &(i32* %74)[i32 %406];
    i32 %408 = add i32 %353, i32 7;
    i32* %409 = getelementptr &(i32* %74)[i32 %408];
    i32 %410 = load i32* %409;
    i32 %411 = load i32* %407;
    i1 %412 = scmp lt i32 %410, i32 %411;
    i32 %413 = select i1 %412 ? i32 %408 : i32 %406;
    i32* %414 = getelementptr &(i32* %74)[i32 %413];
    i32 %415 = add i32 %353, i32 8;
    i32* %416 = getelementptr &(i32* %74)[i32 %415];
    i32 %417 = load i32* %416;
    i32 %418 = load i32* %414;
    i1 %419 = scmp lt i32 %417, i32 %418;
    i32 %420 = select i1 %419 ? i32 %415 : i32 %413;
    i32* %421 = getelementptr &(i32* %74)[i32 %420];
    i32 %422 = add i32 %353, i32 9;
    i32* %423 = getelementptr &(i32* %74)[i32 %422];
    i32 %424 = load i32* %423;
    i32 %425 = load i32* %421;
    i1 %426 = scmp lt i32 %424, i32 %425;
    i32 %427 = select i1 %426 ? i32 %422 : i32 %420;
    i32* %428 = getelementptr &(i32* %74)[i32 %427];
    i32 %429 = add i32 %353, i32 10;
    i32* %430 = getelementptr &(i32* %74)[i32 %429];
    i32 %431 = load i32* %430;
    i32 %432 = load i32* %428;
    i1 %433 = scmp lt i32 %431, i32 %432;
    i32 %434 = select i1 %433 ? i32 %429 : i32 %427;
    i32* %435 = getelementptr &(i32* %74)[i32 %434];
    i32 %436 = add i32 %353, i32 11;
    i32* %437 = getelementptr &(i32* %74)[i32 %436];
    i32 %438 = load i32* %437;
    i32 %439 = load i32* %435;
    i1 %440 = scmp lt i32 %438, i32 %439;
    i32 %441 = select i1 %440 ? i32 %436 : i32 %434;
    i32* %442 = getelementptr &(i32* %74)[i32 %441];
    i32 %443 = add i32 %353, i32 12;
    i32* %444 = getelementptr &(i32* %74)[i32 %443];
    i32 %445 = load i32* %444;
    i32 %446 = load i32* %442;
    i1 %447 = scmp lt i32 %445, i32 %446;
    i32 %448 = select i1 %447 ? i32 %443 : i32 %441;
    i32* %449 = getelementptr &(i32* %74)[i32 %448];
    i32 %450 = add i32 %353, i32 13;
    i32* %451 = getelementptr &(i32* %74)[i32 %450];
    i32 %452 = load i32* %451;
    i32 %453 = load i32* %449;
    i1 %454 = scmp lt i32 %452, i32 %453;
    i32 %455 = select i1 %454 ? i32 %450 : i32 %448;
    i32* %456 = getelementptr &(i32* %74)[i32 %455];
    i32 %457 = add i32 %353, i32 14;
    i32* %458 = getelementptr &(i32* %74)[i32 %457];
    i32 %459 = load i32* %458;
    i32 %460 = load i32* %456;
    i1 %461 = scmp lt i32 %459, i32 %460;
    i32 %462 = select i1 %461 ? i32 %457 : i32 %455;
    i32* %463 = getelementptr &(i32* %74)[i32 %462];
    i32 %464 = add i32 %353, i32 15;
    i32* %465 = getelementptr &(i32* %74)[i32 %464];
    i32 %466 = load i32* %465;
    i32 %467 = load i32* %463;
    i1 %468 = scmp lt i32 %466, i32 %467;
    i32 %469 = select i1 %468 ? i32 %464 : i32 %462;
    ubr ^super.header2;
  ^b21:
    i32 %470 = add i32 %119, i32 1;
    ubr ^while.header9;
  ^while.body16:
    i32 %471 = phi [^super.header2, i32 %352] [^while.body16, i32 %478];
    i32 %472 = phi [^super.header2, i32 %353] [^while.body16, i32 %479];
    i32* %473 = getelementptr &(i32* %74)[i32 %472];
    i32 %474 = load i32* %473;
    i32* %475 = getelementptr &(i32* %74)[i32 %471];
    i32 %476 = load i32* %475;
    i1 %477 = scmp lt i32 %474, i32 %476;
    i32 %478 = select i1 %477 ? i32 %472 : i32 %471;
    i32 %479 = add i32 %472, i32 1;
    i1 %480 = scmp lt i32 %479, i32 %20;
    cbr i1 %480(prob = 0.97), ^while.body16, ^b18;
}
