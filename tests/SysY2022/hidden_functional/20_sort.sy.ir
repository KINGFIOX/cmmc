internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal [400020 * i32]* @cnt;
internal [100005 * i32]* @a;
internal [100005 * i32]* @b;
internal [100005 * i32]* @c;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    i32 %0 = call () -> i32 @getch();
    ubr ^while.header;
^while.header:
    i32 %1 = phi [^entry, i32 0] [^while.body, i32 %7];
    i32 %2 = phi [^entry, i32 %0] [^while.body, i32 %8];
    i1 %3 = scmp lt i32 %2, i32 48;
    cbr i1 %3(prob = 0.5), ^b1, ^b;
^b:
    i1 %4 = scmp gt i32 %2, i32 57;
    ubr ^b1;
^b1:
    i1 %5 = phi [^while.header, i1 true] [^b, i1 %4];
    cbr i1 %5(prob = 0.97), ^while.body, ^while.header1;
^while.body:
    i1 %6 = scmp eq i32 %2, i32 45;
    i32 %7 = select i1 %6 ? i32 1 : i32 %1;
    i32 %8 = call () -> i32 @getch();
    ubr ^while.header;
^while.header1:
    i32 %9 = phi [^b1, i32 0] [^while.body1, i32 %16];
    i32 %10 = phi [^b1, i32 %2] [^while.body1, i32 %17];
    i1 %11 = scmp gt i32 %10, i32 47;
    cbr i1 %11(prob = 0.5), ^b2, ^b3;
^b2:
    i1 %12 = scmp le i32 %10, i32 57;
    ubr ^b3;
^b3:
    i1 %13 = phi [^while.header1, i1 false] [^b2, i1 %12];
    cbr i1 %13(prob = 0.97), ^while.body1, ^b4;
^while.body1:
    i32 %14 = mul i32 %9, i32 10;
    i32 %15 = add i32 %10, i32 -48;
    i32 %16 = add i32 %15, i32 %14;
    i32 %17 = call () -> i32 @getch();
    ubr ^while.header1;
^b4:
    i1 %18 = scmp neq i32 %1, i32 0;
    cbr i1 %18(prob = 0.5), ^if.then, ^b5;
^if.then:
    i32 %19 = neg i32 %9;
    ubr ^b5;
^b5:
    i32 %20 = phi [^b4, i32 %9] [^if.then, i32 %19];
    i1 %21 = scmp neq i32 %20, i32 0;
    cbr i1 %21(prob = 0.97), ^while.body2, ^b6;
^while.body2:
    i32 %22 = phi [^b5, i32 0] [^b16, i32 %87];
    i32* %23 = getelementptr &([100005 * i32]* @a)[i64 0][i32 %22];
    i32 %24 = call () -> i32 @getch();
    ubr ^while.header2;
^b6:
    i32* %25 = getelementptr &([100005 * i32]* @a)[i64 0][i64 0];
    ubr ^while.header3;
^while.header2:
    i32 %26 = phi [^while.body2, i32 0] [^while.body4, i32 %37];
    i32 %27 = phi [^while.body2, i32 %24] [^while.body4, i32 %38];
    i1 %28 = scmp lt i32 %27, i32 48;
    cbr i1 %28(prob = 0.5), ^b8, ^b7;
^while.header3:
    i32 %29 = phi [^b6, i32 0] [^while.header5, i32 %33];
    i1 %30 = scmp lt i32 %29, i32 %20;
    cbr i1 %30(prob = 0.97), ^while.body3, ^b9;
^b7:
    i1 %31 = scmp gt i32 %27, i32 57;
    ubr ^b8;
^while.body3:
    i32* %32 = getelementptr &(i32* %25)[i32 %29];
    i32 %33 = add i32 %29, i32 1;
    ubr ^while.header5;
^b8:
    i1 %34 = phi [^while.header2, i1 true] [^b7, i1 %31];
    cbr i1 %34(prob = 0.97), ^while.body4, ^while.header4;
^b9:
    i32* %35 = getelementptr &([100005 * i32]* @b)[i64 0][i64 0];
    ubr ^while.header6;
^while.body4:
    i1 %36 = scmp eq i32 %27, i32 45;
    i32 %37 = select i1 %36 ? i32 1 : i32 %26;
    i32 %38 = call () -> i32 @getch();
    ubr ^while.header2;
^while.header4:
    i32 %39 = phi [^b8, i32 0] [^while.body7, i32 %67];
    i32 %40 = phi [^b8, i32 %27] [^while.body7, i32 %68];
    i1 %41 = scmp gt i32 %40, i32 47;
    cbr i1 %41(prob = 0.5), ^b10, ^b11;
^while.header5:
    i32 %42 = phi [^while.body3, i32 %33] [^b12, i32 %69];
    i1 %43 = scmp lt i32 %42, i32 %20;
    cbr i1 %43(prob = 0.97), ^while.body6, ^while.header3;
^while.header6:
    i32 %44 = phi [^b9, i32 -100] [^while.body5, i32 %54];
    i32 %45 = phi [^b9, i32 0] [^while.body5, i32 %55];
    i1 %46 = scmp lt i32 %45, i32 %20;
    cbr i1 %46(prob = 0.97), ^while.body5, ^while.header7;
^b10:
    i1 %47 = scmp le i32 %40, i32 57;
    ubr ^b11;
^while.body5:
    i32* %48 = getelementptr &(i32* %35)[i32 %45];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &([400020 * i32]* @cnt)[i64 0][i32 %49];
    i32 %51 = load i32* %50;
    i32 %52 = add i32 %51, i32 1;
    store i32* %50 with i32 %52;
    i1 %53 = scmp gt i32 %49, i32 %44;
    i32 %54 = select i1 %53 ? i32 %49 : i32 %44;
    i32 %55 = add i32 %45, i32 1;
    ubr ^while.header6;
^while.body6:
    i32 %56 = load i32* %32;
    i32* %57 = getelementptr &(i32* %25)[i32 %42];
    i32 %58 = load i32* %57;
    i1 %59 = scmp gt i32 %56, i32 %58;
    cbr i1 %59(prob = 0.5), ^if.then1, ^b12;
^b11:
    i1 %60 = phi [^while.header4, i1 false] [^b10, i1 %47];
    cbr i1 %60(prob = 0.97), ^while.body7, ^b14;
^while.header7:
    i32 %61 = phi [^while.header6, i32 0] [^b15, i32 %76];
    i32 %62 = phi [^while.header6, i32 0] [^b15, i32 %77];
    i1 %63 = scmp le i32 %62, i32 %44;
    cbr i1 %63(prob = 0.97), ^while.body8, ^b13;
^if.then1:
    i32 %64 = load i32* %32;
    store i32* %32 with i32 %58;
    store i32* %57 with i32 %64;
    ubr ^b12;
^while.body7:
    i32 %65 = mul i32 %39, i32 10;
    i32 %66 = add i32 %40, i32 -48;
    i32 %67 = add i32 %66, i32 %65;
    i32 %68 = call () -> i32 @getch();
    ubr ^while.header4;
^b12:
    i32 %69 = add i32 %42, i32 1;
    ubr ^while.header5;
^b13:
    i32* %70 = getelementptr &([100005 * i32]* @c)[i64 0][i64 0];
    ubr ^while.header8;
^b14:
    i1 %71 = scmp neq i32 %26, i32 0;
    cbr i1 %71(prob = 0.5), ^if.then2, ^b16;
^while.body8:
    i32* %72 = getelementptr &([400020 * i32]* @cnt)[i64 0][i32 %62];
    i32 %73 = load i32* %72;
    i1 %74 = scmp neq i32 %73, i32 0;
    cbr i1 %74(prob = 0.97), ^while.body9, ^b15;
^if.then2:
    i32 %75 = neg i32 %39;
    ubr ^b16;
^b15:
    i32 %76 = phi [^while.body8, i32 %61] [^while.body9, i32 %81];
    i32 %77 = add i32 %62, i32 1;
    ubr ^while.header7;
^while.body9:
    i32 %78 = phi [^while.body8, i32 %73] [^while.body9, i32 %82];
    i32 %79 = phi [^while.body8, i32 %61] [^while.body9, i32 %81];
    i32* %80 = getelementptr &(i32* %35)[i32 %79];
    store i32* %80 with i32 %62;
    i32 %81 = add i32 %79, i32 1;
    i32 %82 = add i32 %78, i32 -1;
    i1 %83 = scmp neq i32 %82, i32 0;
    cbr i1 %83(prob = 0.97), ^while.body9, ^b15;
^b16:
    i32 %84 = phi [^b14, i32 %39] [^if.then2, i32 %75];
    store i32* %23 with i32 %84;
    i32* %85 = getelementptr &([100005 * i32]* @b)[i64 0][i32 %22];
    store i32* %85 with i32 %84;
    i32* %86 = getelementptr &([100005 * i32]* @c)[i64 0][i32 %22];
    store i32* %86 with i32 %84;
    i32 %87 = add i32 %22, i32 1;
    i1 %88 = scmp neq i32 %87, i32 %20;
    cbr i1 %88(prob = 0.97), ^while.body2, ^b6;
^while.header8:
    i32 %89 = phi [^b13, i32 0] [^b18, i32 %91];
    i1 %90 = scmp lt i32 %89, i32 %20;
    cbr i1 %90(prob = 0.97), ^while.body10, ^b17;
^while.body10:
    i32 %91 = add i32 %89, i32 1;
    i1 %92 = scmp lt i32 %91, i32 %20;
    cbr i1 %92(prob = 0.97), ^super.header, ^b18;
^b17:
    cbr i1 %21(prob = 0.97), ^while.body11, ^while.header9;
^b18:
    i32 %93 = phi [^while.body10, i32 %89] [^while.body16, i32 %474];
    i32* %94 = getelementptr &(i32* %70)[i32 %89];
    i32 %95 = load i32* %94;
    i32* %96 = getelementptr &(i32* %70)[i32 %93];
    i32 %97 = load i32* %96;
    store i32* %94 with i32 %97;
    store i32* %96 with i32 %95;
    ubr ^while.header8;
^super.header:
    i32 %98 = phi [^while.body10, i32 %91] [^while.body12, i32 %100];
    i32 %99 = phi [^while.body10, i32 %89] [^while.body12, i32 %228];
    i32 %100 = add i32 %98, i32 16;
    i1 %101 = scmp lt i32 %100, i32 %20;
    cbr i1 %101(prob = 0.67), ^while.body12, ^super.header1;
^while.body11:
    i32 %102 = phi [^b17, i32 0] [^while.body11, i32 %112];
    i32* %103 = getelementptr &([100005 * i32]* @b)[i64 0][i32 %102];
    i32 %104 = load i32* %103;
    i32* %105 = getelementptr &([100005 * i32]* @a)[i64 0][i32 %102];
    i32 %106 = load i32* %105;
    i32 %107 = sub i32 %104, i32 %106;
    store i32* %103 with i32 %107;
    i32* %108 = getelementptr &([100005 * i32]* @c)[i64 0][i32 %102];
    i32 %109 = load i32* %108;
    i32 %110 = sub i32 %109, i32 %107;
    i32 %111 = sub i32 %110, i32 %106;
    store i32* %108 with i32 %111;
    i32 %112 = add i32 %102, i32 1;
    i32 %113 = sub i32 %20, i32 %112;
    i1 %114 = scmp neq i32 %113, i32 0;
    cbr i1 %114(prob = 0.97), ^while.body11, ^while.header9;
^while.header9:
    i32 %115 = phi [^b17, i32 0] [^while.body11, i32 0] [^b21, i32 %466];
    i32 %116 = sub i32 %115, i32 %20;
    i1 %117 = scmp neq i32 %116, i32 0;
    cbr i1 %117(prob = 0.97), ^while.body13, ^b19;
^while.body12:
    i32* %118 = getelementptr &(i32* %70)[i32 %98];
    i32 %119 = load i32* %118;
    i32* %120 = getelementptr &(i32* %70)[i32 %99];
    i32 %121 = load i32* %120;
    i1 %122 = scmp lt i32 %119, i32 %121;
    i32 %123 = select i1 %122 ? i32 %98 : i32 %99;
    i32 %124 = add i32 %98, i32 1;
    i32* %125 = getelementptr &(i32* %70)[i32 %124];
    i32 %126 = load i32* %125;
    i32* %127 = getelementptr &(i32* %70)[i32 %123];
    i32 %128 = load i32* %127;
    i1 %129 = scmp lt i32 %126, i32 %128;
    i32 %130 = select i1 %129 ? i32 %124 : i32 %123;
    i32 %131 = add i32 %98, i32 2;
    i32* %132 = getelementptr &(i32* %70)[i32 %131];
    i32 %133 = load i32* %132;
    i32* %134 = getelementptr &(i32* %70)[i32 %130];
    i32 %135 = load i32* %134;
    i1 %136 = scmp lt i32 %133, i32 %135;
    i32 %137 = select i1 %136 ? i32 %131 : i32 %130;
    i32 %138 = add i32 %98, i32 3;
    i32* %139 = getelementptr &(i32* %70)[i32 %138];
    i32 %140 = load i32* %139;
    i32* %141 = getelementptr &(i32* %70)[i32 %137];
    i32 %142 = load i32* %141;
    i1 %143 = scmp lt i32 %140, i32 %142;
    i32 %144 = select i1 %143 ? i32 %138 : i32 %137;
    i32 %145 = add i32 %98, i32 4;
    i32* %146 = getelementptr &(i32* %70)[i32 %145];
    i32 %147 = load i32* %146;
    i32* %148 = getelementptr &(i32* %70)[i32 %144];
    i32 %149 = load i32* %148;
    i1 %150 = scmp lt i32 %147, i32 %149;
    i32 %151 = select i1 %150 ? i32 %145 : i32 %144;
    i32 %152 = add i32 %98, i32 5;
    i32* %153 = getelementptr &(i32* %70)[i32 %152];
    i32 %154 = load i32* %153;
    i32* %155 = getelementptr &(i32* %70)[i32 %151];
    i32 %156 = load i32* %155;
    i1 %157 = scmp lt i32 %154, i32 %156;
    i32 %158 = select i1 %157 ? i32 %152 : i32 %151;
    i32 %159 = add i32 %98, i32 6;
    i32* %160 = getelementptr &(i32* %70)[i32 %159];
    i32 %161 = load i32* %160;
    i32* %162 = getelementptr &(i32* %70)[i32 %158];
    i32 %163 = load i32* %162;
    i1 %164 = scmp lt i32 %161, i32 %163;
    i32 %165 = select i1 %164 ? i32 %159 : i32 %158;
    i32 %166 = add i32 %98, i32 7;
    i32* %167 = getelementptr &(i32* %70)[i32 %166];
    i32 %168 = load i32* %167;
    i32* %169 = getelementptr &(i32* %70)[i32 %165];
    i32 %170 = load i32* %169;
    i1 %171 = scmp lt i32 %168, i32 %170;
    i32 %172 = select i1 %171 ? i32 %166 : i32 %165;
    i32 %173 = add i32 %98, i32 8;
    i32* %174 = getelementptr &(i32* %70)[i32 %173];
    i32 %175 = load i32* %174;
    i32* %176 = getelementptr &(i32* %70)[i32 %172];
    i32 %177 = load i32* %176;
    i1 %178 = scmp lt i32 %175, i32 %177;
    i32 %179 = select i1 %178 ? i32 %173 : i32 %172;
    i32 %180 = add i32 %98, i32 9;
    i32* %181 = getelementptr &(i32* %70)[i32 %180];
    i32 %182 = load i32* %181;
    i32* %183 = getelementptr &(i32* %70)[i32 %179];
    i32 %184 = load i32* %183;
    i1 %185 = scmp lt i32 %182, i32 %184;
    i32 %186 = select i1 %185 ? i32 %180 : i32 %179;
    i32 %187 = add i32 %98, i32 10;
    i32* %188 = getelementptr &(i32* %70)[i32 %187];
    i32 %189 = load i32* %188;
    i32* %190 = getelementptr &(i32* %70)[i32 %186];
    i32 %191 = load i32* %190;
    i1 %192 = scmp lt i32 %189, i32 %191;
    i32 %193 = select i1 %192 ? i32 %187 : i32 %186;
    i32 %194 = add i32 %98, i32 11;
    i32* %195 = getelementptr &(i32* %70)[i32 %194];
    i32 %196 = load i32* %195;
    i32* %197 = getelementptr &(i32* %70)[i32 %193];
    i32 %198 = load i32* %197;
    i1 %199 = scmp lt i32 %196, i32 %198;
    i32 %200 = select i1 %199 ? i32 %194 : i32 %193;
    i32 %201 = add i32 %98, i32 12;
    i32* %202 = getelementptr &(i32* %70)[i32 %201];
    i32 %203 = load i32* %202;
    i32* %204 = getelementptr &(i32* %70)[i32 %200];
    i32 %205 = load i32* %204;
    i1 %206 = scmp lt i32 %203, i32 %205;
    i32 %207 = select i1 %206 ? i32 %201 : i32 %200;
    i32 %208 = add i32 %98, i32 13;
    i32* %209 = getelementptr &(i32* %70)[i32 %208];
    i32 %210 = load i32* %209;
    i32* %211 = getelementptr &(i32* %70)[i32 %207];
    i32 %212 = load i32* %211;
    i1 %213 = scmp lt i32 %210, i32 %212;
    i32 %214 = select i1 %213 ? i32 %208 : i32 %207;
    i32 %215 = add i32 %98, i32 14;
    i32* %216 = getelementptr &(i32* %70)[i32 %215];
    i32 %217 = load i32* %216;
    i32* %218 = getelementptr &(i32* %70)[i32 %214];
    i32 %219 = load i32* %218;
    i1 %220 = scmp lt i32 %217, i32 %219;
    i32 %221 = select i1 %220 ? i32 %215 : i32 %214;
    i32 %222 = add i32 %98, i32 15;
    i32* %223 = getelementptr &(i32* %70)[i32 %222];
    i32 %224 = load i32* %223;
    i32* %225 = getelementptr &(i32* %70)[i32 %221];
    i32 %226 = load i32* %225;
    i1 %227 = scmp lt i32 %224, i32 %226;
    i32 %228 = select i1 %227 ? i32 %222 : i32 %221;
    ubr ^super.header;
^super.header1:
    i32 %229 = phi [^super.header, i32 %98] [^while.body14, i32 %231];
    i32 %230 = phi [^super.header, i32 %99] [^while.body14, i32 %347];
    i32 %231 = add i32 %229, i32 16;
    i1 %232 = scmp lt i32 %231, i32 %20;
    cbr i1 %232(prob = 0.67), ^while.body14, ^super.header2;
^while.body13:
    i32* %233 = getelementptr &([100005 * i32]* @b)[i64 0][i32 %115];
    i32 %234 = load i32* %233;
    i1 %235 = scmp neq i32 %234, i32 0;
    cbr i1 %235(prob = 0.5), ^b19, ^b20;
^b19:
    i32 %236 = phi [^while.header9, i32 -123] [^while.body13, i32 1] [^b20, i32 2];
    ret i32 %236;
^while.body14:
    i32* %237 = getelementptr &(i32* %70)[i32 %229];
    i32 %238 = load i32* %237;
    i32* %239 = getelementptr &(i32* %70)[i32 %230];
    i32 %240 = load i32* %239;
    i1 %241 = scmp lt i32 %238, i32 %240;
    i32 %242 = select i1 %241 ? i32 %229 : i32 %230;
    i32 %243 = add i32 %229, i32 1;
    i32* %244 = getelementptr &(i32* %70)[i32 %243];
    i32 %245 = load i32* %244;
    i32* %246 = getelementptr &(i32* %70)[i32 %242];
    i32 %247 = load i32* %246;
    i1 %248 = scmp lt i32 %245, i32 %247;
    i32 %249 = select i1 %248 ? i32 %243 : i32 %242;
    i32 %250 = add i32 %229, i32 2;
    i32* %251 = getelementptr &(i32* %70)[i32 %250];
    i32 %252 = load i32* %251;
    i32* %253 = getelementptr &(i32* %70)[i32 %249];
    i32 %254 = load i32* %253;
    i1 %255 = scmp lt i32 %252, i32 %254;
    i32 %256 = select i1 %255 ? i32 %250 : i32 %249;
    i32 %257 = add i32 %229, i32 3;
    i32* %258 = getelementptr &(i32* %70)[i32 %257];
    i32 %259 = load i32* %258;
    i32* %260 = getelementptr &(i32* %70)[i32 %256];
    i32 %261 = load i32* %260;
    i1 %262 = scmp lt i32 %259, i32 %261;
    i32 %263 = select i1 %262 ? i32 %257 : i32 %256;
    i32 %264 = add i32 %229, i32 4;
    i32* %265 = getelementptr &(i32* %70)[i32 %264];
    i32 %266 = load i32* %265;
    i32* %267 = getelementptr &(i32* %70)[i32 %263];
    i32 %268 = load i32* %267;
    i1 %269 = scmp lt i32 %266, i32 %268;
    i32 %270 = select i1 %269 ? i32 %264 : i32 %263;
    i32 %271 = add i32 %229, i32 5;
    i32* %272 = getelementptr &(i32* %70)[i32 %271];
    i32 %273 = load i32* %272;
    i32* %274 = getelementptr &(i32* %70)[i32 %270];
    i32 %275 = load i32* %274;
    i1 %276 = scmp lt i32 %273, i32 %275;
    i32 %277 = select i1 %276 ? i32 %271 : i32 %270;
    i32 %278 = add i32 %229, i32 6;
    i32* %279 = getelementptr &(i32* %70)[i32 %278];
    i32 %280 = load i32* %279;
    i32* %281 = getelementptr &(i32* %70)[i32 %277];
    i32 %282 = load i32* %281;
    i1 %283 = scmp lt i32 %280, i32 %282;
    i32 %284 = select i1 %283 ? i32 %278 : i32 %277;
    i32 %285 = add i32 %229, i32 7;
    i32* %286 = getelementptr &(i32* %70)[i32 %285];
    i32 %287 = load i32* %286;
    i32* %288 = getelementptr &(i32* %70)[i32 %284];
    i32 %289 = load i32* %288;
    i1 %290 = scmp lt i32 %287, i32 %289;
    i32 %291 = select i1 %290 ? i32 %285 : i32 %284;
    i32 %292 = add i32 %229, i32 8;
    i32* %293 = getelementptr &(i32* %70)[i32 %292];
    i32 %294 = load i32* %293;
    i32* %295 = getelementptr &(i32* %70)[i32 %291];
    i32 %296 = load i32* %295;
    i1 %297 = scmp lt i32 %294, i32 %296;
    i32 %298 = select i1 %297 ? i32 %292 : i32 %291;
    i32 %299 = add i32 %229, i32 9;
    i32* %300 = getelementptr &(i32* %70)[i32 %299];
    i32 %301 = load i32* %300;
    i32* %302 = getelementptr &(i32* %70)[i32 %298];
    i32 %303 = load i32* %302;
    i1 %304 = scmp lt i32 %301, i32 %303;
    i32 %305 = select i1 %304 ? i32 %299 : i32 %298;
    i32 %306 = add i32 %229, i32 10;
    i32* %307 = getelementptr &(i32* %70)[i32 %306];
    i32 %308 = load i32* %307;
    i32* %309 = getelementptr &(i32* %70)[i32 %305];
    i32 %310 = load i32* %309;
    i1 %311 = scmp lt i32 %308, i32 %310;
    i32 %312 = select i1 %311 ? i32 %306 : i32 %305;
    i32 %313 = add i32 %229, i32 11;
    i32* %314 = getelementptr &(i32* %70)[i32 %313];
    i32 %315 = load i32* %314;
    i32* %316 = getelementptr &(i32* %70)[i32 %312];
    i32 %317 = load i32* %316;
    i1 %318 = scmp lt i32 %315, i32 %317;
    i32 %319 = select i1 %318 ? i32 %313 : i32 %312;
    i32 %320 = add i32 %229, i32 12;
    i32* %321 = getelementptr &(i32* %70)[i32 %320];
    i32 %322 = load i32* %321;
    i32* %323 = getelementptr &(i32* %70)[i32 %319];
    i32 %324 = load i32* %323;
    i1 %325 = scmp lt i32 %322, i32 %324;
    i32 %326 = select i1 %325 ? i32 %320 : i32 %319;
    i32 %327 = add i32 %229, i32 13;
    i32* %328 = getelementptr &(i32* %70)[i32 %327];
    i32 %329 = load i32* %328;
    i32* %330 = getelementptr &(i32* %70)[i32 %326];
    i32 %331 = load i32* %330;
    i1 %332 = scmp lt i32 %329, i32 %331;
    i32 %333 = select i1 %332 ? i32 %327 : i32 %326;
    i32 %334 = add i32 %229, i32 14;
    i32* %335 = getelementptr &(i32* %70)[i32 %334];
    i32 %336 = load i32* %335;
    i32* %337 = getelementptr &(i32* %70)[i32 %333];
    i32 %338 = load i32* %337;
    i1 %339 = scmp lt i32 %336, i32 %338;
    i32 %340 = select i1 %339 ? i32 %334 : i32 %333;
    i32 %341 = add i32 %229, i32 15;
    i32* %342 = getelementptr &(i32* %70)[i32 %341];
    i32 %343 = load i32* %342;
    i32* %344 = getelementptr &(i32* %70)[i32 %340];
    i32 %345 = load i32* %344;
    i1 %346 = scmp lt i32 %343, i32 %345;
    i32 %347 = select i1 %346 ? i32 %341 : i32 %340;
    ubr ^super.header1;
^super.header2:
    i32 %348 = phi [^super.header1, i32 %229] [^while.body15, i32 %350];
    i32 %349 = phi [^super.header1, i32 %230] [^while.body15, i32 %465];
    i32 %350 = add i32 %348, i32 16;
    i1 %351 = scmp lt i32 %350, i32 %20;
    cbr i1 %351(prob = 0.67), ^while.body15, ^while.body16;
^b20:
    i32* %352 = getelementptr &([100005 * i32]* @c)[i64 0][i32 %115];
    i32 %353 = load i32* %352;
    i1 %354 = scmp neq i32 %353, i32 0;
    cbr i1 %354(prob = 0.5), ^b19, ^b21;
^while.body15:
    i32* %355 = getelementptr &(i32* %70)[i32 %348];
    i32 %356 = load i32* %355;
    i32* %357 = getelementptr &(i32* %70)[i32 %349];
    i32 %358 = load i32* %357;
    i1 %359 = scmp lt i32 %356, i32 %358;
    i32 %360 = select i1 %359 ? i32 %348 : i32 %349;
    i32 %361 = add i32 %348, i32 1;
    i32* %362 = getelementptr &(i32* %70)[i32 %361];
    i32 %363 = load i32* %362;
    i32* %364 = getelementptr &(i32* %70)[i32 %360];
    i32 %365 = load i32* %364;
    i1 %366 = scmp lt i32 %363, i32 %365;
    i32 %367 = select i1 %366 ? i32 %361 : i32 %360;
    i32 %368 = add i32 %348, i32 2;
    i32* %369 = getelementptr &(i32* %70)[i32 %368];
    i32 %370 = load i32* %369;
    i32* %371 = getelementptr &(i32* %70)[i32 %367];
    i32 %372 = load i32* %371;
    i1 %373 = scmp lt i32 %370, i32 %372;
    i32 %374 = select i1 %373 ? i32 %368 : i32 %367;
    i32 %375 = add i32 %348, i32 3;
    i32* %376 = getelementptr &(i32* %70)[i32 %375];
    i32 %377 = load i32* %376;
    i32* %378 = getelementptr &(i32* %70)[i32 %374];
    i32 %379 = load i32* %378;
    i1 %380 = scmp lt i32 %377, i32 %379;
    i32 %381 = select i1 %380 ? i32 %375 : i32 %374;
    i32 %382 = add i32 %348, i32 4;
    i32* %383 = getelementptr &(i32* %70)[i32 %382];
    i32 %384 = load i32* %383;
    i32* %385 = getelementptr &(i32* %70)[i32 %381];
    i32 %386 = load i32* %385;
    i1 %387 = scmp lt i32 %384, i32 %386;
    i32 %388 = select i1 %387 ? i32 %382 : i32 %381;
    i32 %389 = add i32 %348, i32 5;
    i32* %390 = getelementptr &(i32* %70)[i32 %389];
    i32 %391 = load i32* %390;
    i32* %392 = getelementptr &(i32* %70)[i32 %388];
    i32 %393 = load i32* %392;
    i1 %394 = scmp lt i32 %391, i32 %393;
    i32 %395 = select i1 %394 ? i32 %389 : i32 %388;
    i32 %396 = add i32 %348, i32 6;
    i32* %397 = getelementptr &(i32* %70)[i32 %396];
    i32 %398 = load i32* %397;
    i32* %399 = getelementptr &(i32* %70)[i32 %395];
    i32 %400 = load i32* %399;
    i1 %401 = scmp lt i32 %398, i32 %400;
    i32 %402 = select i1 %401 ? i32 %396 : i32 %395;
    i32 %403 = add i32 %348, i32 7;
    i32* %404 = getelementptr &(i32* %70)[i32 %403];
    i32 %405 = load i32* %404;
    i32* %406 = getelementptr &(i32* %70)[i32 %402];
    i32 %407 = load i32* %406;
    i1 %408 = scmp lt i32 %405, i32 %407;
    i32 %409 = select i1 %408 ? i32 %403 : i32 %402;
    i32 %410 = add i32 %348, i32 8;
    i32* %411 = getelementptr &(i32* %70)[i32 %410];
    i32 %412 = load i32* %411;
    i32* %413 = getelementptr &(i32* %70)[i32 %409];
    i32 %414 = load i32* %413;
    i1 %415 = scmp lt i32 %412, i32 %414;
    i32 %416 = select i1 %415 ? i32 %410 : i32 %409;
    i32 %417 = add i32 %348, i32 9;
    i32* %418 = getelementptr &(i32* %70)[i32 %417];
    i32 %419 = load i32* %418;
    i32* %420 = getelementptr &(i32* %70)[i32 %416];
    i32 %421 = load i32* %420;
    i1 %422 = scmp lt i32 %419, i32 %421;
    i32 %423 = select i1 %422 ? i32 %417 : i32 %416;
    i32 %424 = add i32 %348, i32 10;
    i32* %425 = getelementptr &(i32* %70)[i32 %424];
    i32 %426 = load i32* %425;
    i32* %427 = getelementptr &(i32* %70)[i32 %423];
    i32 %428 = load i32* %427;
    i1 %429 = scmp lt i32 %426, i32 %428;
    i32 %430 = select i1 %429 ? i32 %424 : i32 %423;
    i32 %431 = add i32 %348, i32 11;
    i32* %432 = getelementptr &(i32* %70)[i32 %431];
    i32 %433 = load i32* %432;
    i32* %434 = getelementptr &(i32* %70)[i32 %430];
    i32 %435 = load i32* %434;
    i1 %436 = scmp lt i32 %433, i32 %435;
    i32 %437 = select i1 %436 ? i32 %431 : i32 %430;
    i32 %438 = add i32 %348, i32 12;
    i32* %439 = getelementptr &(i32* %70)[i32 %438];
    i32 %440 = load i32* %439;
    i32* %441 = getelementptr &(i32* %70)[i32 %437];
    i32 %442 = load i32* %441;
    i1 %443 = scmp lt i32 %440, i32 %442;
    i32 %444 = select i1 %443 ? i32 %438 : i32 %437;
    i32 %445 = add i32 %348, i32 13;
    i32* %446 = getelementptr &(i32* %70)[i32 %445];
    i32 %447 = load i32* %446;
    i32* %448 = getelementptr &(i32* %70)[i32 %444];
    i32 %449 = load i32* %448;
    i1 %450 = scmp lt i32 %447, i32 %449;
    i32 %451 = select i1 %450 ? i32 %445 : i32 %444;
    i32 %452 = add i32 %348, i32 14;
    i32* %453 = getelementptr &(i32* %70)[i32 %452];
    i32 %454 = load i32* %453;
    i32* %455 = getelementptr &(i32* %70)[i32 %451];
    i32 %456 = load i32* %455;
    i1 %457 = scmp lt i32 %454, i32 %456;
    i32 %458 = select i1 %457 ? i32 %452 : i32 %451;
    i32 %459 = add i32 %348, i32 15;
    i32* %460 = getelementptr &(i32* %70)[i32 %459];
    i32 %461 = load i32* %460;
    i32* %462 = getelementptr &(i32* %70)[i32 %458];
    i32 %463 = load i32* %462;
    i1 %464 = scmp lt i32 %461, i32 %463;
    i32 %465 = select i1 %464 ? i32 %459 : i32 %458;
    ubr ^super.header2;
^b21:
    i32 %466 = add i32 %115, i32 1;
    ubr ^while.header9;
^while.body16:
    i32 %467 = phi [^super.header2, i32 %348] [^while.body16, i32 %475];
    i32 %468 = phi [^super.header2, i32 %349] [^while.body16, i32 %474];
    i32* %469 = getelementptr &(i32* %70)[i32 %467];
    i32 %470 = load i32* %469;
    i32* %471 = getelementptr &(i32* %70)[i32 %468];
    i32 %472 = load i32* %471;
    i1 %473 = scmp lt i32 %470, i32 %472;
    i32 %474 = select i1 %473 ? i32 %467 : i32 %468;
    i32 %475 = add i32 %467, i32 1;
    i1 %476 = scmp lt i32 %475, i32 %20;
    cbr i1 %476(prob = 0.97), ^while.body16, ^b18;
}
