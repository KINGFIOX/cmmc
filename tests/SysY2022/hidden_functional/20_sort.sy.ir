internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal [400020 * i32]* @cnt;
internal [100005 * i32]* @a;
internal [100005 * i32]* @b;
internal [100005 * i32]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getch();
    i1 %1 = scmp lt i32 %0, i32 48;
    i1 %2 = scmp gt i32 %0, i32 57;
    i1 %3 = or i1 %1, i1 %2;
    cbr i1 %3(prob = 0.97), ^while.body, ^indirect;
  ^while.body:
    i32 %4 = phi [^entry, i32 %0] [^while.body, i32 %6];
    i32 %5 = phi [^entry, i32 0] [^while.body, i32 %11];
    i32 %6 = call () -> i32 @getch();
    i1 %7 = scmp lt i32 %6, i32 48;
    i1 %8 = scmp gt i32 %6, i32 57;
    i1 %9 = or i1 %7, i1 %8;
    i1 %10 = scmp eq i32 %4, i32 45;
    i32 %11 = select i1 %10 ? i32 1 : i32 %5;
    cbr i1 %9(prob = 0.97), ^while.body, ^indirect;
  ^indirect:
    i32 %12 = phi [^entry, i32 %0] [^while.body, i32 %6];
    i32 %13 = phi [^entry, i32 0] [^while.body, i32 %11];
    i1 %14 = scmp gt i32 %12, i32 47;
    i1 %15 = scmp le i32 %12, i32 57;
    i1 %16 = and i1 %14, i1 %15;
    cbr i1 %16(prob = 0.97), ^while.body1, ^b;
  ^while.body1:
    i32 %17 = phi [^indirect, i32 0] [^while.body1, i32 %25];
    i32 %18 = phi [^indirect, i32 %12] [^while.body1, i32 %19];
    i32 %19 = call () -> i32 @getch();
    i1 %20 = scmp gt i32 %19, i32 47;
    i1 %21 = scmp le i32 %19, i32 57;
    i1 %22 = and i1 %20, i1 %21;
    i32 %23 = mul i32 %17, i32 10;
    i32 %24 = add i32 %23, i32 -48;
    i32 %25 = add i32 %24, i32 %18;
    cbr i1 %22(prob = 0.97), ^while.body1, ^b;
  ^b:
    i32 %26 = phi [^indirect, i32 0] [^while.body1, i32 %25];
    i32 %27 = neg i32 %26;
    i1 %28 = scmp neq i32 %13, i32 0;
    i32 %29 = select i1 %28 ? i32 %27 : i32 %26;
    i1 %30 = scmp neq i32 %29, i32 0;
    [100005 * i32]* %31 = ptrcast [100005 * i32]* @a to [100005 * i32]*;
    [100005 * i32]* %32 = ptrcast [100005 * i32]* @b to [100005 * i32]*;
    [100005 * i32]* %33 = ptrcast [100005 * i32]* @c to [100005 * i32]*;
    cbr i1 %30(prob = 0.97), ^while.body2, ^b1;
  ^b1:
    i32* %34 = getelementptr &([100005 * i32]* %31)[i64 0][i64 0];
    ubr ^while.header;
  ^while.body2:
    i32 %35 = phi [^b, i32 0] [^b3, i32 %75];
    i32 %36 = call () -> i32 @getch();
    i1 %37 = scmp lt i32 %36, i32 48;
    i1 %38 = scmp gt i32 %36, i32 57;
    i1 %39 = or i1 %37, i1 %38;
    i32* %40 = getelementptr &([100005 * i32]* %31)[i64 0][i32 %35];
    cbr i1 %39(prob = 0.97), ^while.body3, ^indirect1;
  ^while.body3:
    i32 %41 = phi [^while.body2, i32 %36] [^while.body3, i32 %43];
    i32 %42 = phi [^while.body2, i32 0] [^while.body3, i32 %48];
    i32 %43 = call () -> i32 @getch();
    i1 %44 = scmp lt i32 %43, i32 48;
    i1 %45 = scmp gt i32 %43, i32 57;
    i1 %46 = or i1 %44, i1 %45;
    i1 %47 = scmp eq i32 %41, i32 45;
    i32 %48 = select i1 %47 ? i32 1 : i32 %42;
    cbr i1 %46(prob = 0.97), ^while.body3, ^indirect1;
  ^indirect1:
    i32 %49 = phi [^while.body2, i32 %36] [^while.body3, i32 %43];
    i32 %50 = phi [^while.body2, i32 0] [^while.body3, i32 %48];
    i1 %51 = scmp gt i32 %49, i32 47;
    i1 %52 = scmp le i32 %49, i32 57;
    i1 %53 = and i1 %51, i1 %52;
    cbr i1 %53(prob = 0.97), ^while.body5, ^b3;
  ^while.header:
    i32 %54 = phi [^b1, i32 0] [^while.header1, i32 %57];
    i1 %55 = scmp lt i32 %54, i32 %29;
    cbr i1 %55(prob = 0.97), ^while.body4, ^b2;
  ^while.body4:
    i32* %56 = getelementptr &(i32* %34)[i32 %54];
    i32 %57 = add i32 %54, i32 1;
    ubr ^while.header1;
  ^b2:
    i32* %58 = getelementptr &([100005 * i32]* %32)[i64 0][i64 0];
    [400020 * i32]* %59 = ptrcast [400020 * i32]* @cnt to [400020 * i32]*;
    ubr ^while.header2;
  ^while.body5:
    i32 %60 = phi [^indirect1, i32 0] [^while.body5, i32 %68];
    i32 %61 = phi [^indirect1, i32 %49] [^while.body5, i32 %62];
    i32 %62 = call () -> i32 @getch();
    i1 %63 = scmp gt i32 %62, i32 47;
    i1 %64 = scmp le i32 %62, i32 57;
    i1 %65 = and i1 %63, i1 %64;
    i32 %66 = mul i32 %60, i32 10;
    i32 %67 = add i32 %66, i32 -48;
    i32 %68 = add i32 %67, i32 %61;
    cbr i1 %65(prob = 0.97), ^while.body5, ^b3;
  ^b3:
    i32 %69 = phi [^indirect1, i32 0] [^while.body5, i32 %68];
    i32 %70 = neg i32 %69;
    i1 %71 = scmp neq i32 %50, i32 0;
    i32 %72 = select i1 %71 ? i32 %70 : i32 %69;
    store i32* %40 with i32 %72;
    i32* %73 = getelementptr &([100005 * i32]* %32)[i64 0][i32 %35];
    store i32* %73 with i32 %72;
    i32* %74 = getelementptr &([100005 * i32]* %33)[i64 0][i32 %35];
    store i32* %74 with i32 %72;
    i32 %75 = add i32 %35, i32 1;
    i1 %76 = scmp neq i32 %75, i32 %29;
    cbr i1 %76(prob = 0.97), ^while.body2, ^b1;
  ^while.header1:
    i32 %77 = phi [^while.body4, i32 %57] [^b4, i32 %97];
    i1 %78 = scmp lt i32 %77, i32 %29;
    cbr i1 %78(prob = 0.97), ^while.body7, ^while.header;
  ^while.header2:
    i32 %79 = phi [^b2, i32 0] [^while.body6, i32 %88];
    i32 %80 = phi [^b2, i32 -100] [^while.body6, i32 %87];
    i1 %81 = scmp lt i32 %79, i32 %29;
    cbr i1 %81(prob = 0.97), ^while.body6, ^while.header3;
  ^while.body6:
    i32* %82 = getelementptr &(i32* %58)[i32 %79];
    i32 %83 = load i32* %82;
    i32* %84 = getelementptr &([400020 * i32]* %59)[i64 0][i32 %83];
    i32 %85 = load i32* %84;
    i32 %86 = add i32 %85, i32 1;
    store i32* %84 with i32 %86;
    i32 %87 = smax i32 %83, i32 %80;
    i32 %88 = add i32 %79, i32 1;
    ubr ^while.header2;
  ^while.body7:
    i32 %89 = load i32* %56;
    i32* %90 = getelementptr &(i32* %34)[i32 %77];
    i32 %91 = load i32* %90;
    i1 %92 = scmp gt i32 %89, i32 %91;
    cbr i1 %92(prob = 0.5), ^if.then, ^b4;
  ^while.header3:
    i32 %93 = phi [^while.header2, i32 0] [^b6, i32 %102];
    i32 %94 = phi [^while.header2, i32 0] [^b6, i32 %103];
    i1 %95 = scmp le i32 %94, i32 %80;
    cbr i1 %95(prob = 0.97), ^while.body8, ^b5;
  ^if.then:
    i32 %96 = load i32* %56;
    store i32* %56 with i32 %91;
    store i32* %90 with i32 %96;
    ubr ^b4;
  ^b4:
    i32 %97 = add i32 %77, i32 1;
    ubr ^while.header1;
  ^b5:
    i32* %98 = getelementptr &([100005 * i32]* %33)[i64 0][i64 0];
    ubr ^while.header4;
  ^while.body8:
    i32* %99 = getelementptr &([400020 * i32]* %59)[i64 0][i32 %94];
    i32 %100 = load i32* %99;
    i1 %101 = scmp neq i32 %100, i32 0;
    cbr i1 %101(prob = 0.97), ^while.body9, ^b6;
  ^b6:
    i32 %102 = phi [^while.body8, i32 %93] [^while.body9, i32 %109];
    i32 %103 = add i32 %94, i32 1;
    ubr ^while.header3;
  ^while.body9:
    i32 %104 = phi [^while.body8, i32 %100] [^while.body9, i32 %107];
    i32 %105 = phi [^while.body8, i32 %93] [^while.body9, i32 %109];
    i32* %106 = getelementptr &(i32* %58)[i32 %105];
    store i32* %106 with i32 %94;
    i32 %107 = add i32 %104, i32 -1;
    i1 %108 = scmp neq i32 %107, i32 0;
    i32 %109 = add i32 %105, i32 1;
    cbr i1 %108(prob = 0.97), ^while.body9, ^b6;
  ^while.header4:
    i32 %110 = phi [^b5, i32 0] [^b8, i32 %112];
    i1 %111 = scmp lt i32 %110, i32 %29;
    cbr i1 %111(prob = 0.97), ^while.body10, ^b7;
  ^while.body10:
    i32 %112 = add i32 %110, i32 1;
    i1 %113 = scmp lt i32 %112, i32 %29;
    cbr i1 %113(prob = 0.97), ^super.header, ^b8;
  ^b7:
    cbr i1 %30(prob = 0.97), ^while.body11, ^while.header5;
  ^b8:
    i32 %114 = phi [^while.body10, i32 %110] [^while.body16, i32 %495];
    i32* %115 = getelementptr &(i32* %98)[i32 %110];
    i32 %116 = load i32* %115;
    i32* %117 = getelementptr &(i32* %98)[i32 %114];
    i32 %118 = load i32* %117;
    store i32* %115 with i32 %118;
    store i32* %117 with i32 %116;
    ubr ^while.header4;
  ^super.header:
    i32 %119 = phi [^while.body10, i32 %110] [^while.body12, i32 %249];
    i32 %120 = phi [^while.body10, i32 %112] [^while.body12, i32 %121];
    i32 %121 = add i32 %120, i32 16;
    i1 %122 = scmp lt i32 %121, i32 %29;
    cbr i1 %122(prob = 0.67), ^while.body12, ^super.header1;
  ^while.body11:
    i32 %123 = phi [^b7, i32 0] [^while.body11, i32 %133];
    i32* %124 = getelementptr &([100005 * i32]* %32)[i64 0][i32 %123];
    i32 %125 = load i32* %124;
    i32* %126 = getelementptr &([100005 * i32]* %31)[i64 0][i32 %123];
    i32 %127 = load i32* %126;
    i32 %128 = sub i32 %125, i32 %127;
    store i32* %124 with i32 %128;
    i32* %129 = getelementptr &([100005 * i32]* %33)[i64 0][i32 %123];
    i32 %130 = load i32* %129;
    i32 %131 = sub i32 %130, i32 %128;
    i32 %132 = sub i32 %131, i32 %127;
    store i32* %129 with i32 %132;
    i32 %133 = add i32 %123, i32 1;
    i32 %134 = sub i32 %29, i32 %133;
    i1 %135 = scmp neq i32 %134, i32 0;
    cbr i1 %135(prob = 0.97), ^while.body11, ^while.header5;
  ^while.header5:
    i32 %136 = phi [^b7, i32 0] [^while.body11, i32 0] [^b11, i32 %487];
    i32 %137 = sub i32 %136, i32 %29;
    i1 %138 = scmp neq i32 %137, i32 0;
    cbr i1 %138(prob = 0.97), ^while.body13, ^b9;
  ^while.body12:
    i32* %139 = getelementptr &(i32* %98)[i32 %120];
    i32 %140 = load i32* %139;
    i32* %141 = getelementptr &(i32* %98)[i32 %119];
    i32 %142 = load i32* %141;
    i1 %143 = scmp lt i32 %140, i32 %142;
    i32 %144 = select i1 %143 ? i32 %120 : i32 %119;
    i32* %145 = getelementptr &(i32* %98)[i32 %144];
    i32 %146 = add i32 %120, i32 1;
    i32* %147 = getelementptr &(i32* %98)[i32 %146];
    i32 %148 = load i32* %147;
    i32 %149 = load i32* %145;
    i1 %150 = scmp lt i32 %148, i32 %149;
    i32 %151 = select i1 %150 ? i32 %146 : i32 %144;
    i32* %152 = getelementptr &(i32* %98)[i32 %151];
    i32 %153 = add i32 %120, i32 2;
    i32* %154 = getelementptr &(i32* %98)[i32 %153];
    i32 %155 = load i32* %154;
    i32 %156 = load i32* %152;
    i1 %157 = scmp lt i32 %155, i32 %156;
    i32 %158 = select i1 %157 ? i32 %153 : i32 %151;
    i32* %159 = getelementptr &(i32* %98)[i32 %158];
    i32 %160 = add i32 %120, i32 3;
    i32* %161 = getelementptr &(i32* %98)[i32 %160];
    i32 %162 = load i32* %161;
    i32 %163 = load i32* %159;
    i1 %164 = scmp lt i32 %162, i32 %163;
    i32 %165 = select i1 %164 ? i32 %160 : i32 %158;
    i32* %166 = getelementptr &(i32* %98)[i32 %165];
    i32 %167 = add i32 %120, i32 4;
    i32* %168 = getelementptr &(i32* %98)[i32 %167];
    i32 %169 = load i32* %168;
    i32 %170 = load i32* %166;
    i1 %171 = scmp lt i32 %169, i32 %170;
    i32 %172 = select i1 %171 ? i32 %167 : i32 %165;
    i32* %173 = getelementptr &(i32* %98)[i32 %172];
    i32 %174 = add i32 %120, i32 5;
    i32* %175 = getelementptr &(i32* %98)[i32 %174];
    i32 %176 = load i32* %175;
    i32 %177 = load i32* %173;
    i1 %178 = scmp lt i32 %176, i32 %177;
    i32 %179 = select i1 %178 ? i32 %174 : i32 %172;
    i32* %180 = getelementptr &(i32* %98)[i32 %179];
    i32 %181 = add i32 %120, i32 6;
    i32* %182 = getelementptr &(i32* %98)[i32 %181];
    i32 %183 = load i32* %182;
    i32 %184 = load i32* %180;
    i1 %185 = scmp lt i32 %183, i32 %184;
    i32 %186 = select i1 %185 ? i32 %181 : i32 %179;
    i32* %187 = getelementptr &(i32* %98)[i32 %186];
    i32 %188 = add i32 %120, i32 7;
    i32* %189 = getelementptr &(i32* %98)[i32 %188];
    i32 %190 = load i32* %189;
    i32 %191 = load i32* %187;
    i1 %192 = scmp lt i32 %190, i32 %191;
    i32 %193 = select i1 %192 ? i32 %188 : i32 %186;
    i32* %194 = getelementptr &(i32* %98)[i32 %193];
    i32 %195 = add i32 %120, i32 8;
    i32* %196 = getelementptr &(i32* %98)[i32 %195];
    i32 %197 = load i32* %196;
    i32 %198 = load i32* %194;
    i1 %199 = scmp lt i32 %197, i32 %198;
    i32 %200 = select i1 %199 ? i32 %195 : i32 %193;
    i32* %201 = getelementptr &(i32* %98)[i32 %200];
    i32 %202 = add i32 %120, i32 9;
    i32* %203 = getelementptr &(i32* %98)[i32 %202];
    i32 %204 = load i32* %203;
    i32 %205 = load i32* %201;
    i1 %206 = scmp lt i32 %204, i32 %205;
    i32 %207 = select i1 %206 ? i32 %202 : i32 %200;
    i32* %208 = getelementptr &(i32* %98)[i32 %207];
    i32 %209 = add i32 %120, i32 10;
    i32* %210 = getelementptr &(i32* %98)[i32 %209];
    i32 %211 = load i32* %210;
    i32 %212 = load i32* %208;
    i1 %213 = scmp lt i32 %211, i32 %212;
    i32 %214 = select i1 %213 ? i32 %209 : i32 %207;
    i32* %215 = getelementptr &(i32* %98)[i32 %214];
    i32 %216 = add i32 %120, i32 11;
    i32* %217 = getelementptr &(i32* %98)[i32 %216];
    i32 %218 = load i32* %217;
    i32 %219 = load i32* %215;
    i1 %220 = scmp lt i32 %218, i32 %219;
    i32 %221 = select i1 %220 ? i32 %216 : i32 %214;
    i32* %222 = getelementptr &(i32* %98)[i32 %221];
    i32 %223 = add i32 %120, i32 12;
    i32* %224 = getelementptr &(i32* %98)[i32 %223];
    i32 %225 = load i32* %224;
    i32 %226 = load i32* %222;
    i1 %227 = scmp lt i32 %225, i32 %226;
    i32 %228 = select i1 %227 ? i32 %223 : i32 %221;
    i32* %229 = getelementptr &(i32* %98)[i32 %228];
    i32 %230 = add i32 %120, i32 13;
    i32* %231 = getelementptr &(i32* %98)[i32 %230];
    i32 %232 = load i32* %231;
    i32 %233 = load i32* %229;
    i1 %234 = scmp lt i32 %232, i32 %233;
    i32 %235 = select i1 %234 ? i32 %230 : i32 %228;
    i32* %236 = getelementptr &(i32* %98)[i32 %235];
    i32 %237 = add i32 %120, i32 14;
    i32* %238 = getelementptr &(i32* %98)[i32 %237];
    i32 %239 = load i32* %238;
    i32 %240 = load i32* %236;
    i1 %241 = scmp lt i32 %239, i32 %240;
    i32 %242 = select i1 %241 ? i32 %237 : i32 %235;
    i32* %243 = getelementptr &(i32* %98)[i32 %242];
    i32 %244 = add i32 %120, i32 15;
    i32* %245 = getelementptr &(i32* %98)[i32 %244];
    i32 %246 = load i32* %245;
    i32 %247 = load i32* %243;
    i1 %248 = scmp lt i32 %246, i32 %247;
    i32 %249 = select i1 %248 ? i32 %244 : i32 %242;
    ubr ^super.header;
  ^super.header1:
    i32 %250 = phi [^super.header, i32 %119] [^while.body14, i32 %368];
    i32 %251 = phi [^super.header, i32 %120] [^while.body14, i32 %252];
    i32 %252 = add i32 %251, i32 16;
    i1 %253 = scmp lt i32 %252, i32 %29;
    cbr i1 %253(prob = 0.67), ^while.body14, ^super.header2;
  ^while.body13:
    i32* %254 = getelementptr &([100005 * i32]* %32)[i64 0][i32 %136];
    i32 %255 = load i32* %254;
    i1 %256 = scmp neq i32 %255, i32 0;
    cbr i1 %256(prob = 0.5), ^b9, ^b10;
  ^b9:
    i32 %257 = phi [^while.header5, i32 -123] [^while.body13, i32 1] [^b10, i32 2];
    ret i32 %257;
  ^while.body14:
    i32* %258 = getelementptr &(i32* %98)[i32 %251];
    i32 %259 = load i32* %258;
    i32* %260 = getelementptr &(i32* %98)[i32 %250];
    i32 %261 = load i32* %260;
    i1 %262 = scmp lt i32 %259, i32 %261;
    i32 %263 = select i1 %262 ? i32 %251 : i32 %250;
    i32* %264 = getelementptr &(i32* %98)[i32 %263];
    i32 %265 = add i32 %251, i32 1;
    i32* %266 = getelementptr &(i32* %98)[i32 %265];
    i32 %267 = load i32* %266;
    i32 %268 = load i32* %264;
    i1 %269 = scmp lt i32 %267, i32 %268;
    i32 %270 = select i1 %269 ? i32 %265 : i32 %263;
    i32* %271 = getelementptr &(i32* %98)[i32 %270];
    i32 %272 = add i32 %251, i32 2;
    i32* %273 = getelementptr &(i32* %98)[i32 %272];
    i32 %274 = load i32* %273;
    i32 %275 = load i32* %271;
    i1 %276 = scmp lt i32 %274, i32 %275;
    i32 %277 = select i1 %276 ? i32 %272 : i32 %270;
    i32* %278 = getelementptr &(i32* %98)[i32 %277];
    i32 %279 = add i32 %251, i32 3;
    i32* %280 = getelementptr &(i32* %98)[i32 %279];
    i32 %281 = load i32* %280;
    i32 %282 = load i32* %278;
    i1 %283 = scmp lt i32 %281, i32 %282;
    i32 %284 = select i1 %283 ? i32 %279 : i32 %277;
    i32* %285 = getelementptr &(i32* %98)[i32 %284];
    i32 %286 = add i32 %251, i32 4;
    i32* %287 = getelementptr &(i32* %98)[i32 %286];
    i32 %288 = load i32* %287;
    i32 %289 = load i32* %285;
    i1 %290 = scmp lt i32 %288, i32 %289;
    i32 %291 = select i1 %290 ? i32 %286 : i32 %284;
    i32* %292 = getelementptr &(i32* %98)[i32 %291];
    i32 %293 = add i32 %251, i32 5;
    i32* %294 = getelementptr &(i32* %98)[i32 %293];
    i32 %295 = load i32* %294;
    i32 %296 = load i32* %292;
    i1 %297 = scmp lt i32 %295, i32 %296;
    i32 %298 = select i1 %297 ? i32 %293 : i32 %291;
    i32* %299 = getelementptr &(i32* %98)[i32 %298];
    i32 %300 = add i32 %251, i32 6;
    i32* %301 = getelementptr &(i32* %98)[i32 %300];
    i32 %302 = load i32* %301;
    i32 %303 = load i32* %299;
    i1 %304 = scmp lt i32 %302, i32 %303;
    i32 %305 = select i1 %304 ? i32 %300 : i32 %298;
    i32* %306 = getelementptr &(i32* %98)[i32 %305];
    i32 %307 = add i32 %251, i32 7;
    i32* %308 = getelementptr &(i32* %98)[i32 %307];
    i32 %309 = load i32* %308;
    i32 %310 = load i32* %306;
    i1 %311 = scmp lt i32 %309, i32 %310;
    i32 %312 = select i1 %311 ? i32 %307 : i32 %305;
    i32* %313 = getelementptr &(i32* %98)[i32 %312];
    i32 %314 = add i32 %251, i32 8;
    i32* %315 = getelementptr &(i32* %98)[i32 %314];
    i32 %316 = load i32* %315;
    i32 %317 = load i32* %313;
    i1 %318 = scmp lt i32 %316, i32 %317;
    i32 %319 = select i1 %318 ? i32 %314 : i32 %312;
    i32* %320 = getelementptr &(i32* %98)[i32 %319];
    i32 %321 = add i32 %251, i32 9;
    i32* %322 = getelementptr &(i32* %98)[i32 %321];
    i32 %323 = load i32* %322;
    i32 %324 = load i32* %320;
    i1 %325 = scmp lt i32 %323, i32 %324;
    i32 %326 = select i1 %325 ? i32 %321 : i32 %319;
    i32* %327 = getelementptr &(i32* %98)[i32 %326];
    i32 %328 = add i32 %251, i32 10;
    i32* %329 = getelementptr &(i32* %98)[i32 %328];
    i32 %330 = load i32* %329;
    i32 %331 = load i32* %327;
    i1 %332 = scmp lt i32 %330, i32 %331;
    i32 %333 = select i1 %332 ? i32 %328 : i32 %326;
    i32* %334 = getelementptr &(i32* %98)[i32 %333];
    i32 %335 = add i32 %251, i32 11;
    i32* %336 = getelementptr &(i32* %98)[i32 %335];
    i32 %337 = load i32* %336;
    i32 %338 = load i32* %334;
    i1 %339 = scmp lt i32 %337, i32 %338;
    i32 %340 = select i1 %339 ? i32 %335 : i32 %333;
    i32* %341 = getelementptr &(i32* %98)[i32 %340];
    i32 %342 = add i32 %251, i32 12;
    i32* %343 = getelementptr &(i32* %98)[i32 %342];
    i32 %344 = load i32* %343;
    i32 %345 = load i32* %341;
    i1 %346 = scmp lt i32 %344, i32 %345;
    i32 %347 = select i1 %346 ? i32 %342 : i32 %340;
    i32* %348 = getelementptr &(i32* %98)[i32 %347];
    i32 %349 = add i32 %251, i32 13;
    i32* %350 = getelementptr &(i32* %98)[i32 %349];
    i32 %351 = load i32* %350;
    i32 %352 = load i32* %348;
    i1 %353 = scmp lt i32 %351, i32 %352;
    i32 %354 = select i1 %353 ? i32 %349 : i32 %347;
    i32* %355 = getelementptr &(i32* %98)[i32 %354];
    i32 %356 = add i32 %251, i32 14;
    i32* %357 = getelementptr &(i32* %98)[i32 %356];
    i32 %358 = load i32* %357;
    i32 %359 = load i32* %355;
    i1 %360 = scmp lt i32 %358, i32 %359;
    i32 %361 = select i1 %360 ? i32 %356 : i32 %354;
    i32* %362 = getelementptr &(i32* %98)[i32 %361];
    i32 %363 = add i32 %251, i32 15;
    i32* %364 = getelementptr &(i32* %98)[i32 %363];
    i32 %365 = load i32* %364;
    i32 %366 = load i32* %362;
    i1 %367 = scmp lt i32 %365, i32 %366;
    i32 %368 = select i1 %367 ? i32 %363 : i32 %361;
    ubr ^super.header1;
  ^super.header2:
    i32 %369 = phi [^super.header1, i32 %250] [^while.body15, i32 %486];
    i32 %370 = phi [^super.header1, i32 %251] [^while.body15, i32 %371];
    i32 %371 = add i32 %370, i32 16;
    i1 %372 = scmp lt i32 %371, i32 %29;
    cbr i1 %372(prob = 0.67), ^while.body15, ^while.body16;
  ^b10:
    i32* %373 = getelementptr &([100005 * i32]* %33)[i64 0][i32 %136];
    i32 %374 = load i32* %373;
    i1 %375 = scmp neq i32 %374, i32 0;
    cbr i1 %375(prob = 0.5), ^b9, ^b11;
  ^while.body15:
    i32* %376 = getelementptr &(i32* %98)[i32 %370];
    i32 %377 = load i32* %376;
    i32* %378 = getelementptr &(i32* %98)[i32 %369];
    i32 %379 = load i32* %378;
    i1 %380 = scmp lt i32 %377, i32 %379;
    i32 %381 = select i1 %380 ? i32 %370 : i32 %369;
    i32* %382 = getelementptr &(i32* %98)[i32 %381];
    i32 %383 = add i32 %370, i32 1;
    i32* %384 = getelementptr &(i32* %98)[i32 %383];
    i32 %385 = load i32* %384;
    i32 %386 = load i32* %382;
    i1 %387 = scmp lt i32 %385, i32 %386;
    i32 %388 = select i1 %387 ? i32 %383 : i32 %381;
    i32* %389 = getelementptr &(i32* %98)[i32 %388];
    i32 %390 = add i32 %370, i32 2;
    i32* %391 = getelementptr &(i32* %98)[i32 %390];
    i32 %392 = load i32* %391;
    i32 %393 = load i32* %389;
    i1 %394 = scmp lt i32 %392, i32 %393;
    i32 %395 = select i1 %394 ? i32 %390 : i32 %388;
    i32* %396 = getelementptr &(i32* %98)[i32 %395];
    i32 %397 = add i32 %370, i32 3;
    i32* %398 = getelementptr &(i32* %98)[i32 %397];
    i32 %399 = load i32* %398;
    i32 %400 = load i32* %396;
    i1 %401 = scmp lt i32 %399, i32 %400;
    i32 %402 = select i1 %401 ? i32 %397 : i32 %395;
    i32* %403 = getelementptr &(i32* %98)[i32 %402];
    i32 %404 = add i32 %370, i32 4;
    i32* %405 = getelementptr &(i32* %98)[i32 %404];
    i32 %406 = load i32* %405;
    i32 %407 = load i32* %403;
    i1 %408 = scmp lt i32 %406, i32 %407;
    i32 %409 = select i1 %408 ? i32 %404 : i32 %402;
    i32* %410 = getelementptr &(i32* %98)[i32 %409];
    i32 %411 = add i32 %370, i32 5;
    i32* %412 = getelementptr &(i32* %98)[i32 %411];
    i32 %413 = load i32* %412;
    i32 %414 = load i32* %410;
    i1 %415 = scmp lt i32 %413, i32 %414;
    i32 %416 = select i1 %415 ? i32 %411 : i32 %409;
    i32* %417 = getelementptr &(i32* %98)[i32 %416];
    i32 %418 = add i32 %370, i32 6;
    i32* %419 = getelementptr &(i32* %98)[i32 %418];
    i32 %420 = load i32* %419;
    i32 %421 = load i32* %417;
    i1 %422 = scmp lt i32 %420, i32 %421;
    i32 %423 = select i1 %422 ? i32 %418 : i32 %416;
    i32* %424 = getelementptr &(i32* %98)[i32 %423];
    i32 %425 = add i32 %370, i32 7;
    i32* %426 = getelementptr &(i32* %98)[i32 %425];
    i32 %427 = load i32* %426;
    i32 %428 = load i32* %424;
    i1 %429 = scmp lt i32 %427, i32 %428;
    i32 %430 = select i1 %429 ? i32 %425 : i32 %423;
    i32* %431 = getelementptr &(i32* %98)[i32 %430];
    i32 %432 = add i32 %370, i32 8;
    i32* %433 = getelementptr &(i32* %98)[i32 %432];
    i32 %434 = load i32* %433;
    i32 %435 = load i32* %431;
    i1 %436 = scmp lt i32 %434, i32 %435;
    i32 %437 = select i1 %436 ? i32 %432 : i32 %430;
    i32* %438 = getelementptr &(i32* %98)[i32 %437];
    i32 %439 = add i32 %370, i32 9;
    i32* %440 = getelementptr &(i32* %98)[i32 %439];
    i32 %441 = load i32* %440;
    i32 %442 = load i32* %438;
    i1 %443 = scmp lt i32 %441, i32 %442;
    i32 %444 = select i1 %443 ? i32 %439 : i32 %437;
    i32* %445 = getelementptr &(i32* %98)[i32 %444];
    i32 %446 = add i32 %370, i32 10;
    i32* %447 = getelementptr &(i32* %98)[i32 %446];
    i32 %448 = load i32* %447;
    i32 %449 = load i32* %445;
    i1 %450 = scmp lt i32 %448, i32 %449;
    i32 %451 = select i1 %450 ? i32 %446 : i32 %444;
    i32* %452 = getelementptr &(i32* %98)[i32 %451];
    i32 %453 = add i32 %370, i32 11;
    i32* %454 = getelementptr &(i32* %98)[i32 %453];
    i32 %455 = load i32* %454;
    i32 %456 = load i32* %452;
    i1 %457 = scmp lt i32 %455, i32 %456;
    i32 %458 = select i1 %457 ? i32 %453 : i32 %451;
    i32* %459 = getelementptr &(i32* %98)[i32 %458];
    i32 %460 = add i32 %370, i32 12;
    i32* %461 = getelementptr &(i32* %98)[i32 %460];
    i32 %462 = load i32* %461;
    i32 %463 = load i32* %459;
    i1 %464 = scmp lt i32 %462, i32 %463;
    i32 %465 = select i1 %464 ? i32 %460 : i32 %458;
    i32* %466 = getelementptr &(i32* %98)[i32 %465];
    i32 %467 = add i32 %370, i32 13;
    i32* %468 = getelementptr &(i32* %98)[i32 %467];
    i32 %469 = load i32* %468;
    i32 %470 = load i32* %466;
    i1 %471 = scmp lt i32 %469, i32 %470;
    i32 %472 = select i1 %471 ? i32 %467 : i32 %465;
    i32* %473 = getelementptr &(i32* %98)[i32 %472];
    i32 %474 = add i32 %370, i32 14;
    i32* %475 = getelementptr &(i32* %98)[i32 %474];
    i32 %476 = load i32* %475;
    i32 %477 = load i32* %473;
    i1 %478 = scmp lt i32 %476, i32 %477;
    i32 %479 = select i1 %478 ? i32 %474 : i32 %472;
    i32* %480 = getelementptr &(i32* %98)[i32 %479];
    i32 %481 = add i32 %370, i32 15;
    i32* %482 = getelementptr &(i32* %98)[i32 %481];
    i32 %483 = load i32* %482;
    i32 %484 = load i32* %480;
    i1 %485 = scmp lt i32 %483, i32 %484;
    i32 %486 = select i1 %485 ? i32 %481 : i32 %479;
    ubr ^super.header2;
  ^b11:
    i32 %487 = add i32 %136, i32 1;
    ubr ^while.header5;
  ^while.body16:
    i32 %488 = phi [^super.header2, i32 %369] [^while.body16, i32 %495];
    i32 %489 = phi [^super.header2, i32 %370] [^while.body16, i32 %496];
    i32* %490 = getelementptr &(i32* %98)[i32 %489];
    i32 %491 = load i32* %490;
    i32* %492 = getelementptr &(i32* %98)[i32 %488];
    i32 %493 = load i32* %492;
    i1 %494 = scmp lt i32 %491, i32 %493;
    i32 %495 = select i1 %494 ? i32 %489 : i32 %488;
    i32 %496 = add i32 %489, i32 1;
    i1 %497 = scmp lt i32 %496, i32 %29;
    cbr i1 %497(prob = 0.97), ^while.body16, ^b8;
}
