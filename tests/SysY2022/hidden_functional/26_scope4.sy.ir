internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry():
    ubr [ ^while.body i32 1352, i32 49, i32 2, i32 0 ];
^while.body(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3):
    i32 %0 = add i32 %arg, i32 %arg2;
    i32 %1 = add i32 %arg1, i32 1;
    i32 %2 = add i32 %0, i32 %1;
    i32 %3 = add i32 %arg1, i32 2;
    i32 %4 = add i32 %2, i32 %3;
    i32 %5 = add i32 %4, i32 %1;
    i32 %6 = add i32 %5, i32 %1;
    i32 %7 = add i32 %6, i32 2;
    i32 %8 = add i32 %arg1, i32 4;
    i32 %9 = add i32 %7, i32 %8;
    i32 %10 = add i32 %arg1, i32 5;
    i32 %11 = add i32 %9, i32 %10;
    i32 %12 = add i32 %arg1, i32 6;
    i32 %13 = add i32 %11, i32 %10;
    i1 %14 = scmp eq i32 %arg3, i32 1;
    cbr i1 %14, [ ^indirect i32 %arg3, i32 %13, i32 %12, i32 %arg2 ], [ ^indirect1 i32 %arg3, i32 %12, i32 %13, i32 %arg2 ];
^indirect(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3):
    i32 %0 = add i32 %arg2, i32 1;
    i32 %1 = add i32 %arg1, i32 %0;
    i32 %2 = add i32 %arg2, i32 2;
    i32 %3 = add i32 %1, i32 %2;
    i32 %4 = add i32 %arg2, i32 3;
    i32 %5 = add i32 %3, i32 %4;
    i32 %6 = add i32 %5, i32 %2;
    i32 %7 = add i32 %6, i32 %2;
    i32 %8 = add i32 %7, i32 2;
    i32 %9 = add i32 %arg2, i32 5;
    i32 %10 = add i32 %8, i32 %9;
    i32 %11 = add i32 %arg2, i32 6;
    i32 %12 = add i32 %10, i32 %11;
    i32 %13 = add i32 %arg2, i32 7;
    i32 %14 = add i32 %12, i32 %11;
    i32 %15 = add i32 %arg, i32 1;
    i1 %16 = scmp lt i32 %15, i32 3;
    cbr i1 %16, [ ^while.body i32 %14, i32 %13, i32 %arg3, i32 %15 ], [ ^b i32 %14 ];
^indirect1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3):
    i32 %0 = add i32 %arg2, i32 %arg3;
    i32 %1 = add i32 %arg1, i32 1;
    i32 %2 = add i32 %0, i32 %1;
    i32 %3 = add i32 %arg1, i32 2;
    i32 %4 = add i32 %2, i32 %3;
    i32 %5 = add i32 %4, i32 %1;
    i32 %6 = add i32 %5, i32 %1;
    i32 %7 = add i32 %6, i32 2;
    i32 %8 = add i32 %arg1, i32 4;
    i32 %9 = add i32 %7, i32 %8;
    i32 %10 = add i32 %arg1, i32 5;
    i32 %11 = add i32 %9, i32 %10;
    i32 %12 = add i32 %11, i32 %10;
    i32 %13 = add i32 %arg1, i32 7;
    i32 %14 = add i32 %arg, i32 1;
    i1 %15 = scmp lt i32 %14, i32 3;
    cbr i1 %15, [ ^while.body i32 %12, i32 %13, i32 %13, i32 %14 ], [ ^b i32 %12 ];
^b(i32 %arg):
    call (i32) -> void @putint(i32 %arg);
    ret i32 0;
}
