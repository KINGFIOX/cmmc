internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal i32* @N { ReadOnly } = 100;
internal i32* @M { ReadOnly } = 20;
internal [20 * [100 * i32]]* @array;
func @main() -> i32 { Entry } {
^entry:
    i32* %j = alloc i32;
    i32* %sum = alloc i32;
    i32* %i = alloc i32;
    store i32* %i with i32 0;
    store i32* %sum with i32 0;
    ubr ^while.header;
^while.header:
    i32 %0 = load i32* %i;
    i1 %1 = scmp lt i32 %0, i32 20;
    i32 %2 = zext i1 %1 to i32;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3(prob = 0.97), ^while.body, ^b;
^while.body:
    store i32* %j with i32 0;
    ubr ^while.header1;
^b:
    [100 * i32]* %4 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 0];
    [100 * i32]* %5 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 1];
    [100 * i32]* %6 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 2];
    [100 * i32]* %7 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 3];
    [100 * i32]* %8 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 4];
    [100 * i32]* %9 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 5];
    [100 * i32]* %10 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 6];
    [100 * i32]* %11 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 7];
    [100 * i32]* %12 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 8];
    [100 * i32]* %13 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 9];
    [100 * i32]* %14 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 10];
    [100 * i32]* %15 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 11];
    [100 * i32]* %16 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 12];
    [100 * i32]* %17 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 13];
    [100 * i32]* %18 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 14];
    [100 * i32]* %19 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 15];
    [100 * i32]* %20 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 16];
    [100 * i32]* %21 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 17];
    [100 * i32]* %22 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 18];
    [100 * i32]* %23 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 19];
    i32* %24 = getelementptr &([100 * i32]* %23)[i64 0][i64 23];
    i32 %25 = load i32* %24;
    i64 %26 = sext i32 %25 to i64;
    i32* %27 = getelementptr &([100 * i32]* %22)[i64 0][i64 %26];
    i32 %28 = load i32* %27;
    i64 %29 = sext i32 %28 to i64;
    i32* %30 = getelementptr &([100 * i32]* %21)[i64 0][i64 %29];
    i32 %31 = load i32* %30;
    i64 %32 = sext i32 %31 to i64;
    i32* %33 = getelementptr &([100 * i32]* %20)[i64 0][i64 %32];
    i32 %34 = load i32* %33;
    i64 %35 = sext i32 %34 to i64;
    i32* %36 = getelementptr &([100 * i32]* %19)[i64 0][i64 %35];
    i32 %37 = load i32* %36;
    i64 %38 = sext i32 %37 to i64;
    i32* %39 = getelementptr &([100 * i32]* %18)[i64 0][i64 %38];
    i32 %40 = load i32* %39;
    i64 %41 = sext i32 %40 to i64;
    i32* %42 = getelementptr &([100 * i32]* %17)[i64 0][i64 %41];
    i32 %43 = load i32* %42;
    i64 %44 = sext i32 %43 to i64;
    i32* %45 = getelementptr &([100 * i32]* %16)[i64 0][i64 %44];
    i32 %46 = load i32* %45;
    i64 %47 = sext i32 %46 to i64;
    i32* %48 = getelementptr &([100 * i32]* %15)[i64 0][i64 %47];
    i32 %49 = load i32* %48;
    i64 %50 = sext i32 %49 to i64;
    i32* %51 = getelementptr &([100 * i32]* %14)[i64 0][i64 %50];
    i32 %52 = load i32* %51;
    i64 %53 = sext i32 %52 to i64;
    i32* %54 = getelementptr &([100 * i32]* %13)[i64 0][i64 %53];
    i32 %55 = load i32* %54;
    i64 %56 = sext i32 %55 to i64;
    i32* %57 = getelementptr &([100 * i32]* %12)[i64 0][i64 %56];
    i32 %58 = load i32* %57;
    i64 %59 = sext i32 %58 to i64;
    i32* %60 = getelementptr &([100 * i32]* %11)[i64 0][i64 %59];
    i32 %61 = load i32* %60;
    i64 %62 = sext i32 %61 to i64;
    i32* %63 = getelementptr &([100 * i32]* %10)[i64 0][i64 %62];
    i32 %64 = load i32* %63;
    i64 %65 = sext i32 %64 to i64;
    i32* %66 = getelementptr &([100 * i32]* %9)[i64 0][i64 %65];
    i32 %67 = load i32* %66;
    i64 %68 = sext i32 %67 to i64;
    i32* %69 = getelementptr &([100 * i32]* %8)[i64 0][i64 %68];
    i32 %70 = load i32* %69;
    i64 %71 = sext i32 %70 to i64;
    i32* %72 = getelementptr &([100 * i32]* %7)[i64 0][i64 %71];
    i32 %73 = load i32* %72;
    i64 %74 = sext i32 %73 to i64;
    i32* %75 = getelementptr &([100 * i32]* %6)[i64 0][i64 %74];
    i32 %76 = load i32* %75;
    i64 %77 = sext i32 %76 to i64;
    i32* %78 = getelementptr &([100 * i32]* %5)[i64 0][i64 %77];
    i32 %79 = load i32* %78;
    i64 %80 = sext i32 %79 to i64;
    i32* %81 = getelementptr &([100 * i32]* %4)[i64 0][i64 %80];
    i32 %82 = load i32* %81;
    [100 * i32]* %83 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 19];
    i32* %84 = getelementptr &([100 * i32]* %83)[i64 0][i64 18];
    i32 %85 = load i32* %84;
    i64 %86 = sext i32 %85 to i64;
    [100 * i32]* %87 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %86];
    i32* %88 = getelementptr &([100 * i32]* %87)[i64 0][i64 17];
    i32 %89 = load i32* %88;
    i64 %90 = sext i32 %89 to i64;
    [100 * i32]* %91 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %90];
    i32* %92 = getelementptr &([100 * i32]* %91)[i64 0][i64 16];
    i32 %93 = load i32* %92;
    i64 %94 = sext i32 %93 to i64;
    [100 * i32]* %95 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %94];
    i32* %96 = getelementptr &([100 * i32]* %95)[i64 0][i64 15];
    i32 %97 = load i32* %96;
    i64 %98 = sext i32 %97 to i64;
    [100 * i32]* %99 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %98];
    i32* %100 = getelementptr &([100 * i32]* %99)[i64 0][i64 14];
    i32 %101 = load i32* %100;
    i64 %102 = sext i32 %101 to i64;
    [100 * i32]* %103 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %102];
    i32* %104 = getelementptr &([100 * i32]* %103)[i64 0][i64 13];
    i32 %105 = load i32* %104;
    i64 %106 = sext i32 %105 to i64;
    [100 * i32]* %107 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %106];
    i32* %108 = getelementptr &([100 * i32]* %107)[i64 0][i64 12];
    i32 %109 = load i32* %108;
    i64 %110 = sext i32 %109 to i64;
    [100 * i32]* %111 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %110];
    i32* %112 = getelementptr &([100 * i32]* %111)[i64 0][i64 11];
    i32 %113 = load i32* %112;
    i64 %114 = sext i32 %113 to i64;
    [100 * i32]* %115 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %114];
    i32* %116 = getelementptr &([100 * i32]* %115)[i64 0][i64 10];
    i32 %117 = load i32* %116;
    i64 %118 = sext i32 %117 to i64;
    [100 * i32]* %119 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %118];
    i32* %120 = getelementptr &([100 * i32]* %119)[i64 0][i64 9];
    i32 %121 = load i32* %120;
    i64 %122 = sext i32 %121 to i64;
    [100 * i32]* %123 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %122];
    i32* %124 = getelementptr &([100 * i32]* %123)[i64 0][i64 8];
    i32 %125 = load i32* %124;
    i64 %126 = sext i32 %125 to i64;
    [100 * i32]* %127 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %126];
    i32* %128 = getelementptr &([100 * i32]* %127)[i64 0][i64 7];
    i32 %129 = load i32* %128;
    i64 %130 = sext i32 %129 to i64;
    [100 * i32]* %131 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %130];
    i32* %132 = getelementptr &([100 * i32]* %131)[i64 0][i64 6];
    i32 %133 = load i32* %132;
    i64 %134 = sext i32 %133 to i64;
    [100 * i32]* %135 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %134];
    i32* %136 = getelementptr &([100 * i32]* %135)[i64 0][i64 5];
    i32 %137 = load i32* %136;
    i64 %138 = sext i32 %137 to i64;
    [100 * i32]* %139 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %138];
    i32* %140 = getelementptr &([100 * i32]* %139)[i64 0][i64 4];
    i32 %141 = load i32* %140;
    i64 %142 = sext i32 %141 to i64;
    [100 * i32]* %143 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %142];
    i32* %144 = getelementptr &([100 * i32]* %143)[i64 0][i64 3];
    i32 %145 = load i32* %144;
    i64 %146 = sext i32 %145 to i64;
    [100 * i32]* %147 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %146];
    i32* %148 = getelementptr &([100 * i32]* %147)[i64 0][i64 2];
    i32 %149 = load i32* %148;
    i64 %150 = sext i32 %149 to i64;
    [100 * i32]* %151 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %150];
    i32* %152 = getelementptr &([100 * i32]* %151)[i64 0][i64 1];
    i32 %153 = load i32* %152;
    i64 %154 = sext i32 %153 to i64;
    [100 * i32]* %155 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %154];
    i32* %156 = getelementptr &([100 * i32]* %155)[i64 0][i64 0];
    i32 %157 = load i32* %156;
    i64 %158 = sext i32 %157 to i64;
    [100 * i32]* %159 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %158];
    i32* %160 = getelementptr &([100 * i32]* %159)[i64 0][i64 56];
    i32 %161 = load i32* %160;
    i32 %162 = add i32 %82, i32 %161;
    store i32* %sum with i32 %162;
    i32 %163 = load i32* %sum;
    call (i32) -> void @putint(i32 %163);
    ret i32 0;
^while.header1:
    i32 %164 = load i32* %j;
    i1 %165 = scmp lt i32 %164, i32 100;
    i32 %166 = zext i1 %165 to i32;
    i1 %167 = scmp neq i32 %166, i32 0;
    cbr i1 %167(prob = 0.97), ^while.body1, ^b1;
^while.body1:
    i32 %168 = load i32* %i;
    i64 %169 = sext i32 %168 to i64;
    [100 * i32]* %170 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 %169];
    i32 %171 = load i32* %j;
    i64 %172 = sext i32 %171 to i64;
    i32* %173 = getelementptr &([100 * i32]* %170)[i64 0][i64 %172];
    i32 %174 = load i32* %j;
    store i32* %173 with i32 %174;
    i32 %175 = load i32* %j;
    i32 %176 = add i32 %175, i32 1;
    store i32* %j with i32 %176;
    ubr ^while.header1;
^b1:
    i32 %177 = load i32* %i;
    i32 %178 = add i32 %177, i32 1;
    store i32* %i with i32 %178;
    ubr ^while.header;
}
