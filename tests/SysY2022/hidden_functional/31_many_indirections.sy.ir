internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal [20 * [100 * i32]]* @array;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    ubr ^while.header;
^while.header:
    i32 %0 = phi [^entry, i32 0] [^while.body1, i32 %163];
    i1 %1 = scmp lt i32 %0, i32 20;
    cbr i1 %1(prob = 0.97), ^indirect, ^b;
^indirect:
    [100 * i32]* %2 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %0];
    ubr ^while.body;
^b:
    [100 * i32]* %3 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 0];
    [100 * i32]* %4 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 1];
    [100 * i32]* %5 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 2];
    [100 * i32]* %6 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 3];
    [100 * i32]* %7 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 4];
    [100 * i32]* %8 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 5];
    [100 * i32]* %9 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 6];
    [100 * i32]* %10 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 7];
    [100 * i32]* %11 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 8];
    [100 * i32]* %12 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 9];
    [100 * i32]* %13 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 10];
    [100 * i32]* %14 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 11];
    [100 * i32]* %15 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 12];
    [100 * i32]* %16 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 13];
    [100 * i32]* %17 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 14];
    [100 * i32]* %18 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 15];
    [100 * i32]* %19 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 16];
    [100 * i32]* %20 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 17];
    [100 * i32]* %21 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 18];
    i32* %22 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 19][i64 23];
    i32 %23 = load i32* %22;
    i32* %24 = getelementptr &([100 * i32]* %21)[i64 0][i32 %23];
    i32 %25 = load i32* %24;
    i32* %26 = getelementptr &([100 * i32]* %20)[i64 0][i32 %25];
    i32 %27 = load i32* %26;
    i32* %28 = getelementptr &([100 * i32]* %19)[i64 0][i32 %27];
    i32 %29 = load i32* %28;
    i32* %30 = getelementptr &([100 * i32]* %18)[i64 0][i32 %29];
    i32 %31 = load i32* %30;
    i32* %32 = getelementptr &([100 * i32]* %17)[i64 0][i32 %31];
    i32 %33 = load i32* %32;
    i32* %34 = getelementptr &([100 * i32]* %16)[i64 0][i32 %33];
    i32 %35 = load i32* %34;
    i32* %36 = getelementptr &([100 * i32]* %15)[i64 0][i32 %35];
    i32 %37 = load i32* %36;
    i32* %38 = getelementptr &([100 * i32]* %14)[i64 0][i32 %37];
    i32 %39 = load i32* %38;
    i32* %40 = getelementptr &([100 * i32]* %13)[i64 0][i32 %39];
    i32 %41 = load i32* %40;
    i32* %42 = getelementptr &([100 * i32]* %12)[i64 0][i32 %41];
    i32 %43 = load i32* %42;
    i32* %44 = getelementptr &([100 * i32]* %11)[i64 0][i32 %43];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &([100 * i32]* %10)[i64 0][i32 %45];
    i32 %47 = load i32* %46;
    i32* %48 = getelementptr &([100 * i32]* %9)[i64 0][i32 %47];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &([100 * i32]* %8)[i64 0][i32 %49];
    i32 %51 = load i32* %50;
    i32* %52 = getelementptr &([100 * i32]* %7)[i64 0][i32 %51];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &([100 * i32]* %6)[i64 0][i32 %53];
    i32 %55 = load i32* %54;
    i32* %56 = getelementptr &([100 * i32]* %5)[i64 0][i32 %55];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &([100 * i32]* %4)[i64 0][i32 %57];
    i32 %59 = load i32* %58;
    i32* %60 = getelementptr &([100 * i32]* %3)[i64 0][i32 %59];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i64 19][i64 18];
    i32 %63 = load i32* %62;
    [100 * i32]* %64 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %63];
    i32* %65 = getelementptr &([100 * i32]* %64)[i64 0][i64 17];
    i32 %66 = load i32* %65;
    [100 * i32]* %67 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %66];
    i32* %68 = getelementptr &([100 * i32]* %67)[i64 0][i64 16];
    i32 %69 = load i32* %68;
    [100 * i32]* %70 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %69];
    i32* %71 = getelementptr &([100 * i32]* %70)[i64 0][i64 15];
    i32 %72 = load i32* %71;
    [100 * i32]* %73 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %72];
    i32* %74 = getelementptr &([100 * i32]* %73)[i64 0][i64 14];
    i32 %75 = load i32* %74;
    [100 * i32]* %76 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %75];
    i32* %77 = getelementptr &([100 * i32]* %76)[i64 0][i64 13];
    i32 %78 = load i32* %77;
    [100 * i32]* %79 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %78];
    i32* %80 = getelementptr &([100 * i32]* %79)[i64 0][i64 12];
    i32 %81 = load i32* %80;
    [100 * i32]* %82 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %81];
    i32* %83 = getelementptr &([100 * i32]* %82)[i64 0][i64 11];
    i32 %84 = load i32* %83;
    [100 * i32]* %85 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %84];
    i32* %86 = getelementptr &([100 * i32]* %85)[i64 0][i64 10];
    i32 %87 = load i32* %86;
    [100 * i32]* %88 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %87];
    i32* %89 = getelementptr &([100 * i32]* %88)[i64 0][i64 9];
    i32 %90 = load i32* %89;
    [100 * i32]* %91 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %90];
    i32* %92 = getelementptr &([100 * i32]* %91)[i64 0][i64 8];
    i32 %93 = load i32* %92;
    [100 * i32]* %94 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %93];
    i32* %95 = getelementptr &([100 * i32]* %94)[i64 0][i64 7];
    i32 %96 = load i32* %95;
    [100 * i32]* %97 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %96];
    i32* %98 = getelementptr &([100 * i32]* %97)[i64 0][i64 6];
    i32 %99 = load i32* %98;
    [100 * i32]* %100 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %99];
    i32* %101 = getelementptr &([100 * i32]* %100)[i64 0][i64 5];
    i32 %102 = load i32* %101;
    [100 * i32]* %103 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %102];
    i32* %104 = getelementptr &([100 * i32]* %103)[i64 0][i64 4];
    i32 %105 = load i32* %104;
    [100 * i32]* %106 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %105];
    i32* %107 = getelementptr &([100 * i32]* %106)[i64 0][i64 3];
    i32 %108 = load i32* %107;
    [100 * i32]* %109 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %108];
    i32* %110 = getelementptr &([100 * i32]* %109)[i64 0][i64 2];
    i32 %111 = load i32* %110;
    [100 * i32]* %112 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %111];
    i32* %113 = getelementptr &([100 * i32]* %112)[i64 0][i64 1];
    i32 %114 = load i32* %113;
    [100 * i32]* %115 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %114];
    i32* %116 = getelementptr &([100 * i32]* %115)[i64 0][i64 0];
    i32 %117 = load i32* %116;
    [100 * i32]* %118 = getelementptr &([20 * [100 * i32]]* @array)[i64 0][i32 %117];
    i32* %119 = getelementptr &([100 * i32]* %118)[i64 0][i64 56];
    i32 %120 = load i32* %119;
    i32 %121 = add i32 %120, i32 %61;
    call (i32) -> void @putint(i32 %121);
    ret i32 0;
^while.body:
    i32 %122 = phi [^indirect, i32 0] [^while.body, i32 %154];
    i32* %123 = getelementptr &([100 * i32]* %2)[i64 0][i32 %122];
    store i32* %123 with i32 %122;
    i32 %124 = add i32 %122, i32 1;
    i32* %125 = getelementptr &(i32* %123)[i64 1];
    store i32* %125 with i32 %124;
    i32 %126 = add i32 %122, i32 2;
    i32* %127 = getelementptr &(i32* %123)[i64 2];
    store i32* %127 with i32 %126;
    i32 %128 = add i32 %122, i32 3;
    i32* %129 = getelementptr &(i32* %123)[i64 3];
    store i32* %129 with i32 %128;
    i32 %130 = add i32 %122, i32 4;
    i32* %131 = getelementptr &(i32* %123)[i64 4];
    store i32* %131 with i32 %130;
    i32 %132 = add i32 %122, i32 5;
    i32* %133 = getelementptr &(i32* %123)[i64 5];
    store i32* %133 with i32 %132;
    i32 %134 = add i32 %122, i32 6;
    i32* %135 = getelementptr &(i32* %123)[i64 6];
    store i32* %135 with i32 %134;
    i32 %136 = add i32 %122, i32 7;
    i32* %137 = getelementptr &(i32* %123)[i64 7];
    store i32* %137 with i32 %136;
    i32 %138 = add i32 %122, i32 8;
    i32* %139 = getelementptr &(i32* %123)[i64 8];
    store i32* %139 with i32 %138;
    i32 %140 = add i32 %122, i32 9;
    i32* %141 = getelementptr &(i32* %123)[i64 9];
    store i32* %141 with i32 %140;
    i32 %142 = add i32 %122, i32 10;
    i32* %143 = getelementptr &(i32* %123)[i64 10];
    store i32* %143 with i32 %142;
    i32 %144 = add i32 %122, i32 11;
    i32* %145 = getelementptr &(i32* %123)[i64 11];
    store i32* %145 with i32 %144;
    i32 %146 = add i32 %122, i32 12;
    i32* %147 = getelementptr &(i32* %123)[i64 12];
    store i32* %147 with i32 %146;
    i32 %148 = add i32 %122, i32 13;
    i32* %149 = getelementptr &(i32* %123)[i64 13];
    store i32* %149 with i32 %148;
    i32 %150 = add i32 %122, i32 14;
    i32* %151 = getelementptr &(i32* %123)[i64 14];
    store i32* %151 with i32 %150;
    i32 %152 = add i32 %122, i32 15;
    i32* %153 = getelementptr &(i32* %123)[i64 15];
    store i32* %153 with i32 %152;
    i32 %154 = add i32 %122, i32 16;
    i1 %155 = scmp lt i32 %154, i32 96;
    cbr i1 %155(prob = 0.83), ^while.body, ^while.body1;
^while.body1:
    i32* %156 = getelementptr &([100 * i32]* %2)[i64 0][i32 %154];
    store i32* %156 with i32 %154;
    i32 %157 = add i32 %122, i32 17;
    i32* %158 = getelementptr &(i32* %156)[i64 1];
    store i32* %158 with i32 %157;
    i32 %159 = add i32 %122, i32 18;
    i32* %160 = getelementptr &(i32* %156)[i64 2];
    store i32* %160 with i32 %159;
    i32 %161 = add i32 %122, i32 19;
    i32* %162 = getelementptr &(i32* %156)[i64 3];
    store i32* %162 with i32 %161;
    i32 %163 = add i32 %0, i32 1;
    ubr ^while.header;
}
