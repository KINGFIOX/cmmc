internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal [20 * [100 * i32]]* @array;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [20 * [100 * i32]]* %0 = ptrcast [20 * [100 * i32]]* @array to [20 * [100 * i32]]*;
    ubr ^while.header;
  ^while.header:
    i32 %1 = phi [^entry, i32 0] [^while.body1, i32 %164];
    i1 %2 = icmp slt i32 %1, i32 20;
    cbr i1 %2(prob = 0.97), ^indirect, ^b;
  ^indirect:
    [100 * i32]* %3 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %1];
    ubr ^while.body;
  ^b:
    i32* %4 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 19][i64 23];
    i32 %5 = load i32* %4;
    [100 * i32]* %6 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 18];
    i32* %7 = getelementptr &([100 * i32]* %6)[i64 0][i32 %5];
    i32 %8 = load i32* %7;
    [100 * i32]* %9 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 17];
    i32* %10 = getelementptr &([100 * i32]* %9)[i64 0][i32 %8];
    i32 %11 = load i32* %10;
    [100 * i32]* %12 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 16];
    i32* %13 = getelementptr &([100 * i32]* %12)[i64 0][i32 %11];
    i32 %14 = load i32* %13;
    [100 * i32]* %15 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 15];
    i32* %16 = getelementptr &([100 * i32]* %15)[i64 0][i32 %14];
    i32 %17 = load i32* %16;
    [100 * i32]* %18 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 14];
    i32* %19 = getelementptr &([100 * i32]* %18)[i64 0][i32 %17];
    i32 %20 = load i32* %19;
    [100 * i32]* %21 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 13];
    i32* %22 = getelementptr &([100 * i32]* %21)[i64 0][i32 %20];
    i32 %23 = load i32* %22;
    [100 * i32]* %24 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 12];
    i32* %25 = getelementptr &([100 * i32]* %24)[i64 0][i32 %23];
    i32 %26 = load i32* %25;
    [100 * i32]* %27 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 11];
    i32* %28 = getelementptr &([100 * i32]* %27)[i64 0][i32 %26];
    i32 %29 = load i32* %28;
    [100 * i32]* %30 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 10];
    i32* %31 = getelementptr &([100 * i32]* %30)[i64 0][i32 %29];
    i32 %32 = load i32* %31;
    [100 * i32]* %33 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 9];
    i32* %34 = getelementptr &([100 * i32]* %33)[i64 0][i32 %32];
    i32 %35 = load i32* %34;
    [100 * i32]* %36 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 8];
    i32* %37 = getelementptr &([100 * i32]* %36)[i64 0][i32 %35];
    i32 %38 = load i32* %37;
    [100 * i32]* %39 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 7];
    i32* %40 = getelementptr &([100 * i32]* %39)[i64 0][i32 %38];
    i32 %41 = load i32* %40;
    [100 * i32]* %42 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 6];
    i32* %43 = getelementptr &([100 * i32]* %42)[i64 0][i32 %41];
    i32 %44 = load i32* %43;
    [100 * i32]* %45 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 5];
    i32* %46 = getelementptr &([100 * i32]* %45)[i64 0][i32 %44];
    i32 %47 = load i32* %46;
    [100 * i32]* %48 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 4];
    i32* %49 = getelementptr &([100 * i32]* %48)[i64 0][i32 %47];
    i32 %50 = load i32* %49;
    [100 * i32]* %51 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 3];
    i32* %52 = getelementptr &([100 * i32]* %51)[i64 0][i32 %50];
    i32 %53 = load i32* %52;
    [100 * i32]* %54 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 2];
    i32* %55 = getelementptr &([100 * i32]* %54)[i64 0][i32 %53];
    i32 %56 = load i32* %55;
    [100 * i32]* %57 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 1];
    i32* %58 = getelementptr &([100 * i32]* %57)[i64 0][i32 %56];
    i32 %59 = load i32* %58;
    [100 * i32]* %60 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 0];
    i32* %61 = getelementptr &([100 * i32]* %60)[i64 0][i32 %59];
    i32 %62 = load i32* %61;
    i32* %63 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i64 19][i64 18];
    i32 %64 = load i32* %63;
    [100 * i32]* %65 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %64];
    i32* %66 = getelementptr &([100 * i32]* %65)[i64 0][i64 17];
    i32 %67 = load i32* %66;
    [100 * i32]* %68 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %67];
    i32* %69 = getelementptr &([100 * i32]* %68)[i64 0][i64 16];
    i32 %70 = load i32* %69;
    [100 * i32]* %71 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %70];
    i32* %72 = getelementptr &([100 * i32]* %71)[i64 0][i64 15];
    i32 %73 = load i32* %72;
    [100 * i32]* %74 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %73];
    i32* %75 = getelementptr &([100 * i32]* %74)[i64 0][i64 14];
    i32 %76 = load i32* %75;
    [100 * i32]* %77 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %76];
    i32* %78 = getelementptr &([100 * i32]* %77)[i64 0][i64 13];
    i32 %79 = load i32* %78;
    [100 * i32]* %80 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %79];
    i32* %81 = getelementptr &([100 * i32]* %80)[i64 0][i64 12];
    i32 %82 = load i32* %81;
    [100 * i32]* %83 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %82];
    i32* %84 = getelementptr &([100 * i32]* %83)[i64 0][i64 11];
    i32 %85 = load i32* %84;
    [100 * i32]* %86 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %85];
    i32* %87 = getelementptr &([100 * i32]* %86)[i64 0][i64 10];
    i32 %88 = load i32* %87;
    [100 * i32]* %89 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %88];
    i32* %90 = getelementptr &([100 * i32]* %89)[i64 0][i64 9];
    i32 %91 = load i32* %90;
    [100 * i32]* %92 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %91];
    i32* %93 = getelementptr &([100 * i32]* %92)[i64 0][i64 8];
    i32 %94 = load i32* %93;
    [100 * i32]* %95 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %94];
    i32* %96 = getelementptr &([100 * i32]* %95)[i64 0][i64 7];
    i32 %97 = load i32* %96;
    [100 * i32]* %98 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %97];
    i32* %99 = getelementptr &([100 * i32]* %98)[i64 0][i64 6];
    i32 %100 = load i32* %99;
    [100 * i32]* %101 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %100];
    i32* %102 = getelementptr &([100 * i32]* %101)[i64 0][i64 5];
    i32 %103 = load i32* %102;
    [100 * i32]* %104 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %103];
    i32* %105 = getelementptr &([100 * i32]* %104)[i64 0][i64 4];
    i32 %106 = load i32* %105;
    [100 * i32]* %107 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %106];
    i32* %108 = getelementptr &([100 * i32]* %107)[i64 0][i64 3];
    i32 %109 = load i32* %108;
    [100 * i32]* %110 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %109];
    i32* %111 = getelementptr &([100 * i32]* %110)[i64 0][i64 2];
    i32 %112 = load i32* %111;
    [100 * i32]* %113 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %112];
    i32* %114 = getelementptr &([100 * i32]* %113)[i64 0][i64 1];
    i32 %115 = load i32* %114;
    [100 * i32]* %116 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %115];
    i32* %117 = getelementptr &([100 * i32]* %116)[i64 0][i64 0];
    i32 %118 = load i32* %117;
    [100 * i32]* %119 = getelementptr &([20 * [100 * i32]]* %0)[i64 0][i32 %118];
    i32* %120 = getelementptr &([100 * i32]* %119)[i64 0][i64 56];
    i32 %121 = load i32* %120;
    i32 %122 = add i32 %62, i32 %121;
    call (i32) -> void @putint(i32 %122);
    ret i32 0;
  ^while.body:
    i32 %123 = phi [^indirect, i32 0] [^while.body, i32 %155];
    i32* %124 = getelementptr &([100 * i32]* %3)[i64 0][i32 %123];
    store i32* %124 with i32 %123;
    i32* %125 = getelementptr &(i32* %124)[i64 1];
    i32 %126 = add i32 %123, i32 1;
    store i32* %125 with i32 %126;
    i32* %127 = getelementptr &(i32* %124)[i64 2];
    i32 %128 = add i32 %123, i32 2;
    store i32* %127 with i32 %128;
    i32* %129 = getelementptr &(i32* %124)[i64 3];
    i32 %130 = add i32 %123, i32 3;
    store i32* %129 with i32 %130;
    i32* %131 = getelementptr &(i32* %124)[i64 4];
    i32 %132 = add i32 %123, i32 4;
    store i32* %131 with i32 %132;
    i32* %133 = getelementptr &(i32* %124)[i64 5];
    i32 %134 = add i32 %123, i32 5;
    store i32* %133 with i32 %134;
    i32* %135 = getelementptr &(i32* %124)[i64 6];
    i32 %136 = add i32 %123, i32 6;
    store i32* %135 with i32 %136;
    i32* %137 = getelementptr &(i32* %124)[i64 7];
    i32 %138 = add i32 %123, i32 7;
    store i32* %137 with i32 %138;
    i32* %139 = getelementptr &(i32* %124)[i64 8];
    i32 %140 = add i32 %123, i32 8;
    store i32* %139 with i32 %140;
    i32* %141 = getelementptr &(i32* %124)[i64 9];
    i32 %142 = add i32 %123, i32 9;
    store i32* %141 with i32 %142;
    i32* %143 = getelementptr &(i32* %124)[i64 10];
    i32 %144 = add i32 %123, i32 10;
    store i32* %143 with i32 %144;
    i32* %145 = getelementptr &(i32* %124)[i64 11];
    i32 %146 = add i32 %123, i32 11;
    store i32* %145 with i32 %146;
    i32* %147 = getelementptr &(i32* %124)[i64 12];
    i32 %148 = add i32 %123, i32 12;
    store i32* %147 with i32 %148;
    i32* %149 = getelementptr &(i32* %124)[i64 13];
    i32 %150 = add i32 %123, i32 13;
    store i32* %149 with i32 %150;
    i32* %151 = getelementptr &(i32* %124)[i64 14];
    i32 %152 = add i32 %123, i32 14;
    store i32* %151 with i32 %152;
    i32* %153 = getelementptr &(i32* %124)[i64 15];
    i32 %154 = add i32 %123, i32 15;
    store i32* %153 with i32 %154;
    i32 %155 = add i32 %123, i32 16;
    i1 %156 = icmp slt i32 %155, i32 96;
    cbr i1 %156(prob = 0.83), ^while.body, ^while.body1;
  ^while.body1:
    i32* %157 = getelementptr &([100 * i32]* %3)[i64 0][i32 %155];
    store i32* %157 with i32 %155;
    i32* %158 = getelementptr &(i32* %157)[i64 1];
    i32 %159 = add i32 %123, i32 17;
    store i32* %158 with i32 %159;
    i32* %160 = getelementptr &(i32* %157)[i64 2];
    i32 %161 = add i32 %123, i32 18;
    store i32* %160 with i32 %161;
    i32* %162 = getelementptr &(i32* %157)[i64 3];
    i32 %163 = add i32 %123, i32 19;
    store i32* %162 with i32 %163;
    i32 %164 = add i32 %1, i32 1;
    ubr ^while.header;
}
