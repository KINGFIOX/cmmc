internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry():
    call (i32) -> void @starttime(i32 324);
    i32 %0 = call () -> i32 @getint();
    [100 * i32]* %s = alloc [100 * i32];
    ubr [ ^while.body [100 * i32]* %s, i32 %0, i32 0 ];
^while.body([100 * i32]* %arg, i32 %arg1, i32 %arg2):
    i32* %0 = getelementptr &([100 * i32]* %arg)[i32 0][i32 %arg2];
    store i32* %0 with i32 0;
    i32 %1 = add i32 %arg2, i32 1;
    i1 %2 = scmp lt i32 %1, i32 100;
    cbr i1 %2, [ ^while.body [100 * i32]* %arg, i32 %arg1, i32 %1 ], [ ^while.header [100 * i32]* %arg, i32 %arg1 ];
^while.header([100 * i32]* %arg, i32 %arg1):
    i1 %0 = scmp lt i32 0, i32 %arg1;
    cbr i1 %0, [ ^indirect [100 * i32]* %arg, i32 %arg1, i32 0, i32 0 ], [ ^b i32 0 ];
^indirect([100 * i32]* %arg, i32 %arg1, i32 %arg2, i32 %arg3):
    i32* %0 = getelementptr &([100 * i32]* %arg)[i32 0][i32 1];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([100 * i32]* %arg)[i32 0][i32 2];
    store i32* %1 with i32 2;
    i32* %2 = getelementptr &([100 * i32]* %arg)[i32 0][i32 3];
    store i32* %2 with i32 3;
    i32* %3 = getelementptr &([100 * i32]* %arg)[i32 0][i32 4];
    store i32* %3 with i32 4;
    i32* %4 = getelementptr &([100 * i32]* %arg)[i32 0][i32 5];
    store i32* %4 with i32 5;
    i32* %5 = getelementptr &([100 * i32]* %arg)[i32 0][i32 6];
    store i32* %5 with i32 6;
    i32* %6 = getelementptr &([100 * i32]* %arg)[i32 0][i32 7];
    store i32* %6 with i32 7;
    i32* %7 = getelementptr &([100 * i32]* %arg)[i32 0][i32 8];
    store i32* %7 with i32 8;
    i32* %8 = getelementptr &([100 * i32]* %arg)[i32 0][i32 9];
    store i32* %8 with i32 9;
    i32* %9 = getelementptr &([100 * i32]* %arg)[i32 0][i32 10];
    store i32* %9 with i32 10;
    i32* %10 = getelementptr &([100 * i32]* %arg)[i32 0][i32 11];
    store i32* %10 with i32 11;
    i32* %11 = getelementptr &([100 * i32]* %arg)[i32 0][i32 12];
    store i32* %11 with i32 12;
    i32* %12 = getelementptr &([100 * i32]* %arg)[i32 0][i32 13];
    store i32* %12 with i32 13;
    i32* %13 = getelementptr &([100 * i32]* %arg)[i32 0][i32 14];
    store i32* %13 with i32 14;
    i32* %14 = getelementptr &([100 * i32]* %arg)[i32 0][i32 15];
    store i32* %14 with i32 15;
    i32* %15 = getelementptr &([100 * i32]* %arg)[i32 0][i32 16];
    store i32* %15 with i32 16;
    i32* %16 = getelementptr &([100 * i32]* %arg)[i32 0][i32 17];
    store i32* %16 with i32 17;
    i32* %17 = getelementptr &([100 * i32]* %arg)[i32 0][i32 18];
    store i32* %17 with i32 18;
    i32* %18 = getelementptr &([100 * i32]* %arg)[i32 0][i32 19];
    store i32* %18 with i32 19;
    i32* %19 = getelementptr &([100 * i32]* %arg)[i32 0][i32 20];
    store i32* %19 with i32 20;
    i32* %20 = getelementptr &([100 * i32]* %arg)[i32 0][i32 21];
    store i32* %20 with i32 21;
    i32* %21 = getelementptr &([100 * i32]* %arg)[i32 0][i32 22];
    store i32* %21 with i32 22;
    i32* %22 = getelementptr &([100 * i32]* %arg)[i32 0][i32 23];
    store i32* %22 with i32 23;
    i32* %23 = getelementptr &([100 * i32]* %arg)[i32 0][i32 24];
    store i32* %23 with i32 24;
    i32* %24 = getelementptr &([100 * i32]* %arg)[i32 0][i32 25];
    store i32* %24 with i32 25;
    i32* %25 = getelementptr &([100 * i32]* %arg)[i32 0][i32 26];
    store i32* %25 with i32 26;
    i32* %26 = getelementptr &([100 * i32]* %arg)[i32 0][i32 27];
    store i32* %26 with i32 27;
    i32* %27 = getelementptr &([100 * i32]* %arg)[i32 0][i32 28];
    store i32* %27 with i32 28;
    i32* %28 = getelementptr &([100 * i32]* %arg)[i32 0][i32 29];
    store i32* %28 with i32 29;
    i32* %29 = getelementptr &([100 * i32]* %arg)[i32 0][i32 30];
    store i32* %29 with i32 30;
    i32* %30 = getelementptr &([100 * i32]* %arg)[i32 0][i32 31];
    store i32* %30 with i32 31;
    i32* %31 = getelementptr &([100 * i32]* %arg)[i32 0][i32 32];
    store i32* %31 with i32 32;
    i32* %32 = getelementptr &([100 * i32]* %arg)[i32 0][i32 33];
    store i32* %32 with i32 33;
    i32* %33 = getelementptr &([100 * i32]* %arg)[i32 0][i32 34];
    store i32* %33 with i32 34;
    i32* %34 = getelementptr &([100 * i32]* %arg)[i32 0][i32 35];
    store i32* %34 with i32 35;
    i32* %35 = getelementptr &([100 * i32]* %arg)[i32 0][i32 36];
    store i32* %35 with i32 36;
    i32* %36 = getelementptr &([100 * i32]* %arg)[i32 0][i32 37];
    store i32* %36 with i32 37;
    i32* %37 = getelementptr &([100 * i32]* %arg)[i32 0][i32 38];
    store i32* %37 with i32 38;
    i32* %38 = getelementptr &([100 * i32]* %arg)[i32 0][i32 39];
    store i32* %38 with i32 39;
    i32* %39 = getelementptr &([100 * i32]* %arg)[i32 0][i32 40];
    store i32* %39 with i32 40;
    i32* %40 = getelementptr &([100 * i32]* %arg)[i32 0][i32 41];
    store i32* %40 with i32 41;
    i32* %41 = getelementptr &([100 * i32]* %arg)[i32 0][i32 42];
    store i32* %41 with i32 42;
    i32* %42 = getelementptr &([100 * i32]* %arg)[i32 0][i32 43];
    store i32* %42 with i32 43;
    i32* %43 = getelementptr &([100 * i32]* %arg)[i32 0][i32 44];
    store i32* %43 with i32 44;
    i32* %44 = getelementptr &([100 * i32]* %arg)[i32 0][i32 45];
    store i32* %44 with i32 45;
    i32* %45 = getelementptr &([100 * i32]* %arg)[i32 0][i32 46];
    store i32* %45 with i32 46;
    i32* %46 = getelementptr &([100 * i32]* %arg)[i32 0][i32 47];
    store i32* %46 with i32 47;
    i32* %47 = getelementptr &([100 * i32]* %arg)[i32 0][i32 48];
    store i32* %47 with i32 48;
    i32* %48 = getelementptr &([100 * i32]* %arg)[i32 0][i32 49];
    store i32* %48 with i32 49;
    i32* %49 = getelementptr &([100 * i32]* %arg)[i32 0][i32 50];
    store i32* %49 with i32 50;
    i32* %50 = getelementptr &([100 * i32]* %arg)[i32 0][i32 51];
    store i32* %50 with i32 51;
    i32* %51 = getelementptr &([100 * i32]* %arg)[i32 0][i32 52];
    store i32* %51 with i32 52;
    i32* %52 = getelementptr &([100 * i32]* %arg)[i32 0][i32 53];
    store i32* %52 with i32 53;
    i32* %53 = getelementptr &([100 * i32]* %arg)[i32 0][i32 54];
    store i32* %53 with i32 54;
    i32* %54 = getelementptr &([100 * i32]* %arg)[i32 0][i32 55];
    store i32* %54 with i32 55;
    i32* %55 = getelementptr &([100 * i32]* %arg)[i32 0][i32 56];
    store i32* %55 with i32 56;
    i32* %56 = getelementptr &([100 * i32]* %arg)[i32 0][i32 57];
    store i32* %56 with i32 57;
    i32* %57 = getelementptr &([100 * i32]* %arg)[i32 0][i32 58];
    store i32* %57 with i32 58;
    i32* %58 = getelementptr &([100 * i32]* %arg)[i32 0][i32 59];
    store i32* %58 with i32 59;
    i32* %59 = getelementptr &([100 * i32]* %arg)[i32 0][i32 60];
    store i32* %59 with i32 60;
    i32* %60 = getelementptr &([100 * i32]* %arg)[i32 0][i32 61];
    store i32* %60 with i32 61;
    i32* %61 = getelementptr &([100 * i32]* %arg)[i32 0][i32 62];
    store i32* %61 with i32 62;
    i32* %62 = getelementptr &([100 * i32]* %arg)[i32 0][i32 63];
    store i32* %62 with i32 63;
    i32* %63 = getelementptr &([100 * i32]* %arg)[i32 0][i32 64];
    store i32* %63 with i32 64;
    i32* %64 = getelementptr &([100 * i32]* %arg)[i32 0][i32 65];
    store i32* %64 with i32 65;
    i32* %65 = getelementptr &([100 * i32]* %arg)[i32 0][i32 66];
    store i32* %65 with i32 66;
    i32* %66 = getelementptr &([100 * i32]* %arg)[i32 0][i32 67];
    store i32* %66 with i32 67;
    i32* %67 = getelementptr &([100 * i32]* %arg)[i32 0][i32 68];
    store i32* %67 with i32 68;
    i32* %68 = getelementptr &([100 * i32]* %arg)[i32 0][i32 69];
    store i32* %68 with i32 69;
    i32* %69 = getelementptr &([100 * i32]* %arg)[i32 0][i32 70];
    store i32* %69 with i32 70;
    i32* %70 = getelementptr &([100 * i32]* %arg)[i32 0][i32 71];
    store i32* %70 with i32 71;
    i32* %71 = getelementptr &([100 * i32]* %arg)[i32 0][i32 72];
    store i32* %71 with i32 72;
    i32* %72 = getelementptr &([100 * i32]* %arg)[i32 0][i32 73];
    store i32* %72 with i32 73;
    i32* %73 = getelementptr &([100 * i32]* %arg)[i32 0][i32 74];
    store i32* %73 with i32 74;
    i32* %74 = getelementptr &([100 * i32]* %arg)[i32 0][i32 75];
    store i32* %74 with i32 75;
    i32* %75 = getelementptr &([100 * i32]* %arg)[i32 0][i32 76];
    store i32* %75 with i32 76;
    i32* %76 = getelementptr &([100 * i32]* %arg)[i32 0][i32 77];
    store i32* %76 with i32 77;
    i32* %77 = getelementptr &([100 * i32]* %arg)[i32 0][i32 78];
    store i32* %77 with i32 78;
    i32* %78 = getelementptr &([100 * i32]* %arg)[i32 0][i32 79];
    store i32* %78 with i32 79;
    i32* %79 = getelementptr &([100 * i32]* %arg)[i32 0][i32 80];
    store i32* %79 with i32 80;
    i32* %80 = getelementptr &([100 * i32]* %arg)[i32 0][i32 81];
    store i32* %80 with i32 81;
    i32* %81 = getelementptr &([100 * i32]* %arg)[i32 0][i32 82];
    store i32* %81 with i32 82;
    i32* %82 = getelementptr &([100 * i32]* %arg)[i32 0][i32 83];
    store i32* %82 with i32 83;
    i32* %83 = getelementptr &([100 * i32]* %arg)[i32 0][i32 84];
    store i32* %83 with i32 84;
    i32* %84 = getelementptr &([100 * i32]* %arg)[i32 0][i32 85];
    store i32* %84 with i32 85;
    i32* %85 = getelementptr &([100 * i32]* %arg)[i32 0][i32 86];
    store i32* %85 with i32 86;
    i32* %86 = getelementptr &([100 * i32]* %arg)[i32 0][i32 87];
    store i32* %86 with i32 87;
    i32* %87 = getelementptr &([100 * i32]* %arg)[i32 0][i32 88];
    store i32* %87 with i32 88;
    i32* %88 = getelementptr &([100 * i32]* %arg)[i32 0][i32 89];
    store i32* %88 with i32 89;
    i32* %89 = getelementptr &([100 * i32]* %arg)[i32 0][i32 90];
    store i32* %89 with i32 90;
    i32* %90 = getelementptr &([100 * i32]* %arg)[i32 0][i32 91];
    store i32* %90 with i32 91;
    i32* %91 = getelementptr &([100 * i32]* %arg)[i32 0][i32 92];
    store i32* %91 with i32 92;
    i32* %92 = getelementptr &([100 * i32]* %arg)[i32 0][i32 93];
    store i32* %92 with i32 93;
    i32* %93 = getelementptr &([100 * i32]* %arg)[i32 0][i32 94];
    store i32* %93 with i32 94;
    i32* %94 = getelementptr &([100 * i32]* %arg)[i32 0][i32 95];
    store i32* %94 with i32 95;
    i32* %95 = getelementptr &([100 * i32]* %arg)[i32 0][i32 96];
    store i32* %95 with i32 96;
    i32* %96 = getelementptr &([100 * i32]* %arg)[i32 0][i32 97];
    store i32* %96 with i32 97;
    i32* %97 = getelementptr &([100 * i32]* %arg)[i32 0][i32 98];
    store i32* %97 with i32 98;
    i32* %98 = getelementptr &([100 * i32]* %arg)[i32 0][i32 99];
    store i32* %98 with i32 99;
    i32 %99 = add i32 %arg3, i32 1;
    i32* %m = alloc i32;
    ubr [ ^while.body1 [100 * i32]* %arg, i32* %m, i32 %arg1, i32 %arg2, i32 %99, i32 0 ];
^b(i32 %arg):
    call (i32) -> void @putint(i32 %arg);
    call (i32) -> void @putch(i32 10);
    call (i32) -> void @stoptime(i32 328);
    ret i32 0;
^while.body1([100 * i32]* %arg, i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5):
    i32* %0 = getelementptr &([100 * i32]* %arg)[i32 0][i32 %arg5];
    i32 %1 = load i32* %0;
    i32 %2 = add i32 %arg3, i32 %1;
    i32 %3 = add i32 %arg5, i32 1;
    i1 %4 = scmp lt i32 %3, i32 100;
    cbr i1 %4, [ ^while.body1 [100 * i32]* %arg, i32* %arg1, i32 %arg2, i32 %2, i32 %arg4, i32 %3 ], [ ^b1 [100 * i32]* %arg, i32* %arg1, i32 %arg2, i32 %2, i32 %arg4 ];
^b1([100 * i32]* %arg, i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4):
    i32 %0 = srem i32 %arg3, i32 65535;
    free i32* %arg1;
    i1 %1 = scmp lt i32 %arg4, i32 %arg2;
    cbr i1 %1, [ ^indirect [100 * i32]* %arg, i32 %arg2, i32 %0, i32 %arg4 ], [ ^b i32 %0 ];
}
