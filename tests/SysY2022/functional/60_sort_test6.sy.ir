internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    [10 * i32]* %count_ar = alloc [10 * i32];
    [10 * i32]* %b = alloc [10 * i32];
    [10 * i32]* %a = alloc [10 * i32];
    i32* %0 = getelementptr &([10 * i32]* %a)[i64 0][i64 0];
    store i32* %0 with i32 4;
    i32* %1 = getelementptr &([10 * i32]* %a)[i64 0][i64 1];
    store i32* %1 with i32 3;
    i32* %2 = getelementptr &([10 * i32]* %a)[i64 0][i64 2];
    store i32* %2 with i32 9;
    i32* %3 = getelementptr &([10 * i32]* %a)[i64 0][i64 3];
    store i32* %3 with i32 2;
    i32* %4 = getelementptr &([10 * i32]* %a)[i64 0][i64 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([10 * i32]* %a)[i64 0][i64 5];
    store i32* %5 with i32 1;
    i32* %6 = getelementptr &([10 * i32]* %a)[i64 0][i64 6];
    store i32* %6 with i32 6;
    i32* %7 = getelementptr &([10 * i32]* %a)[i64 0][i64 7];
    store i32* %7 with i32 5;
    i32* %8 = getelementptr &([10 * i32]* %a)[i64 0][i64 8];
    store i32* %8 with i32 7;
    i32* %9 = getelementptr &([10 * i32]* %a)[i64 0][i64 9];
    store i32* %9 with i32 8;
    i32* %10 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 0];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 1];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 2];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 3];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 4];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 5];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 6];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 7];
    store i32* %17 with i32 0;
    i32* %18 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 8];
    store i32* %18 with i32 0;
    i32* %19 = getelementptr &([10 * i32]* %count_ar)[i64 0][i64 9];
    store i32* %19 with i32 0;
    i32* %20 = getelementptr &([10 * i32]* %b)[i64 0][i64 0];
    ubr ^super.header;
  ^super.header:
    i32 %21 = phi [^entry, i32 0] [^while.body, i32 %22];
    i32 %22 = add i32 %21, i32 16;
    i1 %23 = scmp lt i32 %22, i32 10;
    cbr i1 %23(prob = 0.67), ^while.body, ^super.header1;
  ^while.body:
    i32* %24 = getelementptr &(i32* %0)[i32 %21];
    i32 %25 = load i32* %24;
    i32* %26 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %25];
    i32 %27 = load i32* %26;
    i32 %28 = add i32 %27, i32 1;
    store i32* %26 with i32 %28;
    i32* %29 = getelementptr &(i32* %24)[i64 1];
    i32 %30 = load i32* %29;
    i32* %31 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %30];
    i32 %32 = load i32* %31;
    i32 %33 = add i32 %32, i32 1;
    store i32* %31 with i32 %33;
    i32* %34 = getelementptr &(i32* %24)[i64 2];
    i32 %35 = load i32* %34;
    i32* %36 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %35];
    i32 %37 = load i32* %36;
    i32 %38 = add i32 %37, i32 1;
    store i32* %36 with i32 %38;
    i32* %39 = getelementptr &(i32* %24)[i64 3];
    i32 %40 = load i32* %39;
    i32* %41 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %40];
    i32 %42 = load i32* %41;
    i32 %43 = add i32 %42, i32 1;
    store i32* %41 with i32 %43;
    i32* %44 = getelementptr &(i32* %24)[i64 4];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %45];
    i32 %47 = load i32* %46;
    i32 %48 = add i32 %47, i32 1;
    store i32* %46 with i32 %48;
    i32* %49 = getelementptr &(i32* %24)[i64 5];
    i32 %50 = load i32* %49;
    i32* %51 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %50];
    i32 %52 = load i32* %51;
    i32 %53 = add i32 %52, i32 1;
    store i32* %51 with i32 %53;
    i32* %54 = getelementptr &(i32* %24)[i64 6];
    i32 %55 = load i32* %54;
    i32* %56 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %55];
    i32 %57 = load i32* %56;
    i32 %58 = add i32 %57, i32 1;
    store i32* %56 with i32 %58;
    i32* %59 = getelementptr &(i32* %24)[i64 7];
    i32 %60 = load i32* %59;
    i32* %61 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %60];
    i32 %62 = load i32* %61;
    i32 %63 = add i32 %62, i32 1;
    store i32* %61 with i32 %63;
    i32* %64 = getelementptr &(i32* %24)[i64 8];
    i32 %65 = load i32* %64;
    i32* %66 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %65];
    i32 %67 = load i32* %66;
    i32 %68 = add i32 %67, i32 1;
    store i32* %66 with i32 %68;
    i32* %69 = getelementptr &(i32* %24)[i64 9];
    i32 %70 = load i32* %69;
    i32* %71 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %70];
    i32 %72 = load i32* %71;
    i32 %73 = add i32 %72, i32 1;
    store i32* %71 with i32 %73;
    i32* %74 = getelementptr &(i32* %24)[i64 10];
    i32 %75 = load i32* %74;
    i32* %76 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %75];
    i32 %77 = load i32* %76;
    i32 %78 = add i32 %77, i32 1;
    store i32* %76 with i32 %78;
    i32* %79 = getelementptr &(i32* %24)[i64 11];
    i32 %80 = load i32* %79;
    i32* %81 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %80];
    i32 %82 = load i32* %81;
    i32 %83 = add i32 %82, i32 1;
    store i32* %81 with i32 %83;
    i32* %84 = getelementptr &(i32* %24)[i64 12];
    i32 %85 = load i32* %84;
    i32* %86 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %85];
    i32 %87 = load i32* %86;
    i32 %88 = add i32 %87, i32 1;
    store i32* %86 with i32 %88;
    i32* %89 = getelementptr &(i32* %24)[i64 13];
    i32 %90 = load i32* %89;
    i32* %91 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %90];
    i32 %92 = load i32* %91;
    i32 %93 = add i32 %92, i32 1;
    store i32* %91 with i32 %93;
    i32* %94 = getelementptr &(i32* %24)[i64 14];
    i32 %95 = load i32* %94;
    i32* %96 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %95];
    i32 %97 = load i32* %96;
    i32 %98 = add i32 %97, i32 1;
    store i32* %96 with i32 %98;
    i32* %99 = getelementptr &(i32* %24)[i64 15];
    i32 %100 = load i32* %99;
    i32* %101 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %100];
    i32 %102 = load i32* %101;
    i32 %103 = add i32 %102, i32 1;
    store i32* %101 with i32 %103;
    ubr ^super.header;
  ^super.header1:
    i32 %104 = phi [^super.header, i32 %21] [^while.body1, i32 %105];
    i32 %105 = add i32 %104, i32 16;
    i1 %106 = scmp lt i32 %105, i32 10;
    cbr i1 %106(prob = 0.67), ^while.body1, ^super.header2;
  ^while.body1:
    i32* %107 = getelementptr &(i32* %0)[i32 %104];
    i32 %108 = load i32* %107;
    i32* %109 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %108];
    i32 %110 = load i32* %109;
    i32 %111 = add i32 %110, i32 1;
    store i32* %109 with i32 %111;
    i32* %112 = getelementptr &(i32* %107)[i64 1];
    i32 %113 = load i32* %112;
    i32* %114 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %113];
    i32 %115 = load i32* %114;
    i32 %116 = add i32 %115, i32 1;
    store i32* %114 with i32 %116;
    i32* %117 = getelementptr &(i32* %107)[i64 2];
    i32 %118 = load i32* %117;
    i32* %119 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %118];
    i32 %120 = load i32* %119;
    i32 %121 = add i32 %120, i32 1;
    store i32* %119 with i32 %121;
    i32* %122 = getelementptr &(i32* %107)[i64 3];
    i32 %123 = load i32* %122;
    i32* %124 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %123];
    i32 %125 = load i32* %124;
    i32 %126 = add i32 %125, i32 1;
    store i32* %124 with i32 %126;
    i32* %127 = getelementptr &(i32* %107)[i64 4];
    i32 %128 = load i32* %127;
    i32* %129 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %128];
    i32 %130 = load i32* %129;
    i32 %131 = add i32 %130, i32 1;
    store i32* %129 with i32 %131;
    i32* %132 = getelementptr &(i32* %107)[i64 5];
    i32 %133 = load i32* %132;
    i32* %134 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %133];
    i32 %135 = load i32* %134;
    i32 %136 = add i32 %135, i32 1;
    store i32* %134 with i32 %136;
    i32* %137 = getelementptr &(i32* %107)[i64 6];
    i32 %138 = load i32* %137;
    i32* %139 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %138];
    i32 %140 = load i32* %139;
    i32 %141 = add i32 %140, i32 1;
    store i32* %139 with i32 %141;
    i32* %142 = getelementptr &(i32* %107)[i64 7];
    i32 %143 = load i32* %142;
    i32* %144 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %143];
    i32 %145 = load i32* %144;
    i32 %146 = add i32 %145, i32 1;
    store i32* %144 with i32 %146;
    i32* %147 = getelementptr &(i32* %107)[i64 8];
    i32 %148 = load i32* %147;
    i32* %149 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %148];
    i32 %150 = load i32* %149;
    i32 %151 = add i32 %150, i32 1;
    store i32* %149 with i32 %151;
    i32* %152 = getelementptr &(i32* %107)[i64 9];
    i32 %153 = load i32* %152;
    i32* %154 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %153];
    i32 %155 = load i32* %154;
    i32 %156 = add i32 %155, i32 1;
    store i32* %154 with i32 %156;
    i32* %157 = getelementptr &(i32* %107)[i64 10];
    i32 %158 = load i32* %157;
    i32* %159 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %158];
    i32 %160 = load i32* %159;
    i32 %161 = add i32 %160, i32 1;
    store i32* %159 with i32 %161;
    i32* %162 = getelementptr &(i32* %107)[i64 11];
    i32 %163 = load i32* %162;
    i32* %164 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %163];
    i32 %165 = load i32* %164;
    i32 %166 = add i32 %165, i32 1;
    store i32* %164 with i32 %166;
    i32* %167 = getelementptr &(i32* %107)[i64 12];
    i32 %168 = load i32* %167;
    i32* %169 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %168];
    i32 %170 = load i32* %169;
    i32 %171 = add i32 %170, i32 1;
    store i32* %169 with i32 %171;
    i32* %172 = getelementptr &(i32* %107)[i64 13];
    i32 %173 = load i32* %172;
    i32* %174 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %173];
    i32 %175 = load i32* %174;
    i32 %176 = add i32 %175, i32 1;
    store i32* %174 with i32 %176;
    i32* %177 = getelementptr &(i32* %107)[i64 14];
    i32 %178 = load i32* %177;
    i32* %179 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %178];
    i32 %180 = load i32* %179;
    i32 %181 = add i32 %180, i32 1;
    store i32* %179 with i32 %181;
    i32* %182 = getelementptr &(i32* %107)[i64 15];
    i32 %183 = load i32* %182;
    i32* %184 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %183];
    i32 %185 = load i32* %184;
    i32 %186 = add i32 %185, i32 1;
    store i32* %184 with i32 %186;
    ubr ^super.header1;
  ^super.header2:
    i32 %187 = phi [^super.header1, i32 %104] [^while.body2, i32 %188];
    i32 %188 = add i32 %187, i32 16;
    i1 %189 = scmp lt i32 %188, i32 10;
    cbr i1 %189(prob = 0.67), ^while.body2, ^while.body3;
  ^while.body2:
    i32* %190 = getelementptr &(i32* %0)[i32 %187];
    i32 %191 = load i32* %190;
    i32* %192 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %191];
    i32 %193 = load i32* %192;
    i32 %194 = add i32 %193, i32 1;
    store i32* %192 with i32 %194;
    i32* %195 = getelementptr &(i32* %190)[i64 1];
    i32 %196 = load i32* %195;
    i32* %197 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %196];
    i32 %198 = load i32* %197;
    i32 %199 = add i32 %198, i32 1;
    store i32* %197 with i32 %199;
    i32* %200 = getelementptr &(i32* %190)[i64 2];
    i32 %201 = load i32* %200;
    i32* %202 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %201];
    i32 %203 = load i32* %202;
    i32 %204 = add i32 %203, i32 1;
    store i32* %202 with i32 %204;
    i32* %205 = getelementptr &(i32* %190)[i64 3];
    i32 %206 = load i32* %205;
    i32* %207 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %206];
    i32 %208 = load i32* %207;
    i32 %209 = add i32 %208, i32 1;
    store i32* %207 with i32 %209;
    i32* %210 = getelementptr &(i32* %190)[i64 4];
    i32 %211 = load i32* %210;
    i32* %212 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %211];
    i32 %213 = load i32* %212;
    i32 %214 = add i32 %213, i32 1;
    store i32* %212 with i32 %214;
    i32* %215 = getelementptr &(i32* %190)[i64 5];
    i32 %216 = load i32* %215;
    i32* %217 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %216];
    i32 %218 = load i32* %217;
    i32 %219 = add i32 %218, i32 1;
    store i32* %217 with i32 %219;
    i32* %220 = getelementptr &(i32* %190)[i64 6];
    i32 %221 = load i32* %220;
    i32* %222 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %221];
    i32 %223 = load i32* %222;
    i32 %224 = add i32 %223, i32 1;
    store i32* %222 with i32 %224;
    i32* %225 = getelementptr &(i32* %190)[i64 7];
    i32 %226 = load i32* %225;
    i32* %227 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %226];
    i32 %228 = load i32* %227;
    i32 %229 = add i32 %228, i32 1;
    store i32* %227 with i32 %229;
    i32* %230 = getelementptr &(i32* %190)[i64 8];
    i32 %231 = load i32* %230;
    i32* %232 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %231];
    i32 %233 = load i32* %232;
    i32 %234 = add i32 %233, i32 1;
    store i32* %232 with i32 %234;
    i32* %235 = getelementptr &(i32* %190)[i64 9];
    i32 %236 = load i32* %235;
    i32* %237 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %236];
    i32 %238 = load i32* %237;
    i32 %239 = add i32 %238, i32 1;
    store i32* %237 with i32 %239;
    i32* %240 = getelementptr &(i32* %190)[i64 10];
    i32 %241 = load i32* %240;
    i32* %242 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %241];
    i32 %243 = load i32* %242;
    i32 %244 = add i32 %243, i32 1;
    store i32* %242 with i32 %244;
    i32* %245 = getelementptr &(i32* %190)[i64 11];
    i32 %246 = load i32* %245;
    i32* %247 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %246];
    i32 %248 = load i32* %247;
    i32 %249 = add i32 %248, i32 1;
    store i32* %247 with i32 %249;
    i32* %250 = getelementptr &(i32* %190)[i64 12];
    i32 %251 = load i32* %250;
    i32* %252 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %251];
    i32 %253 = load i32* %252;
    i32 %254 = add i32 %253, i32 1;
    store i32* %252 with i32 %254;
    i32* %255 = getelementptr &(i32* %190)[i64 13];
    i32 %256 = load i32* %255;
    i32* %257 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %256];
    i32 %258 = load i32* %257;
    i32 %259 = add i32 %258, i32 1;
    store i32* %257 with i32 %259;
    i32* %260 = getelementptr &(i32* %190)[i64 14];
    i32 %261 = load i32* %260;
    i32* %262 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %261];
    i32 %263 = load i32* %262;
    i32 %264 = add i32 %263, i32 1;
    store i32* %262 with i32 %264;
    i32* %265 = getelementptr &(i32* %190)[i64 15];
    i32 %266 = load i32* %265;
    i32* %267 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %266];
    i32 %268 = load i32* %267;
    i32 %269 = add i32 %268, i32 1;
    store i32* %267 with i32 %269;
    ubr ^super.header2;
  ^while.body3:
    i32 %270 = phi [^super.header2, i32 %187] [^while.body3, i32 %276];
    i32* %271 = getelementptr &(i32* %0)[i32 %270];
    i32 %272 = load i32* %271;
    i32* %273 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %272];
    i32 %274 = load i32* %273;
    i32 %275 = add i32 %274, i32 1;
    store i32* %273 with i32 %275;
    i32 %276 = add i32 %270, i32 1;
    i1 %277 = scmp lt i32 %276, i32 10;
    cbr i1 %277(prob = 0.97), ^while.body3, ^while.body4;
  ^while.body4:
    i32 %278 = load i32* %11;
    i32 %279 = load i32* %10;
    i32 %280 = add i32 %278, i32 %279;
    store i32* %11 with i32 %280;
    i32 %281 = load i32* %12;
    i32 %282 = add i32 %280, i32 %281;
    store i32* %12 with i32 %282;
    i32 %283 = load i32* %13;
    i32 %284 = add i32 %282, i32 %283;
    store i32* %13 with i32 %284;
    i32 %285 = load i32* %14;
    i32 %286 = add i32 %284, i32 %285;
    store i32* %14 with i32 %286;
    i32 %287 = load i32* %15;
    i32 %288 = add i32 %286, i32 %287;
    store i32* %15 with i32 %288;
    i32 %289 = load i32* %16;
    i32 %290 = add i32 %288, i32 %289;
    store i32* %16 with i32 %290;
    i32 %291 = load i32* %17;
    i32 %292 = add i32 %290, i32 %291;
    store i32* %17 with i32 %292;
    i32 %293 = load i32* %18;
    i32 %294 = add i32 %292, i32 %293;
    store i32* %18 with i32 %294;
    i32 %295 = load i32* %19;
    i32 %296 = add i32 %294, i32 %295;
    store i32* %19 with i32 %296;
    ubr ^super.header3;
  ^super.header3:
    i32 %297 = phi [^while.body4, i32 10] [^while.body5, i32 %298];
    i32 %298 = add i32 %297, i32 -16;
    i1 %299 = scmp gt i32 %298, i32 0;
    cbr i1 %299(prob = 0.67), ^while.body5, ^super.header4;
  ^while.body5:
    i32 %300 = add i32 %297, i32 -1;
    i32* %301 = getelementptr &(i32* %0)[i32 %300];
    i32 %302 = load i32* %301;
    i32* %303 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %302];
    i32 %304 = load i32* %303;
    i32 %305 = add i32 %304, i32 -1;
    store i32* %303 with i32 %305;
    i32* %306 = getelementptr &(i32* %20)[i32 %305];
    store i32* %306 with i32 %302;
    i32* %307 = getelementptr &(i32* %301)[i64 -1];
    i32 %308 = load i32* %307;
    i32* %309 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %308];
    i32 %310 = load i32* %309;
    i32 %311 = add i32 %310, i32 -1;
    store i32* %309 with i32 %311;
    i32* %312 = getelementptr &(i32* %20)[i32 %311];
    store i32* %312 with i32 %308;
    i32* %313 = getelementptr &(i32* %301)[i64 -2];
    i32 %314 = load i32* %313;
    i32* %315 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %314];
    i32 %316 = load i32* %315;
    i32 %317 = add i32 %316, i32 -1;
    store i32* %315 with i32 %317;
    i32* %318 = getelementptr &(i32* %20)[i32 %317];
    store i32* %318 with i32 %314;
    i32* %319 = getelementptr &(i32* %301)[i64 -3];
    i32 %320 = load i32* %319;
    i32* %321 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %320];
    i32 %322 = load i32* %321;
    i32 %323 = add i32 %322, i32 -1;
    store i32* %321 with i32 %323;
    i32* %324 = getelementptr &(i32* %20)[i32 %323];
    store i32* %324 with i32 %320;
    i32* %325 = getelementptr &(i32* %301)[i64 -4];
    i32 %326 = load i32* %325;
    i32* %327 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %326];
    i32 %328 = load i32* %327;
    i32 %329 = add i32 %328, i32 -1;
    store i32* %327 with i32 %329;
    i32* %330 = getelementptr &(i32* %20)[i32 %329];
    store i32* %330 with i32 %326;
    i32* %331 = getelementptr &(i32* %301)[i64 -5];
    i32 %332 = load i32* %331;
    i32* %333 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %332];
    i32 %334 = load i32* %333;
    i32 %335 = add i32 %334, i32 -1;
    store i32* %333 with i32 %335;
    i32* %336 = getelementptr &(i32* %20)[i32 %335];
    store i32* %336 with i32 %332;
    i32* %337 = getelementptr &(i32* %301)[i64 -6];
    i32 %338 = load i32* %337;
    i32* %339 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %338];
    i32 %340 = load i32* %339;
    i32 %341 = add i32 %340, i32 -1;
    store i32* %339 with i32 %341;
    i32* %342 = getelementptr &(i32* %20)[i32 %341];
    store i32* %342 with i32 %338;
    i32* %343 = getelementptr &(i32* %301)[i64 -7];
    i32 %344 = load i32* %343;
    i32* %345 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %344];
    i32 %346 = load i32* %345;
    i32 %347 = add i32 %346, i32 -1;
    store i32* %345 with i32 %347;
    i32* %348 = getelementptr &(i32* %20)[i32 %347];
    store i32* %348 with i32 %344;
    i32* %349 = getelementptr &(i32* %301)[i64 -8];
    i32 %350 = load i32* %349;
    i32* %351 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %350];
    i32 %352 = load i32* %351;
    i32 %353 = add i32 %352, i32 -1;
    store i32* %351 with i32 %353;
    i32* %354 = getelementptr &(i32* %20)[i32 %353];
    store i32* %354 with i32 %350;
    i32* %355 = getelementptr &(i32* %301)[i64 -9];
    i32 %356 = load i32* %355;
    i32* %357 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %356];
    i32 %358 = load i32* %357;
    i32 %359 = add i32 %358, i32 -1;
    store i32* %357 with i32 %359;
    i32* %360 = getelementptr &(i32* %20)[i32 %359];
    store i32* %360 with i32 %356;
    i32* %361 = getelementptr &(i32* %301)[i64 -10];
    i32 %362 = load i32* %361;
    i32* %363 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %362];
    i32 %364 = load i32* %363;
    i32 %365 = add i32 %364, i32 -1;
    store i32* %363 with i32 %365;
    i32* %366 = getelementptr &(i32* %20)[i32 %365];
    store i32* %366 with i32 %362;
    i32* %367 = getelementptr &(i32* %301)[i64 -11];
    i32 %368 = load i32* %367;
    i32* %369 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %368];
    i32 %370 = load i32* %369;
    i32 %371 = add i32 %370, i32 -1;
    store i32* %369 with i32 %371;
    i32* %372 = getelementptr &(i32* %20)[i32 %371];
    store i32* %372 with i32 %368;
    i32* %373 = getelementptr &(i32* %301)[i64 -12];
    i32 %374 = load i32* %373;
    i32* %375 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %374];
    i32 %376 = load i32* %375;
    i32 %377 = add i32 %376, i32 -1;
    store i32* %375 with i32 %377;
    i32* %378 = getelementptr &(i32* %20)[i32 %377];
    store i32* %378 with i32 %374;
    i32* %379 = getelementptr &(i32* %301)[i64 -13];
    i32 %380 = load i32* %379;
    i32* %381 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %380];
    i32 %382 = load i32* %381;
    i32 %383 = add i32 %382, i32 -1;
    store i32* %381 with i32 %383;
    i32* %384 = getelementptr &(i32* %20)[i32 %383];
    store i32* %384 with i32 %380;
    i32* %385 = getelementptr &(i32* %301)[i64 -14];
    i32 %386 = load i32* %385;
    i32* %387 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %386];
    i32 %388 = load i32* %387;
    i32 %389 = add i32 %388, i32 -1;
    store i32* %387 with i32 %389;
    i32* %390 = getelementptr &(i32* %20)[i32 %389];
    store i32* %390 with i32 %386;
    i32* %391 = getelementptr &(i32* %301)[i64 -15];
    i32 %392 = load i32* %391;
    i32* %393 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %392];
    i32 %394 = load i32* %393;
    i32 %395 = add i32 %394, i32 -1;
    store i32* %393 with i32 %395;
    i32* %396 = getelementptr &(i32* %20)[i32 %395];
    store i32* %396 with i32 %392;
    ubr ^super.header3;
  ^super.header4:
    i32 %397 = phi [^super.header3, i32 %297] [^while.body6, i32 %398];
    i32 %398 = add i32 %397, i32 -16;
    i1 %399 = scmp gt i32 %398, i32 0;
    cbr i1 %399(prob = 0.67), ^while.body6, ^super.header5;
  ^while.body6:
    i32 %400 = add i32 %397, i32 -1;
    i32* %401 = getelementptr &(i32* %0)[i32 %400];
    i32 %402 = load i32* %401;
    i32* %403 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %402];
    i32 %404 = load i32* %403;
    i32 %405 = add i32 %404, i32 -1;
    store i32* %403 with i32 %405;
    i32* %406 = getelementptr &(i32* %20)[i32 %405];
    store i32* %406 with i32 %402;
    i32* %407 = getelementptr &(i32* %401)[i64 -1];
    i32 %408 = load i32* %407;
    i32* %409 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %408];
    i32 %410 = load i32* %409;
    i32 %411 = add i32 %410, i32 -1;
    store i32* %409 with i32 %411;
    i32* %412 = getelementptr &(i32* %20)[i32 %411];
    store i32* %412 with i32 %408;
    i32* %413 = getelementptr &(i32* %401)[i64 -2];
    i32 %414 = load i32* %413;
    i32* %415 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %414];
    i32 %416 = load i32* %415;
    i32 %417 = add i32 %416, i32 -1;
    store i32* %415 with i32 %417;
    i32* %418 = getelementptr &(i32* %20)[i32 %417];
    store i32* %418 with i32 %414;
    i32* %419 = getelementptr &(i32* %401)[i64 -3];
    i32 %420 = load i32* %419;
    i32* %421 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %420];
    i32 %422 = load i32* %421;
    i32 %423 = add i32 %422, i32 -1;
    store i32* %421 with i32 %423;
    i32* %424 = getelementptr &(i32* %20)[i32 %423];
    store i32* %424 with i32 %420;
    i32* %425 = getelementptr &(i32* %401)[i64 -4];
    i32 %426 = load i32* %425;
    i32* %427 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %426];
    i32 %428 = load i32* %427;
    i32 %429 = add i32 %428, i32 -1;
    store i32* %427 with i32 %429;
    i32* %430 = getelementptr &(i32* %20)[i32 %429];
    store i32* %430 with i32 %426;
    i32* %431 = getelementptr &(i32* %401)[i64 -5];
    i32 %432 = load i32* %431;
    i32* %433 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %432];
    i32 %434 = load i32* %433;
    i32 %435 = add i32 %434, i32 -1;
    store i32* %433 with i32 %435;
    i32* %436 = getelementptr &(i32* %20)[i32 %435];
    store i32* %436 with i32 %432;
    i32* %437 = getelementptr &(i32* %401)[i64 -6];
    i32 %438 = load i32* %437;
    i32* %439 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %438];
    i32 %440 = load i32* %439;
    i32 %441 = add i32 %440, i32 -1;
    store i32* %439 with i32 %441;
    i32* %442 = getelementptr &(i32* %20)[i32 %441];
    store i32* %442 with i32 %438;
    i32* %443 = getelementptr &(i32* %401)[i64 -7];
    i32 %444 = load i32* %443;
    i32* %445 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %444];
    i32 %446 = load i32* %445;
    i32 %447 = add i32 %446, i32 -1;
    store i32* %445 with i32 %447;
    i32* %448 = getelementptr &(i32* %20)[i32 %447];
    store i32* %448 with i32 %444;
    i32* %449 = getelementptr &(i32* %401)[i64 -8];
    i32 %450 = load i32* %449;
    i32* %451 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %450];
    i32 %452 = load i32* %451;
    i32 %453 = add i32 %452, i32 -1;
    store i32* %451 with i32 %453;
    i32* %454 = getelementptr &(i32* %20)[i32 %453];
    store i32* %454 with i32 %450;
    i32* %455 = getelementptr &(i32* %401)[i64 -9];
    i32 %456 = load i32* %455;
    i32* %457 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %456];
    i32 %458 = load i32* %457;
    i32 %459 = add i32 %458, i32 -1;
    store i32* %457 with i32 %459;
    i32* %460 = getelementptr &(i32* %20)[i32 %459];
    store i32* %460 with i32 %456;
    i32* %461 = getelementptr &(i32* %401)[i64 -10];
    i32 %462 = load i32* %461;
    i32* %463 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %462];
    i32 %464 = load i32* %463;
    i32 %465 = add i32 %464, i32 -1;
    store i32* %463 with i32 %465;
    i32* %466 = getelementptr &(i32* %20)[i32 %465];
    store i32* %466 with i32 %462;
    i32* %467 = getelementptr &(i32* %401)[i64 -11];
    i32 %468 = load i32* %467;
    i32* %469 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %468];
    i32 %470 = load i32* %469;
    i32 %471 = add i32 %470, i32 -1;
    store i32* %469 with i32 %471;
    i32* %472 = getelementptr &(i32* %20)[i32 %471];
    store i32* %472 with i32 %468;
    i32* %473 = getelementptr &(i32* %401)[i64 -12];
    i32 %474 = load i32* %473;
    i32* %475 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %474];
    i32 %476 = load i32* %475;
    i32 %477 = add i32 %476, i32 -1;
    store i32* %475 with i32 %477;
    i32* %478 = getelementptr &(i32* %20)[i32 %477];
    store i32* %478 with i32 %474;
    i32* %479 = getelementptr &(i32* %401)[i64 -13];
    i32 %480 = load i32* %479;
    i32* %481 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %480];
    i32 %482 = load i32* %481;
    i32 %483 = add i32 %482, i32 -1;
    store i32* %481 with i32 %483;
    i32* %484 = getelementptr &(i32* %20)[i32 %483];
    store i32* %484 with i32 %480;
    i32* %485 = getelementptr &(i32* %401)[i64 -14];
    i32 %486 = load i32* %485;
    i32* %487 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %486];
    i32 %488 = load i32* %487;
    i32 %489 = add i32 %488, i32 -1;
    store i32* %487 with i32 %489;
    i32* %490 = getelementptr &(i32* %20)[i32 %489];
    store i32* %490 with i32 %486;
    i32* %491 = getelementptr &(i32* %401)[i64 -15];
    i32 %492 = load i32* %491;
    i32* %493 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %492];
    i32 %494 = load i32* %493;
    i32 %495 = add i32 %494, i32 -1;
    store i32* %493 with i32 %495;
    i32* %496 = getelementptr &(i32* %20)[i32 %495];
    store i32* %496 with i32 %492;
    ubr ^super.header4;
  ^super.header5:
    i32 %497 = phi [^super.header4, i32 %397] [^while.body7, i32 %498];
    i32 %498 = add i32 %497, i32 -16;
    i1 %499 = scmp gt i32 %498, i32 0;
    cbr i1 %499(prob = 0.67), ^while.body7, ^while.body8;
  ^while.body7:
    i32 %500 = add i32 %497, i32 -1;
    i32* %501 = getelementptr &(i32* %0)[i32 %500];
    i32 %502 = load i32* %501;
    i32* %503 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %502];
    i32 %504 = load i32* %503;
    i32 %505 = add i32 %504, i32 -1;
    store i32* %503 with i32 %505;
    i32* %506 = getelementptr &(i32* %20)[i32 %505];
    store i32* %506 with i32 %502;
    i32* %507 = getelementptr &(i32* %501)[i64 -1];
    i32 %508 = load i32* %507;
    i32* %509 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %508];
    i32 %510 = load i32* %509;
    i32 %511 = add i32 %510, i32 -1;
    store i32* %509 with i32 %511;
    i32* %512 = getelementptr &(i32* %20)[i32 %511];
    store i32* %512 with i32 %508;
    i32* %513 = getelementptr &(i32* %501)[i64 -2];
    i32 %514 = load i32* %513;
    i32* %515 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %514];
    i32 %516 = load i32* %515;
    i32 %517 = add i32 %516, i32 -1;
    store i32* %515 with i32 %517;
    i32* %518 = getelementptr &(i32* %20)[i32 %517];
    store i32* %518 with i32 %514;
    i32* %519 = getelementptr &(i32* %501)[i64 -3];
    i32 %520 = load i32* %519;
    i32* %521 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %520];
    i32 %522 = load i32* %521;
    i32 %523 = add i32 %522, i32 -1;
    store i32* %521 with i32 %523;
    i32* %524 = getelementptr &(i32* %20)[i32 %523];
    store i32* %524 with i32 %520;
    i32* %525 = getelementptr &(i32* %501)[i64 -4];
    i32 %526 = load i32* %525;
    i32* %527 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %526];
    i32 %528 = load i32* %527;
    i32 %529 = add i32 %528, i32 -1;
    store i32* %527 with i32 %529;
    i32* %530 = getelementptr &(i32* %20)[i32 %529];
    store i32* %530 with i32 %526;
    i32* %531 = getelementptr &(i32* %501)[i64 -5];
    i32 %532 = load i32* %531;
    i32* %533 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %532];
    i32 %534 = load i32* %533;
    i32 %535 = add i32 %534, i32 -1;
    store i32* %533 with i32 %535;
    i32* %536 = getelementptr &(i32* %20)[i32 %535];
    store i32* %536 with i32 %532;
    i32* %537 = getelementptr &(i32* %501)[i64 -6];
    i32 %538 = load i32* %537;
    i32* %539 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %538];
    i32 %540 = load i32* %539;
    i32 %541 = add i32 %540, i32 -1;
    store i32* %539 with i32 %541;
    i32* %542 = getelementptr &(i32* %20)[i32 %541];
    store i32* %542 with i32 %538;
    i32* %543 = getelementptr &(i32* %501)[i64 -7];
    i32 %544 = load i32* %543;
    i32* %545 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %544];
    i32 %546 = load i32* %545;
    i32 %547 = add i32 %546, i32 -1;
    store i32* %545 with i32 %547;
    i32* %548 = getelementptr &(i32* %20)[i32 %547];
    store i32* %548 with i32 %544;
    i32* %549 = getelementptr &(i32* %501)[i64 -8];
    i32 %550 = load i32* %549;
    i32* %551 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %550];
    i32 %552 = load i32* %551;
    i32 %553 = add i32 %552, i32 -1;
    store i32* %551 with i32 %553;
    i32* %554 = getelementptr &(i32* %20)[i32 %553];
    store i32* %554 with i32 %550;
    i32* %555 = getelementptr &(i32* %501)[i64 -9];
    i32 %556 = load i32* %555;
    i32* %557 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %556];
    i32 %558 = load i32* %557;
    i32 %559 = add i32 %558, i32 -1;
    store i32* %557 with i32 %559;
    i32* %560 = getelementptr &(i32* %20)[i32 %559];
    store i32* %560 with i32 %556;
    i32* %561 = getelementptr &(i32* %501)[i64 -10];
    i32 %562 = load i32* %561;
    i32* %563 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %562];
    i32 %564 = load i32* %563;
    i32 %565 = add i32 %564, i32 -1;
    store i32* %563 with i32 %565;
    i32* %566 = getelementptr &(i32* %20)[i32 %565];
    store i32* %566 with i32 %562;
    i32* %567 = getelementptr &(i32* %501)[i64 -11];
    i32 %568 = load i32* %567;
    i32* %569 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %568];
    i32 %570 = load i32* %569;
    i32 %571 = add i32 %570, i32 -1;
    store i32* %569 with i32 %571;
    i32* %572 = getelementptr &(i32* %20)[i32 %571];
    store i32* %572 with i32 %568;
    i32* %573 = getelementptr &(i32* %501)[i64 -12];
    i32 %574 = load i32* %573;
    i32* %575 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %574];
    i32 %576 = load i32* %575;
    i32 %577 = add i32 %576, i32 -1;
    store i32* %575 with i32 %577;
    i32* %578 = getelementptr &(i32* %20)[i32 %577];
    store i32* %578 with i32 %574;
    i32* %579 = getelementptr &(i32* %501)[i64 -13];
    i32 %580 = load i32* %579;
    i32* %581 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %580];
    i32 %582 = load i32* %581;
    i32 %583 = add i32 %582, i32 -1;
    store i32* %581 with i32 %583;
    i32* %584 = getelementptr &(i32* %20)[i32 %583];
    store i32* %584 with i32 %580;
    i32* %585 = getelementptr &(i32* %501)[i64 -14];
    i32 %586 = load i32* %585;
    i32* %587 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %586];
    i32 %588 = load i32* %587;
    i32 %589 = add i32 %588, i32 -1;
    store i32* %587 with i32 %589;
    i32* %590 = getelementptr &(i32* %20)[i32 %589];
    store i32* %590 with i32 %586;
    i32* %591 = getelementptr &(i32* %501)[i64 -15];
    i32 %592 = load i32* %591;
    i32* %593 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %592];
    i32 %594 = load i32* %593;
    i32 %595 = add i32 %594, i32 -1;
    store i32* %593 with i32 %595;
    i32* %596 = getelementptr &(i32* %20)[i32 %595];
    store i32* %596 with i32 %592;
    ubr ^super.header5;
  ^while.body8:
    i32 %597 = phi [^super.header5, i32 %497] [^while.body8, i32 %598];
    i32 %598 = add i32 %597, i32 -1;
    i32* %599 = getelementptr &(i32* %0)[i32 %598];
    i32 %600 = load i32* %599;
    i32* %601 = getelementptr &([10 * i32]* %count_ar)[i64 0][i32 %600];
    i32 %602 = load i32* %601;
    i32 %603 = add i32 %602, i32 -1;
    store i32* %601 with i32 %603;
    i32* %604 = getelementptr &(i32* %20)[i32 %603];
    store i32* %604 with i32 %600;
    i1 %605 = scmp gt i32 %598, i32 0;
    cbr i1 %605(prob = 0.97), ^while.body8, ^while.body9;
  ^while.body9:
    i32 %606 = phi [^while.body8, i32 0] [^while.body9, i32 %609];
    i32* %607 = getelementptr &([10 * i32]* %b)[i64 0][i32 %606];
    i32 %608 = load i32* %607;
    call (i32) -> void @putint(i32 %608);
    call (i32) -> void @putch(i32 10);
    i32 %609 = add i32 %606, i32 1;
    i1 %610 = scmp lt i32 %609, i32 10;
    cbr i1 %610(prob = 0.9), ^while.body9, ^b1;
  ^b1:
    ret i32 0;
}
