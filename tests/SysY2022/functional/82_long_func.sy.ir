internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry:
    [16 * i32]* %SHIFT_TABLE = alloc [16 * i32];
    i32* %0 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 0];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 1];
    store i32* %1 with i32 2;
    i32* %2 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 2];
    store i32* %2 with i32 4;
    i32* %3 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 3];
    store i32* %3 with i32 8;
    i32* %4 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 4];
    store i32* %4 with i32 16;
    i32* %5 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 5];
    store i32* %5 with i32 32;
    i32* %6 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 6];
    store i32* %6 with i32 64;
    i32* %7 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 7];
    store i32* %7 with i32 128;
    i32* %8 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 8];
    store i32* %8 with i32 256;
    i32* %9 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 9];
    store i32* %9 with i32 512;
    i32* %10 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 10];
    store i32* %10 with i32 1024;
    i32* %11 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 11];
    store i32* %11 with i32 2048;
    i32* %12 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 12];
    store i32* %12 with i32 4096;
    i32* %13 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 13];
    store i32* %13 with i32 8192;
    i32* %14 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 14];
    store i32* %14 with i32 16384;
    i32* %15 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 15];
    store i32* %15 with i32 32768;
    ubr ^while.header;
^while.header:
    i32 %16 = phi [^b20, i32 %86] [^entry, i32 1];
    i32 %17 = phi [^b20, i32 %199] [^entry, i32 0];
    i32 %18 = phi [^b20, i32 %83] [^entry, i32 2];
    i32 %19 = phi [^entry, i32 0] [^b20, i32 %199];
    i1 %20 = scmp gt i32 %19, i32 0;
    cbr i1 %20(prob = 0.97), ^while.header1, ^b;
^b:
    call (i32) -> void @putint(i32 %16);
    call (i32) -> void @putch(i32 10);
    ubr ^while.header2;
^while.header1:
    i32 %21 = phi [^while.header, i32 %16] [^b6, i32 %21];
    i32 %22 = phi [^while.header, i32 %17] [^b6, i32 %22];
    i32 %23 = phi [^while.header, i32 %18] [^b6, i32 %23];
    i32 %24 = phi [^while.header, i32 1] [^b6, i32 %65];
    i32 %25 = phi [^while.header, i32 %17] [^b6, i32 %64];
    i32 %26 = phi [^while.header, i32 0] [^b6, i32 %66];
    i32 %27 = phi [^while.header, i32 0] [^b6, i32 %63];
    i32 %28 = phi [^while.header, i32 0] [^b6, i32 %66];
    i1 %29 = scmp lt i32 %28, i32 16;
    cbr i1 %29(prob = 0.97), ^while.body, ^b1;
^while.body:
    i32 %30 = srem i32 %25, i32 2;
    i1 %31 = scmp neq i32 %30, i32 0;
    cbr i1 %31(prob = 0.5), ^b2, ^b5;
^while.header2:
    i32 %32 = phi [^b41, i32 %182] [^b, i32 1];
    i32 %33 = phi [^b41, i32 %370] [^b, i32 1];
    i32 %34 = phi [^b41, i32 %179] [^b, i32 2];
    i32 %35 = phi [^b41, i32 %370] [^b, i32 1];
    i1 %36 = scmp gt i32 %35, i32 0;
    cbr i1 %36(prob = 0.97), ^while.header3, ^b3;
^b1:
    i1 %37 = scmp neq i32 %27, i32 0;
    cbr i1 %37(prob = 0.5), ^while.header4, ^b4;
^b2:
    i32 %38 = srem i32 %24, i32 2;
    i1 %39 = scmp neq i32 %38, i32 0;
    ubr ^b5;
^b3:
    call (i32) -> void @putint(i32 %32);
    call (i32) -> void @putch(i32 10);
    ubr ^while.header6;
^b4:
    i32 %40 = phi [^while.header4, i32 %53] [^b1, i32 %21];
    i32 %41 = phi [^while.header4, i32 %56] [^b1, i32 %22];
    i32 %42 = phi [^while.header4, i32 %57] [^b1, i32 %23];
    ubr ^while.header7;
^b5:
    i1 %43 = phi [^b2, i1 %39] [^while.body, i1 false];
    cbr i1 %43(prob = 0.5), ^if.then, ^b6;
^while.header3:
    i32 %44 = phi [^while.header2, i32 %32] [^b15, i32 %44];
    i32 %45 = phi [^while.header2, i32 %33] [^b15, i32 %45];
    i32 %46 = phi [^while.header2, i32 %34] [^b15, i32 %46];
    i32 %47 = phi [^while.header2, i32 1] [^b15, i32 %138];
    i32 %48 = phi [^while.header2, i32 %33] [^b15, i32 %137];
    i32 %49 = phi [^while.header2, i32 0] [^b15, i32 %139];
    i32 %50 = phi [^while.header2, i32 0] [^b15, i32 %136];
    i32 %51 = phi [^while.header2, i32 0] [^b15, i32 %139];
    i1 %52 = scmp lt i32 %51, i32 16;
    cbr i1 %52(prob = 0.97), ^while.body1, ^b7;
^while.header4:
    i32 %53 = phi [^b1, i32 0] [^b52, i32 %239];
    i32 %54 = phi [^b1, i32 %23] [^b52, i32 %505];
    i32 %55 = phi [^b1, i32 %21] [^b52, i32 %238];
    i32 %56 = phi [^b1, i32 %22] [^b52, i32 %241];
    i32 %57 = phi [^b1, i32 %23] [^b52, i32 %242];
    i32 %58 = phi [^b1, i32 %23] [^b52, i32 %505];
    i1 %59 = scmp neq i32 %58, i32 0;
    cbr i1 %59(prob = 0.97), ^while.header5, ^b4;
^if.then:
    i32* %60 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %26];
    i32 %61 = load i32* %60;
    i32 %62 = add i32 %61, i32 %27;
    ubr ^b6;
^b6:
    i32 %63 = phi [^b5, i32 %27] [^if.then, i32 %62];
    i32 %64 = sdiv i32 %25, i32 2;
    i32 %65 = sdiv i32 %24, i32 2;
    i32 %66 = add i32 %26, i32 1;
    ubr ^while.header1;
^while.body1:
    i32 %67 = srem i32 %48, i32 2;
    i1 %68 = scmp neq i32 %67, i32 0;
    cbr i1 %68(prob = 0.5), ^b8, ^b10;
^while.header5:
    i32 %69 = phi [^while.header4, i32 %53] [^b21, i32 %69];
    i32 %70 = phi [^while.header4, i32 %54] [^b21, i32 %70];
    i32 %71 = phi [^while.header4, i32 %55] [^b21, i32 %71];
    i32 %72 = phi [^while.header4, i32 %56] [^b21, i32 %72];
    i32 %73 = phi [^while.header4, i32 %57] [^b21, i32 %73];
    i32 %74 = phi [^while.header4, i32 1] [^b21, i32 %202];
    i32 %75 = phi [^while.header4, i32 %54] [^b21, i32 %201];
    i32 %76 = phi [^while.header4, i32 0] [^b21, i32 %203];
    i32 %77 = phi [^while.header4, i32 0] [^b21, i32 %200];
    i32 %78 = phi [^while.header4, i32 0] [^b21, i32 %203];
    i1 %79 = scmp lt i32 %78, i32 16;
    cbr i1 %79(prob = 0.97), ^while.body2, ^b11;
^while.header6:
    i32 %80 = phi [^b14, i32 %133] [^b3, i32 2];
    i32 %81 = phi [^b3, i32 2] [^b14, i32 %133];
    i1 %82 = scmp lt i32 %81, i32 16;
    cbr i1 %82(prob = 0.97), ^while.header8, ^while.header11;
^while.header7:
    i32 %83 = phi [^b66, i32 %352] [^b4, i32 0];
    i32 %84 = phi [^b66, i32 %656] [^b4, i32 %42];
    i32 %85 = phi [^b66, i32 %351] [^b4, i32 %42];
    i32 %86 = phi [^b66, i32 %354] [^b4, i32 %40];
    i32 %87 = phi [^b66, i32 %355] [^b4, i32 %41];
    i32 %88 = phi [^b66, i32 %656] [^b4, i32 %42];
    i1 %89 = scmp neq i32 %88, i32 0;
    cbr i1 %89(prob = 0.97), ^while.header9, ^b12;
^b7:
    i1 %90 = scmp neq i32 %50, i32 0;
    cbr i1 %90(prob = 0.5), ^while.header10, ^b9;
^b8:
    i32 %91 = srem i32 %47, i32 2;
    i1 %92 = scmp neq i32 %91, i32 0;
    ubr ^b10;
^b9:
    i32 %93 = phi [^while.header10, i32 %116] [^b7, i32 %44];
    i32 %94 = phi [^while.header10, i32 %119] [^b7, i32 %45];
    i32 %95 = phi [^while.header10, i32 %120] [^b7, i32 %46];
    ubr ^while.header15;
^while.body2:
    i32 %96 = srem i32 %75, i32 2;
    i1 %97 = scmp neq i32 %96, i32 0;
    cbr i1 %97(prob = 0.5), ^b13, ^b17;
^b10:
    i1 %98 = phi [^while.body1, i1 false] [^b8, i1 %92];
    cbr i1 %98(prob = 0.5), ^if.then1, ^b15;
^while.header8:
    i32 %99 = phi [^while.header6, i32 1] [^b83, i32 %432];
    i32 %100 = phi [^while.header6, i32 %80] [^b83, i32 %803];
    i32 %101 = phi [^while.header6, i32 2] [^b83, i32 %429];
    i32 %102 = phi [^while.header6, i32 %80] [^b83, i32 %434];
    i32 %103 = phi [^while.header6, i32 %80] [^b83, i32 %803];
    i1 %104 = scmp gt i32 %103, i32 0;
    cbr i1 %104(prob = 0.97), ^while.header12, ^b14;
^while.header9:
    i32 %105 = phi [^while.header7, i32 %83] [^b31, i32 %105];
    i32 %106 = phi [^while.header7, i32 %84] [^b31, i32 %106];
    i32 %107 = phi [^while.header7, i32 %85] [^b31, i32 %107];
    i32 %108 = phi [^while.header7, i32 %86] [^b31, i32 %108];
    i32 %109 = phi [^while.header7, i32 %87] [^b31, i32 %109];
    i32 %110 = phi [^while.header7, i32 1] [^b31, i32 %286];
    i32 %111 = phi [^while.header7, i32 %84] [^b31, i32 %285];
    i32 %112 = phi [^while.header7, i32 0] [^b31, i32 %287];
    i32 %113 = phi [^while.header7, i32 0] [^b31, i32 %284];
    i32 %114 = phi [^while.header7, i32 0] [^b31, i32 %287];
    i1 %115 = scmp lt i32 %114, i32 16;
    cbr i1 %115(prob = 0.97), ^while.body3, ^b18;
^while.header10:
    i32 %116 = phi [^b7, i32 0] [^b85, i32 %449];
    i32 %117 = phi [^b7, i32 %46] [^b85, i32 %808];
    i32 %118 = phi [^b7, i32 %44] [^b85, i32 %448];
    i32 %119 = phi [^b7, i32 %45] [^b85, i32 %451];
    i32 %120 = phi [^b7, i32 %46] [^b85, i32 %452];
    i32 %121 = phi [^b7, i32 %46] [^b85, i32 %808];
    i1 %122 = scmp neq i32 %121, i32 0;
    cbr i1 %122(prob = 0.97), ^while.header13, ^b9;
^b11:
    i1 %123 = scmp neq i32 %77, i32 0;
    cbr i1 %123(prob = 0.5), ^while.header14, ^b16;
^b12:
    i1 %124 = scmp gt i32 %87, i32 32767;
    cbr i1 %124(prob = 0.5), ^if.then2, ^if.else;
^while.header11:
    i32 %125 = phi [^while.header6, i32 0] [^b34, i32 %300];
    i32 %126 = phi [^while.header6, i32 0] [^b34, i32 %300];
    i1 %127 = scmp lt i32 %126, i32 16;
    cbr i1 %127(prob = 0.97), ^while.header16, ^entry1;
^b13:
    i32 %128 = srem i32 %74, i32 2;
    i1 %129 = scmp neq i32 %128, i32 0;
    ubr ^b17;
^if.then1:
    i32* %130 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %49];
    i32 %131 = load i32* %130;
    i32 %132 = add i32 %131, i32 %50;
    ubr ^b15;
^b14:
    call (i32) -> void @putint(i32 %99);
    call (i32) -> void @putch(i32 10);
    i32 %133 = add i32 %102, i32 1;
    ubr ^while.header6;
^if.then2:
    i32 %134 = sdiv i32 %87, i32 2;
    i32 %135 = add i32 %134, i32 32768;
    ubr ^b20;
^b15:
    i32 %136 = phi [^b10, i32 %50] [^if.then1, i32 %132];
    i32 %137 = sdiv i32 %48, i32 2;
    i32 %138 = sdiv i32 %47, i32 2;
    i32 %139 = add i32 %49, i32 1;
    ubr ^while.header3;
^b16:
    i32 %140 = phi [^while.header14, i32 %172] [^b11, i32 %69];
    i32 %141 = phi [^while.header14, i32 %173] [^b11, i32 %70];
    i32 %142 = phi [^while.header14, i32 %174] [^b11, i32 %71];
    i32 %143 = phi [^while.header14, i32 %175] [^b11, i32 %72];
    i32 %144 = phi [^while.header14, i32 %176] [^b11, i32 %73];
    ubr ^while.header19;
^if.else:
    i32 %145 = load i32* %1;
    i32 %146 = sdiv i32 %87, i32 %145;
    ubr ^b20;
^while.body3:
    i32 %147 = srem i32 %111, i32 2;
    i1 %148 = scmp neq i32 %147, i32 0;
    cbr i1 %148(prob = 0.5), ^b19, ^b23;
^while.header12:
    i32 %149 = phi [^while.header8, i32 %99] [^b42, i32 %149];
    i32 %150 = phi [^while.header8, i32 %100] [^b42, i32 %150];
    i32 %151 = phi [^while.header8, i32 %101] [^b42, i32 %151];
    i32 %152 = phi [^while.header8, i32 %102] [^b42, i32 %152];
    i32 %153 = phi [^while.header8, i32 1] [^b42, i32 %373];
    i32 %154 = phi [^while.header8, i32 %100] [^b42, i32 %372];
    i32 %155 = phi [^while.header8, i32 0] [^b42, i32 %374];
    i32 %156 = phi [^while.header8, i32 0] [^b42, i32 %371];
    i32 %157 = phi [^while.header8, i32 0] [^b42, i32 %374];
    i1 %158 = scmp lt i32 %157, i32 16;
    cbr i1 %158(prob = 0.97), ^while.body4, ^b24;
^b17:
    i1 %159 = phi [^while.body2, i1 false] [^b13, i1 %129];
    cbr i1 %159(prob = 0.5), ^if.then3, ^b21;
^while.header13:
    i32 %160 = phi [^while.header10, i32 %116] [^b43, i32 %160];
    i32 %161 = phi [^while.header10, i32 %117] [^b43, i32 %161];
    i32 %162 = phi [^while.header10, i32 %118] [^b43, i32 %162];
    i32 %163 = phi [^while.header10, i32 %119] [^b43, i32 %163];
    i32 %164 = phi [^while.header10, i32 %120] [^b43, i32 %164];
    i32 %165 = phi [^while.header10, i32 1] [^b43, i32 %377];
    i32 %166 = phi [^while.header10, i32 %117] [^b43, i32 %376];
    i32 %167 = phi [^while.header10, i32 0] [^b43, i32 %378];
    i32 %168 = phi [^while.header10, i32 0] [^b43, i32 %375];
    i32 %169 = phi [^while.header10, i32 0] [^b43, i32 %378];
    i1 %170 = scmp lt i32 %169, i32 16;
    cbr i1 %170(prob = 0.97), ^while.body5, ^b25;
^while.header14:
    i32 %171 = phi [^while.header42, i32 %605] [^b11, i32 %71];
    i32 %172 = phi [^while.header42, i32 %597] [^b11, i32 %69];
    i32 %173 = phi [^while.header42, i32 %598] [^b11, i32 %70];
    i32 %174 = phi [^while.header42, i32 %599] [^b11, i32 %71];
    i32 %175 = phi [^while.header42, i32 %600] [^b11, i32 %72];
    i32 %176 = phi [^while.header42, i32 %601] [^b11, i32 %73];
    i32 %177 = phi [^while.header42, i32 %605] [^b11, i32 %71];
    i1 %178 = scmp neq i32 %177, i32 0;
    cbr i1 %178(prob = 0.97), ^while.header17, ^b16;
^while.header15:
    i32 %179 = phi [^b107, i32 %609] [^b9, i32 0];
    i32 %180 = phi [^b107, i32 %985] [^b9, i32 %95];
    i32 %181 = phi [^b107, i32 %608] [^b9, i32 %95];
    i32 %182 = phi [^b107, i32 %611] [^b9, i32 %93];
    i32 %183 = phi [^b107, i32 %612] [^b9, i32 %94];
    i32 %184 = phi [^b107, i32 %985] [^b9, i32 %95];
    i1 %185 = scmp neq i32 %184, i32 0;
    cbr i1 %185(prob = 0.97), ^while.header18, ^b26;
^b18:
    i1 %186 = scmp neq i32 %113, i32 0;
    cbr i1 %186(prob = 0.5), ^while.header20, ^b22;
^while.header16:
    i32 %187 = phi [^while.header11, i32 1] [^b109, i32 %619];
    i32 %188 = phi [^while.header11, i32 %125] [^b109, i32 %990];
    i32 %189 = phi [^while.header11, i32 2] [^b109, i32 %616];
    i32 %190 = phi [^while.header11, i32 %125] [^b109, i32 %621];
    i32 %191 = phi [^while.header11, i32 %125] [^b109, i32 %990];
    i1 %192 = scmp gt i32 %191, i32 0;
    cbr i1 %192(prob = 0.97), ^while.header21, ^b27;
^entry1:
    i32 %193 = phi [^while.header11, i32 0] [^b27, i32 1];
    ret i32 %193;
^b19:
    i32 %194 = srem i32 %110, i32 2;
    i1 %195 = scmp neq i32 %194, i32 0;
    ubr ^b23;
^if.then3:
    i32* %196 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %76];
    i32 %197 = load i32* %196;
    i32 %198 = add i32 %197, i32 %77;
    ubr ^b21;
^b20:
    i32 %199 = phi [^if.else, i32 %146] [^if.then2, i32 %135];
    ubr ^while.header;
^b21:
    i32 %200 = phi [^b17, i32 %77] [^if.then3, i32 %198];
    i32 %201 = sdiv i32 %75, i32 2;
    i32 %202 = sdiv i32 %74, i32 2;
    i32 %203 = add i32 %76, i32 1;
    ubr ^while.header5;
^b22:
    i32 %204 = phi [^while.header20, i32 %246] [^b18, i32 %105];
    i32 %205 = phi [^while.header20, i32 %247] [^b18, i32 %106];
    i32 %206 = phi [^while.header20, i32 %248] [^b18, i32 %107];
    i32 %207 = phi [^while.header20, i32 %249] [^b18, i32 %108];
    i32 %208 = phi [^while.header20, i32 %250] [^b18, i32 %109];
    ubr ^while.header27;
^while.body4:
    i32 %209 = srem i32 %154, i32 2;
    i1 %210 = scmp neq i32 %209, i32 0;
    cbr i1 %210(prob = 0.5), ^b28, ^b33;
^while.body5:
    i32 %211 = srem i32 %166, i32 2;
    i1 %212 = scmp neq i32 %211, i32 0;
    cbr i1 %212(prob = 0.5), ^b29, ^b35;
^while.header17:
    i32 %213 = phi [^while.header14, i32 %171] [^b50, i32 %213];
    i32 %214 = phi [^while.header14, i32 %172] [^b50, i32 %214];
    i32 %215 = phi [^while.header14, i32 %173] [^b50, i32 %215];
    i32 %216 = phi [^while.header14, i32 %174] [^b50, i32 %216];
    i32 %217 = phi [^while.header14, i32 %175] [^b50, i32 %217];
    i32 %218 = phi [^while.header14, i32 %176] [^b50, i32 %218];
    i32 %219 = phi [^while.header14, i32 %171] [^b50, i32 %495];
    i32 %220 = phi [^while.header14, i32 %172] [^b50, i32 %494];
    i32 %221 = phi [^while.header14, i32 0] [^b50, i32 %496];
    i32 %222 = phi [^while.header14, i32 0] [^b50, i32 %493];
    i1 %223 = scmp lt i32 %221, i32 16;
    cbr i1 %223(prob = 0.97), ^while.body6, ^while.header26;
^b23:
    i1 %224 = phi [^b19, i1 %195] [^while.body3, i1 false];
    cbr i1 %224(prob = 0.5), ^if.then4, ^b31;
^while.header18:
    i32 %225 = phi [^while.header15, i32 %179] [^b53, i32 %225];
    i32 %226 = phi [^while.header15, i32 %180] [^b53, i32 %226];
    i32 %227 = phi [^while.header15, i32 %181] [^b53, i32 %227];
    i32 %228 = phi [^while.header15, i32 %182] [^b53, i32 %228];
    i32 %229 = phi [^while.header15, i32 %183] [^b53, i32 %229];
    i32 %230 = phi [^while.header15, i32 1] [^b53, i32 %508];
    i32 %231 = phi [^while.header15, i32 %180] [^b53, i32 %507];
    i32 %232 = phi [^while.header15, i32 0] [^b53, i32 %509];
    i32 %233 = phi [^while.header15, i32 0] [^b53, i32 %506];
    i32 %234 = phi [^while.header15, i32 0] [^b53, i32 %509];
    i1 %235 = scmp lt i32 %234, i32 16;
    cbr i1 %235(prob = 0.97), ^while.body7, ^b36;
^b24:
    i1 %236 = scmp neq i32 %156, i32 0;
    cbr i1 %236(prob = 0.5), ^while.header22, ^b30;
^while.header19:
    i32 %237 = phi [^while.header51, i32 %768] [^b16, i32 %142];
    i32 %238 = phi [^while.header51, i32 %760] [^b16, i32 %142];
    i32 %239 = phi [^while.header51, i32 %761] [^b16, i32 %140];
    i32 %240 = phi [^while.header51, i32 %762] [^b16, i32 %141];
    i32 %241 = phi [^while.header51, i32 %763] [^b16, i32 %143];
    i32 %242 = phi [^while.header51, i32 %764] [^b16, i32 %144];
    i32 %243 = phi [^while.header51, i32 %768] [^b16, i32 %142];
    i1 %244 = scmp neq i32 %243, i32 0;
    cbr i1 %244(prob = 0.97), ^while.header23, ^b37;
^while.header20:
    i32 %245 = phi [^b18, i32 %107] [^while.header52, i32 %778];
    i32 %246 = phi [^b18, i32 %105] [^while.header52, i32 %770];
    i32 %247 = phi [^b18, i32 %106] [^while.header52, i32 %771];
    i32 %248 = phi [^b18, i32 %107] [^while.header52, i32 %772];
    i32 %249 = phi [^b18, i32 %108] [^while.header52, i32 %773];
    i32 %250 = phi [^b18, i32 %109] [^while.header52, i32 %774];
    i32 %251 = phi [^b18, i32 %107] [^while.header52, i32 %778];
    i1 %252 = scmp neq i32 %251, i32 0;
    cbr i1 %252(prob = 0.97), ^while.header24, ^b22;
^b25:
    i1 %253 = scmp neq i32 %168, i32 0;
    cbr i1 %253(prob = 0.5), ^while.header25, ^b32;
^while.header21:
    i32 %254 = phi [^b54, i32 %254] [^while.header16, i32 %187];
    i32 %255 = phi [^b54, i32 %255] [^while.header16, i32 %188];
    i32 %256 = phi [^b54, i32 %256] [^while.header16, i32 %189];
    i32 %257 = phi [^b54, i32 %257] [^while.header16, i32 %190];
    i32 %258 = phi [^b54, i32 %517] [^while.header16, i32 1];
    i32 %259 = phi [^b54, i32 %516] [^while.header16, i32 %188];
    i32 %260 = phi [^b54, i32 %518] [^while.header16, i32 0];
    i32 %261 = phi [^b54, i32 %515] [^while.header16, i32 0];
    i32 %262 = phi [^b54, i32 %518] [^while.header16, i32 0];
    i1 %263 = scmp lt i32 %262, i32 16;
    cbr i1 %263(prob = 0.97), ^while.body8, ^b38;
^b26:
    i1 %264 = scmp gt i32 %183, i32 32767;
    cbr i1 %264(prob = 0.5), ^if.then5, ^if.else1;
^b27:
    i32* %265 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %190];
    i32 %266 = load i32* %265;
    i1 %267 = scmp neq i32 %266, i32 %187;
    cbr i1 %267(prob = 0.5), ^entry1, ^b34;
^b28:
    i32 %268 = srem i32 %153, i32 2;
    i1 %269 = scmp neq i32 %268, i32 0;
    ubr ^b33;
^b29:
    i32 %270 = srem i32 %165, i32 2;
    i1 %271 = scmp neq i32 %270, i32 0;
    ubr ^b35;
^if.then4:
    i32* %272 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %112];
    i32 %273 = load i32* %272;
    i32 %274 = add i32 %273, i32 %113;
    ubr ^b31;
^if.then5:
    i32 %275 = load i32* %1;
    i32 %276 = sdiv i32 %183, i32 %275;
    i32 %277 = add i32 %276, i32 65536;
    i32 %278 = load i32* %15;
    i32 %279 = sub i32 %277, i32 %278;
    ubr ^b41;
^b30:
    i32 %280 = phi [^while.header22, i32 %302] [^b24, i32 %149];
    i32 %281 = phi [^while.header22, i32 %305] [^b24, i32 %150];
    i32 %282 = phi [^while.header22, i32 %306] [^b24, i32 %151];
    i32 %283 = phi [^while.header22, i32 %307] [^b24, i32 %152];
    ubr ^while.header30;
^b31:
    i32 %284 = phi [^b23, i32 %113] [^if.then4, i32 %274];
    i32 %285 = sdiv i32 %111, i32 2;
    i32 %286 = sdiv i32 %110, i32 2;
    i32 %287 = add i32 %112, i32 1;
    ubr ^while.header9;
^b32:
    i32 %288 = phi [^while.header25, i32 %334] [^b25, i32 %160];
    i32 %289 = phi [^while.header25, i32 %335] [^b25, i32 %161];
    i32 %290 = phi [^while.header25, i32 %336] [^b25, i32 %162];
    i32 %291 = phi [^while.header25, i32 %337] [^b25, i32 %163];
    i32 %292 = phi [^while.header25, i32 %338] [^b25, i32 %164];
    ubr ^while.header32;
^while.body6:
    i32 %293 = srem i32 %220, i32 2;
    i1 %294 = scmp neq i32 %293, i32 0;
    cbr i1 %294(prob = 0.5), ^if.then9, ^if.else3;
^if.else1:
    i32 %295 = load i32* %1;
    i32 %296 = sdiv i32 %183, i32 %295;
    ubr ^b41;
^while.body7:
    i32 %297 = srem i32 %231, i32 2;
    i1 %298 = scmp neq i32 %297, i32 0;
    cbr i1 %298(prob = 0.5), ^b39, ^b47;
^b33:
    i1 %299 = phi [^b28, i1 %269] [^while.body4, i1 false];
    cbr i1 %299(prob = 0.5), ^if.then6, ^b42;
^b34:
    i32 %300 = add i32 %190, i32 1;
    ubr ^while.header11;
^b35:
    i1 %301 = phi [^b29, i1 %271] [^while.body5, i1 false];
    cbr i1 %301(prob = 0.5), ^if.then7, ^b43;
^while.header22:
    i32 %302 = phi [^b24, i32 0] [^b139, i32 %882];
    i32 %303 = phi [^b24, i32 %151] [^b139, i32 %1299];
    i32 %304 = phi [^b24, i32 %149] [^b139, i32 %881];
    i32 %305 = phi [^b24, i32 %150] [^b139, i32 %884];
    i32 %306 = phi [^b24, i32 %151] [^b139, i32 %885];
    i32 %307 = phi [^b24, i32 %152] [^b139, i32 %886];
    i1 %308 = scmp neq i32 %303, i32 0;
    cbr i1 %308(prob = 0.97), ^while.header28, ^b30;
^while.body8:
    i32 %309 = srem i32 %259, i32 2;
    i1 %310 = scmp neq i32 %309, i32 0;
    cbr i1 %310(prob = 0.5), ^b40, ^b48;
^while.header23:
    i32 %311 = phi [^while.header19, i32 %237] [^b62, i32 %311];
    i32 %312 = phi [^while.header19, i32 %238] [^b62, i32 %312];
    i32 %313 = phi [^while.header19, i32 %239] [^b62, i32 %313];
    i32 %314 = phi [^while.header19, i32 %240] [^b62, i32 %314];
    i32 %315 = phi [^while.header19, i32 %241] [^b62, i32 %315];
    i32 %316 = phi [^while.header19, i32 %242] [^b62, i32 %316];
    i32 %317 = phi [^while.header19, i32 %237] [^b62, i32 %643];
    i32 %318 = phi [^while.header19, i32 %238] [^b62, i32 %642];
    i32 %319 = phi [^while.header19, i32 0] [^b62, i32 %644];
    i32 %320 = phi [^while.header19, i32 0] [^b62, i32 %641];
    i1 %321 = scmp lt i32 %319, i32 16;
    cbr i1 %321(prob = 0.97), ^while.body9, ^while.header35;
^while.header24:
    i32 %322 = phi [^while.header20, i32 %245] [^b63, i32 %322];
    i32 %323 = phi [^while.header20, i32 %246] [^b63, i32 %323];
    i32 %324 = phi [^while.header20, i32 %247] [^b63, i32 %324];
    i32 %325 = phi [^while.header20, i32 %248] [^b63, i32 %325];
    i32 %326 = phi [^while.header20, i32 %249] [^b63, i32 %326];
    i32 %327 = phi [^while.header20, i32 %250] [^b63, i32 %327];
    i32 %328 = phi [^while.header20, i32 %245] [^b63, i32 %647];
    i32 %329 = phi [^while.header20, i32 %246] [^b63, i32 %646];
    i32 %330 = phi [^while.header20, i32 0] [^b63, i32 %648];
    i32 %331 = phi [^while.header20, i32 0] [^b63, i32 %645];
    i1 %332 = scmp lt i32 %330, i32 16;
    cbr i1 %332(prob = 0.97), ^while.body10, ^while.header36;
^while.header25:
    i32 %333 = phi [^while.header57, i32 %925] [^b25, i32 %162];
    i32 %334 = phi [^while.header57, i32 %917] [^b25, i32 %160];
    i32 %335 = phi [^while.header57, i32 %918] [^b25, i32 %161];
    i32 %336 = phi [^while.header57, i32 %919] [^b25, i32 %162];
    i32 %337 = phi [^while.header57, i32 %920] [^b25, i32 %163];
    i32 %338 = phi [^while.header57, i32 %921] [^b25, i32 %164];
    i1 %339 = scmp neq i32 %333, i32 0;
    cbr i1 %339(prob = 0.97), ^while.header29, ^b32;
^while.header26:
    i32 %340 = phi [^while.header17, i32 %222] [^b68, i32 %340];
    i32 %341 = phi [^while.header17, i32 %215] [^b68, i32 %341];
    i32 %342 = phi [^while.header17, i32 %216] [^b68, i32 %342];
    i32 %343 = phi [^while.header17, i32 %217] [^b68, i32 %343];
    i32 %344 = phi [^while.header17, i32 %218] [^b68, i32 %344];
    i32 %345 = phi [^while.header17, i32 %213] [^b68, i32 %677];
    i32 %346 = phi [^while.header17, i32 %214] [^b68, i32 %676];
    i32 %347 = phi [^while.header17, i32 0] [^b68, i32 %678];
    i32 %348 = phi [^while.header17, i32 0] [^b68, i32 %675];
    i1 %349 = scmp lt i32 %347, i32 16;
    cbr i1 %349(prob = 0.97), ^while.body11, ^b44;
^while.header27:
    i32 %350 = phi [^while.header59, i32 %947] [^b22, i32 %206];
    i32 %351 = phi [^while.header59, i32 %939] [^b22, i32 %206];
    i32 %352 = phi [^while.header59, i32 %940] [^b22, i32 %204];
    i32 %353 = phi [^while.header59, i32 %941] [^b22, i32 %205];
    i32 %354 = phi [^while.header59, i32 %942] [^b22, i32 %207];
    i32 %355 = phi [^while.header59, i32 %943] [^b22, i32 %208];
    i1 %356 = scmp neq i32 %350, i32 0;
    cbr i1 %356(prob = 0.97), ^while.header31, ^b49;
^b36:
    i1 %357 = scmp neq i32 %233, i32 0;
    cbr i1 %357(prob = 0.5), ^while.header33, ^b45;
^b37:
    i1 %358 = scmp gt i32 %240, i32 32767;
    cbr i1 %358(prob = 0.5), ^if.then8, ^if.else2;
^b38:
    i1 %359 = scmp neq i32 %261, i32 0;
    cbr i1 %359(prob = 0.5), ^while.header34, ^b46;
^b39:
    i32 %360 = srem i32 %230, i32 2;
    i1 %361 = scmp neq i32 %360, i32 0;
    ubr ^b47;
^if.then6:
    i32* %362 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %155];
    i32 %363 = load i32* %362;
    i32 %364 = add i32 %363, i32 %156;
    ubr ^b42;
^if.then7:
    i32* %365 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %167];
    i32 %366 = load i32* %365;
    i32 %367 = add i32 %366, i32 %168;
    ubr ^b43;
^b40:
    i32 %368 = srem i32 %258, i32 2;
    i1 %369 = scmp neq i32 %368, i32 0;
    ubr ^b48;
^b41:
    i32 %370 = phi [^if.else1, i32 %296] [^if.then5, i32 %279];
    ubr ^while.header2;
^b42:
    i32 %371 = phi [^if.then6, i32 %364] [^b33, i32 %156];
    i32 %372 = sdiv i32 %154, i32 2;
    i32 %373 = sdiv i32 %153, i32 2;
    i32 %374 = add i32 %155, i32 1;
    ubr ^while.header12;
^b43:
    i32 %375 = phi [^if.then7, i32 %367] [^b35, i32 %168];
    i32 %376 = sdiv i32 %166, i32 2;
    i32 %377 = sdiv i32 %165, i32 2;
    i32 %378 = add i32 %167, i32 1;
    ubr ^while.header13;
^if.then8:
    i32 %379 = load i32* %1;
    i32 %380 = sdiv i32 %240, i32 %379;
    i32 %381 = add i32 %380, i32 65536;
    i32 %382 = load i32* %15;
    i32 %383 = sub i32 %381, i32 %382;
    ubr ^b52;
^if.then9:
    i32 %384 = srem i32 %219, i32 2;
    i1 %385 = scmp eq i32 %384, i32 0;
    cbr i1 %385(prob = 0.5), ^if.then10, ^b50;
^b44:
    i32 %386 = mul i32 %348, i32 2;
    ubr ^while.header42;
^b45:
    i32 %387 = phi [^while.header33, i32 %455] [^b36, i32 %225];
    i32 %388 = phi [^while.header33, i32 %456] [^b36, i32 %226];
    i32 %389 = phi [^while.header33, i32 %457] [^b36, i32 %227];
    i32 %390 = phi [^while.header33, i32 %458] [^b36, i32 %228];
    i32 %391 = phi [^while.header33, i32 %459] [^b36, i32 %229];
    ubr ^while.header43;
^b46:
    i32 %392 = phi [^while.header34, i32 %462] [^b38, i32 %254];
    i32 %393 = phi [^while.header34, i32 %465] [^b38, i32 %255];
    i32 %394 = phi [^while.header34, i32 %466] [^b38, i32 %256];
    i32 %395 = phi [^while.header34, i32 %467] [^b38, i32 %257];
    ubr ^while.header44;
^if.else2:
    i32 %396 = load i32* %1;
    i32 %397 = sdiv i32 %240, i32 %396;
    ubr ^b52;
^while.body9:
    i32 %398 = srem i32 %318, i32 2;
    i1 %399 = scmp neq i32 %398, i32 0;
    cbr i1 %399(prob = 0.5), ^if.then14, ^if.else5;
^while.body10:
    i32 %400 = srem i32 %329, i32 2;
    i1 %401 = scmp neq i32 %400, i32 0;
    cbr i1 %401(prob = 0.5), ^if.then15, ^if.else6;
^while.header28:
    i32 %402 = phi [^while.header22, i32 %302] [^b87, i32 %402];
    i32 %403 = phi [^while.header22, i32 %303] [^b87, i32 %403];
    i32 %404 = phi [^while.header22, i32 %304] [^b87, i32 %404];
    i32 %405 = phi [^while.header22, i32 %305] [^b87, i32 %405];
    i32 %406 = phi [^while.header22, i32 %306] [^b87, i32 %406];
    i32 %407 = phi [^while.header22, i32 %307] [^b87, i32 %407];
    i32 %408 = phi [^while.header22, i32 1] [^b87, i32 %813];
    i32 %409 = phi [^while.header22, i32 %303] [^b87, i32 %812];
    i32 %410 = phi [^while.header22, i32 0] [^b87, i32 %814];
    i32 %411 = phi [^while.header22, i32 0] [^b87, i32 %811];
    i1 %412 = scmp lt i32 %410, i32 16;
    cbr i1 %412(prob = 0.97), ^while.body12, ^b57;
^if.else3:
    i32 %413 = srem i32 %219, i32 2;
    i1 %414 = scmp neq i32 %413, i32 0;
    cbr i1 %414(prob = 0.5), ^if.then10, ^b50;
^while.header29:
    i32 %415 = phi [^while.header25, i32 %333] [^b80, i32 %415];
    i32 %416 = phi [^while.header25, i32 %334] [^b80, i32 %416];
    i32 %417 = phi [^while.header25, i32 %335] [^b80, i32 %417];
    i32 %418 = phi [^while.header25, i32 %336] [^b80, i32 %418];
    i32 %419 = phi [^while.header25, i32 %337] [^b80, i32 %419];
    i32 %420 = phi [^while.header25, i32 %338] [^b80, i32 %420];
    i32 %421 = phi [^while.header25, i32 %333] [^b80, i32 %797];
    i32 %422 = phi [^while.header25, i32 %334] [^b80, i32 %796];
    i32 %423 = phi [^while.header25, i32 0] [^b80, i32 %798];
    i32 %424 = phi [^while.header25, i32 0] [^b80, i32 %795];
    i1 %425 = scmp lt i32 %423, i32 16;
    cbr i1 %425(prob = 0.97), ^while.body13, ^while.header41;
^while.body11:
    i32 %426 = srem i32 %346, i32 2;
    i1 %427 = scmp neq i32 %426, i32 0;
    cbr i1 %427(prob = 0.5), ^b51, ^b58;
^b47:
    i1 %428 = phi [^b39, i1 %361] [^while.body7, i1 false];
    cbr i1 %428(prob = 0.5), ^if.then11, ^b53;
^while.header30:
    i32 %429 = phi [^b158, i32 %1074] [^b30, i32 0];
    i32 %430 = phi [^b158, i32 %1458] [^b30, i32 %282];
    i32 %431 = phi [^b158, i32 %1073] [^b30, i32 %282];
    i32 %432 = phi [^b158, i32 %1076] [^b30, i32 %280];
    i32 %433 = phi [^b158, i32 %1077] [^b30, i32 %281];
    i32 %434 = phi [^b158, i32 %1078] [^b30, i32 %283];
    i1 %435 = scmp neq i32 %430, i32 0;
    cbr i1 %435(prob = 0.97), ^while.header37, ^b59;
^while.header31:
    i32 %436 = phi [^while.header27, i32 %350] [^b84, i32 %436];
    i32 %437 = phi [^while.header27, i32 %351] [^b84, i32 %437];
    i32 %438 = phi [^while.header27, i32 %352] [^b84, i32 %438];
    i32 %439 = phi [^while.header27, i32 %353] [^b84, i32 %439];
    i32 %440 = phi [^while.header27, i32 %354] [^b84, i32 %440];
    i32 %441 = phi [^while.header27, i32 %355] [^b84, i32 %441];
    i32 %442 = phi [^while.header27, i32 %350] [^b84, i32 %806];
    i32 %443 = phi [^while.header27, i32 %351] [^b84, i32 %805];
    i32 %444 = phi [^while.header27, i32 0] [^b84, i32 %807];
    i32 %445 = phi [^while.header27, i32 0] [^b84, i32 %804];
    i1 %446 = scmp lt i32 %444, i32 16;
    cbr i1 %446(prob = 0.97), ^while.body14, ^while.header45;
^while.header32:
    i32 %447 = phi [^while.header67, i32 %1114] [^b32, i32 %290];
    i32 %448 = phi [^while.header67, i32 %1106] [^b32, i32 %290];
    i32 %449 = phi [^while.header67, i32 %1107] [^b32, i32 %288];
    i32 %450 = phi [^while.header67, i32 %1108] [^b32, i32 %289];
    i32 %451 = phi [^while.header67, i32 %1109] [^b32, i32 %291];
    i32 %452 = phi [^while.header67, i32 %1110] [^b32, i32 %292];
    i1 %453 = scmp neq i32 %447, i32 0;
    cbr i1 %453(prob = 0.97), ^while.header38, ^b60;
^while.header33:
    i32 %454 = phi [^while.header68, i32 %1124] [^b36, i32 %227];
    i32 %455 = phi [^while.header68, i32 %1116] [^b36, i32 %225];
    i32 %456 = phi [^while.header68, i32 %1117] [^b36, i32 %226];
    i32 %457 = phi [^while.header68, i32 %1118] [^b36, i32 %227];
    i32 %458 = phi [^while.header68, i32 %1119] [^b36, i32 %228];
    i32 %459 = phi [^while.header68, i32 %1120] [^b36, i32 %229];
    i1 %460 = scmp neq i32 %454, i32 0;
    cbr i1 %460(prob = 0.97), ^while.header39, ^b45;
^b48:
    i1 %461 = phi [^b40, i1 %369] [^while.body8, i1 false];
    cbr i1 %461(prob = 0.5), ^if.then12, ^b54;
^while.header34:
    i32 %462 = phi [^b38, i32 0] [^b160, i32 %1090];
    i32 %463 = phi [^b38, i32 %256] [^b160, i32 %1467];
    i32 %464 = phi [^b38, i32 %254] [^b160, i32 %1089];
    i32 %465 = phi [^b38, i32 %255] [^b160, i32 %1092];
    i32 %466 = phi [^b38, i32 %256] [^b160, i32 %1093];
    i32 %467 = phi [^b38, i32 %257] [^b160, i32 %1094];
    i1 %468 = scmp neq i32 %463, i32 0;
    cbr i1 %468(prob = 0.97), ^while.header40, ^b46;
^while.header35:
    i32 %469 = phi [^b89, i32 %469] [^while.header23, i32 %320];
    i32 %470 = phi [^b89, i32 %470] [^while.header23, i32 %313];
    i32 %471 = phi [^b89, i32 %471] [^while.header23, i32 %314];
    i32 %472 = phi [^b89, i32 %472] [^while.header23, i32 %315];
    i32 %473 = phi [^b89, i32 %473] [^while.header23, i32 %316];
    i32 %474 = phi [^b89, i32 %843] [^while.header23, i32 %311];
    i32 %475 = phi [^b89, i32 %842] [^while.header23, i32 %312];
    i32 %476 = phi [^b89, i32 %844] [^while.header23, i32 0];
    i32 %477 = phi [^b89, i32 %841] [^while.header23, i32 0];
    i1 %478 = scmp lt i32 %476, i32 16;
    cbr i1 %478(prob = 0.97), ^while.body15, ^b55;
^while.header36:
    i32 %479 = phi [^while.header24, i32 %331] [^b90, i32 %479];
    i32 %480 = phi [^while.header24, i32 %324] [^b90, i32 %480];
    i32 %481 = phi [^while.header24, i32 %325] [^b90, i32 %481];
    i32 %482 = phi [^while.header24, i32 %326] [^b90, i32 %482];
    i32 %483 = phi [^while.header24, i32 %327] [^b90, i32 %483];
    i32 %484 = phi [^while.header24, i32 %322] [^b90, i32 %847];
    i32 %485 = phi [^while.header24, i32 %323] [^b90, i32 %846];
    i32 %486 = phi [^while.header24, i32 0] [^b90, i32 %848];
    i32 %487 = phi [^while.header24, i32 0] [^b90, i32 %845];
    i1 %488 = scmp lt i32 %486, i32 16;
    cbr i1 %488(prob = 0.97), ^while.body16, ^b56;
^b49:
    i1 %489 = scmp gt i32 %353, i32 32767;
    cbr i1 %489(prob = 0.5), ^if.then13, ^if.else4;
^if.then10:
    i32* %490 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %221];
    i32 %491 = load i32* %490;
    i32 %492 = add i32 %491, i32 %222;
    ubr ^b50;
^b50:
    i32 %493 = phi [^if.then10, i32 %492] [^if.else3, i32 %222] [^if.then9, i32 %222];
    i32 %494 = sdiv i32 %220, i32 2;
    i32 %495 = sdiv i32 %219, i32 2;
    i32 %496 = add i32 %221, i32 1;
    ubr ^while.header17;
^b51:
    i32 %497 = srem i32 %345, i32 2;
    i1 %498 = scmp neq i32 %497, i32 0;
    ubr ^b58;
^if.then11:
    i32* %499 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %232];
    i32 %500 = load i32* %499;
    i32 %501 = add i32 %500, i32 %233;
    ubr ^b53;
^if.then12:
    i32* %502 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %260];
    i32 %503 = load i32* %502;
    i32 %504 = add i32 %503, i32 %261;
    ubr ^b54;
^b52:
    i32 %505 = phi [^if.else2, i32 %397] [^if.then8, i32 %383];
    ubr ^while.header4;
^b53:
    i32 %506 = phi [^if.then11, i32 %501] [^b47, i32 %233];
    i32 %507 = sdiv i32 %231, i32 2;
    i32 %508 = sdiv i32 %230, i32 2;
    i32 %509 = add i32 %232, i32 1;
    ubr ^while.header18;
^if.then13:
    i32 %510 = load i32* %1;
    i32 %511 = sdiv i32 %353, i32 %510;
    i32 %512 = add i32 %511, i32 65536;
    i32 %513 = load i32* %15;
    i32 %514 = sub i32 %512, i32 %513;
    ubr ^b66;
^b54:
    i32 %515 = phi [^if.then12, i32 %504] [^b48, i32 %261];
    i32 %516 = sdiv i32 %259, i32 2;
    i32 %517 = sdiv i32 %258, i32 2;
    i32 %518 = add i32 %260, i32 1;
    ubr ^while.header21;
^if.then14:
    i32 %519 = srem i32 %317, i32 2;
    i1 %520 = scmp eq i32 %519, i32 0;
    cbr i1 %520(prob = 0.5), ^if.then16, ^b62;
^if.then15:
    i32 %521 = srem i32 %328, i32 2;
    i1 %522 = scmp eq i32 %521, i32 0;
    cbr i1 %522(prob = 0.5), ^if.then17, ^b63;
^while.body12:
    i32 %523 = srem i32 %409, i32 2;
    i1 %524 = scmp neq i32 %523, i32 0;
    cbr i1 %524(prob = 0.5), ^b61, ^b70;
^while.body13:
    i32 %525 = srem i32 %422, i32 2;
    i1 %526 = scmp neq i32 %525, i32 0;
    cbr i1 %526(prob = 0.5), ^if.then21, ^if.else9;
^b55:
    i32 %527 = mul i32 %477, i32 2;
    ubr ^while.header51;
^b56:
    i32 %528 = mul i32 %487, i32 2;
    ubr ^while.header52;
^if.else4:
    i32 %529 = load i32* %1;
    i32 %530 = sdiv i32 %353, i32 %529;
    ubr ^b66;
^while.body14:
    i32 %531 = srem i32 %443, i32 2;
    i1 %532 = scmp neq i32 %531, i32 0;
    cbr i1 %532(prob = 0.5), ^if.then22, ^if.else10;
^while.header37:
    i32 %533 = phi [^while.header30, i32 %429] [^b108, i32 %533];
    i32 %534 = phi [^while.header30, i32 %430] [^b108, i32 %534];
    i32 %535 = phi [^while.header30, i32 %431] [^b108, i32 %535];
    i32 %536 = phi [^while.header30, i32 %432] [^b108, i32 %536];
    i32 %537 = phi [^while.header30, i32 %433] [^b108, i32 %537];
    i32 %538 = phi [^while.header30, i32 %434] [^b108, i32 %538];
    i32 %539 = phi [^while.header30, i32 1] [^b108, i32 %988];
    i32 %540 = phi [^while.header30, i32 %430] [^b108, i32 %987];
    i32 %541 = phi [^while.header30, i32 0] [^b108, i32 %989];
    i32 %542 = phi [^while.header30, i32 0] [^b108, i32 %986];
    i1 %543 = scmp lt i32 %541, i32 16;
    cbr i1 %543(prob = 0.97), ^while.body17, ^b72;
^if.else5:
    i32 %544 = srem i32 %317, i32 2;
    i1 %545 = scmp neq i32 %544, i32 0;
    cbr i1 %545(prob = 0.5), ^if.then16, ^b62;
^if.else6:
    i32 %546 = srem i32 %328, i32 2;
    i1 %547 = scmp neq i32 %546, i32 0;
    cbr i1 %547(prob = 0.5), ^if.then17, ^b63;
^while.header38:
    i32 %548 = phi [^while.header32, i32 %447] [^b101, i32 %548];
    i32 %549 = phi [^while.header32, i32 %448] [^b101, i32 %549];
    i32 %550 = phi [^while.header32, i32 %449] [^b101, i32 %550];
    i32 %551 = phi [^while.header32, i32 %450] [^b101, i32 %551];
    i32 %552 = phi [^while.header32, i32 %451] [^b101, i32 %552];
    i32 %553 = phi [^while.header32, i32 %452] [^b101, i32 %553];
    i32 %554 = phi [^while.header32, i32 %447] [^b101, i32 %962];
    i32 %555 = phi [^while.header32, i32 %448] [^b101, i32 %961];
    i32 %556 = phi [^while.header32, i32 0] [^b101, i32 %963];
    i32 %557 = phi [^while.header32, i32 0] [^b101, i32 %960];
    i1 %558 = scmp lt i32 %556, i32 16;
    cbr i1 %558(prob = 0.97), ^while.body18, ^while.header49;
^while.header39:
    i32 %559 = phi [^while.header33, i32 %454] [^b102, i32 %559];
    i32 %560 = phi [^while.header33, i32 %455] [^b102, i32 %560];
    i32 %561 = phi [^while.header33, i32 %456] [^b102, i32 %561];
    i32 %562 = phi [^while.header33, i32 %457] [^b102, i32 %562];
    i32 %563 = phi [^while.header33, i32 %458] [^b102, i32 %563];
    i32 %564 = phi [^while.header33, i32 %459] [^b102, i32 %564];
    i32 %565 = phi [^while.header33, i32 %454] [^b102, i32 %966];
    i32 %566 = phi [^while.header33, i32 %455] [^b102, i32 %965];
    i32 %567 = phi [^while.header33, i32 0] [^b102, i32 %967];
    i32 %568 = phi [^while.header33, i32 0] [^b102, i32 %964];
    i1 %569 = scmp lt i32 %567, i32 16;
    cbr i1 %569(prob = 0.97), ^while.body19, ^while.header50;
^b57:
    i1 %570 = scmp neq i32 %411, i32 0;
    cbr i1 %570(prob = 0.5), ^while.header46, ^b67;
^while.body15:
    i32 %571 = srem i32 %475, i32 2;
    i1 %572 = scmp neq i32 %571, i32 0;
    cbr i1 %572(prob = 0.5), ^b64, ^b73;
^while.body16:
    i32 %573 = srem i32 %485, i32 2;
    i1 %574 = scmp neq i32 %573, i32 0;
    cbr i1 %574(prob = 0.5), ^b65, ^b74;
^while.header40:
    i32 %575 = phi [^while.header34, i32 %462] [^b110, i32 %575];
    i32 %576 = phi [^while.header34, i32 %463] [^b110, i32 %576];
    i32 %577 = phi [^while.header34, i32 %464] [^b110, i32 %577];
    i32 %578 = phi [^while.header34, i32 %465] [^b110, i32 %578];
    i32 %579 = phi [^while.header34, i32 %466] [^b110, i32 %579];
    i32 %580 = phi [^while.header34, i32 %467] [^b110, i32 %580];
    i32 %581 = phi [^while.header34, i32 1] [^b110, i32 %996];
    i32 %582 = phi [^while.header34, i32 %463] [^b110, i32 %995];
    i32 %583 = phi [^while.header34, i32 0] [^b110, i32 %997];
    i32 %584 = phi [^while.header34, i32 0] [^b110, i32 %994];
    i1 %585 = scmp lt i32 %583, i32 16;
    cbr i1 %585(prob = 0.97), ^while.body20, ^b75;
^b58:
    i1 %586 = phi [^while.body11, i1 false] [^b51, i1 %498];
    cbr i1 %586(prob = 0.5), ^if.then18, ^b68;
^while.header41:
    i32 %587 = phi [^while.header29, i32 %424] [^b111, i32 %587];
    i32 %588 = phi [^while.header29, i32 %417] [^b111, i32 %588];
    i32 %589 = phi [^while.header29, i32 %418] [^b111, i32 %589];
    i32 %590 = phi [^while.header29, i32 %419] [^b111, i32 %590];
    i32 %591 = phi [^while.header29, i32 %420] [^b111, i32 %591];
    i32 %592 = phi [^while.header29, i32 %415] [^b111, i32 %1000];
    i32 %593 = phi [^while.header29, i32 %416] [^b111, i32 %999];
    i32 %594 = phi [^while.header29, i32 0] [^b111, i32 %1001];
    i32 %595 = phi [^while.header29, i32 0] [^b111, i32 %998];
    i1 %596 = scmp lt i32 %594, i32 16;
    cbr i1 %596(prob = 0.97), ^while.body21, ^b69;
^while.header42:
    i32 %597 = phi [^b112, i32 %597] [^b44, i32 %340];
    i32 %598 = phi [^b112, i32 %598] [^b44, i32 %341];
    i32 %599 = phi [^b112, i32 %599] [^b44, i32 %342];
    i32 %600 = phi [^b112, i32 %600] [^b44, i32 %343];
    i32 %601 = phi [^b112, i32 %601] [^b44, i32 %344];
    i32 %602 = phi [^b112, i32 %1006] [^b44, i32 65535];
    i32 %603 = phi [^b112, i32 %1005] [^b44, i32 %386];
    i32 %604 = phi [^b112, i32 %1007] [^b44, i32 0];
    i32 %605 = phi [^b112, i32 %1004] [^b44, i32 0];
    i1 %606 = scmp lt i32 %604, i32 16;
    cbr i1 %606(prob = 0.97), ^while.body22, ^while.header14;
^while.header43:
    i32 %607 = phi [^while.header76, i32 %1287] [^b45, i32 %389];
    i32 %608 = phi [^while.header76, i32 %1279] [^b45, i32 %389];
    i32 %609 = phi [^while.header76, i32 %1280] [^b45, i32 %387];
    i32 %610 = phi [^while.header76, i32 %1281] [^b45, i32 %388];
    i32 %611 = phi [^while.header76, i32 %1282] [^b45, i32 %390];
    i32 %612 = phi [^while.header76, i32 %1283] [^b45, i32 %391];
    i1 %613 = scmp neq i32 %607, i32 0;
    cbr i1 %613(prob = 0.97), ^while.header47, ^b76;
^b59:
    i1 %614 = scmp gt i32 %433, i32 32767;
    cbr i1 %614(prob = 0.5), ^if.then19, ^if.else7;
^b60:
    i1 %615 = scmp gt i32 %450, i32 32767;
    cbr i1 %615(prob = 0.5), ^if.then20, ^if.else8;
^while.header44:
    i32 %616 = phi [^b178, i32 %1272] [^b46, i32 0];
    i32 %617 = phi [^b178, i32 %1601] [^b46, i32 %394];
    i32 %618 = phi [^b178, i32 %1271] [^b46, i32 %394];
    i32 %619 = phi [^b178, i32 %1274] [^b46, i32 %392];
    i32 %620 = phi [^b178, i32 %1275] [^b46, i32 %393];
    i32 %621 = phi [^b178, i32 %1276] [^b46, i32 %395];
    i1 %622 = scmp neq i32 %617, i32 0;
    cbr i1 %622(prob = 0.97), ^while.header48, ^b77;
^while.header45:
    i32 %623 = phi [^while.header31, i32 %445] [^b113, i32 %623];
    i32 %624 = phi [^while.header31, i32 %438] [^b113, i32 %624];
    i32 %625 = phi [^while.header31, i32 %439] [^b113, i32 %625];
    i32 %626 = phi [^while.header31, i32 %440] [^b113, i32 %626];
    i32 %627 = phi [^while.header31, i32 %441] [^b113, i32 %627];
    i32 %628 = phi [^while.header31, i32 %436] [^b113, i32 %1012];
    i32 %629 = phi [^while.header31, i32 %437] [^b113, i32 %1011];
    i32 %630 = phi [^while.header31, i32 0] [^b113, i32 %1013];
    i32 %631 = phi [^while.header31, i32 0] [^b113, i32 %1010];
    i1 %632 = scmp lt i32 %630, i32 16;
    cbr i1 %632(prob = 0.97), ^while.body23, ^b71;
^if.then16:
    i32* %633 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %319];
    i32 %634 = load i32* %633;
    i32 %635 = add i32 %634, i32 %320;
    ubr ^b62;
^if.then17:
    i32* %636 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %330];
    i32 %637 = load i32* %636;
    i32 %638 = add i32 %637, i32 %331;
    ubr ^b63;
^b61:
    i32 %639 = srem i32 %408, i32 2;
    i1 %640 = scmp neq i32 %639, i32 0;
    ubr ^b70;
^b62:
    i32 %641 = phi [^if.then16, i32 %635] [^if.else5, i32 %320] [^if.then14, i32 %320];
    i32 %642 = sdiv i32 %318, i32 2;
    i32 %643 = sdiv i32 %317, i32 2;
    i32 %644 = add i32 %319, i32 1;
    ubr ^while.header23;
^b63:
    i32 %645 = phi [^if.then17, i32 %638] [^if.else6, i32 %331] [^if.then15, i32 %331];
    i32 %646 = sdiv i32 %329, i32 2;
    i32 %647 = sdiv i32 %328, i32 2;
    i32 %648 = add i32 %330, i32 1;
    ubr ^while.header24;
^b64:
    i32 %649 = srem i32 %474, i32 2;
    i1 %650 = scmp neq i32 %649, i32 0;
    ubr ^b73;
^b65:
    i32 %651 = srem i32 %484, i32 2;
    i1 %652 = scmp neq i32 %651, i32 0;
    ubr ^b74;
^if.then18:
    i32* %653 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %347];
    i32 %654 = load i32* %653;
    i32 %655 = add i32 %654, i32 %348;
    ubr ^b68;
^b66:
    i32 %656 = phi [^if.else4, i32 %530] [^if.then13, i32 %514];
    ubr ^while.header7;
^if.then19:
    i32 %657 = load i32* %1;
    i32 %658 = sdiv i32 %433, i32 %657;
    i32 %659 = add i32 %658, i32 65536;
    i32 %660 = load i32* %15;
    i32 %661 = sub i32 %659, i32 %660;
    ubr ^b83;
^if.then20:
    i32 %662 = load i32* %1;
    i32 %663 = sdiv i32 %450, i32 %662;
    i32 %664 = add i32 %663, i32 65536;
    i32 %665 = load i32* %15;
    i32 %666 = sub i32 %664, i32 %665;
    ubr ^b85;
^b67:
    i32 %667 = phi [^while.header46, i32 %697] [^b57, i32 %402];
    i32 %668 = phi [^while.header46, i32 %698] [^b57, i32 %403];
    i32 %669 = phi [^while.header46, i32 %699] [^b57, i32 %404];
    i32 %670 = phi [^while.header46, i32 %700] [^b57, i32 %405];
    i32 %671 = phi [^while.header46, i32 %701] [^b57, i32 %406];
    i32 %672 = phi [^while.header46, i32 %702] [^b57, i32 %407];
    ubr ^while.header54;
^if.then21:
    i32 %673 = srem i32 %421, i32 2;
    i1 %674 = scmp eq i32 %673, i32 0;
    cbr i1 %674(prob = 0.5), ^if.then23, ^b80;
^b68:
    i32 %675 = phi [^if.then18, i32 %655] [^b58, i32 %348];
    i32 %676 = sdiv i32 %346, i32 2;
    i32 %677 = sdiv i32 %345, i32 2;
    i32 %678 = add i32 %347, i32 1;
    ubr ^while.header26;
^b69:
    i32 %679 = mul i32 %595, i32 2;
    ubr ^while.header57;
^if.else7:
    i32 %680 = load i32* %1;
    i32 %681 = sdiv i32 %433, i32 %680;
    ubr ^b83;
^if.then22:
    i32 %682 = srem i32 %442, i32 2;
    i1 %683 = scmp eq i32 %682, i32 0;
    cbr i1 %683(prob = 0.5), ^if.then24, ^b84;
^while.body17:
    i32 %684 = srem i32 %540, i32 2;
    i1 %685 = scmp neq i32 %684, i32 0;
    cbr i1 %685(prob = 0.5), ^b78, ^b94;
^if.else8:
    i32 %686 = load i32* %1;
    i32 %687 = sdiv i32 %450, i32 %686;
    ubr ^b85;
^while.body18:
    i32 %688 = srem i32 %555, i32 2;
    i1 %689 = scmp neq i32 %688, i32 0;
    cbr i1 %689(prob = 0.5), ^if.then30, ^if.else13;
^while.body19:
    i32 %690 = srem i32 %566, i32 2;
    i1 %691 = scmp neq i32 %690, i32 0;
    cbr i1 %691(prob = 0.5), ^if.then31, ^if.else14;
^b70:
    i1 %692 = phi [^b61, i1 %640] [^while.body12, i1 false];
    cbr i1 %692(prob = 0.5), ^if.then25, ^b87;
^b71:
    i32 %693 = mul i32 %631, i32 2;
    ubr ^while.header59;
^if.else9:
    i32 %694 = srem i32 %421, i32 2;
    i1 %695 = scmp neq i32 %694, i32 0;
    cbr i1 %695(prob = 0.5), ^if.then23, ^b80;
^while.header46:
    i32 %696 = phi [^while.header77, i32 %1374] [^b57, i32 %404];
    i32 %697 = phi [^while.header77, i32 %1365] [^b57, i32 %402];
    i32 %698 = phi [^while.header77, i32 %1366] [^b57, i32 %403];
    i32 %699 = phi [^while.header77, i32 %1367] [^b57, i32 %404];
    i32 %700 = phi [^while.header77, i32 %1368] [^b57, i32 %405];
    i32 %701 = phi [^while.header77, i32 %1369] [^b57, i32 %406];
    i32 %702 = phi [^while.header77, i32 %1370] [^b57, i32 %407];
    i1 %703 = scmp neq i32 %696, i32 0;
    cbr i1 %703(prob = 0.97), ^while.header53, ^b67;
^while.body20:
    i32 %704 = srem i32 %582, i32 2;
    i1 %705 = scmp neq i32 %704, i32 0;
    cbr i1 %705(prob = 0.5), ^b79, ^b95;
^while.body21:
    i32 %706 = srem i32 %593, i32 2;
    i1 %707 = scmp neq i32 %706, i32 0;
    cbr i1 %707(prob = 0.5), ^b81, ^b96;
^while.body22:
    i32 %708 = srem i32 %603, i32 2;
    i1 %709 = scmp neq i32 %708, i32 0;
    cbr i1 %709(prob = 0.5), ^b82, ^b97;
^if.else10:
    i32 %710 = srem i32 %442, i32 2;
    i1 %711 = scmp neq i32 %710, i32 0;
    cbr i1 %711(prob = 0.5), ^if.then24, ^b84;
^while.header47:
    i32 %712 = phi [^while.header43, i32 %607] [^b123, i32 %712];
    i32 %713 = phi [^while.header43, i32 %608] [^b123, i32 %713];
    i32 %714 = phi [^while.header43, i32 %609] [^b123, i32 %714];
    i32 %715 = phi [^while.header43, i32 %610] [^b123, i32 %715];
    i32 %716 = phi [^while.header43, i32 %611] [^b123, i32 %716];
    i32 %717 = phi [^while.header43, i32 %612] [^b123, i32 %717];
    i32 %718 = phi [^while.header43, i32 %607] [^b123, i32 %1133];
    i32 %719 = phi [^while.header43, i32 %608] [^b123, i32 %1132];
    i32 %720 = phi [^while.header43, i32 0] [^b123, i32 %1134];
    i32 %721 = phi [^while.header43, i32 0] [^b123, i32 %1131];
    i1 %722 = scmp lt i32 %720, i32 16;
    cbr i1 %722(prob = 0.97), ^while.body24, ^while.header58;
^b72:
    i1 %723 = scmp neq i32 %542, i32 0;
    cbr i1 %723(prob = 0.5), ^while.header55, ^b88;
^while.body23:
    i32 %724 = srem i32 %629, i32 2;
    i1 %725 = scmp neq i32 %724, i32 0;
    cbr i1 %725(prob = 0.5), ^b86, ^b98;
^while.header48:
    i32 %726 = phi [^b127, i32 %726] [^while.header44, i32 %616];
    i32 %727 = phi [^b127, i32 %727] [^while.header44, i32 %617];
    i32 %728 = phi [^b127, i32 %728] [^while.header44, i32 %618];
    i32 %729 = phi [^b127, i32 %729] [^while.header44, i32 %619];
    i32 %730 = phi [^b127, i32 %730] [^while.header44, i32 %620];
    i32 %731 = phi [^b127, i32 %731] [^while.header44, i32 %621];
    i32 %732 = phi [^b127, i32 %1164] [^while.header44, i32 1];
    i32 %733 = phi [^b127, i32 %1163] [^while.header44, i32 %617];
    i32 %734 = phi [^b127, i32 %1165] [^while.header44, i32 0];
    i32 %735 = phi [^b127, i32 %1162] [^while.header44, i32 0];
    i1 %736 = scmp lt i32 %734, i32 16;
    cbr i1 %736(prob = 0.97), ^while.body25, ^b99;
^b73:
    i1 %737 = phi [^while.body15, i1 false] [^b64, i1 %650];
    cbr i1 %737(prob = 0.5), ^if.then26, ^b89;
^b74:
    i1 %738 = phi [^while.body16, i1 false] [^b65, i1 %652];
    cbr i1 %738(prob = 0.5), ^if.then27, ^b90;
^while.header49:
    i32 %739 = phi [^while.header38, i32 %557] [^b128, i32 %739];
    i32 %740 = phi [^while.header38, i32 %550] [^b128, i32 %740];
    i32 %741 = phi [^while.header38, i32 %551] [^b128, i32 %741];
    i32 %742 = phi [^while.header38, i32 %552] [^b128, i32 %742];
    i32 %743 = phi [^while.header38, i32 %553] [^b128, i32 %743];
    i32 %744 = phi [^while.header38, i32 %548] [^b128, i32 %1170];
    i32 %745 = phi [^while.header38, i32 %549] [^b128, i32 %1169];
    i32 %746 = phi [^while.header38, i32 0] [^b128, i32 %1171];
    i32 %747 = phi [^while.header38, i32 0] [^b128, i32 %1168];
    i1 %748 = scmp lt i32 %746, i32 16;
    cbr i1 %748(prob = 0.97), ^while.body26, ^b92;
^while.header50:
    i32 %749 = phi [^while.header39, i32 %568] [^b129, i32 %749];
    i32 %750 = phi [^while.header39, i32 %561] [^b129, i32 %750];
    i32 %751 = phi [^while.header39, i32 %562] [^b129, i32 %751];
    i32 %752 = phi [^while.header39, i32 %563] [^b129, i32 %752];
    i32 %753 = phi [^while.header39, i32 %564] [^b129, i32 %753];
    i32 %754 = phi [^while.header39, i32 %559] [^b129, i32 %1174];
    i32 %755 = phi [^while.header39, i32 %560] [^b129, i32 %1173];
    i32 %756 = phi [^while.header39, i32 0] [^b129, i32 %1175];
    i32 %757 = phi [^while.header39, i32 0] [^b129, i32 %1172];
    i1 %758 = scmp lt i32 %756, i32 16;
    cbr i1 %758(prob = 0.97), ^while.body27, ^b93;
^b75:
    i1 %759 = scmp neq i32 %584, i32 0;
    cbr i1 %759(prob = 0.5), ^while.header56, ^b91;
^while.header51:
    i32 %760 = phi [^b130, i32 %760] [^b55, i32 %469];
    i32 %761 = phi [^b130, i32 %761] [^b55, i32 %470];
    i32 %762 = phi [^b130, i32 %762] [^b55, i32 %471];
    i32 %763 = phi [^b130, i32 %763] [^b55, i32 %472];
    i32 %764 = phi [^b130, i32 %764] [^b55, i32 %473];
    i32 %765 = phi [^b130, i32 %1182] [^b55, i32 65535];
    i32 %766 = phi [^b130, i32 %1181] [^b55, i32 %527];
    i32 %767 = phi [^b130, i32 %1183] [^b55, i32 0];
    i32 %768 = phi [^b130, i32 %1180] [^b55, i32 0];
    i1 %769 = scmp lt i32 %767, i32 16;
    cbr i1 %769(prob = 0.97), ^while.body28, ^while.header19;
^while.header52:
    i32 %770 = phi [^b131, i32 %770] [^b56, i32 %479];
    i32 %771 = phi [^b131, i32 %771] [^b56, i32 %480];
    i32 %772 = phi [^b131, i32 %772] [^b56, i32 %481];
    i32 %773 = phi [^b131, i32 %773] [^b56, i32 %482];
    i32 %774 = phi [^b131, i32 %774] [^b56, i32 %483];
    i32 %775 = phi [^b131, i32 %1186] [^b56, i32 65535];
    i32 %776 = phi [^b131, i32 %1185] [^b56, i32 %528];
    i32 %777 = phi [^b131, i32 %1187] [^b56, i32 0];
    i32 %778 = phi [^b131, i32 %1184] [^b56, i32 0];
    i1 %779 = scmp lt i32 %777, i32 16;
    cbr i1 %779(prob = 0.97), ^while.body29, ^while.header20;
^b76:
    i1 %780 = scmp gt i32 %610, i32 32767;
    cbr i1 %780(prob = 0.5), ^if.then28, ^if.else11;
^b77:
    i1 %781 = scmp gt i32 %620, i32 32767;
    cbr i1 %781(prob = 0.5), ^if.then29, ^if.else12;
^if.then23:
    i32* %782 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %423];
    i32 %783 = load i32* %782;
    i32 %784 = add i32 %783, i32 %424;
    ubr ^b80;
^if.then24:
    i32* %785 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %444];
    i32 %786 = load i32* %785;
    i32 %787 = add i32 %786, i32 %445;
    ubr ^b84;
^b78:
    i32 %788 = srem i32 %539, i32 2;
    i1 %789 = scmp neq i32 %788, i32 0;
    ubr ^b94;
^if.then25:
    i32* %790 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %410];
    i32 %791 = load i32* %790;
    i32 %792 = add i32 %791, i32 %411;
    ubr ^b87;
^b79:
    i32 %793 = srem i32 %581, i32 2;
    i1 %794 = scmp neq i32 %793, i32 0;
    ubr ^b95;
^b80:
    i32 %795 = phi [^if.then23, i32 %784] [^if.else9, i32 %424] [^if.then21, i32 %424];
    i32 %796 = sdiv i32 %422, i32 2;
    i32 %797 = sdiv i32 %421, i32 2;
    i32 %798 = add i32 %423, i32 1;
    ubr ^while.header29;
^b81:
    i32 %799 = srem i32 %592, i32 2;
    i1 %800 = scmp neq i32 %799, i32 0;
    ubr ^b96;
^b82:
    i32 %801 = srem i32 %602, i32 2;
    i1 %802 = scmp neq i32 %801, i32 0;
    ubr ^b97;
^b83:
    i32 %803 = phi [^if.else7, i32 %681] [^if.then19, i32 %661];
    ubr ^while.header8;
^b84:
    i32 %804 = phi [^if.then24, i32 %787] [^if.else10, i32 %445] [^if.then22, i32 %445];
    i32 %805 = sdiv i32 %443, i32 2;
    i32 %806 = sdiv i32 %442, i32 2;
    i32 %807 = add i32 %444, i32 1;
    ubr ^while.header31;
^b85:
    i32 %808 = phi [^if.else8, i32 %687] [^if.then20, i32 %666];
    ubr ^while.header10;
^b86:
    i32 %809 = srem i32 %628, i32 2;
    i1 %810 = scmp neq i32 %809, i32 0;
    ubr ^b98;
^b87:
    i32 %811 = phi [^if.then25, i32 %792] [^b70, i32 %411];
    i32 %812 = sdiv i32 %409, i32 2;
    i32 %813 = sdiv i32 %408, i32 2;
    i32 %814 = add i32 %410, i32 1;
    ubr ^while.header28;
^if.then26:
    i32* %815 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %476];
    i32 %816 = load i32* %815;
    i32 %817 = add i32 %816, i32 %477;
    ubr ^b89;
^if.then27:
    i32* %818 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %486];
    i32 %819 = load i32* %818;
    i32 %820 = add i32 %819, i32 %487;
    ubr ^b90;
^if.then28:
    i32 %821 = load i32* %1;
    i32 %822 = sdiv i32 %610, i32 %821;
    i32 %823 = add i32 %822, i32 65536;
    i32 %824 = load i32* %15;
    i32 %825 = sub i32 %823, i32 %824;
    ubr ^b107;
^b88:
    i32 %826 = phi [^while.header55, i32 %889] [^b72, i32 %533];
    i32 %827 = phi [^while.header55, i32 %890] [^b72, i32 %534];
    i32 %828 = phi [^while.header55, i32 %891] [^b72, i32 %535];
    i32 %829 = phi [^while.header55, i32 %892] [^b72, i32 %536];
    i32 %830 = phi [^while.header55, i32 %893] [^b72, i32 %537];
    i32 %831 = phi [^while.header55, i32 %894] [^b72, i32 %538];
    ubr ^while.header64;
^if.then29:
    i32 %832 = load i32* %1;
    i32 %833 = sdiv i32 %620, i32 %832;
    i32 %834 = add i32 %833, i32 65536;
    i32 %835 = load i32* %15;
    i32 %836 = sub i32 %834, i32 %835;
    ubr ^b109;
^if.then30:
    i32 %837 = srem i32 %554, i32 2;
    i1 %838 = scmp eq i32 %837, i32 0;
    cbr i1 %838(prob = 0.5), ^if.then32, ^b101;
^if.then31:
    i32 %839 = srem i32 %565, i32 2;
    i1 %840 = scmp eq i32 %839, i32 0;
    cbr i1 %840(prob = 0.5), ^if.then33, ^b102;
^b89:
    i32 %841 = phi [^if.then26, i32 %817] [^b73, i32 %477];
    i32 %842 = sdiv i32 %475, i32 2;
    i32 %843 = sdiv i32 %474, i32 2;
    i32 %844 = add i32 %476, i32 1;
    ubr ^while.header35;
^b90:
    i32 %845 = phi [^if.then27, i32 %820] [^b74, i32 %487];
    i32 %846 = sdiv i32 %485, i32 2;
    i32 %847 = sdiv i32 %484, i32 2;
    i32 %848 = add i32 %486, i32 1;
    ubr ^while.header36;
^b91:
    i32 %849 = phi [^while.header56, i32 %909] [^b75, i32 %575];
    i32 %850 = phi [^while.header56, i32 %910] [^b75, i32 %576];
    i32 %851 = phi [^while.header56, i32 %911] [^b75, i32 %577];
    i32 %852 = phi [^while.header56, i32 %912] [^b75, i32 %578];
    i32 %853 = phi [^while.header56, i32 %913] [^b75, i32 %579];
    i32 %854 = phi [^while.header56, i32 %914] [^b75, i32 %580];
    ubr ^while.header65;
^b92:
    i32 %855 = mul i32 %747, i32 2;
    ubr ^while.header67;
^b93:
    i32 %856 = mul i32 %757, i32 2;
    ubr ^while.header68;
^while.header53:
    i32 %857 = phi [^while.header46, i32 %696] [^b137, i32 %857];
    i32 %858 = phi [^while.header46, i32 %697] [^b137, i32 %858];
    i32 %859 = phi [^while.header46, i32 %698] [^b137, i32 %859];
    i32 %860 = phi [^while.header46, i32 %699] [^b137, i32 %860];
    i32 %861 = phi [^while.header46, i32 %700] [^b137, i32 %861];
    i32 %862 = phi [^while.header46, i32 %701] [^b137, i32 %862];
    i32 %863 = phi [^while.header46, i32 %702] [^b137, i32 %863];
    i32 %864 = phi [^while.header46, i32 %696] [^b137, i32 %1295];
    i32 %865 = phi [^while.header46, i32 %697] [^b137, i32 %1294];
    i32 %866 = phi [^while.header46, i32 0] [^b137, i32 %1296];
    i32 %867 = phi [^while.header46, i32 0] [^b137, i32 %1293];
    i1 %868 = scmp lt i32 %866, i32 16;
    cbr i1 %868(prob = 0.97), ^while.body30, ^while.header62;
^if.else11:
    i32 %869 = load i32* %1;
    i32 %870 = sdiv i32 %610, i32 %869;
    ubr ^b107;
^while.body24:
    i32 %871 = srem i32 %719, i32 2;
    i1 %872 = scmp neq i32 %871, i32 0;
    cbr i1 %872(prob = 0.5), ^if.then39, ^if.else15;
^b94:
    i1 %873 = phi [^while.body17, i1 false] [^b78, i1 %789];
    cbr i1 %873(prob = 0.5), ^if.then34, ^b108;
^if.else12:
    i32 %874 = load i32* %1;
    i32 %875 = sdiv i32 %620, i32 %874;
    ubr ^b109;
^if.else13:
    i32 %876 = srem i32 %554, i32 2;
    i1 %877 = scmp neq i32 %876, i32 0;
    cbr i1 %877(prob = 0.5), ^if.then32, ^b101;
^if.else14:
    i32 %878 = srem i32 %565, i32 2;
    i1 %879 = scmp neq i32 %878, i32 0;
    cbr i1 %879(prob = 0.5), ^if.then33, ^b102;
^while.header54:
    i32 %880 = phi [^while.header82, i32 %1519] [^b67, i32 %669];
    i32 %881 = phi [^while.header82, i32 %1510] [^b67, i32 %669];
    i32 %882 = phi [^while.header82, i32 %1511] [^b67, i32 %667];
    i32 %883 = phi [^while.header82, i32 %1512] [^b67, i32 %668];
    i32 %884 = phi [^while.header82, i32 %1513] [^b67, i32 %670];
    i32 %885 = phi [^while.header82, i32 %1514] [^b67, i32 %671];
    i32 %886 = phi [^while.header82, i32 %1515] [^b67, i32 %672];
    i1 %887 = scmp neq i32 %880, i32 0;
    cbr i1 %887(prob = 0.97), ^while.header60, ^b116;
^while.header55:
    i32 %888 = phi [^while.header83, i32 %1530] [^b72, i32 %535];
    i32 %889 = phi [^while.header83, i32 %1521] [^b72, i32 %533];
    i32 %890 = phi [^while.header83, i32 %1522] [^b72, i32 %534];
    i32 %891 = phi [^while.header83, i32 %1523] [^b72, i32 %535];
    i32 %892 = phi [^while.header83, i32 %1524] [^b72, i32 %536];
    i32 %893 = phi [^while.header83, i32 %1525] [^b72, i32 %537];
    i32 %894 = phi [^while.header83, i32 %1526] [^b72, i32 %538];
    i1 %895 = scmp neq i32 %888, i32 0;
    cbr i1 %895(prob = 0.97), ^while.header61, ^b88;
^while.body25:
    i32 %896 = srem i32 %733, i32 2;
    i1 %897 = scmp neq i32 %896, i32 0;
    cbr i1 %897(prob = 0.5), ^b100, ^b117;
^while.body26:
    i32 %898 = srem i32 %745, i32 2;
    i1 %899 = scmp neq i32 %898, i32 0;
    cbr i1 %899(prob = 0.5), ^b103, ^b118;
^while.body27:
    i32 %900 = srem i32 %755, i32 2;
    i1 %901 = scmp neq i32 %900, i32 0;
    cbr i1 %901(prob = 0.5), ^b104, ^b119;
^b95:
    i1 %902 = phi [^b79, i1 %794] [^while.body20, i1 false];
    cbr i1 %902(prob = 0.5), ^if.then35, ^b110;
^while.body28:
    i32 %903 = srem i32 %766, i32 2;
    i1 %904 = scmp neq i32 %903, i32 0;
    cbr i1 %904(prob = 0.5), ^b105, ^b120;
^while.body29:
    i32 %905 = srem i32 %776, i32 2;
    i1 %906 = scmp neq i32 %905, i32 0;
    cbr i1 %906(prob = 0.5), ^b106, ^b121;
^b96:
    i1 %907 = phi [^b81, i1 %800] [^while.body21, i1 false];
    cbr i1 %907(prob = 0.5), ^if.then36, ^b111;
^while.header56:
    i32 %908 = phi [^while.header84, i32 %1546] [^b75, i32 %577];
    i32 %909 = phi [^while.header84, i32 %1537] [^b75, i32 %575];
    i32 %910 = phi [^while.header84, i32 %1538] [^b75, i32 %576];
    i32 %911 = phi [^while.header84, i32 %1539] [^b75, i32 %577];
    i32 %912 = phi [^while.header84, i32 %1540] [^b75, i32 %578];
    i32 %913 = phi [^while.header84, i32 %1541] [^b75, i32 %579];
    i32 %914 = phi [^while.header84, i32 %1542] [^b75, i32 %580];
    i1 %915 = scmp neq i32 %908, i32 0;
    cbr i1 %915(prob = 0.97), ^while.header63, ^b91;
^b97:
    i1 %916 = phi [^while.body22, i1 false] [^b82, i1 %802];
    cbr i1 %916(prob = 0.5), ^if.then37, ^b112;
^while.header57:
    i32 %917 = phi [^b144, i32 %917] [^b69, i32 %587];
    i32 %918 = phi [^b144, i32 %918] [^b69, i32 %588];
    i32 %919 = phi [^b144, i32 %919] [^b69, i32 %589];
    i32 %920 = phi [^b144, i32 %920] [^b69, i32 %590];
    i32 %921 = phi [^b144, i32 %921] [^b69, i32 %591];
    i32 %922 = phi [^b144, i32 %1331] [^b69, i32 65535];
    i32 %923 = phi [^b144, i32 %1330] [^b69, i32 %679];
    i32 %924 = phi [^b144, i32 %1332] [^b69, i32 0];
    i32 %925 = phi [^b144, i32 %1329] [^b69, i32 0];
    i1 %926 = scmp lt i32 %924, i32 16;
    cbr i1 %926(prob = 0.97), ^while.body31, ^while.header25;
^b98:
    i1 %927 = phi [^b86, i1 %810] [^while.body23, i1 false];
    cbr i1 %927(prob = 0.5), ^if.then38, ^b113;
^while.header58:
    i32 %928 = phi [^while.header47, i32 %721] [^b146, i32 %928];
    i32 %929 = phi [^while.header47, i32 %714] [^b146, i32 %929];
    i32 %930 = phi [^while.header47, i32 %715] [^b146, i32 %930];
    i32 %931 = phi [^while.header47, i32 %716] [^b146, i32 %931];
    i32 %932 = phi [^while.header47, i32 %717] [^b146, i32 %932];
    i32 %933 = phi [^while.header47, i32 %712] [^b146, i32 %1340];
    i32 %934 = phi [^while.header47, i32 %713] [^b146, i32 %1339];
    i32 %935 = phi [^while.header47, i32 0] [^b146, i32 %1341];
    i32 %936 = phi [^while.header47, i32 0] [^b146, i32 %1338];
    i1 %937 = scmp lt i32 %935, i32 16;
    cbr i1 %937(prob = 0.97), ^while.body32, ^b115;
^b99:
    i1 %938 = scmp neq i32 %735, i32 0;
    cbr i1 %938(prob = 0.5), ^while.header66, ^b114;
^while.header59:
    i32 %939 = phi [^b147, i32 %939] [^b71, i32 %623];
    i32 %940 = phi [^b147, i32 %940] [^b71, i32 %624];
    i32 %941 = phi [^b147, i32 %941] [^b71, i32 %625];
    i32 %942 = phi [^b147, i32 %942] [^b71, i32 %626];
    i32 %943 = phi [^b147, i32 %943] [^b71, i32 %627];
    i32 %944 = phi [^b147, i32 %1346] [^b71, i32 65535];
    i32 %945 = phi [^b147, i32 %1345] [^b71, i32 %693];
    i32 %946 = phi [^b147, i32 %1347] [^b71, i32 0];
    i32 %947 = phi [^b147, i32 %1344] [^b71, i32 0];
    i1 %948 = scmp lt i32 %946, i32 16;
    cbr i1 %948(prob = 0.97), ^while.body33, ^while.header27;
^if.then32:
    i32* %949 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %556];
    i32 %950 = load i32* %949;
    i32 %951 = add i32 %950, i32 %557;
    ubr ^b101;
^if.then33:
    i32* %952 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %567];
    i32 %953 = load i32* %952;
    i32 %954 = add i32 %953, i32 %568;
    ubr ^b102;
^if.then34:
    i32* %955 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %541];
    i32 %956 = load i32* %955;
    i32 %957 = add i32 %956, i32 %542;
    ubr ^b108;
^b100:
    i32 %958 = srem i32 %732, i32 2;
    i1 %959 = scmp neq i32 %958, i32 0;
    ubr ^b117;
^b101:
    i32 %960 = phi [^if.then32, i32 %951] [^if.else13, i32 %557] [^if.then30, i32 %557];
    i32 %961 = sdiv i32 %555, i32 2;
    i32 %962 = sdiv i32 %554, i32 2;
    i32 %963 = add i32 %556, i32 1;
    ubr ^while.header38;
^b102:
    i32 %964 = phi [^if.then33, i32 %954] [^if.else14, i32 %568] [^if.then31, i32 %568];
    i32 %965 = sdiv i32 %566, i32 2;
    i32 %966 = sdiv i32 %565, i32 2;
    i32 %967 = add i32 %567, i32 1;
    ubr ^while.header39;
^b103:
    i32 %968 = srem i32 %744, i32 2;
    i1 %969 = scmp neq i32 %968, i32 0;
    ubr ^b118;
^b104:
    i32 %970 = srem i32 %754, i32 2;
    i1 %971 = scmp neq i32 %970, i32 0;
    ubr ^b119;
^if.then35:
    i32* %972 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %583];
    i32 %973 = load i32* %972;
    i32 %974 = add i32 %973, i32 %584;
    ubr ^b110;
^b105:
    i32 %975 = srem i32 %765, i32 2;
    i1 %976 = scmp neq i32 %975, i32 0;
    ubr ^b120;
^b106:
    i32 %977 = srem i32 %775, i32 2;
    i1 %978 = scmp neq i32 %977, i32 0;
    ubr ^b121;
^if.then36:
    i32* %979 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %594];
    i32 %980 = load i32* %979;
    i32 %981 = add i32 %980, i32 %595;
    ubr ^b111;
^if.then37:
    i32* %982 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %604];
    i32 %983 = load i32* %982;
    i32 %984 = add i32 %983, i32 %605;
    ubr ^b112;
^b107:
    i32 %985 = phi [^if.else11, i32 %870] [^if.then28, i32 %825];
    ubr ^while.header15;
^b108:
    i32 %986 = phi [^if.then34, i32 %957] [^b94, i32 %542];
    i32 %987 = sdiv i32 %540, i32 2;
    i32 %988 = sdiv i32 %539, i32 2;
    i32 %989 = add i32 %541, i32 1;
    ubr ^while.header37;
^b109:
    i32 %990 = phi [^if.else12, i32 %875] [^if.then29, i32 %836];
    ubr ^while.header16;
^if.then38:
    i32* %991 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %630];
    i32 %992 = load i32* %991;
    i32 %993 = add i32 %992, i32 %631;
    ubr ^b113;
^b110:
    i32 %994 = phi [^if.then35, i32 %974] [^b95, i32 %584];
    i32 %995 = sdiv i32 %582, i32 2;
    i32 %996 = sdiv i32 %581, i32 2;
    i32 %997 = add i32 %583, i32 1;
    ubr ^while.header40;
^b111:
    i32 %998 = phi [^if.then36, i32 %981] [^b96, i32 %595];
    i32 %999 = sdiv i32 %593, i32 2;
    i32 %1000 = sdiv i32 %592, i32 2;
    i32 %1001 = add i32 %594, i32 1;
    ubr ^while.header41;
^while.body30:
    i32 %1002 = srem i32 %865, i32 2;
    i1 %1003 = scmp neq i32 %1002, i32 0;
    cbr i1 %1003(prob = 0.5), ^if.then47, ^if.else17;
^b112:
    i32 %1004 = phi [^if.then37, i32 %984] [^b97, i32 %605];
    i32 %1005 = sdiv i32 %603, i32 2;
    i32 %1006 = sdiv i32 %602, i32 2;
    i32 %1007 = add i32 %604, i32 1;
    ubr ^while.header42;
^if.then39:
    i32 %1008 = srem i32 %718, i32 2;
    i1 %1009 = scmp eq i32 %1008, i32 0;
    cbr i1 %1009(prob = 0.5), ^if.then40, ^b123;
^b113:
    i32 %1010 = phi [^if.then38, i32 %993] [^b98, i32 %631];
    i32 %1011 = sdiv i32 %629, i32 2;
    i32 %1012 = sdiv i32 %628, i32 2;
    i32 %1013 = add i32 %630, i32 1;
    ubr ^while.header45;
^b114:
    i32 %1014 = phi [^while.header66, i32 %1097] [^b99, i32 %726];
    i32 %1015 = phi [^while.header66, i32 %1098] [^b99, i32 %727];
    i32 %1016 = phi [^while.header66, i32 %1099] [^b99, i32 %728];
    i32 %1017 = phi [^while.header66, i32 %1100] [^b99, i32 %729];
    i32 %1018 = phi [^while.header66, i32 %1101] [^b99, i32 %730];
    i32 %1019 = phi [^while.header66, i32 %1102] [^b99, i32 %731];
    ubr ^while.header75;
^b115:
    i32 %1020 = mul i32 %936, i32 2;
    ubr ^while.header76;
^while.header60:
    i32 %1021 = phi [^while.header54, i32 %880] [^b152, i32 %1021];
    i32 %1022 = phi [^while.header54, i32 %881] [^b152, i32 %1022];
    i32 %1023 = phi [^while.header54, i32 %882] [^b152, i32 %1023];
    i32 %1024 = phi [^while.header54, i32 %883] [^b152, i32 %1024];
    i32 %1025 = phi [^while.header54, i32 %884] [^b152, i32 %1025];
    i32 %1026 = phi [^while.header54, i32 %885] [^b152, i32 %1026];
    i32 %1027 = phi [^while.header54, i32 %886] [^b152, i32 %1027];
    i32 %1028 = phi [^while.header54, i32 %880] [^b152, i32 %1439];
    i32 %1029 = phi [^while.header54, i32 %881] [^b152, i32 %1438];
    i32 %1030 = phi [^while.header54, i32 0] [^b152, i32 %1440];
    i32 %1031 = phi [^while.header54, i32 0] [^b152, i32 %1437];
    i1 %1032 = scmp lt i32 %1030, i32 16;
    cbr i1 %1032(prob = 0.97), ^while.body34, ^while.header70;
^while.header61:
    i32 %1033 = phi [^while.header55, i32 %888] [^b153, i32 %1033];
    i32 %1034 = phi [^while.header55, i32 %889] [^b153, i32 %1034];
    i32 %1035 = phi [^while.header55, i32 %890] [^b153, i32 %1035];
    i32 %1036 = phi [^while.header55, i32 %891] [^b153, i32 %1036];
    i32 %1037 = phi [^while.header55, i32 %892] [^b153, i32 %1037];
    i32 %1038 = phi [^while.header55, i32 %893] [^b153, i32 %1038];
    i32 %1039 = phi [^while.header55, i32 %894] [^b153, i32 %1039];
    i32 %1040 = phi [^while.header55, i32 %888] [^b153, i32 %1443];
    i32 %1041 = phi [^while.header55, i32 %889] [^b153, i32 %1442];
    i32 %1042 = phi [^while.header55, i32 0] [^b153, i32 %1444];
    i32 %1043 = phi [^while.header55, i32 0] [^b153, i32 %1441];
    i1 %1044 = scmp lt i32 %1042, i32 16;
    cbr i1 %1044(prob = 0.97), ^while.body35, ^while.header71;
^while.body31:
    i32 %1045 = srem i32 %923, i32 2;
    i1 %1046 = scmp neq i32 %1045, i32 0;
    cbr i1 %1046(prob = 0.5), ^b122, ^b132;
^while.header62:
    i32 %1047 = phi [^while.header53, i32 %867] [^b161, i32 %1047];
    i32 %1048 = phi [^while.header53, i32 %859] [^b161, i32 %1048];
    i32 %1049 = phi [^while.header53, i32 %860] [^b161, i32 %1049];
    i32 %1050 = phi [^while.header53, i32 %861] [^b161, i32 %1050];
    i32 %1051 = phi [^while.header53, i32 %862] [^b161, i32 %1051];
    i32 %1052 = phi [^while.header53, i32 %863] [^b161, i32 %1052];
    i32 %1053 = phi [^while.header53, i32 %857] [^b161, i32 %1470];
    i32 %1054 = phi [^while.header53, i32 %858] [^b161, i32 %1469];
    i32 %1055 = phi [^while.header53, i32 0] [^b161, i32 %1471];
    i32 %1056 = phi [^while.header53, i32 0] [^b161, i32 %1468];
    i1 %1057 = scmp lt i32 %1055, i32 16;
    cbr i1 %1057(prob = 0.97), ^while.body36, ^b126;
^while.header63:
    i32 %1058 = phi [^while.header56, i32 %908] [^b156, i32 %1058];
    i32 %1059 = phi [^while.header56, i32 %909] [^b156, i32 %1059];
    i32 %1060 = phi [^while.header56, i32 %910] [^b156, i32 %1060];
    i32 %1061 = phi [^while.header56, i32 %911] [^b156, i32 %1061];
    i32 %1062 = phi [^while.header56, i32 %912] [^b156, i32 %1062];
    i32 %1063 = phi [^while.header56, i32 %913] [^b156, i32 %1063];
    i32 %1064 = phi [^while.header56, i32 %914] [^b156, i32 %1064];
    i32 %1065 = phi [^while.header56, i32 %908] [^b156, i32 %1454];
    i32 %1066 = phi [^while.header56, i32 %909] [^b156, i32 %1453];
    i32 %1067 = phi [^while.header56, i32 0] [^b156, i32 %1455];
    i32 %1068 = phi [^while.header56, i32 0] [^b156, i32 %1452];
    i1 %1069 = scmp lt i32 %1067, i32 16;
    cbr i1 %1069(prob = 0.97), ^while.body37, ^while.header74;
^if.else15:
    i32 %1070 = srem i32 %718, i32 2;
    i1 %1071 = scmp neq i32 %1070, i32 0;
    cbr i1 %1071(prob = 0.5), ^if.then40, ^b123;
^while.header64:
    i32 %1072 = phi [^while.header86, i32 %1640] [^b88, i32 %828];
    i32 %1073 = phi [^while.header86, i32 %1631] [^b88, i32 %828];
    i32 %1074 = phi [^while.header86, i32 %1632] [^b88, i32 %826];
    i32 %1075 = phi [^while.header86, i32 %1633] [^b88, i32 %827];
    i32 %1076 = phi [^while.header86, i32 %1634] [^b88, i32 %829];
    i32 %1077 = phi [^while.header86, i32 %1635] [^b88, i32 %830];
    i32 %1078 = phi [^while.header86, i32 %1636] [^b88, i32 %831];
    i1 %1079 = scmp neq i32 %1072, i32 0;
    cbr i1 %1079(prob = 0.97), ^while.header69, ^b133;
^while.body32:
    i32 %1080 = srem i32 %934, i32 2;
    i1 %1081 = scmp neq i32 %1080, i32 0;
    cbr i1 %1081(prob = 0.5), ^b124, ^b134;
^b116:
    i1 %1082 = scmp gt i32 %883, i32 32767;
    cbr i1 %1082(prob = 0.5), ^if.then42, ^if.else16;
^b117:
    i1 %1083 = phi [^while.body25, i1 false] [^b100, i1 %959];
    cbr i1 %1083(prob = 0.5), ^if.then41, ^b127;
^while.body33:
    i32 %1084 = srem i32 %945, i32 2;
    i1 %1085 = scmp neq i32 %1084, i32 0;
    cbr i1 %1085(prob = 0.5), ^b125, ^b135;
^b118:
    i1 %1086 = phi [^while.body26, i1 false] [^b103, i1 %969];
    cbr i1 %1086(prob = 0.5), ^if.then43, ^b128;
^b119:
    i1 %1087 = phi [^b104, i1 %971] [^while.body27, i1 false];
    cbr i1 %1087(prob = 0.5), ^if.then44, ^b129;
^while.header65:
    i32 %1088 = phi [^while.header87, i32 %1655] [^b91, i32 %851];
    i32 %1089 = phi [^while.header87, i32 %1646] [^b91, i32 %851];
    i32 %1090 = phi [^while.header87, i32 %1647] [^b91, i32 %849];
    i32 %1091 = phi [^while.header87, i32 %1648] [^b91, i32 %850];
    i32 %1092 = phi [^while.header87, i32 %1649] [^b91, i32 %852];
    i32 %1093 = phi [^while.header87, i32 %1650] [^b91, i32 %853];
    i32 %1094 = phi [^while.header87, i32 %1651] [^b91, i32 %854];
    i1 %1095 = scmp neq i32 %1088, i32 0;
    cbr i1 %1095(prob = 0.97), ^while.header72, ^b136;
^while.header66:
    i32 %1096 = phi [^b99, i32 %728] [^while.header88, i32 %1666];
    i32 %1097 = phi [^b99, i32 %726] [^while.header88, i32 %1657];
    i32 %1098 = phi [^b99, i32 %727] [^while.header88, i32 %1658];
    i32 %1099 = phi [^b99, i32 %728] [^while.header88, i32 %1659];
    i32 %1100 = phi [^b99, i32 %729] [^while.header88, i32 %1660];
    i32 %1101 = phi [^b99, i32 %730] [^while.header88, i32 %1661];
    i32 %1102 = phi [^b99, i32 %731] [^while.header88, i32 %1662];
    i1 %1103 = scmp neq i32 %1096, i32 0;
    cbr i1 %1103(prob = 0.97), ^while.header73, ^b114;
^b120:
    i1 %1104 = phi [^while.body28, i1 false] [^b105, i1 %976];
    cbr i1 %1104(prob = 0.5), ^if.then45, ^b130;
^b121:
    i1 %1105 = phi [^b106, i1 %978] [^while.body29, i1 false];
    cbr i1 %1105(prob = 0.5), ^if.then46, ^b131;
^while.header67:
    i32 %1106 = phi [^b163, i32 %1106] [^b92, i32 %739];
    i32 %1107 = phi [^b163, i32 %1107] [^b92, i32 %740];
    i32 %1108 = phi [^b163, i32 %1108] [^b92, i32 %741];
    i32 %1109 = phi [^b163, i32 %1109] [^b92, i32 %742];
    i32 %1110 = phi [^b163, i32 %1110] [^b92, i32 %743];
    i32 %1111 = phi [^b163, i32 %1482] [^b92, i32 65535];
    i32 %1112 = phi [^b163, i32 %1481] [^b92, i32 %855];
    i32 %1113 = phi [^b163, i32 %1483] [^b92, i32 0];
    i32 %1114 = phi [^b163, i32 %1480] [^b92, i32 0];
    i1 %1115 = scmp lt i32 %1113, i32 16;
    cbr i1 %1115(prob = 0.97), ^while.body38, ^while.header32;
^while.header68:
    i32 %1116 = phi [^b164, i32 %1116] [^b93, i32 %749];
    i32 %1117 = phi [^b164, i32 %1117] [^b93, i32 %750];
    i32 %1118 = phi [^b164, i32 %1118] [^b93, i32 %751];
    i32 %1119 = phi [^b164, i32 %1119] [^b93, i32 %752];
    i32 %1120 = phi [^b164, i32 %1120] [^b93, i32 %753];
    i32 %1121 = phi [^b164, i32 %1486] [^b93, i32 65535];
    i32 %1122 = phi [^b164, i32 %1485] [^b93, i32 %856];
    i32 %1123 = phi [^b164, i32 %1487] [^b93, i32 0];
    i32 %1124 = phi [^b164, i32 %1484] [^b93, i32 0];
    i1 %1125 = scmp lt i32 %1123, i32 16;
    cbr i1 %1125(prob = 0.97), ^while.body39, ^while.header33;
^if.then40:
    i32* %1126 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %720];
    i32 %1127 = load i32* %1126;
    i32 %1128 = add i32 %1127, i32 %721;
    ubr ^b123;
^b122:
    i32 %1129 = srem i32 %922, i32 2;
    i1 %1130 = scmp neq i32 %1129, i32 0;
    ubr ^b132;
^b123:
    i32 %1131 = phi [^if.then40, i32 %1128] [^if.else15, i32 %721] [^if.then39, i32 %721];
    i32 %1132 = sdiv i32 %719, i32 2;
    i32 %1133 = sdiv i32 %718, i32 2;
    i32 %1134 = add i32 %720, i32 1;
    ubr ^while.header47;
^b124:
    i32 %1135 = srem i32 %933, i32 2;
    i1 %1136 = scmp neq i32 %1135, i32 0;
    ubr ^b134;
^if.then41:
    i32* %1137 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %734];
    i32 %1138 = load i32* %1137;
    i32 %1139 = add i32 %1138, i32 %735;
    ubr ^b127;
^b125:
    i32 %1140 = srem i32 %944, i32 2;
    i1 %1141 = scmp neq i32 %1140, i32 0;
    ubr ^b135;
^if.then42:
    i32 %1142 = load i32* %1;
    i32 %1143 = sdiv i32 %883, i32 %1142;
    i32 %1144 = add i32 %1143, i32 65536;
    i32 %1145 = load i32* %15;
    i32 %1146 = sub i32 %1144, i32 %1145;
    ubr ^b139;
^if.then43:
    i32* %1147 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %746];
    i32 %1148 = load i32* %1147;
    i32 %1149 = add i32 %1148, i32 %747;
    ubr ^b128;
^if.then44:
    i32* %1150 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %756];
    i32 %1151 = load i32* %1150;
    i32 %1152 = add i32 %1151, i32 %757;
    ubr ^b129;
^if.then45:
    i32* %1153 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %767];
    i32 %1154 = load i32* %1153;
    i32 %1155 = add i32 %1154, i32 %768;
    ubr ^b130;
^if.then46:
    i32* %1156 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %777];
    i32 %1157 = load i32* %1156;
    i32 %1158 = add i32 %1157, i32 %778;
    ubr ^b131;
^if.then47:
    i32 %1159 = srem i32 %864, i32 2;
    i1 %1160 = scmp eq i32 %1159, i32 0;
    cbr i1 %1160(prob = 0.5), ^if.then48, ^b137;
^b126:
    i32 %1161 = mul i32 %1056, i32 2;
    ubr ^while.header77;
^b127:
    i32 %1162 = phi [^if.then41, i32 %1139] [^b117, i32 %735];
    i32 %1163 = sdiv i32 %733, i32 2;
    i32 %1164 = sdiv i32 %732, i32 2;
    i32 %1165 = add i32 %734, i32 1;
    ubr ^while.header48;
^if.else16:
    i32 %1166 = load i32* %1;
    i32 %1167 = sdiv i32 %883, i32 %1166;
    ubr ^b139;
^b128:
    i32 %1168 = phi [^if.then43, i32 %1149] [^b118, i32 %747];
    i32 %1169 = sdiv i32 %745, i32 2;
    i32 %1170 = sdiv i32 %744, i32 2;
    i32 %1171 = add i32 %746, i32 1;
    ubr ^while.header49;
^b129:
    i32 %1172 = phi [^if.then44, i32 %1152] [^b119, i32 %757];
    i32 %1173 = sdiv i32 %755, i32 2;
    i32 %1174 = sdiv i32 %754, i32 2;
    i32 %1175 = add i32 %756, i32 1;
    ubr ^while.header50;
^while.body34:
    i32 %1176 = srem i32 %1029, i32 2;
    i1 %1177 = scmp neq i32 %1176, i32 0;
    cbr i1 %1177(prob = 0.5), ^if.then53, ^if.else19;
^while.body35:
    i32 %1178 = srem i32 %1041, i32 2;
    i1 %1179 = scmp neq i32 %1178, i32 0;
    cbr i1 %1179(prob = 0.5), ^if.then54, ^if.else20;
^b130:
    i32 %1180 = phi [^if.then45, i32 %1155] [^b120, i32 %768];
    i32 %1181 = sdiv i32 %766, i32 2;
    i32 %1182 = sdiv i32 %765, i32 2;
    i32 %1183 = add i32 %767, i32 1;
    ubr ^while.header51;
^b131:
    i32 %1184 = phi [^if.then46, i32 %1158] [^b121, i32 %778];
    i32 %1185 = sdiv i32 %776, i32 2;
    i32 %1186 = sdiv i32 %775, i32 2;
    i32 %1187 = add i32 %777, i32 1;
    ubr ^while.header52;
^if.else17:
    i32 %1188 = srem i32 %864, i32 2;
    i1 %1189 = scmp neq i32 %1188, i32 0;
    cbr i1 %1189(prob = 0.5), ^if.then48, ^b137;
^while.body36:
    i32 %1190 = srem i32 %1054, i32 2;
    i1 %1191 = scmp neq i32 %1190, i32 0;
    cbr i1 %1191(prob = 0.5), ^b138, ^b148;
^while.body37:
    i32 %1192 = srem i32 %1066, i32 2;
    i1 %1193 = scmp neq i32 %1192, i32 0;
    cbr i1 %1193(prob = 0.5), ^if.then56, ^if.else22;
^while.header69:
    i32 %1194 = phi [^b172, i32 %1194] [^while.header64, i32 %1072];
    i32 %1195 = phi [^b172, i32 %1195] [^while.header64, i32 %1073];
    i32 %1196 = phi [^b172, i32 %1196] [^while.header64, i32 %1074];
    i32 %1197 = phi [^b172, i32 %1197] [^while.header64, i32 %1075];
    i32 %1198 = phi [^b172, i32 %1198] [^while.header64, i32 %1076];
    i32 %1199 = phi [^b172, i32 %1199] [^while.header64, i32 %1077];
    i32 %1200 = phi [^b172, i32 %1200] [^while.header64, i32 %1078];
    i32 %1201 = phi [^b172, i32 %1573] [^while.header64, i32 %1072];
    i32 %1202 = phi [^b172, i32 %1572] [^while.header64, i32 %1073];
    i32 %1203 = phi [^b172, i32 %1574] [^while.header64, i32 0];
    i32 %1204 = phi [^b172, i32 %1571] [^while.header64, i32 0];
    i1 %1205 = scmp lt i32 %1203, i32 16;
    cbr i1 %1205(prob = 0.97), ^while.body40, ^while.header78;
^while.body38:
    i32 %1206 = srem i32 %1112, i32 2;
    i1 %1207 = scmp neq i32 %1206, i32 0;
    cbr i1 %1207(prob = 0.5), ^b140, ^b149;
^while.body39:
    i32 %1208 = srem i32 %1122, i32 2;
    i1 %1209 = scmp neq i32 %1208, i32 0;
    cbr i1 %1209(prob = 0.5), ^b141, ^b150;
^while.header70:
    i32 %1210 = phi [^while.header60, i32 %1031] [^b179, i32 %1210];
    i32 %1211 = phi [^while.header60, i32 %1023] [^b179, i32 %1211];
    i32 %1212 = phi [^while.header60, i32 %1024] [^b179, i32 %1212];
    i32 %1213 = phi [^while.header60, i32 %1025] [^b179, i32 %1213];
    i32 %1214 = phi [^while.header60, i32 %1026] [^b179, i32 %1214];
    i32 %1215 = phi [^while.header60, i32 %1027] [^b179, i32 %1215];
    i32 %1216 = phi [^while.header60, i32 %1021] [^b179, i32 %1604];
    i32 %1217 = phi [^while.header60, i32 %1022] [^b179, i32 %1603];
    i32 %1218 = phi [^while.header60, i32 0] [^b179, i32 %1605];
    i32 %1219 = phi [^while.header60, i32 0] [^b179, i32 %1602];
    i1 %1220 = scmp lt i32 %1218, i32 16;
    cbr i1 %1220(prob = 0.97), ^while.body41, ^b142;
^while.header71:
    i32 %1221 = phi [^while.header61, i32 %1043] [^b180, i32 %1221];
    i32 %1222 = phi [^while.header61, i32 %1035] [^b180, i32 %1222];
    i32 %1223 = phi [^while.header61, i32 %1036] [^b180, i32 %1223];
    i32 %1224 = phi [^while.header61, i32 %1037] [^b180, i32 %1224];
    i32 %1225 = phi [^while.header61, i32 %1038] [^b180, i32 %1225];
    i32 %1226 = phi [^while.header61, i32 %1039] [^b180, i32 %1226];
    i32 %1227 = phi [^while.header61, i32 %1033] [^b180, i32 %1608];
    i32 %1228 = phi [^while.header61, i32 %1034] [^b180, i32 %1607];
    i32 %1229 = phi [^while.header61, i32 0] [^b180, i32 %1609];
    i32 %1230 = phi [^while.header61, i32 0] [^b180, i32 %1606];
    i1 %1231 = scmp lt i32 %1229, i32 16;
    cbr i1 %1231(prob = 0.97), ^while.body42, ^b143;
^while.header72:
    i32 %1232 = phi [^while.header65, i32 %1088] [^b174, i32 %1232];
    i32 %1233 = phi [^while.header65, i32 %1089] [^b174, i32 %1233];
    i32 %1234 = phi [^while.header65, i32 %1090] [^b174, i32 %1234];
    i32 %1235 = phi [^while.header65, i32 %1091] [^b174, i32 %1235];
    i32 %1236 = phi [^while.header65, i32 %1092] [^b174, i32 %1236];
    i32 %1237 = phi [^while.header65, i32 %1093] [^b174, i32 %1237];
    i32 %1238 = phi [^while.header65, i32 %1094] [^b174, i32 %1238];
    i32 %1239 = phi [^while.header65, i32 %1088] [^b174, i32 %1585];
    i32 %1240 = phi [^while.header65, i32 %1089] [^b174, i32 %1584];
    i32 %1241 = phi [^while.header65, i32 0] [^b174, i32 %1586];
    i32 %1242 = phi [^while.header65, i32 0] [^b174, i32 %1583];
    i1 %1243 = scmp lt i32 %1241, i32 16;
    cbr i1 %1243(prob = 0.97), ^while.body43, ^while.header80;
^while.header73:
    i32 %1244 = phi [^while.header66, i32 %1096] [^b175, i32 %1244];
    i32 %1245 = phi [^while.header66, i32 %1097] [^b175, i32 %1245];
    i32 %1246 = phi [^while.header66, i32 %1098] [^b175, i32 %1246];
    i32 %1247 = phi [^while.header66, i32 %1099] [^b175, i32 %1247];
    i32 %1248 = phi [^while.header66, i32 %1100] [^b175, i32 %1248];
    i32 %1249 = phi [^while.header66, i32 %1101] [^b175, i32 %1249];
    i32 %1250 = phi [^while.header66, i32 %1102] [^b175, i32 %1250];
    i32 %1251 = phi [^while.header66, i32 %1096] [^b175, i32 %1589];
    i32 %1252 = phi [^while.header66, i32 %1097] [^b175, i32 %1588];
    i32 %1253 = phi [^while.header66, i32 0] [^b175, i32 %1590];
    i32 %1254 = phi [^while.header66, i32 0] [^b175, i32 %1587];
    i1 %1255 = scmp lt i32 %1253, i32 16;
    cbr i1 %1255(prob = 0.97), ^while.body44, ^while.header81;
^b132:
    i1 %1256 = phi [^while.body31, i1 false] [^b122, i1 %1130];
    cbr i1 %1256(prob = 0.5), ^if.then49, ^b144;
^while.header74:
    i32 %1257 = phi [^while.header63, i32 %1068] [^b181, i32 %1257];
    i32 %1258 = phi [^while.header63, i32 %1060] [^b181, i32 %1258];
    i32 %1259 = phi [^while.header63, i32 %1061] [^b181, i32 %1259];
    i32 %1260 = phi [^while.header63, i32 %1062] [^b181, i32 %1260];
    i32 %1261 = phi [^while.header63, i32 %1063] [^b181, i32 %1261];
    i32 %1262 = phi [^while.header63, i32 %1064] [^b181, i32 %1262];
    i32 %1263 = phi [^while.header63, i32 %1058] [^b181, i32 %1612];
    i32 %1264 = phi [^while.header63, i32 %1059] [^b181, i32 %1611];
    i32 %1265 = phi [^while.header63, i32 0] [^b181, i32 %1613];
    i32 %1266 = phi [^while.header63, i32 0] [^b181, i32 %1610];
    i1 %1267 = scmp lt i32 %1265, i32 16;
    cbr i1 %1267(prob = 0.97), ^while.body45, ^b145;
^b133:
    i1 %1268 = scmp gt i32 %1075, i32 32767;
    cbr i1 %1268(prob = 0.5), ^if.then50, ^if.else18;
^b134:
    i1 %1269 = phi [^b124, i1 %1136] [^while.body32, i1 false];
    cbr i1 %1269(prob = 0.5), ^if.then51, ^b146;
^while.header75:
    i32 %1270 = phi [^while.header89, i32 %1730] [^b114, i32 %1016];
    i32 %1271 = phi [^while.header89, i32 %1721] [^b114, i32 %1016];
    i32 %1272 = phi [^while.header89, i32 %1722] [^b114, i32 %1014];
    i32 %1273 = phi [^while.header89, i32 %1723] [^b114, i32 %1015];
    i32 %1274 = phi [^while.header89, i32 %1724] [^b114, i32 %1017];
    i32 %1275 = phi [^while.header89, i32 %1725] [^b114, i32 %1018];
    i32 %1276 = phi [^while.header89, i32 %1726] [^b114, i32 %1019];
    i1 %1277 = scmp neq i32 %1270, i32 0;
    cbr i1 %1277(prob = 0.97), ^while.header79, ^b151;
^b135:
    i1 %1278 = phi [^while.body33, i1 false] [^b125, i1 %1141];
    cbr i1 %1278(prob = 0.5), ^if.then52, ^b147;
^while.header76:
    i32 %1279 = phi [^b182, i32 %1279] [^b115, i32 %928];
    i32 %1280 = phi [^b182, i32 %1280] [^b115, i32 %929];
    i32 %1281 = phi [^b182, i32 %1281] [^b115, i32 %930];
    i32 %1282 = phi [^b182, i32 %1282] [^b115, i32 %931];
    i32 %1283 = phi [^b182, i32 %1283] [^b115, i32 %932];
    i32 %1284 = phi [^b182, i32 %1616] [^b115, i32 65535];
    i32 %1285 = phi [^b182, i32 %1615] [^b115, i32 %1020];
    i32 %1286 = phi [^b182, i32 %1617] [^b115, i32 0];
    i32 %1287 = phi [^b182, i32 %1614] [^b115, i32 0];
    i1 %1288 = scmp lt i32 %1286, i32 16;
    cbr i1 %1288(prob = 0.97), ^while.body46, ^while.header43;
^b136:
    i1 %1289 = scmp gt i32 %1091, i32 32767;
    cbr i1 %1289(prob = 0.5), ^if.then55, ^if.else21;
^if.then48:
    i32* %1290 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %866];
    i32 %1291 = load i32* %1290;
    i32 %1292 = add i32 %1291, i32 %867;
    ubr ^b137;
^b137:
    i32 %1293 = phi [^if.then48, i32 %1292] [^if.else17, i32 %867] [^if.then47, i32 %867];
    i32 %1294 = sdiv i32 %865, i32 2;
    i32 %1295 = sdiv i32 %864, i32 2;
    i32 %1296 = add i32 %866, i32 1;
    ubr ^while.header53;
^b138:
    i32 %1297 = srem i32 %1053, i32 2;
    i1 %1298 = scmp neq i32 %1297, i32 0;
    ubr ^b148;
^b139:
    i32 %1299 = phi [^if.else16, i32 %1167] [^if.then42, i32 %1146];
    ubr ^while.header22;
^b140:
    i32 %1300 = srem i32 %1111, i32 2;
    i1 %1301 = scmp neq i32 %1300, i32 0;
    ubr ^b149;
^b141:
    i32 %1302 = srem i32 %1121, i32 2;
    i1 %1303 = scmp neq i32 %1302, i32 0;
    ubr ^b150;
^if.then49:
    i32* %1304 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %924];
    i32 %1305 = load i32* %1304;
    i32 %1306 = add i32 %1305, i32 %925;
    ubr ^b144;
^if.then50:
    i32 %1307 = load i32* %1;
    i32 %1308 = sdiv i32 %1075, i32 %1307;
    i32 %1309 = add i32 %1308, i32 65536;
    i32 %1310 = load i32* %15;
    i32 %1311 = sub i32 %1309, i32 %1310;
    ubr ^b158;
^if.then51:
    i32* %1312 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %935];
    i32 %1313 = load i32* %1312;
    i32 %1314 = add i32 %1313, i32 %936;
    ubr ^b146;
^if.then52:
    i32* %1315 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %946];
    i32 %1316 = load i32* %1315;
    i32 %1317 = add i32 %1316, i32 %947;
    ubr ^b147;
^if.then53:
    i32 %1318 = srem i32 %1028, i32 2;
    i1 %1319 = scmp eq i32 %1318, i32 0;
    cbr i1 %1319(prob = 0.5), ^if.then57, ^b152;
^if.then54:
    i32 %1320 = srem i32 %1040, i32 2;
    i1 %1321 = scmp eq i32 %1320, i32 0;
    cbr i1 %1321(prob = 0.5), ^if.then58, ^b153;
^if.then55:
    i32 %1322 = load i32* %1;
    i32 %1323 = sdiv i32 %1091, i32 %1322;
    i32 %1324 = add i32 %1323, i32 65536;
    i32 %1325 = load i32* %15;
    i32 %1326 = sub i32 %1324, i32 %1325;
    ubr ^b160;
^b142:
    i32 %1327 = mul i32 %1219, i32 2;
    ubr ^while.header82;
^b143:
    i32 %1328 = mul i32 %1230, i32 2;
    ubr ^while.header83;
^b144:
    i32 %1329 = phi [^if.then49, i32 %1306] [^b132, i32 %925];
    i32 %1330 = sdiv i32 %923, i32 2;
    i32 %1331 = sdiv i32 %922, i32 2;
    i32 %1332 = add i32 %924, i32 1;
    ubr ^while.header57;
^if.then56:
    i32 %1333 = srem i32 %1065, i32 2;
    i1 %1334 = scmp eq i32 %1333, i32 0;
    cbr i1 %1334(prob = 0.5), ^if.then59, ^b156;
^b145:
    i32 %1335 = mul i32 %1266, i32 2;
    ubr ^while.header84;
^if.else18:
    i32 %1336 = load i32* %1;
    i32 %1337 = sdiv i32 %1075, i32 %1336;
    ubr ^b158;
^b146:
    i32 %1338 = phi [^if.then51, i32 %1314] [^b134, i32 %936];
    i32 %1339 = sdiv i32 %934, i32 2;
    i32 %1340 = sdiv i32 %933, i32 2;
    i32 %1341 = add i32 %935, i32 1;
    ubr ^while.header58;
^while.body40:
    i32 %1342 = srem i32 %1202, i32 2;
    i1 %1343 = scmp neq i32 %1342, i32 0;
    cbr i1 %1343(prob = 0.5), ^if.then63, ^if.else23;
^b147:
    i32 %1344 = phi [^if.then52, i32 %1317] [^b135, i32 %947];
    i32 %1345 = sdiv i32 %945, i32 2;
    i32 %1346 = sdiv i32 %944, i32 2;
    i32 %1347 = add i32 %946, i32 1;
    ubr ^while.header59;
^if.else19:
    i32 %1348 = srem i32 %1028, i32 2;
    i1 %1349 = scmp neq i32 %1348, i32 0;
    cbr i1 %1349(prob = 0.5), ^if.then57, ^b152;
^if.else20:
    i32 %1350 = srem i32 %1040, i32 2;
    i1 %1351 = scmp neq i32 %1350, i32 0;
    cbr i1 %1351(prob = 0.5), ^if.then58, ^b153;
^if.else21:
    i32 %1352 = load i32* %1;
    i32 %1353 = sdiv i32 %1091, i32 %1352;
    ubr ^b160;
^while.body41:
    i32 %1354 = srem i32 %1217, i32 2;
    i1 %1355 = scmp neq i32 %1354, i32 0;
    cbr i1 %1355(prob = 0.5), ^b154, ^b167;
^while.body42:
    i32 %1356 = srem i32 %1228, i32 2;
    i1 %1357 = scmp neq i32 %1356, i32 0;
    cbr i1 %1357(prob = 0.5), ^b155, ^b168;
^while.body43:
    i32 %1358 = srem i32 %1240, i32 2;
    i1 %1359 = scmp neq i32 %1358, i32 0;
    cbr i1 %1359(prob = 0.5), ^if.then65, ^if.else25;
^while.body44:
    i32 %1360 = srem i32 %1252, i32 2;
    i1 %1361 = scmp neq i32 %1360, i32 0;
    cbr i1 %1361(prob = 0.5), ^if.then66, ^if.else26;
^b148:
    i1 %1362 = phi [^b138, i1 %1298] [^while.body36, i1 false];
    cbr i1 %1362(prob = 0.5), ^if.then60, ^b161;
^if.else22:
    i32 %1363 = srem i32 %1065, i32 2;
    i1 %1364 = scmp neq i32 %1363, i32 0;
    cbr i1 %1364(prob = 0.5), ^if.then59, ^b156;
^while.header77:
    i32 %1365 = phi [^b193, i32 %1365] [^b126, i32 %1047];
    i32 %1366 = phi [^b193, i32 %1366] [^b126, i32 %1048];
    i32 %1367 = phi [^b193, i32 %1367] [^b126, i32 %1049];
    i32 %1368 = phi [^b193, i32 %1368] [^b126, i32 %1050];
    i32 %1369 = phi [^b193, i32 %1369] [^b126, i32 %1051];
    i32 %1370 = phi [^b193, i32 %1370] [^b126, i32 %1052];
    i32 %1371 = phi [^b193, i32 %1697] [^b126, i32 65535];
    i32 %1372 = phi [^b193, i32 %1696] [^b126, i32 %1161];
    i32 %1373 = phi [^b193, i32 %1698] [^b126, i32 0];
    i32 %1374 = phi [^b193, i32 %1695] [^b126, i32 0];
    i1 %1375 = scmp lt i32 %1373, i32 16;
    cbr i1 %1375(prob = 0.97), ^while.body47, ^while.header46;
^while.body45:
    i32 %1376 = srem i32 %1264, i32 2;
    i1 %1377 = scmp neq i32 %1376, i32 0;
    cbr i1 %1377(prob = 0.5), ^b157, ^b169;
^while.body46:
    i32 %1378 = srem i32 %1285, i32 2;
    i1 %1379 = scmp neq i32 %1378, i32 0;
    cbr i1 %1379(prob = 0.5), ^b159, ^b170;
^while.header78:
    i32 %1380 = phi [^while.header69, i32 %1204] [^b194, i32 %1380];
    i32 %1381 = phi [^while.header69, i32 %1196] [^b194, i32 %1381];
    i32 %1382 = phi [^while.header69, i32 %1197] [^b194, i32 %1382];
    i32 %1383 = phi [^while.header69, i32 %1198] [^b194, i32 %1383];
    i32 %1384 = phi [^while.header69, i32 %1199] [^b194, i32 %1384];
    i32 %1385 = phi [^while.header69, i32 %1200] [^b194, i32 %1385];
    i32 %1386 = phi [^while.header69, i32 %1194] [^b194, i32 %1701];
    i32 %1387 = phi [^while.header69, i32 %1195] [^b194, i32 %1700];
    i32 %1388 = phi [^while.header69, i32 0] [^b194, i32 %1702];
    i32 %1389 = phi [^while.header69, i32 0] [^b194, i32 %1699];
    i1 %1390 = scmp lt i32 %1388, i32 16;
    cbr i1 %1390(prob = 0.97), ^while.body48, ^b162;
^while.header79:
    i32 %1391 = phi [^b191, i32 %1391] [^while.header75, i32 %1270];
    i32 %1392 = phi [^b191, i32 %1392] [^while.header75, i32 %1271];
    i32 %1393 = phi [^b191, i32 %1393] [^while.header75, i32 %1272];
    i32 %1394 = phi [^b191, i32 %1394] [^while.header75, i32 %1273];
    i32 %1395 = phi [^b191, i32 %1395] [^while.header75, i32 %1274];
    i32 %1396 = phi [^b191, i32 %1396] [^while.header75, i32 %1275];
    i32 %1397 = phi [^b191, i32 %1397] [^while.header75, i32 %1276];
    i32 %1398 = phi [^b191, i32 %1685] [^while.header75, i32 %1270];
    i32 %1399 = phi [^b191, i32 %1684] [^while.header75, i32 %1271];
    i32 %1400 = phi [^b191, i32 %1686] [^while.header75, i32 0];
    i32 %1401 = phi [^b191, i32 %1683] [^while.header75, i32 0];
    i1 %1402 = scmp lt i32 %1400, i32 16;
    cbr i1 %1402(prob = 0.97), ^while.body49, ^while.header85;
^b149:
    i1 %1403 = phi [^while.body38, i1 false] [^b140, i1 %1301];
    cbr i1 %1403(prob = 0.5), ^if.then61, ^b163;
^b150:
    i1 %1404 = phi [^while.body39, i1 false] [^b141, i1 %1303];
    cbr i1 %1404(prob = 0.5), ^if.then62, ^b164;
^while.header80:
    i32 %1405 = phi [^while.header72, i32 %1242] [^b195, i32 %1405];
    i32 %1406 = phi [^while.header72, i32 %1234] [^b195, i32 %1406];
    i32 %1407 = phi [^while.header72, i32 %1235] [^b195, i32 %1407];
    i32 %1408 = phi [^while.header72, i32 %1236] [^b195, i32 %1408];
    i32 %1409 = phi [^while.header72, i32 %1237] [^b195, i32 %1409];
    i32 %1410 = phi [^while.header72, i32 %1238] [^b195, i32 %1410];
    i32 %1411 = phi [^while.header72, i32 %1232] [^b195, i32 %1705];
    i32 %1412 = phi [^while.header72, i32 %1233] [^b195, i32 %1704];
    i32 %1413 = phi [^while.header72, i32 0] [^b195, i32 %1706];
    i32 %1414 = phi [^while.header72, i32 0] [^b195, i32 %1703];
    i1 %1415 = scmp lt i32 %1413, i32 16;
    cbr i1 %1415(prob = 0.97), ^while.body50, ^b165;
^while.header81:
    i32 %1416 = phi [^while.header73, i32 %1254] [^b196, i32 %1416];
    i32 %1417 = phi [^while.header73, i32 %1246] [^b196, i32 %1417];
    i32 %1418 = phi [^while.header73, i32 %1247] [^b196, i32 %1418];
    i32 %1419 = phi [^while.header73, i32 %1248] [^b196, i32 %1419];
    i32 %1420 = phi [^while.header73, i32 %1249] [^b196, i32 %1420];
    i32 %1421 = phi [^while.header73, i32 %1250] [^b196, i32 %1421];
    i32 %1422 = phi [^while.header73, i32 %1244] [^b196, i32 %1709];
    i32 %1423 = phi [^while.header73, i32 %1245] [^b196, i32 %1708];
    i32 %1424 = phi [^while.header73, i32 0] [^b196, i32 %1710];
    i32 %1425 = phi [^while.header73, i32 0] [^b196, i32 %1707];
    i1 %1426 = scmp lt i32 %1424, i32 16;
    cbr i1 %1426(prob = 0.97), ^while.body51, ^b166;
^b151:
    i1 %1427 = scmp gt i32 %1273, i32 32767;
    cbr i1 %1427(prob = 0.5), ^if.then64, ^if.else24;
^if.then57:
    i32* %1428 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1030];
    i32 %1429 = load i32* %1428;
    i32 %1430 = add i32 %1429, i32 %1031;
    ubr ^b152;
^if.then58:
    i32* %1431 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1042];
    i32 %1432 = load i32* %1431;
    i32 %1433 = add i32 %1432, i32 %1043;
    ubr ^b153;
^if.then59:
    i32* %1434 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1067];
    i32 %1435 = load i32* %1434;
    i32 %1436 = add i32 %1435, i32 %1068;
    ubr ^b156;
^b152:
    i32 %1437 = phi [^if.then57, i32 %1430] [^if.else19, i32 %1031] [^if.then53, i32 %1031];
    i32 %1438 = sdiv i32 %1029, i32 2;
    i32 %1439 = sdiv i32 %1028, i32 2;
    i32 %1440 = add i32 %1030, i32 1;
    ubr ^while.header60;
^b153:
    i32 %1441 = phi [^if.then58, i32 %1433] [^if.else20, i32 %1043] [^if.then54, i32 %1043];
    i32 %1442 = sdiv i32 %1041, i32 2;
    i32 %1443 = sdiv i32 %1040, i32 2;
    i32 %1444 = add i32 %1042, i32 1;
    ubr ^while.header61;
^b154:
    i32 %1445 = srem i32 %1216, i32 2;
    i1 %1446 = scmp neq i32 %1445, i32 0;
    ubr ^b167;
^b155:
    i32 %1447 = srem i32 %1227, i32 2;
    i1 %1448 = scmp neq i32 %1447, i32 0;
    ubr ^b168;
^if.then60:
    i32* %1449 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1055];
    i32 %1450 = load i32* %1449;
    i32 %1451 = add i32 %1450, i32 %1056;
    ubr ^b161;
^b156:
    i32 %1452 = phi [^if.then59, i32 %1436] [^if.else22, i32 %1068] [^if.then56, i32 %1068];
    i32 %1453 = sdiv i32 %1066, i32 2;
    i32 %1454 = sdiv i32 %1065, i32 2;
    i32 %1455 = add i32 %1067, i32 1;
    ubr ^while.header63;
^b157:
    i32 %1456 = srem i32 %1263, i32 2;
    i1 %1457 = scmp neq i32 %1456, i32 0;
    ubr ^b169;
^b158:
    i32 %1458 = phi [^if.else18, i32 %1337] [^if.then50, i32 %1311];
    ubr ^while.header30;
^b159:
    i32 %1459 = srem i32 %1284, i32 2;
    i1 %1460 = scmp neq i32 %1459, i32 0;
    ubr ^b170;
^if.then61:
    i32* %1461 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1113];
    i32 %1462 = load i32* %1461;
    i32 %1463 = add i32 %1462, i32 %1114;
    ubr ^b163;
^if.then62:
    i32* %1464 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1123];
    i32 %1465 = load i32* %1464;
    i32 %1466 = add i32 %1465, i32 %1124;
    ubr ^b164;
^b160:
    i32 %1467 = phi [^if.else21, i32 %1353] [^if.then55, i32 %1326];
    ubr ^while.header34;
^b161:
    i32 %1468 = phi [^if.then60, i32 %1451] [^b148, i32 %1056];
    i32 %1469 = sdiv i32 %1054, i32 2;
    i32 %1470 = sdiv i32 %1053, i32 2;
    i32 %1471 = add i32 %1055, i32 1;
    ubr ^while.header62;
^if.then63:
    i32 %1472 = srem i32 %1201, i32 2;
    i1 %1473 = scmp eq i32 %1472, i32 0;
    cbr i1 %1473(prob = 0.5), ^if.then67, ^b172;
^if.then64:
    i32 %1474 = load i32* %1;
    i32 %1475 = sdiv i32 %1273, i32 %1474;
    i32 %1476 = add i32 %1475, i32 65536;
    i32 %1477 = load i32* %15;
    i32 %1478 = sub i32 %1476, i32 %1477;
    ubr ^b178;
^b162:
    i32 %1479 = mul i32 %1389, i32 2;
    ubr ^while.header86;
^b163:
    i32 %1480 = phi [^if.then61, i32 %1463] [^b149, i32 %1114];
    i32 %1481 = sdiv i32 %1112, i32 2;
    i32 %1482 = sdiv i32 %1111, i32 2;
    i32 %1483 = add i32 %1113, i32 1;
    ubr ^while.header67;
^b164:
    i32 %1484 = phi [^if.then62, i32 %1466] [^b150, i32 %1124];
    i32 %1485 = sdiv i32 %1122, i32 2;
    i32 %1486 = sdiv i32 %1121, i32 2;
    i32 %1487 = add i32 %1123, i32 1;
    ubr ^while.header68;
^if.then65:
    i32 %1488 = srem i32 %1239, i32 2;
    i1 %1489 = scmp eq i32 %1488, i32 0;
    cbr i1 %1489(prob = 0.5), ^if.then68, ^b174;
^if.then66:
    i32 %1490 = srem i32 %1251, i32 2;
    i1 %1491 = scmp eq i32 %1490, i32 0;
    cbr i1 %1491(prob = 0.5), ^if.then69, ^b175;
^b165:
    i32 %1492 = mul i32 %1414, i32 2;
    ubr ^while.header87;
^b166:
    i32 %1493 = mul i32 %1425, i32 2;
    ubr ^while.header88;
^while.body47:
    i32 %1494 = srem i32 %1372, i32 2;
    i1 %1495 = scmp neq i32 %1494, i32 0;
    cbr i1 %1495(prob = 0.5), ^b171, ^b184;
^if.else23:
    i32 %1496 = srem i32 %1201, i32 2;
    i1 %1497 = scmp neq i32 %1496, i32 0;
    cbr i1 %1497(prob = 0.5), ^if.then67, ^b172;
^if.else24:
    i32 %1498 = load i32* %1;
    i32 %1499 = sdiv i32 %1273, i32 %1498;
    ubr ^b178;
^while.body48:
    i32 %1500 = srem i32 %1387, i32 2;
    i1 %1501 = scmp neq i32 %1500, i32 0;
    cbr i1 %1501(prob = 0.5), ^b173, ^b185;
^while.body49:
    i32 %1502 = srem i32 %1399, i32 2;
    i1 %1503 = scmp neq i32 %1502, i32 0;
    cbr i1 %1503(prob = 0.5), ^if.then74, ^if.else27;
^b167:
    i1 %1504 = phi [^b154, i1 %1446] [^while.body41, i1 false];
    cbr i1 %1504(prob = 0.5), ^if.then70, ^b179;
^b168:
    i1 %1505 = phi [^while.body42, i1 false] [^b155, i1 %1448];
    cbr i1 %1505(prob = 0.5), ^if.then71, ^b180;
^if.else25:
    i32 %1506 = srem i32 %1239, i32 2;
    i1 %1507 = scmp neq i32 %1506, i32 0;
    cbr i1 %1507(prob = 0.5), ^if.then68, ^b174;
^if.else26:
    i32 %1508 = srem i32 %1251, i32 2;
    i1 %1509 = scmp neq i32 %1508, i32 0;
    cbr i1 %1509(prob = 0.5), ^if.then69, ^b175;
^while.header82:
    i32 %1510 = phi [^b204, i32 %1510] [^b142, i32 %1210];
    i32 %1511 = phi [^b204, i32 %1511] [^b142, i32 %1211];
    i32 %1512 = phi [^b204, i32 %1512] [^b142, i32 %1212];
    i32 %1513 = phi [^b204, i32 %1513] [^b142, i32 %1213];
    i32 %1514 = phi [^b204, i32 %1514] [^b142, i32 %1214];
    i32 %1515 = phi [^b204, i32 %1515] [^b142, i32 %1215];
    i32 %1516 = phi [^b204, i32 %1752] [^b142, i32 65535];
    i32 %1517 = phi [^b204, i32 %1751] [^b142, i32 %1327];
    i32 %1518 = phi [^b204, i32 %1753] [^b142, i32 0];
    i32 %1519 = phi [^b204, i32 %1750] [^b142, i32 0];
    i1 %1520 = scmp lt i32 %1518, i32 16;
    cbr i1 %1520(prob = 0.97), ^while.body52, ^while.header54;
^while.header83:
    i32 %1521 = phi [^b205, i32 %1521] [^b143, i32 %1221];
    i32 %1522 = phi [^b205, i32 %1522] [^b143, i32 %1222];
    i32 %1523 = phi [^b205, i32 %1523] [^b143, i32 %1223];
    i32 %1524 = phi [^b205, i32 %1524] [^b143, i32 %1224];
    i32 %1525 = phi [^b205, i32 %1525] [^b143, i32 %1225];
    i32 %1526 = phi [^b205, i32 %1526] [^b143, i32 %1226];
    i32 %1527 = phi [^b205, i32 %1756] [^b143, i32 65535];
    i32 %1528 = phi [^b205, i32 %1755] [^b143, i32 %1328];
    i32 %1529 = phi [^b205, i32 %1757] [^b143, i32 0];
    i32 %1530 = phi [^b205, i32 %1754] [^b143, i32 0];
    i1 %1531 = scmp lt i32 %1529, i32 16;
    cbr i1 %1531(prob = 0.97), ^while.body53, ^while.header55;
^while.body50:
    i32 %1532 = srem i32 %1412, i32 2;
    i1 %1533 = scmp neq i32 %1532, i32 0;
    cbr i1 %1533(prob = 0.5), ^b176, ^b186;
^while.body51:
    i32 %1534 = srem i32 %1423, i32 2;
    i1 %1535 = scmp neq i32 %1534, i32 0;
    cbr i1 %1535(prob = 0.5), ^b177, ^b187;
^b169:
    i1 %1536 = phi [^b157, i1 %1457] [^while.body45, i1 false];
    cbr i1 %1536(prob = 0.5), ^if.then72, ^b181;
^while.header84:
    i32 %1537 = phi [^b206, i32 %1537] [^b145, i32 %1257];
    i32 %1538 = phi [^b206, i32 %1538] [^b145, i32 %1258];
    i32 %1539 = phi [^b206, i32 %1539] [^b145, i32 %1259];
    i32 %1540 = phi [^b206, i32 %1540] [^b145, i32 %1260];
    i32 %1541 = phi [^b206, i32 %1541] [^b145, i32 %1261];
    i32 %1542 = phi [^b206, i32 %1542] [^b145, i32 %1262];
    i32 %1543 = phi [^b206, i32 %1760] [^b145, i32 65535];
    i32 %1544 = phi [^b206, i32 %1759] [^b145, i32 %1335];
    i32 %1545 = phi [^b206, i32 %1761] [^b145, i32 0];
    i32 %1546 = phi [^b206, i32 %1758] [^b145, i32 0];
    i1 %1547 = scmp lt i32 %1545, i32 16;
    cbr i1 %1547(prob = 0.97), ^while.body54, ^while.header56;
^b170:
    i1 %1548 = phi [^b159, i1 %1460] [^while.body46, i1 false];
    cbr i1 %1548(prob = 0.5), ^if.then73, ^b182;
^while.header85:
    i32 %1549 = phi [^while.header79, i32 %1401] [^b207, i32 %1549];
    i32 %1550 = phi [^while.header79, i32 %1393] [^b207, i32 %1550];
    i32 %1551 = phi [^while.header79, i32 %1394] [^b207, i32 %1551];
    i32 %1552 = phi [^while.header79, i32 %1395] [^b207, i32 %1552];
    i32 %1553 = phi [^while.header79, i32 %1396] [^b207, i32 %1553];
    i32 %1554 = phi [^while.header79, i32 %1397] [^b207, i32 %1554];
    i32 %1555 = phi [^while.header79, i32 %1391] [^b207, i32 %1764];
    i32 %1556 = phi [^while.header79, i32 %1392] [^b207, i32 %1763];
    i32 %1557 = phi [^while.header79, i32 0] [^b207, i32 %1765];
    i32 %1558 = phi [^while.header79, i32 0] [^b207, i32 %1762];
    i1 %1559 = scmp lt i32 %1557, i32 16;
    cbr i1 %1559(prob = 0.97), ^while.body55, ^b183;
^if.then67:
    i32* %1560 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1203];
    i32 %1561 = load i32* %1560;
    i32 %1562 = add i32 %1561, i32 %1204;
    ubr ^b172;
^if.then68:
    i32* %1563 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1241];
    i32 %1564 = load i32* %1563;
    i32 %1565 = add i32 %1564, i32 %1242;
    ubr ^b174;
^if.then69:
    i32* %1566 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1253];
    i32 %1567 = load i32* %1566;
    i32 %1568 = add i32 %1567, i32 %1254;
    ubr ^b175;
^b171:
    i32 %1569 = srem i32 %1371, i32 2;
    i1 %1570 = scmp neq i32 %1569, i32 0;
    ubr ^b184;
^b172:
    i32 %1571 = phi [^if.then67, i32 %1562] [^if.else23, i32 %1204] [^if.then63, i32 %1204];
    i32 %1572 = sdiv i32 %1202, i32 2;
    i32 %1573 = sdiv i32 %1201, i32 2;
    i32 %1574 = add i32 %1203, i32 1;
    ubr ^while.header69;
^b173:
    i32 %1575 = srem i32 %1386, i32 2;
    i1 %1576 = scmp neq i32 %1575, i32 0;
    ubr ^b185;
^if.then70:
    i32* %1577 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1218];
    i32 %1578 = load i32* %1577;
    i32 %1579 = add i32 %1578, i32 %1219;
    ubr ^b179;
^if.then71:
    i32* %1580 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1229];
    i32 %1581 = load i32* %1580;
    i32 %1582 = add i32 %1581, i32 %1230;
    ubr ^b180;
^b174:
    i32 %1583 = phi [^if.then68, i32 %1565] [^if.else25, i32 %1242] [^if.then65, i32 %1242];
    i32 %1584 = sdiv i32 %1240, i32 2;
    i32 %1585 = sdiv i32 %1239, i32 2;
    i32 %1586 = add i32 %1241, i32 1;
    ubr ^while.header72;
^b175:
    i32 %1587 = phi [^if.then69, i32 %1568] [^if.else26, i32 %1254] [^if.then66, i32 %1254];
    i32 %1588 = sdiv i32 %1252, i32 2;
    i32 %1589 = sdiv i32 %1251, i32 2;
    i32 %1590 = add i32 %1253, i32 1;
    ubr ^while.header73;
^b176:
    i32 %1591 = srem i32 %1411, i32 2;
    i1 %1592 = scmp neq i32 %1591, i32 0;
    ubr ^b186;
^b177:
    i32 %1593 = srem i32 %1422, i32 2;
    i1 %1594 = scmp neq i32 %1593, i32 0;
    ubr ^b187;
^if.then72:
    i32* %1595 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1265];
    i32 %1596 = load i32* %1595;
    i32 %1597 = add i32 %1596, i32 %1266;
    ubr ^b181;
^if.then73:
    i32* %1598 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1286];
    i32 %1599 = load i32* %1598;
    i32 %1600 = add i32 %1599, i32 %1287;
    ubr ^b182;
^b178:
    i32 %1601 = phi [^if.else24, i32 %1499] [^if.then64, i32 %1478];
    ubr ^while.header44;
^b179:
    i32 %1602 = phi [^if.then70, i32 %1579] [^b167, i32 %1219];
    i32 %1603 = sdiv i32 %1217, i32 2;
    i32 %1604 = sdiv i32 %1216, i32 2;
    i32 %1605 = add i32 %1218, i32 1;
    ubr ^while.header70;
^b180:
    i32 %1606 = phi [^if.then71, i32 %1582] [^b168, i32 %1230];
    i32 %1607 = sdiv i32 %1228, i32 2;
    i32 %1608 = sdiv i32 %1227, i32 2;
    i32 %1609 = add i32 %1229, i32 1;
    ubr ^while.header71;
^b181:
    i32 %1610 = phi [^if.then72, i32 %1597] [^b169, i32 %1266];
    i32 %1611 = sdiv i32 %1264, i32 2;
    i32 %1612 = sdiv i32 %1263, i32 2;
    i32 %1613 = add i32 %1265, i32 1;
    ubr ^while.header74;
^b182:
    i32 %1614 = phi [^if.then73, i32 %1600] [^b170, i32 %1287];
    i32 %1615 = sdiv i32 %1285, i32 2;
    i32 %1616 = sdiv i32 %1284, i32 2;
    i32 %1617 = add i32 %1286, i32 1;
    ubr ^while.header76;
^if.then74:
    i32 %1618 = srem i32 %1398, i32 2;
    i1 %1619 = scmp eq i32 %1618, i32 0;
    cbr i1 %1619(prob = 0.5), ^if.then75, ^b191;
^b183:
    i32 %1620 = mul i32 %1558, i32 2;
    ubr ^while.header89;
^while.body52:
    i32 %1621 = srem i32 %1517, i32 2;
    i1 %1622 = scmp neq i32 %1621, i32 0;
    cbr i1 %1622(prob = 0.5), ^b188, ^b197;
^while.body53:
    i32 %1623 = srem i32 %1528, i32 2;
    i1 %1624 = scmp neq i32 %1623, i32 0;
    cbr i1 %1624(prob = 0.5), ^b189, ^b198;
^b184:
    i1 %1625 = phi [^b171, i1 %1570] [^while.body47, i1 false];
    cbr i1 %1625(prob = 0.5), ^if.then76, ^b193;
^while.body54:
    i32 %1626 = srem i32 %1544, i32 2;
    i1 %1627 = scmp neq i32 %1626, i32 0;
    cbr i1 %1627(prob = 0.5), ^b190, ^b199;
^b185:
    i1 %1628 = phi [^b173, i1 %1576] [^while.body48, i1 false];
    cbr i1 %1628(prob = 0.5), ^if.then77, ^b194;
^if.else27:
    i32 %1629 = srem i32 %1398, i32 2;
    i1 %1630 = scmp neq i32 %1629, i32 0;
    cbr i1 %1630(prob = 0.5), ^if.then75, ^b191;
^while.header86:
    i32 %1631 = phi [^b212, i32 %1631] [^b162, i32 %1380];
    i32 %1632 = phi [^b212, i32 %1632] [^b162, i32 %1381];
    i32 %1633 = phi [^b212, i32 %1633] [^b162, i32 %1382];
    i32 %1634 = phi [^b212, i32 %1634] [^b162, i32 %1383];
    i32 %1635 = phi [^b212, i32 %1635] [^b162, i32 %1384];
    i32 %1636 = phi [^b212, i32 %1636] [^b162, i32 %1385];
    i32 %1637 = phi [^b212, i32 %1784] [^b162, i32 65535];
    i32 %1638 = phi [^b212, i32 %1783] [^b162, i32 %1479];
    i32 %1639 = phi [^b212, i32 %1785] [^b162, i32 0];
    i32 %1640 = phi [^b212, i32 %1782] [^b162, i32 0];
    i1 %1641 = scmp lt i32 %1639, i32 16;
    cbr i1 %1641(prob = 0.97), ^while.body56, ^while.header64;
^while.body55:
    i32 %1642 = srem i32 %1556, i32 2;
    i1 %1643 = scmp neq i32 %1642, i32 0;
    cbr i1 %1643(prob = 0.5), ^b192, ^b200;
^b186:
    i1 %1644 = phi [^while.body50, i1 false] [^b176, i1 %1592];
    cbr i1 %1644(prob = 0.5), ^if.then78, ^b195;
^b187:
    i1 %1645 = phi [^while.body51, i1 false] [^b177, i1 %1594];
    cbr i1 %1645(prob = 0.5), ^if.then79, ^b196;
^while.header87:
    i32 %1646 = phi [^b213, i32 %1646] [^b165, i32 %1405];
    i32 %1647 = phi [^b213, i32 %1647] [^b165, i32 %1406];
    i32 %1648 = phi [^b213, i32 %1648] [^b165, i32 %1407];
    i32 %1649 = phi [^b213, i32 %1649] [^b165, i32 %1408];
    i32 %1650 = phi [^b213, i32 %1650] [^b165, i32 %1409];
    i32 %1651 = phi [^b213, i32 %1651] [^b165, i32 %1410];
    i32 %1652 = phi [^b213, i32 %1788] [^b165, i32 65535];
    i32 %1653 = phi [^b213, i32 %1787] [^b165, i32 %1492];
    i32 %1654 = phi [^b213, i32 %1789] [^b165, i32 0];
    i32 %1655 = phi [^b213, i32 %1786] [^b165, i32 0];
    i1 %1656 = scmp lt i32 %1654, i32 16;
    cbr i1 %1656(prob = 0.97), ^while.body57, ^while.header65;
^while.header88:
    i32 %1657 = phi [^b214, i32 %1657] [^b166, i32 %1416];
    i32 %1658 = phi [^b214, i32 %1658] [^b166, i32 %1417];
    i32 %1659 = phi [^b214, i32 %1659] [^b166, i32 %1418];
    i32 %1660 = phi [^b214, i32 %1660] [^b166, i32 %1419];
    i32 %1661 = phi [^b214, i32 %1661] [^b166, i32 %1420];
    i32 %1662 = phi [^b214, i32 %1662] [^b166, i32 %1421];
    i32 %1663 = phi [^b214, i32 %1792] [^b166, i32 65535];
    i32 %1664 = phi [^b214, i32 %1791] [^b166, i32 %1493];
    i32 %1665 = phi [^b214, i32 %1793] [^b166, i32 0];
    i32 %1666 = phi [^b214, i32 %1790] [^b166, i32 0];
    i1 %1667 = scmp lt i32 %1665, i32 16;
    cbr i1 %1667(prob = 0.97), ^while.body58, ^while.header66;
^if.then75:
    i32* %1668 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1400];
    i32 %1669 = load i32* %1668;
    i32 %1670 = add i32 %1669, i32 %1401;
    ubr ^b191;
^b188:
    i32 %1671 = srem i32 %1516, i32 2;
    i1 %1672 = scmp neq i32 %1671, i32 0;
    ubr ^b197;
^b189:
    i32 %1673 = srem i32 %1527, i32 2;
    i1 %1674 = scmp neq i32 %1673, i32 0;
    ubr ^b198;
^if.then76:
    i32* %1675 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1373];
    i32 %1676 = load i32* %1675;
    i32 %1677 = add i32 %1676, i32 %1374;
    ubr ^b193;
^b190:
    i32 %1678 = srem i32 %1543, i32 2;
    i1 %1679 = scmp neq i32 %1678, i32 0;
    ubr ^b199;
^if.then77:
    i32* %1680 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1388];
    i32 %1681 = load i32* %1680;
    i32 %1682 = add i32 %1681, i32 %1389;
    ubr ^b194;
^b191:
    i32 %1683 = phi [^if.then75, i32 %1670] [^if.else27, i32 %1401] [^if.then74, i32 %1401];
    i32 %1684 = sdiv i32 %1399, i32 2;
    i32 %1685 = sdiv i32 %1398, i32 2;
    i32 %1686 = add i32 %1400, i32 1;
    ubr ^while.header79;
^b192:
    i32 %1687 = srem i32 %1555, i32 2;
    i1 %1688 = scmp neq i32 %1687, i32 0;
    ubr ^b200;
^if.then78:
    i32* %1689 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1413];
    i32 %1690 = load i32* %1689;
    i32 %1691 = add i32 %1690, i32 %1414;
    ubr ^b195;
^if.then79:
    i32* %1692 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1424];
    i32 %1693 = load i32* %1692;
    i32 %1694 = add i32 %1693, i32 %1425;
    ubr ^b196;
^b193:
    i32 %1695 = phi [^if.then76, i32 %1677] [^b184, i32 %1374];
    i32 %1696 = sdiv i32 %1372, i32 2;
    i32 %1697 = sdiv i32 %1371, i32 2;
    i32 %1698 = add i32 %1373, i32 1;
    ubr ^while.header77;
^b194:
    i32 %1699 = phi [^if.then77, i32 %1682] [^b185, i32 %1389];
    i32 %1700 = sdiv i32 %1387, i32 2;
    i32 %1701 = sdiv i32 %1386, i32 2;
    i32 %1702 = add i32 %1388, i32 1;
    ubr ^while.header78;
^b195:
    i32 %1703 = phi [^if.then78, i32 %1691] [^b186, i32 %1414];
    i32 %1704 = sdiv i32 %1412, i32 2;
    i32 %1705 = sdiv i32 %1411, i32 2;
    i32 %1706 = add i32 %1413, i32 1;
    ubr ^while.header80;
^b196:
    i32 %1707 = phi [^if.then79, i32 %1694] [^b187, i32 %1425];
    i32 %1708 = sdiv i32 %1423, i32 2;
    i32 %1709 = sdiv i32 %1422, i32 2;
    i32 %1710 = add i32 %1424, i32 1;
    ubr ^while.header81;
^while.body56:
    i32 %1711 = srem i32 %1638, i32 2;
    i1 %1712 = scmp neq i32 %1711, i32 0;
    cbr i1 %1712(prob = 0.5), ^b201, ^b208;
^b197:
    i1 %1713 = phi [^while.body52, i1 false] [^b188, i1 %1672];
    cbr i1 %1713(prob = 0.5), ^if.then80, ^b204;
^b198:
    i1 %1714 = phi [^b189, i1 %1674] [^while.body53, i1 false];
    cbr i1 %1714(prob = 0.5), ^if.then81, ^b205;
^while.body57:
    i32 %1715 = srem i32 %1653, i32 2;
    i1 %1716 = scmp neq i32 %1715, i32 0;
    cbr i1 %1716(prob = 0.5), ^b202, ^b209;
^while.body58:
    i32 %1717 = srem i32 %1664, i32 2;
    i1 %1718 = scmp neq i32 %1717, i32 0;
    cbr i1 %1718(prob = 0.5), ^b203, ^b210;
^b199:
    i1 %1719 = phi [^while.body54, i1 false] [^b190, i1 %1679];
    cbr i1 %1719(prob = 0.5), ^if.then82, ^b206;
^b200:
    i1 %1720 = phi [^while.body55, i1 false] [^b192, i1 %1688];
    cbr i1 %1720(prob = 0.5), ^if.then83, ^b207;
^while.header89:
    i32 %1721 = phi [^b216, i32 %1721] [^b183, i32 %1549];
    i32 %1722 = phi [^b216, i32 %1722] [^b183, i32 %1550];
    i32 %1723 = phi [^b216, i32 %1723] [^b183, i32 %1551];
    i32 %1724 = phi [^b216, i32 %1724] [^b183, i32 %1552];
    i32 %1725 = phi [^b216, i32 %1725] [^b183, i32 %1553];
    i32 %1726 = phi [^b216, i32 %1726] [^b183, i32 %1554];
    i32 %1727 = phi [^b216, i32 %1800] [^b183, i32 65535];
    i32 %1728 = phi [^b216, i32 %1799] [^b183, i32 %1620];
    i32 %1729 = phi [^b216, i32 %1801] [^b183, i32 0];
    i32 %1730 = phi [^b216, i32 %1798] [^b183, i32 0];
    i1 %1731 = scmp lt i32 %1729, i32 16;
    cbr i1 %1731(prob = 0.97), ^while.body59, ^while.header75;
^b201:
    i32 %1732 = srem i32 %1637, i32 2;
    i1 %1733 = scmp neq i32 %1732, i32 0;
    ubr ^b208;
^if.then80:
    i32* %1734 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1518];
    i32 %1735 = load i32* %1734;
    i32 %1736 = add i32 %1735, i32 %1519;
    ubr ^b204;
^if.then81:
    i32* %1737 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1529];
    i32 %1738 = load i32* %1737;
    i32 %1739 = add i32 %1738, i32 %1530;
    ubr ^b205;
^b202:
    i32 %1740 = srem i32 %1652, i32 2;
    i1 %1741 = scmp neq i32 %1740, i32 0;
    ubr ^b209;
^b203:
    i32 %1742 = srem i32 %1663, i32 2;
    i1 %1743 = scmp neq i32 %1742, i32 0;
    ubr ^b210;
^if.then82:
    i32* %1744 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1545];
    i32 %1745 = load i32* %1744;
    i32 %1746 = add i32 %1745, i32 %1546;
    ubr ^b206;
^if.then83:
    i32* %1747 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1557];
    i32 %1748 = load i32* %1747;
    i32 %1749 = add i32 %1748, i32 %1558;
    ubr ^b207;
^b204:
    i32 %1750 = phi [^if.then80, i32 %1736] [^b197, i32 %1519];
    i32 %1751 = sdiv i32 %1517, i32 2;
    i32 %1752 = sdiv i32 %1516, i32 2;
    i32 %1753 = add i32 %1518, i32 1;
    ubr ^while.header82;
^b205:
    i32 %1754 = phi [^if.then81, i32 %1739] [^b198, i32 %1530];
    i32 %1755 = sdiv i32 %1528, i32 2;
    i32 %1756 = sdiv i32 %1527, i32 2;
    i32 %1757 = add i32 %1529, i32 1;
    ubr ^while.header83;
^b206:
    i32 %1758 = phi [^if.then82, i32 %1746] [^b199, i32 %1546];
    i32 %1759 = sdiv i32 %1544, i32 2;
    i32 %1760 = sdiv i32 %1543, i32 2;
    i32 %1761 = add i32 %1545, i32 1;
    ubr ^while.header84;
^b207:
    i32 %1762 = phi [^if.then83, i32 %1749] [^b200, i32 %1558];
    i32 %1763 = sdiv i32 %1556, i32 2;
    i32 %1764 = sdiv i32 %1555, i32 2;
    i32 %1765 = add i32 %1557, i32 1;
    ubr ^while.header85;
^b208:
    i1 %1766 = phi [^while.body56, i1 false] [^b201, i1 %1733];
    cbr i1 %1766(prob = 0.5), ^if.then84, ^b212;
^while.body59:
    i32 %1767 = srem i32 %1728, i32 2;
    i1 %1768 = scmp neq i32 %1767, i32 0;
    cbr i1 %1768(prob = 0.5), ^b211, ^b215;
^b209:
    i1 %1769 = phi [^while.body57, i1 false] [^b202, i1 %1741];
    cbr i1 %1769(prob = 0.5), ^if.then85, ^b213;
^b210:
    i1 %1770 = phi [^while.body58, i1 false] [^b203, i1 %1743];
    cbr i1 %1770(prob = 0.5), ^if.then86, ^b214;
^if.then84:
    i32* %1771 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1639];
    i32 %1772 = load i32* %1771;
    i32 %1773 = add i32 %1772, i32 %1640;
    ubr ^b212;
^b211:
    i32 %1774 = srem i32 %1727, i32 2;
    i1 %1775 = scmp neq i32 %1774, i32 0;
    ubr ^b215;
^if.then85:
    i32* %1776 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1654];
    i32 %1777 = load i32* %1776;
    i32 %1778 = add i32 %1777, i32 %1655;
    ubr ^b213;
^if.then86:
    i32* %1779 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1665];
    i32 %1780 = load i32* %1779;
    i32 %1781 = add i32 %1780, i32 %1666;
    ubr ^b214;
^b212:
    i32 %1782 = phi [^if.then84, i32 %1773] [^b208, i32 %1640];
    i32 %1783 = sdiv i32 %1638, i32 2;
    i32 %1784 = sdiv i32 %1637, i32 2;
    i32 %1785 = add i32 %1639, i32 1;
    ubr ^while.header86;
^b213:
    i32 %1786 = phi [^if.then85, i32 %1778] [^b209, i32 %1655];
    i32 %1787 = sdiv i32 %1653, i32 2;
    i32 %1788 = sdiv i32 %1652, i32 2;
    i32 %1789 = add i32 %1654, i32 1;
    ubr ^while.header87;
^b214:
    i32 %1790 = phi [^if.then86, i32 %1781] [^b210, i32 %1666];
    i32 %1791 = sdiv i32 %1664, i32 2;
    i32 %1792 = sdiv i32 %1663, i32 2;
    i32 %1793 = add i32 %1665, i32 1;
    ubr ^while.header88;
^b215:
    i1 %1794 = phi [^b211, i1 %1775] [^while.body59, i1 false];
    cbr i1 %1794(prob = 0.5), ^if.then87, ^b216;
^if.then87:
    i32* %1795 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1729];
    i32 %1796 = load i32* %1795;
    i32 %1797 = add i32 %1796, i32 %1730;
    ubr ^b216;
^b216:
    i32 %1798 = phi [^if.then87, i32 %1797] [^b215, i32 %1730];
    i32 %1799 = sdiv i32 %1728, i32 2;
    i32 %1800 = sdiv i32 %1727, i32 2;
    i32 %1801 = add i32 %1729, i32 1;
    ubr ^while.header89;
}
