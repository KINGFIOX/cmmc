internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry:
    [16 * i32]* %SHIFT_TABLE = alloc [16 * i32];
    i32* %0 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 0];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 1];
    store i32* %1 with i32 2;
    i32* %2 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 2];
    store i32* %2 with i32 4;
    i32* %3 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 3];
    store i32* %3 with i32 8;
    i32* %4 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 4];
    store i32* %4 with i32 16;
    i32* %5 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 5];
    store i32* %5 with i32 32;
    i32* %6 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 6];
    store i32* %6 with i32 64;
    i32* %7 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 7];
    store i32* %7 with i32 128;
    i32* %8 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 8];
    store i32* %8 with i32 256;
    i32* %9 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 9];
    store i32* %9 with i32 512;
    i32* %10 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 10];
    store i32* %10 with i32 1024;
    i32* %11 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 11];
    store i32* %11 with i32 2048;
    i32* %12 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 12];
    store i32* %12 with i32 4096;
    i32* %13 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 13];
    store i32* %13 with i32 8192;
    i32* %14 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 14];
    store i32* %14 with i32 16384;
    i32* %15 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i64 15];
    store i32* %15 with i32 32768;
    ubr ^while.header;
^while.header:
    i32 %16 = phi [^b20, i32 %79] [^entry, i32 1];
    i32 %17 = phi [^b20, i32 %182] [^entry, i32 0];
    i32 %18 = phi [^b20, i32 %76] [^entry, i32 2];
    i1 %19 = scmp gt i32 %17, i32 0;
    cbr i1 %19(prob = 0.97), ^while.header1, ^b;
^b:
    call (i32) -> void @putint(i32 %16);
    call (i32) -> void @putch(i32 10);
    ubr ^while.header2;
^while.header1:
    i32 %20 = phi [^while.header, i32 %16] [^b6, i32 %20];
    i32 %21 = phi [^while.header, i32 %17] [^b6, i32 %21];
    i32 %22 = phi [^while.header, i32 %18] [^b6, i32 %22];
    i32 %23 = phi [^while.header, i32 1] [^b6, i32 %60];
    i32 %24 = phi [^while.header, i32 %17] [^b6, i32 %59];
    i32 %25 = phi [^while.header, i32 0] [^b6, i32 %61];
    i32 %26 = phi [^while.header, i32 0] [^b6, i32 %58];
    i1 %27 = scmp lt i32 %25, i32 16;
    cbr i1 %27(prob = 0.97), ^while.body, ^b1;
^while.body:
    i32 %28 = srem i32 %24, i32 2;
    i1 %29 = scmp neq i32 %28, i32 0;
    cbr i1 %29(prob = 0.5), ^b2, ^b5;
^while.header2:
    i32 %30 = phi [^b41, i32 %167] [^b, i32 1];
    i32 %31 = phi [^b41, i32 %349] [^b, i32 1];
    i32 %32 = phi [^b41, i32 %164] [^b, i32 2];
    i1 %33 = scmp gt i32 %31, i32 0;
    cbr i1 %33(prob = 0.97), ^while.header3, ^b3;
^b1:
    i1 %34 = scmp neq i32 %26, i32 0;
    cbr i1 %34(prob = 0.5), ^while.header4, ^b4;
^b2:
    i32 %35 = srem i32 %23, i32 2;
    i1 %36 = scmp neq i32 %35, i32 0;
    ubr ^b5;
^b3:
    call (i32) -> void @putint(i32 %30);
    call (i32) -> void @putch(i32 10);
    ubr ^while.header6;
^b4:
    i32 %37 = phi [^while.header4, i32 %49] [^b1, i32 %20];
    i32 %38 = phi [^while.header4, i32 %52] [^b1, i32 %21];
    i32 %39 = phi [^while.header4, i32 %53] [^b1, i32 %22];
    ubr ^while.header7;
^b5:
    i1 %40 = phi [^b2, i1 %36] [^while.body, i1 false];
    cbr i1 %40(prob = 0.5), ^if.then, ^b6;
^while.header3:
    i32 %41 = phi [^while.header2, i32 %30] [^b15, i32 %41];
    i32 %42 = phi [^while.header2, i32 %31] [^b15, i32 %42];
    i32 %43 = phi [^while.header2, i32 %32] [^b15, i32 %43];
    i32 %44 = phi [^while.header2, i32 1] [^b15, i32 %126];
    i32 %45 = phi [^while.header2, i32 %31] [^b15, i32 %125];
    i32 %46 = phi [^while.header2, i32 0] [^b15, i32 %127];
    i32 %47 = phi [^while.header2, i32 0] [^b15, i32 %124];
    i1 %48 = scmp lt i32 %46, i32 16;
    cbr i1 %48(prob = 0.97), ^while.body1, ^b7;
^while.header4:
    i32 %49 = phi [^b1, i32 0] [^b52, i32 %221];
    i32 %50 = phi [^b1, i32 %22] [^b52, i32 %484];
    i32 %51 = phi [^b1, i32 %20] [^b52, i32 %220];
    i32 %52 = phi [^b1, i32 %21] [^b52, i32 %223];
    i32 %53 = phi [^b1, i32 %22] [^b52, i32 %224];
    i1 %54 = scmp neq i32 %50, i32 0;
    cbr i1 %54(prob = 0.97), ^while.header5, ^b4;
^if.then:
    i32* %55 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %25];
    i32 %56 = load i32* %55;
    i32 %57 = add i32 %56, i32 %26;
    ubr ^b6;
^b6:
    i32 %58 = phi [^b5, i32 %26] [^if.then, i32 %57];
    i32 %59 = sdiv i32 %24, i32 2;
    i32 %60 = sdiv i32 %23, i32 2;
    i32 %61 = add i32 %25, i32 1;
    ubr ^while.header1;
^while.body1:
    i32 %62 = srem i32 %45, i32 2;
    i1 %63 = scmp neq i32 %62, i32 0;
    cbr i1 %63(prob = 0.5), ^b8, ^b10;
^while.header5:
    i32 %64 = phi [^while.header4, i32 %49] [^b21, i32 %64];
    i32 %65 = phi [^while.header4, i32 %50] [^b21, i32 %65];
    i32 %66 = phi [^while.header4, i32 %51] [^b21, i32 %66];
    i32 %67 = phi [^while.header4, i32 %52] [^b21, i32 %67];
    i32 %68 = phi [^while.header4, i32 %53] [^b21, i32 %68];
    i32 %69 = phi [^while.header4, i32 1] [^b21, i32 %185];
    i32 %70 = phi [^while.header4, i32 %50] [^b21, i32 %184];
    i32 %71 = phi [^while.header4, i32 0] [^b21, i32 %186];
    i32 %72 = phi [^while.header4, i32 0] [^b21, i32 %183];
    i1 %73 = scmp lt i32 %71, i32 16;
    cbr i1 %73(prob = 0.97), ^while.body2, ^b11;
^while.header6:
    i32 %74 = phi [^b14, i32 %121] [^b3, i32 2];
    i1 %75 = scmp lt i32 %74, i32 16;
    cbr i1 %75(prob = 0.97), ^while.header8, ^while.header11;
^while.header7:
    i32 %76 = phi [^b66, i32 %331] [^b4, i32 0];
    i32 %77 = phi [^b66, i32 %635] [^b4, i32 %39];
    i32 %78 = phi [^b66, i32 %330] [^b4, i32 %39];
    i32 %79 = phi [^b66, i32 %333] [^b4, i32 %37];
    i32 %80 = phi [^b66, i32 %334] [^b4, i32 %38];
    i1 %81 = scmp neq i32 %77, i32 0;
    cbr i1 %81(prob = 0.97), ^while.header9, ^b12;
^b7:
    i1 %82 = scmp neq i32 %47, i32 0;
    cbr i1 %82(prob = 0.5), ^while.header10, ^b9;
^b8:
    i32 %83 = srem i32 %44, i32 2;
    i1 %84 = scmp neq i32 %83, i32 0;
    ubr ^b10;
^b9:
    i32 %85 = phi [^while.header10, i32 %106] [^b7, i32 %41];
    i32 %86 = phi [^while.header10, i32 %109] [^b7, i32 %42];
    i32 %87 = phi [^while.header10, i32 %110] [^b7, i32 %43];
    ubr ^while.header15;
^while.body2:
    i32 %88 = srem i32 %70, i32 2;
    i1 %89 = scmp neq i32 %88, i32 0;
    cbr i1 %89(prob = 0.5), ^b13, ^b17;
^b10:
    i1 %90 = phi [^while.body1, i1 false] [^b8, i1 %84];
    cbr i1 %90(prob = 0.5), ^if.then1, ^b15;
^while.header8:
    i32 %91 = phi [^while.header6, i32 1] [^b83, i32 %411];
    i32 %92 = phi [^while.header6, i32 %74] [^b83, i32 %782];
    i32 %93 = phi [^while.header6, i32 2] [^b83, i32 %408];
    i32 %94 = phi [^while.header6, i32 %74] [^b83, i32 %413];
    i1 %95 = scmp gt i32 %92, i32 0;
    cbr i1 %95(prob = 0.97), ^while.header12, ^b14;
^while.header9:
    i32 %96 = phi [^while.header7, i32 %76] [^b31, i32 %96];
    i32 %97 = phi [^while.header7, i32 %77] [^b31, i32 %97];
    i32 %98 = phi [^while.header7, i32 %78] [^b31, i32 %98];
    i32 %99 = phi [^while.header7, i32 %79] [^b31, i32 %99];
    i32 %100 = phi [^while.header7, i32 %80] [^b31, i32 %100];
    i32 %101 = phi [^while.header7, i32 1] [^b31, i32 %265];
    i32 %102 = phi [^while.header7, i32 %77] [^b31, i32 %264];
    i32 %103 = phi [^while.header7, i32 0] [^b31, i32 %266];
    i32 %104 = phi [^while.header7, i32 0] [^b31, i32 %263];
    i1 %105 = scmp lt i32 %103, i32 16;
    cbr i1 %105(prob = 0.97), ^while.body3, ^b18;
^while.header10:
    i32 %106 = phi [^b7, i32 0] [^b85, i32 %428];
    i32 %107 = phi [^b7, i32 %43] [^b85, i32 %787];
    i32 %108 = phi [^b7, i32 %41] [^b85, i32 %427];
    i32 %109 = phi [^b7, i32 %42] [^b85, i32 %430];
    i32 %110 = phi [^b7, i32 %43] [^b85, i32 %431];
    i1 %111 = scmp neq i32 %107, i32 0;
    cbr i1 %111(prob = 0.97), ^while.header13, ^b9;
^b11:
    i1 %112 = scmp neq i32 %72, i32 0;
    cbr i1 %112(prob = 0.5), ^while.header14, ^b16;
^b12:
    i1 %113 = scmp gt i32 %80, i32 32767;
    cbr i1 %113(prob = 0.5), ^if.then2, ^if.else;
^while.header11:
    i32 %114 = phi [^while.header6, i32 0] [^b34, i32 %279];
    i1 %115 = scmp lt i32 %114, i32 16;
    cbr i1 %115(prob = 0.97), ^while.header16, ^entry1;
^b13:
    i32 %116 = srem i32 %69, i32 2;
    i1 %117 = scmp neq i32 %116, i32 0;
    ubr ^b17;
^if.then1:
    i32* %118 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %46];
    i32 %119 = load i32* %118;
    i32 %120 = add i32 %119, i32 %47;
    ubr ^b15;
^b14:
    call (i32) -> void @putint(i32 %91);
    call (i32) -> void @putch(i32 10);
    i32 %121 = add i32 %94, i32 1;
    ubr ^while.header6;
^if.then2:
    i32 %122 = sdiv i32 %80, i32 2;
    i32 %123 = add i32 %122, i32 32768;
    ubr ^b20;
^b15:
    i32 %124 = phi [^b10, i32 %47] [^if.then1, i32 %120];
    i32 %125 = sdiv i32 %45, i32 2;
    i32 %126 = sdiv i32 %44, i32 2;
    i32 %127 = add i32 %46, i32 1;
    ubr ^while.header3;
^b16:
    i32 %128 = phi [^while.header14, i32 %158] [^b11, i32 %64];
    i32 %129 = phi [^while.header14, i32 %159] [^b11, i32 %65];
    i32 %130 = phi [^while.header14, i32 %160] [^b11, i32 %66];
    i32 %131 = phi [^while.header14, i32 %161] [^b11, i32 %67];
    i32 %132 = phi [^while.header14, i32 %162] [^b11, i32 %68];
    ubr ^while.header19;
^if.else:
    i32 %133 = load i32* %1;
    i32 %134 = sdiv i32 %80, i32 %133;
    ubr ^b20;
^while.body3:
    i32 %135 = srem i32 %102, i32 2;
    i1 %136 = scmp neq i32 %135, i32 0;
    cbr i1 %136(prob = 0.5), ^b19, ^b23;
^while.header12:
    i32 %137 = phi [^while.header8, i32 %91] [^b42, i32 %137];
    i32 %138 = phi [^while.header8, i32 %92] [^b42, i32 %138];
    i32 %139 = phi [^while.header8, i32 %93] [^b42, i32 %139];
    i32 %140 = phi [^while.header8, i32 %94] [^b42, i32 %140];
    i32 %141 = phi [^while.header8, i32 1] [^b42, i32 %352];
    i32 %142 = phi [^while.header8, i32 %92] [^b42, i32 %351];
    i32 %143 = phi [^while.header8, i32 0] [^b42, i32 %353];
    i32 %144 = phi [^while.header8, i32 0] [^b42, i32 %350];
    i1 %145 = scmp lt i32 %143, i32 16;
    cbr i1 %145(prob = 0.97), ^while.body4, ^b24;
^b17:
    i1 %146 = phi [^while.body2, i1 false] [^b13, i1 %117];
    cbr i1 %146(prob = 0.5), ^if.then3, ^b21;
^while.header13:
    i32 %147 = phi [^while.header10, i32 %106] [^b43, i32 %147];
    i32 %148 = phi [^while.header10, i32 %107] [^b43, i32 %148];
    i32 %149 = phi [^while.header10, i32 %108] [^b43, i32 %149];
    i32 %150 = phi [^while.header10, i32 %109] [^b43, i32 %150];
    i32 %151 = phi [^while.header10, i32 %110] [^b43, i32 %151];
    i32 %152 = phi [^while.header10, i32 1] [^b43, i32 %356];
    i32 %153 = phi [^while.header10, i32 %107] [^b43, i32 %355];
    i32 %154 = phi [^while.header10, i32 0] [^b43, i32 %357];
    i32 %155 = phi [^while.header10, i32 0] [^b43, i32 %354];
    i1 %156 = scmp lt i32 %154, i32 16;
    cbr i1 %156(prob = 0.97), ^while.body5, ^b25;
^while.header14:
    i32 %157 = phi [^while.header42, i32 %584] [^b11, i32 %66];
    i32 %158 = phi [^while.header42, i32 %576] [^b11, i32 %64];
    i32 %159 = phi [^while.header42, i32 %577] [^b11, i32 %65];
    i32 %160 = phi [^while.header42, i32 %578] [^b11, i32 %66];
    i32 %161 = phi [^while.header42, i32 %579] [^b11, i32 %67];
    i32 %162 = phi [^while.header42, i32 %580] [^b11, i32 %68];
    i1 %163 = scmp neq i32 %157, i32 0;
    cbr i1 %163(prob = 0.97), ^while.header17, ^b16;
^while.header15:
    i32 %164 = phi [^b107, i32 %588] [^b9, i32 0];
    i32 %165 = phi [^b107, i32 %964] [^b9, i32 %87];
    i32 %166 = phi [^b107, i32 %587] [^b9, i32 %87];
    i32 %167 = phi [^b107, i32 %590] [^b9, i32 %85];
    i32 %168 = phi [^b107, i32 %591] [^b9, i32 %86];
    i1 %169 = scmp neq i32 %165, i32 0;
    cbr i1 %169(prob = 0.97), ^while.header18, ^b26;
^b18:
    i1 %170 = scmp neq i32 %104, i32 0;
    cbr i1 %170(prob = 0.5), ^while.header20, ^b22;
^while.header16:
    i32 %171 = phi [^while.header11, i32 1] [^b109, i32 %598];
    i32 %172 = phi [^while.header11, i32 %114] [^b109, i32 %969];
    i32 %173 = phi [^while.header11, i32 2] [^b109, i32 %595];
    i32 %174 = phi [^while.header11, i32 %114] [^b109, i32 %600];
    i1 %175 = scmp gt i32 %172, i32 0;
    cbr i1 %175(prob = 0.97), ^while.header21, ^b27;
^entry1:
    i32 %176 = phi [^while.header11, i32 0] [^b27, i32 1];
    ret i32 %176;
^b19:
    i32 %177 = srem i32 %101, i32 2;
    i1 %178 = scmp neq i32 %177, i32 0;
    ubr ^b23;
^if.then3:
    i32* %179 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %71];
    i32 %180 = load i32* %179;
    i32 %181 = add i32 %180, i32 %72;
    ubr ^b21;
^b20:
    i32 %182 = phi [^if.else, i32 %134] [^if.then2, i32 %123];
    ubr ^while.header;
^b21:
    i32 %183 = phi [^b17, i32 %72] [^if.then3, i32 %181];
    i32 %184 = sdiv i32 %70, i32 2;
    i32 %185 = sdiv i32 %69, i32 2;
    i32 %186 = add i32 %71, i32 1;
    ubr ^while.header5;
^b22:
    i32 %187 = phi [^while.header20, i32 %227] [^b18, i32 %96];
    i32 %188 = phi [^while.header20, i32 %228] [^b18, i32 %97];
    i32 %189 = phi [^while.header20, i32 %229] [^b18, i32 %98];
    i32 %190 = phi [^while.header20, i32 %230] [^b18, i32 %99];
    i32 %191 = phi [^while.header20, i32 %231] [^b18, i32 %100];
    ubr ^while.header27;
^while.body4:
    i32 %192 = srem i32 %142, i32 2;
    i1 %193 = scmp neq i32 %192, i32 0;
    cbr i1 %193(prob = 0.5), ^b28, ^b33;
^while.body5:
    i32 %194 = srem i32 %153, i32 2;
    i1 %195 = scmp neq i32 %194, i32 0;
    cbr i1 %195(prob = 0.5), ^b29, ^b35;
^while.header17:
    i32 %196 = phi [^while.header14, i32 %157] [^b50, i32 %196];
    i32 %197 = phi [^while.header14, i32 %158] [^b50, i32 %197];
    i32 %198 = phi [^while.header14, i32 %159] [^b50, i32 %198];
    i32 %199 = phi [^while.header14, i32 %160] [^b50, i32 %199];
    i32 %200 = phi [^while.header14, i32 %161] [^b50, i32 %200];
    i32 %201 = phi [^while.header14, i32 %162] [^b50, i32 %201];
    i32 %202 = phi [^while.header14, i32 %157] [^b50, i32 %474];
    i32 %203 = phi [^while.header14, i32 %158] [^b50, i32 %473];
    i32 %204 = phi [^while.header14, i32 0] [^b50, i32 %475];
    i32 %205 = phi [^while.header14, i32 0] [^b50, i32 %472];
    i1 %206 = scmp lt i32 %204, i32 16;
    cbr i1 %206(prob = 0.97), ^while.body6, ^while.header26;
^b23:
    i1 %207 = phi [^b19, i1 %178] [^while.body3, i1 false];
    cbr i1 %207(prob = 0.5), ^if.then4, ^b31;
^while.header18:
    i32 %208 = phi [^while.header15, i32 %164] [^b53, i32 %208];
    i32 %209 = phi [^while.header15, i32 %165] [^b53, i32 %209];
    i32 %210 = phi [^while.header15, i32 %166] [^b53, i32 %210];
    i32 %211 = phi [^while.header15, i32 %167] [^b53, i32 %211];
    i32 %212 = phi [^while.header15, i32 %168] [^b53, i32 %212];
    i32 %213 = phi [^while.header15, i32 1] [^b53, i32 %487];
    i32 %214 = phi [^while.header15, i32 %165] [^b53, i32 %486];
    i32 %215 = phi [^while.header15, i32 0] [^b53, i32 %488];
    i32 %216 = phi [^while.header15, i32 0] [^b53, i32 %485];
    i1 %217 = scmp lt i32 %215, i32 16;
    cbr i1 %217(prob = 0.97), ^while.body7, ^b36;
^b24:
    i1 %218 = scmp neq i32 %144, i32 0;
    cbr i1 %218(prob = 0.5), ^while.header22, ^b30;
^while.header19:
    i32 %219 = phi [^while.header51, i32 %747] [^b16, i32 %130];
    i32 %220 = phi [^while.header51, i32 %739] [^b16, i32 %130];
    i32 %221 = phi [^while.header51, i32 %740] [^b16, i32 %128];
    i32 %222 = phi [^while.header51, i32 %741] [^b16, i32 %129];
    i32 %223 = phi [^while.header51, i32 %742] [^b16, i32 %131];
    i32 %224 = phi [^while.header51, i32 %743] [^b16, i32 %132];
    i1 %225 = scmp neq i32 %219, i32 0;
    cbr i1 %225(prob = 0.97), ^while.header23, ^b37;
^while.header20:
    i32 %226 = phi [^while.header52, i32 %757] [^b18, i32 %98];
    i32 %227 = phi [^while.header52, i32 %749] [^b18, i32 %96];
    i32 %228 = phi [^while.header52, i32 %750] [^b18, i32 %97];
    i32 %229 = phi [^while.header52, i32 %751] [^b18, i32 %98];
    i32 %230 = phi [^while.header52, i32 %752] [^b18, i32 %99];
    i32 %231 = phi [^while.header52, i32 %753] [^b18, i32 %100];
    i1 %232 = scmp neq i32 %226, i32 0;
    cbr i1 %232(prob = 0.97), ^while.header24, ^b22;
^b25:
    i1 %233 = scmp neq i32 %155, i32 0;
    cbr i1 %233(prob = 0.5), ^while.header25, ^b32;
^while.header21:
    i32 %234 = phi [^b54, i32 %234] [^while.header16, i32 %171];
    i32 %235 = phi [^b54, i32 %235] [^while.header16, i32 %172];
    i32 %236 = phi [^b54, i32 %236] [^while.header16, i32 %173];
    i32 %237 = phi [^b54, i32 %237] [^while.header16, i32 %174];
    i32 %238 = phi [^b54, i32 %496] [^while.header16, i32 1];
    i32 %239 = phi [^b54, i32 %495] [^while.header16, i32 %172];
    i32 %240 = phi [^b54, i32 %497] [^while.header16, i32 0];
    i32 %241 = phi [^b54, i32 %494] [^while.header16, i32 0];
    i1 %242 = scmp lt i32 %240, i32 16;
    cbr i1 %242(prob = 0.97), ^while.body8, ^b38;
^b26:
    i1 %243 = scmp gt i32 %168, i32 32767;
    cbr i1 %243(prob = 0.5), ^if.then5, ^if.else1;
^b27:
    i32* %244 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %174];
    i32 %245 = load i32* %244;
    i1 %246 = scmp neq i32 %245, i32 %171;
    cbr i1 %246(prob = 0.5), ^entry1, ^b34;
^b28:
    i32 %247 = srem i32 %141, i32 2;
    i1 %248 = scmp neq i32 %247, i32 0;
    ubr ^b33;
^b29:
    i32 %249 = srem i32 %152, i32 2;
    i1 %250 = scmp neq i32 %249, i32 0;
    ubr ^b35;
^if.then4:
    i32* %251 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %103];
    i32 %252 = load i32* %251;
    i32 %253 = add i32 %252, i32 %104;
    ubr ^b31;
^if.then5:
    i32 %254 = load i32* %1;
    i32 %255 = sdiv i32 %168, i32 %254;
    i32 %256 = add i32 %255, i32 65536;
    i32 %257 = load i32* %15;
    i32 %258 = sub i32 %256, i32 %257;
    ubr ^b41;
^b30:
    i32 %259 = phi [^while.header22, i32 %281] [^b24, i32 %137];
    i32 %260 = phi [^while.header22, i32 %284] [^b24, i32 %138];
    i32 %261 = phi [^while.header22, i32 %285] [^b24, i32 %139];
    i32 %262 = phi [^while.header22, i32 %286] [^b24, i32 %140];
    ubr ^while.header30;
^b31:
    i32 %263 = phi [^b23, i32 %104] [^if.then4, i32 %253];
    i32 %264 = sdiv i32 %102, i32 2;
    i32 %265 = sdiv i32 %101, i32 2;
    i32 %266 = add i32 %103, i32 1;
    ubr ^while.header9;
^b32:
    i32 %267 = phi [^while.header25, i32 %313] [^b25, i32 %147];
    i32 %268 = phi [^while.header25, i32 %314] [^b25, i32 %148];
    i32 %269 = phi [^while.header25, i32 %315] [^b25, i32 %149];
    i32 %270 = phi [^while.header25, i32 %316] [^b25, i32 %150];
    i32 %271 = phi [^while.header25, i32 %317] [^b25, i32 %151];
    ubr ^while.header32;
^while.body6:
    i32 %272 = srem i32 %203, i32 2;
    i1 %273 = scmp neq i32 %272, i32 0;
    cbr i1 %273(prob = 0.5), ^if.then9, ^if.else3;
^if.else1:
    i32 %274 = load i32* %1;
    i32 %275 = sdiv i32 %168, i32 %274;
    ubr ^b41;
^while.body7:
    i32 %276 = srem i32 %214, i32 2;
    i1 %277 = scmp neq i32 %276, i32 0;
    cbr i1 %277(prob = 0.5), ^b39, ^b47;
^b33:
    i1 %278 = phi [^b28, i1 %248] [^while.body4, i1 false];
    cbr i1 %278(prob = 0.5), ^if.then6, ^b42;
^b34:
    i32 %279 = add i32 %174, i32 1;
    ubr ^while.header11;
^b35:
    i1 %280 = phi [^b29, i1 %250] [^while.body5, i1 false];
    cbr i1 %280(prob = 0.5), ^if.then7, ^b43;
^while.header22:
    i32 %281 = phi [^b24, i32 0] [^b139, i32 %861];
    i32 %282 = phi [^b24, i32 %139] [^b139, i32 %1278];
    i32 %283 = phi [^b24, i32 %137] [^b139, i32 %860];
    i32 %284 = phi [^b24, i32 %138] [^b139, i32 %863];
    i32 %285 = phi [^b24, i32 %139] [^b139, i32 %864];
    i32 %286 = phi [^b24, i32 %140] [^b139, i32 %865];
    i1 %287 = scmp neq i32 %282, i32 0;
    cbr i1 %287(prob = 0.97), ^while.header28, ^b30;
^while.body8:
    i32 %288 = srem i32 %239, i32 2;
    i1 %289 = scmp neq i32 %288, i32 0;
    cbr i1 %289(prob = 0.5), ^b40, ^b48;
^while.header23:
    i32 %290 = phi [^while.header19, i32 %219] [^b62, i32 %290];
    i32 %291 = phi [^while.header19, i32 %220] [^b62, i32 %291];
    i32 %292 = phi [^while.header19, i32 %221] [^b62, i32 %292];
    i32 %293 = phi [^while.header19, i32 %222] [^b62, i32 %293];
    i32 %294 = phi [^while.header19, i32 %223] [^b62, i32 %294];
    i32 %295 = phi [^while.header19, i32 %224] [^b62, i32 %295];
    i32 %296 = phi [^while.header19, i32 %219] [^b62, i32 %622];
    i32 %297 = phi [^while.header19, i32 %220] [^b62, i32 %621];
    i32 %298 = phi [^while.header19, i32 0] [^b62, i32 %623];
    i32 %299 = phi [^while.header19, i32 0] [^b62, i32 %620];
    i1 %300 = scmp lt i32 %298, i32 16;
    cbr i1 %300(prob = 0.97), ^while.body9, ^while.header35;
^while.header24:
    i32 %301 = phi [^while.header20, i32 %226] [^b63, i32 %301];
    i32 %302 = phi [^while.header20, i32 %227] [^b63, i32 %302];
    i32 %303 = phi [^while.header20, i32 %228] [^b63, i32 %303];
    i32 %304 = phi [^while.header20, i32 %229] [^b63, i32 %304];
    i32 %305 = phi [^while.header20, i32 %230] [^b63, i32 %305];
    i32 %306 = phi [^while.header20, i32 %231] [^b63, i32 %306];
    i32 %307 = phi [^while.header20, i32 %226] [^b63, i32 %626];
    i32 %308 = phi [^while.header20, i32 %227] [^b63, i32 %625];
    i32 %309 = phi [^while.header20, i32 0] [^b63, i32 %627];
    i32 %310 = phi [^while.header20, i32 0] [^b63, i32 %624];
    i1 %311 = scmp lt i32 %309, i32 16;
    cbr i1 %311(prob = 0.97), ^while.body10, ^while.header36;
^while.header25:
    i32 %312 = phi [^while.header57, i32 %904] [^b25, i32 %149];
    i32 %313 = phi [^while.header57, i32 %896] [^b25, i32 %147];
    i32 %314 = phi [^while.header57, i32 %897] [^b25, i32 %148];
    i32 %315 = phi [^while.header57, i32 %898] [^b25, i32 %149];
    i32 %316 = phi [^while.header57, i32 %899] [^b25, i32 %150];
    i32 %317 = phi [^while.header57, i32 %900] [^b25, i32 %151];
    i1 %318 = scmp neq i32 %312, i32 0;
    cbr i1 %318(prob = 0.97), ^while.header29, ^b32;
^while.header26:
    i32 %319 = phi [^while.header17, i32 %205] [^b68, i32 %319];
    i32 %320 = phi [^while.header17, i32 %198] [^b68, i32 %320];
    i32 %321 = phi [^while.header17, i32 %199] [^b68, i32 %321];
    i32 %322 = phi [^while.header17, i32 %200] [^b68, i32 %322];
    i32 %323 = phi [^while.header17, i32 %201] [^b68, i32 %323];
    i32 %324 = phi [^while.header17, i32 %196] [^b68, i32 %656];
    i32 %325 = phi [^while.header17, i32 %197] [^b68, i32 %655];
    i32 %326 = phi [^while.header17, i32 0] [^b68, i32 %657];
    i32 %327 = phi [^while.header17, i32 0] [^b68, i32 %654];
    i1 %328 = scmp lt i32 %326, i32 16;
    cbr i1 %328(prob = 0.97), ^while.body11, ^b44;
^while.header27:
    i32 %329 = phi [^while.header59, i32 %926] [^b22, i32 %189];
    i32 %330 = phi [^while.header59, i32 %918] [^b22, i32 %189];
    i32 %331 = phi [^while.header59, i32 %919] [^b22, i32 %187];
    i32 %332 = phi [^while.header59, i32 %920] [^b22, i32 %188];
    i32 %333 = phi [^while.header59, i32 %921] [^b22, i32 %190];
    i32 %334 = phi [^while.header59, i32 %922] [^b22, i32 %191];
    i1 %335 = scmp neq i32 %329, i32 0;
    cbr i1 %335(prob = 0.97), ^while.header31, ^b49;
^b36:
    i1 %336 = scmp neq i32 %216, i32 0;
    cbr i1 %336(prob = 0.5), ^while.header33, ^b45;
^b37:
    i1 %337 = scmp gt i32 %222, i32 32767;
    cbr i1 %337(prob = 0.5), ^if.then8, ^if.else2;
^b38:
    i1 %338 = scmp neq i32 %241, i32 0;
    cbr i1 %338(prob = 0.5), ^while.header34, ^b46;
^b39:
    i32 %339 = srem i32 %213, i32 2;
    i1 %340 = scmp neq i32 %339, i32 0;
    ubr ^b47;
^if.then6:
    i32* %341 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %143];
    i32 %342 = load i32* %341;
    i32 %343 = add i32 %342, i32 %144;
    ubr ^b42;
^if.then7:
    i32* %344 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %154];
    i32 %345 = load i32* %344;
    i32 %346 = add i32 %345, i32 %155;
    ubr ^b43;
^b40:
    i32 %347 = srem i32 %238, i32 2;
    i1 %348 = scmp neq i32 %347, i32 0;
    ubr ^b48;
^b41:
    i32 %349 = phi [^if.else1, i32 %275] [^if.then5, i32 %258];
    ubr ^while.header2;
^b42:
    i32 %350 = phi [^if.then6, i32 %343] [^b33, i32 %144];
    i32 %351 = sdiv i32 %142, i32 2;
    i32 %352 = sdiv i32 %141, i32 2;
    i32 %353 = add i32 %143, i32 1;
    ubr ^while.header12;
^b43:
    i32 %354 = phi [^if.then7, i32 %346] [^b35, i32 %155];
    i32 %355 = sdiv i32 %153, i32 2;
    i32 %356 = sdiv i32 %152, i32 2;
    i32 %357 = add i32 %154, i32 1;
    ubr ^while.header13;
^if.then8:
    i32 %358 = load i32* %1;
    i32 %359 = sdiv i32 %222, i32 %358;
    i32 %360 = add i32 %359, i32 65536;
    i32 %361 = load i32* %15;
    i32 %362 = sub i32 %360, i32 %361;
    ubr ^b52;
^if.then9:
    i32 %363 = srem i32 %202, i32 2;
    i1 %364 = scmp eq i32 %363, i32 0;
    cbr i1 %364(prob = 0.5), ^if.then10, ^b50;
^b44:
    i32 %365 = mul i32 %327, i32 2;
    ubr ^while.header42;
^b45:
    i32 %366 = phi [^while.header33, i32 %434] [^b36, i32 %208];
    i32 %367 = phi [^while.header33, i32 %435] [^b36, i32 %209];
    i32 %368 = phi [^while.header33, i32 %436] [^b36, i32 %210];
    i32 %369 = phi [^while.header33, i32 %437] [^b36, i32 %211];
    i32 %370 = phi [^while.header33, i32 %438] [^b36, i32 %212];
    ubr ^while.header43;
^b46:
    i32 %371 = phi [^while.header34, i32 %441] [^b38, i32 %234];
    i32 %372 = phi [^while.header34, i32 %444] [^b38, i32 %235];
    i32 %373 = phi [^while.header34, i32 %445] [^b38, i32 %236];
    i32 %374 = phi [^while.header34, i32 %446] [^b38, i32 %237];
    ubr ^while.header44;
^if.else2:
    i32 %375 = load i32* %1;
    i32 %376 = sdiv i32 %222, i32 %375;
    ubr ^b52;
^while.body9:
    i32 %377 = srem i32 %297, i32 2;
    i1 %378 = scmp neq i32 %377, i32 0;
    cbr i1 %378(prob = 0.5), ^if.then14, ^if.else5;
^while.body10:
    i32 %379 = srem i32 %308, i32 2;
    i1 %380 = scmp neq i32 %379, i32 0;
    cbr i1 %380(prob = 0.5), ^if.then15, ^if.else6;
^while.header28:
    i32 %381 = phi [^while.header22, i32 %281] [^b87, i32 %381];
    i32 %382 = phi [^while.header22, i32 %282] [^b87, i32 %382];
    i32 %383 = phi [^while.header22, i32 %283] [^b87, i32 %383];
    i32 %384 = phi [^while.header22, i32 %284] [^b87, i32 %384];
    i32 %385 = phi [^while.header22, i32 %285] [^b87, i32 %385];
    i32 %386 = phi [^while.header22, i32 %286] [^b87, i32 %386];
    i32 %387 = phi [^while.header22, i32 1] [^b87, i32 %792];
    i32 %388 = phi [^while.header22, i32 %282] [^b87, i32 %791];
    i32 %389 = phi [^while.header22, i32 0] [^b87, i32 %793];
    i32 %390 = phi [^while.header22, i32 0] [^b87, i32 %790];
    i1 %391 = scmp lt i32 %389, i32 16;
    cbr i1 %391(prob = 0.97), ^while.body12, ^b57;
^if.else3:
    i32 %392 = srem i32 %202, i32 2;
    i1 %393 = scmp neq i32 %392, i32 0;
    cbr i1 %393(prob = 0.5), ^if.then10, ^b50;
^while.header29:
    i32 %394 = phi [^while.header25, i32 %312] [^b80, i32 %394];
    i32 %395 = phi [^while.header25, i32 %313] [^b80, i32 %395];
    i32 %396 = phi [^while.header25, i32 %314] [^b80, i32 %396];
    i32 %397 = phi [^while.header25, i32 %315] [^b80, i32 %397];
    i32 %398 = phi [^while.header25, i32 %316] [^b80, i32 %398];
    i32 %399 = phi [^while.header25, i32 %317] [^b80, i32 %399];
    i32 %400 = phi [^while.header25, i32 %312] [^b80, i32 %776];
    i32 %401 = phi [^while.header25, i32 %313] [^b80, i32 %775];
    i32 %402 = phi [^while.header25, i32 0] [^b80, i32 %777];
    i32 %403 = phi [^while.header25, i32 0] [^b80, i32 %774];
    i1 %404 = scmp lt i32 %402, i32 16;
    cbr i1 %404(prob = 0.97), ^while.body13, ^while.header41;
^while.body11:
    i32 %405 = srem i32 %325, i32 2;
    i1 %406 = scmp neq i32 %405, i32 0;
    cbr i1 %406(prob = 0.5), ^b51, ^b58;
^b47:
    i1 %407 = phi [^b39, i1 %340] [^while.body7, i1 false];
    cbr i1 %407(prob = 0.5), ^if.then11, ^b53;
^while.header30:
    i32 %408 = phi [^b158, i32 %1053] [^b30, i32 0];
    i32 %409 = phi [^b158, i32 %1437] [^b30, i32 %261];
    i32 %410 = phi [^b158, i32 %1052] [^b30, i32 %261];
    i32 %411 = phi [^b158, i32 %1055] [^b30, i32 %259];
    i32 %412 = phi [^b158, i32 %1056] [^b30, i32 %260];
    i32 %413 = phi [^b158, i32 %1057] [^b30, i32 %262];
    i1 %414 = scmp neq i32 %409, i32 0;
    cbr i1 %414(prob = 0.97), ^while.header37, ^b59;
^while.header31:
    i32 %415 = phi [^while.header27, i32 %329] [^b84, i32 %415];
    i32 %416 = phi [^while.header27, i32 %330] [^b84, i32 %416];
    i32 %417 = phi [^while.header27, i32 %331] [^b84, i32 %417];
    i32 %418 = phi [^while.header27, i32 %332] [^b84, i32 %418];
    i32 %419 = phi [^while.header27, i32 %333] [^b84, i32 %419];
    i32 %420 = phi [^while.header27, i32 %334] [^b84, i32 %420];
    i32 %421 = phi [^while.header27, i32 %329] [^b84, i32 %785];
    i32 %422 = phi [^while.header27, i32 %330] [^b84, i32 %784];
    i32 %423 = phi [^while.header27, i32 0] [^b84, i32 %786];
    i32 %424 = phi [^while.header27, i32 0] [^b84, i32 %783];
    i1 %425 = scmp lt i32 %423, i32 16;
    cbr i1 %425(prob = 0.97), ^while.body14, ^while.header45;
^while.header32:
    i32 %426 = phi [^while.header67, i32 %1093] [^b32, i32 %269];
    i32 %427 = phi [^while.header67, i32 %1085] [^b32, i32 %269];
    i32 %428 = phi [^while.header67, i32 %1086] [^b32, i32 %267];
    i32 %429 = phi [^while.header67, i32 %1087] [^b32, i32 %268];
    i32 %430 = phi [^while.header67, i32 %1088] [^b32, i32 %270];
    i32 %431 = phi [^while.header67, i32 %1089] [^b32, i32 %271];
    i1 %432 = scmp neq i32 %426, i32 0;
    cbr i1 %432(prob = 0.97), ^while.header38, ^b60;
^while.header33:
    i32 %433 = phi [^while.header68, i32 %1103] [^b36, i32 %210];
    i32 %434 = phi [^while.header68, i32 %1095] [^b36, i32 %208];
    i32 %435 = phi [^while.header68, i32 %1096] [^b36, i32 %209];
    i32 %436 = phi [^while.header68, i32 %1097] [^b36, i32 %210];
    i32 %437 = phi [^while.header68, i32 %1098] [^b36, i32 %211];
    i32 %438 = phi [^while.header68, i32 %1099] [^b36, i32 %212];
    i1 %439 = scmp neq i32 %433, i32 0;
    cbr i1 %439(prob = 0.97), ^while.header39, ^b45;
^b48:
    i1 %440 = phi [^while.body8, i1 false] [^b40, i1 %348];
    cbr i1 %440(prob = 0.5), ^if.then12, ^b54;
^while.header34:
    i32 %441 = phi [^b38, i32 0] [^b160, i32 %1069];
    i32 %442 = phi [^b38, i32 %236] [^b160, i32 %1446];
    i32 %443 = phi [^b38, i32 %234] [^b160, i32 %1068];
    i32 %444 = phi [^b38, i32 %235] [^b160, i32 %1071];
    i32 %445 = phi [^b38, i32 %236] [^b160, i32 %1072];
    i32 %446 = phi [^b38, i32 %237] [^b160, i32 %1073];
    i1 %447 = scmp neq i32 %442, i32 0;
    cbr i1 %447(prob = 0.97), ^while.header40, ^b46;
^while.header35:
    i32 %448 = phi [^while.header23, i32 %299] [^b89, i32 %448];
    i32 %449 = phi [^while.header23, i32 %292] [^b89, i32 %449];
    i32 %450 = phi [^while.header23, i32 %293] [^b89, i32 %450];
    i32 %451 = phi [^while.header23, i32 %294] [^b89, i32 %451];
    i32 %452 = phi [^while.header23, i32 %295] [^b89, i32 %452];
    i32 %453 = phi [^while.header23, i32 %290] [^b89, i32 %822];
    i32 %454 = phi [^while.header23, i32 %291] [^b89, i32 %821];
    i32 %455 = phi [^while.header23, i32 0] [^b89, i32 %823];
    i32 %456 = phi [^while.header23, i32 0] [^b89, i32 %820];
    i1 %457 = scmp lt i32 %455, i32 16;
    cbr i1 %457(prob = 0.97), ^while.body15, ^b55;
^while.header36:
    i32 %458 = phi [^b90, i32 %458] [^while.header24, i32 %310];
    i32 %459 = phi [^b90, i32 %459] [^while.header24, i32 %303];
    i32 %460 = phi [^b90, i32 %460] [^while.header24, i32 %304];
    i32 %461 = phi [^b90, i32 %461] [^while.header24, i32 %305];
    i32 %462 = phi [^b90, i32 %462] [^while.header24, i32 %306];
    i32 %463 = phi [^b90, i32 %826] [^while.header24, i32 %301];
    i32 %464 = phi [^b90, i32 %825] [^while.header24, i32 %302];
    i32 %465 = phi [^b90, i32 %827] [^while.header24, i32 0];
    i32 %466 = phi [^b90, i32 %824] [^while.header24, i32 0];
    i1 %467 = scmp lt i32 %465, i32 16;
    cbr i1 %467(prob = 0.97), ^while.body16, ^b56;
^b49:
    i1 %468 = scmp gt i32 %332, i32 32767;
    cbr i1 %468(prob = 0.5), ^if.then13, ^if.else4;
^if.then10:
    i32* %469 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %204];
    i32 %470 = load i32* %469;
    i32 %471 = add i32 %470, i32 %205;
    ubr ^b50;
^b50:
    i32 %472 = phi [^if.then10, i32 %471] [^if.else3, i32 %205] [^if.then9, i32 %205];
    i32 %473 = sdiv i32 %203, i32 2;
    i32 %474 = sdiv i32 %202, i32 2;
    i32 %475 = add i32 %204, i32 1;
    ubr ^while.header17;
^b51:
    i32 %476 = srem i32 %324, i32 2;
    i1 %477 = scmp neq i32 %476, i32 0;
    ubr ^b58;
^if.then11:
    i32* %478 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %215];
    i32 %479 = load i32* %478;
    i32 %480 = add i32 %479, i32 %216;
    ubr ^b53;
^if.then12:
    i32* %481 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %240];
    i32 %482 = load i32* %481;
    i32 %483 = add i32 %482, i32 %241;
    ubr ^b54;
^b52:
    i32 %484 = phi [^if.else2, i32 %376] [^if.then8, i32 %362];
    ubr ^while.header4;
^b53:
    i32 %485 = phi [^if.then11, i32 %480] [^b47, i32 %216];
    i32 %486 = sdiv i32 %214, i32 2;
    i32 %487 = sdiv i32 %213, i32 2;
    i32 %488 = add i32 %215, i32 1;
    ubr ^while.header18;
^if.then13:
    i32 %489 = load i32* %1;
    i32 %490 = sdiv i32 %332, i32 %489;
    i32 %491 = add i32 %490, i32 65536;
    i32 %492 = load i32* %15;
    i32 %493 = sub i32 %491, i32 %492;
    ubr ^b66;
^b54:
    i32 %494 = phi [^if.then12, i32 %483] [^b48, i32 %241];
    i32 %495 = sdiv i32 %239, i32 2;
    i32 %496 = sdiv i32 %238, i32 2;
    i32 %497 = add i32 %240, i32 1;
    ubr ^while.header21;
^if.then14:
    i32 %498 = srem i32 %296, i32 2;
    i1 %499 = scmp eq i32 %498, i32 0;
    cbr i1 %499(prob = 0.5), ^if.then16, ^b62;
^if.then15:
    i32 %500 = srem i32 %307, i32 2;
    i1 %501 = scmp eq i32 %500, i32 0;
    cbr i1 %501(prob = 0.5), ^if.then17, ^b63;
^while.body12:
    i32 %502 = srem i32 %388, i32 2;
    i1 %503 = scmp neq i32 %502, i32 0;
    cbr i1 %503(prob = 0.5), ^b61, ^b70;
^while.body13:
    i32 %504 = srem i32 %401, i32 2;
    i1 %505 = scmp neq i32 %504, i32 0;
    cbr i1 %505(prob = 0.5), ^if.then21, ^if.else9;
^b55:
    i32 %506 = mul i32 %456, i32 2;
    ubr ^while.header51;
^b56:
    i32 %507 = mul i32 %466, i32 2;
    ubr ^while.header52;
^if.else4:
    i32 %508 = load i32* %1;
    i32 %509 = sdiv i32 %332, i32 %508;
    ubr ^b66;
^while.body14:
    i32 %510 = srem i32 %422, i32 2;
    i1 %511 = scmp neq i32 %510, i32 0;
    cbr i1 %511(prob = 0.5), ^if.then22, ^if.else10;
^while.header37:
    i32 %512 = phi [^b108, i32 %512] [^while.header30, i32 %408];
    i32 %513 = phi [^b108, i32 %513] [^while.header30, i32 %409];
    i32 %514 = phi [^b108, i32 %514] [^while.header30, i32 %410];
    i32 %515 = phi [^b108, i32 %515] [^while.header30, i32 %411];
    i32 %516 = phi [^b108, i32 %516] [^while.header30, i32 %412];
    i32 %517 = phi [^b108, i32 %517] [^while.header30, i32 %413];
    i32 %518 = phi [^b108, i32 %967] [^while.header30, i32 1];
    i32 %519 = phi [^b108, i32 %966] [^while.header30, i32 %409];
    i32 %520 = phi [^b108, i32 %968] [^while.header30, i32 0];
    i32 %521 = phi [^b108, i32 %965] [^while.header30, i32 0];
    i1 %522 = scmp lt i32 %520, i32 16;
    cbr i1 %522(prob = 0.97), ^while.body17, ^b72;
^if.else5:
    i32 %523 = srem i32 %296, i32 2;
    i1 %524 = scmp neq i32 %523, i32 0;
    cbr i1 %524(prob = 0.5), ^if.then16, ^b62;
^if.else6:
    i32 %525 = srem i32 %307, i32 2;
    i1 %526 = scmp neq i32 %525, i32 0;
    cbr i1 %526(prob = 0.5), ^if.then17, ^b63;
^while.header38:
    i32 %527 = phi [^while.header32, i32 %426] [^b101, i32 %527];
    i32 %528 = phi [^while.header32, i32 %427] [^b101, i32 %528];
    i32 %529 = phi [^while.header32, i32 %428] [^b101, i32 %529];
    i32 %530 = phi [^while.header32, i32 %429] [^b101, i32 %530];
    i32 %531 = phi [^while.header32, i32 %430] [^b101, i32 %531];
    i32 %532 = phi [^while.header32, i32 %431] [^b101, i32 %532];
    i32 %533 = phi [^while.header32, i32 %426] [^b101, i32 %941];
    i32 %534 = phi [^while.header32, i32 %427] [^b101, i32 %940];
    i32 %535 = phi [^while.header32, i32 0] [^b101, i32 %942];
    i32 %536 = phi [^while.header32, i32 0] [^b101, i32 %939];
    i1 %537 = scmp lt i32 %535, i32 16;
    cbr i1 %537(prob = 0.97), ^while.body18, ^while.header49;
^while.header39:
    i32 %538 = phi [^while.header33, i32 %433] [^b102, i32 %538];
    i32 %539 = phi [^while.header33, i32 %434] [^b102, i32 %539];
    i32 %540 = phi [^while.header33, i32 %435] [^b102, i32 %540];
    i32 %541 = phi [^while.header33, i32 %436] [^b102, i32 %541];
    i32 %542 = phi [^while.header33, i32 %437] [^b102, i32 %542];
    i32 %543 = phi [^while.header33, i32 %438] [^b102, i32 %543];
    i32 %544 = phi [^while.header33, i32 %433] [^b102, i32 %945];
    i32 %545 = phi [^while.header33, i32 %434] [^b102, i32 %944];
    i32 %546 = phi [^while.header33, i32 0] [^b102, i32 %946];
    i32 %547 = phi [^while.header33, i32 0] [^b102, i32 %943];
    i1 %548 = scmp lt i32 %546, i32 16;
    cbr i1 %548(prob = 0.97), ^while.body19, ^while.header50;
^b57:
    i1 %549 = scmp neq i32 %390, i32 0;
    cbr i1 %549(prob = 0.5), ^while.header46, ^b67;
^while.body15:
    i32 %550 = srem i32 %454, i32 2;
    i1 %551 = scmp neq i32 %550, i32 0;
    cbr i1 %551(prob = 0.5), ^b64, ^b73;
^while.body16:
    i32 %552 = srem i32 %464, i32 2;
    i1 %553 = scmp neq i32 %552, i32 0;
    cbr i1 %553(prob = 0.5), ^b65, ^b74;
^while.header40:
    i32 %554 = phi [^while.header34, i32 %441] [^b110, i32 %554];
    i32 %555 = phi [^while.header34, i32 %442] [^b110, i32 %555];
    i32 %556 = phi [^while.header34, i32 %443] [^b110, i32 %556];
    i32 %557 = phi [^while.header34, i32 %444] [^b110, i32 %557];
    i32 %558 = phi [^while.header34, i32 %445] [^b110, i32 %558];
    i32 %559 = phi [^while.header34, i32 %446] [^b110, i32 %559];
    i32 %560 = phi [^while.header34, i32 1] [^b110, i32 %975];
    i32 %561 = phi [^while.header34, i32 %442] [^b110, i32 %974];
    i32 %562 = phi [^while.header34, i32 0] [^b110, i32 %976];
    i32 %563 = phi [^while.header34, i32 0] [^b110, i32 %973];
    i1 %564 = scmp lt i32 %562, i32 16;
    cbr i1 %564(prob = 0.97), ^while.body20, ^b75;
^b58:
    i1 %565 = phi [^while.body11, i1 false] [^b51, i1 %477];
    cbr i1 %565(prob = 0.5), ^if.then18, ^b68;
^while.header41:
    i32 %566 = phi [^while.header29, i32 %403] [^b111, i32 %566];
    i32 %567 = phi [^while.header29, i32 %396] [^b111, i32 %567];
    i32 %568 = phi [^while.header29, i32 %397] [^b111, i32 %568];
    i32 %569 = phi [^while.header29, i32 %398] [^b111, i32 %569];
    i32 %570 = phi [^while.header29, i32 %399] [^b111, i32 %570];
    i32 %571 = phi [^while.header29, i32 %394] [^b111, i32 %979];
    i32 %572 = phi [^while.header29, i32 %395] [^b111, i32 %978];
    i32 %573 = phi [^while.header29, i32 0] [^b111, i32 %980];
    i32 %574 = phi [^while.header29, i32 0] [^b111, i32 %977];
    i1 %575 = scmp lt i32 %573, i32 16;
    cbr i1 %575(prob = 0.97), ^while.body21, ^b69;
^while.header42:
    i32 %576 = phi [^b112, i32 %576] [^b44, i32 %319];
    i32 %577 = phi [^b112, i32 %577] [^b44, i32 %320];
    i32 %578 = phi [^b112, i32 %578] [^b44, i32 %321];
    i32 %579 = phi [^b112, i32 %579] [^b44, i32 %322];
    i32 %580 = phi [^b112, i32 %580] [^b44, i32 %323];
    i32 %581 = phi [^b112, i32 %985] [^b44, i32 65535];
    i32 %582 = phi [^b112, i32 %984] [^b44, i32 %365];
    i32 %583 = phi [^b112, i32 %986] [^b44, i32 0];
    i32 %584 = phi [^b112, i32 %983] [^b44, i32 0];
    i1 %585 = scmp lt i32 %583, i32 16;
    cbr i1 %585(prob = 0.97), ^while.body22, ^while.header14;
^while.header43:
    i32 %586 = phi [^while.header76, i32 %1266] [^b45, i32 %368];
    i32 %587 = phi [^while.header76, i32 %1258] [^b45, i32 %368];
    i32 %588 = phi [^while.header76, i32 %1259] [^b45, i32 %366];
    i32 %589 = phi [^while.header76, i32 %1260] [^b45, i32 %367];
    i32 %590 = phi [^while.header76, i32 %1261] [^b45, i32 %369];
    i32 %591 = phi [^while.header76, i32 %1262] [^b45, i32 %370];
    i1 %592 = scmp neq i32 %586, i32 0;
    cbr i1 %592(prob = 0.97), ^while.header47, ^b76;
^b59:
    i1 %593 = scmp gt i32 %412, i32 32767;
    cbr i1 %593(prob = 0.5), ^if.then19, ^if.else7;
^b60:
    i1 %594 = scmp gt i32 %429, i32 32767;
    cbr i1 %594(prob = 0.5), ^if.then20, ^if.else8;
^while.header44:
    i32 %595 = phi [^b178, i32 %1251] [^b46, i32 0];
    i32 %596 = phi [^b178, i32 %1580] [^b46, i32 %373];
    i32 %597 = phi [^b178, i32 %1250] [^b46, i32 %373];
    i32 %598 = phi [^b178, i32 %1253] [^b46, i32 %371];
    i32 %599 = phi [^b178, i32 %1254] [^b46, i32 %372];
    i32 %600 = phi [^b178, i32 %1255] [^b46, i32 %374];
    i1 %601 = scmp neq i32 %596, i32 0;
    cbr i1 %601(prob = 0.97), ^while.header48, ^b77;
^while.header45:
    i32 %602 = phi [^while.header31, i32 %424] [^b113, i32 %602];
    i32 %603 = phi [^while.header31, i32 %417] [^b113, i32 %603];
    i32 %604 = phi [^while.header31, i32 %418] [^b113, i32 %604];
    i32 %605 = phi [^while.header31, i32 %419] [^b113, i32 %605];
    i32 %606 = phi [^while.header31, i32 %420] [^b113, i32 %606];
    i32 %607 = phi [^while.header31, i32 %415] [^b113, i32 %991];
    i32 %608 = phi [^while.header31, i32 %416] [^b113, i32 %990];
    i32 %609 = phi [^while.header31, i32 0] [^b113, i32 %992];
    i32 %610 = phi [^while.header31, i32 0] [^b113, i32 %989];
    i1 %611 = scmp lt i32 %609, i32 16;
    cbr i1 %611(prob = 0.97), ^while.body23, ^b71;
^if.then16:
    i32* %612 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %298];
    i32 %613 = load i32* %612;
    i32 %614 = add i32 %613, i32 %299;
    ubr ^b62;
^if.then17:
    i32* %615 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %309];
    i32 %616 = load i32* %615;
    i32 %617 = add i32 %616, i32 %310;
    ubr ^b63;
^b61:
    i32 %618 = srem i32 %387, i32 2;
    i1 %619 = scmp neq i32 %618, i32 0;
    ubr ^b70;
^b62:
    i32 %620 = phi [^if.then16, i32 %614] [^if.else5, i32 %299] [^if.then14, i32 %299];
    i32 %621 = sdiv i32 %297, i32 2;
    i32 %622 = sdiv i32 %296, i32 2;
    i32 %623 = add i32 %298, i32 1;
    ubr ^while.header23;
^b63:
    i32 %624 = phi [^if.then17, i32 %617] [^if.else6, i32 %310] [^if.then15, i32 %310];
    i32 %625 = sdiv i32 %308, i32 2;
    i32 %626 = sdiv i32 %307, i32 2;
    i32 %627 = add i32 %309, i32 1;
    ubr ^while.header24;
^b64:
    i32 %628 = srem i32 %453, i32 2;
    i1 %629 = scmp neq i32 %628, i32 0;
    ubr ^b73;
^b65:
    i32 %630 = srem i32 %463, i32 2;
    i1 %631 = scmp neq i32 %630, i32 0;
    ubr ^b74;
^if.then18:
    i32* %632 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %326];
    i32 %633 = load i32* %632;
    i32 %634 = add i32 %327, i32 %633;
    ubr ^b68;
^b66:
    i32 %635 = phi [^if.else4, i32 %509] [^if.then13, i32 %493];
    ubr ^while.header7;
^if.then19:
    i32 %636 = load i32* %1;
    i32 %637 = sdiv i32 %412, i32 %636;
    i32 %638 = add i32 %637, i32 65536;
    i32 %639 = load i32* %15;
    i32 %640 = sub i32 %638, i32 %639;
    ubr ^b83;
^if.then20:
    i32 %641 = load i32* %1;
    i32 %642 = sdiv i32 %429, i32 %641;
    i32 %643 = add i32 %642, i32 65536;
    i32 %644 = load i32* %15;
    i32 %645 = sub i32 %643, i32 %644;
    ubr ^b85;
^b67:
    i32 %646 = phi [^while.header46, i32 %676] [^b57, i32 %381];
    i32 %647 = phi [^while.header46, i32 %677] [^b57, i32 %382];
    i32 %648 = phi [^while.header46, i32 %678] [^b57, i32 %383];
    i32 %649 = phi [^while.header46, i32 %679] [^b57, i32 %384];
    i32 %650 = phi [^while.header46, i32 %680] [^b57, i32 %385];
    i32 %651 = phi [^while.header46, i32 %681] [^b57, i32 %386];
    ubr ^while.header54;
^if.then21:
    i32 %652 = srem i32 %400, i32 2;
    i1 %653 = scmp eq i32 %652, i32 0;
    cbr i1 %653(prob = 0.5), ^if.then23, ^b80;
^b68:
    i32 %654 = phi [^if.then18, i32 %634] [^b58, i32 %327];
    i32 %655 = sdiv i32 %325, i32 2;
    i32 %656 = sdiv i32 %324, i32 2;
    i32 %657 = add i32 %326, i32 1;
    ubr ^while.header26;
^b69:
    i32 %658 = mul i32 %574, i32 2;
    ubr ^while.header57;
^if.else7:
    i32 %659 = load i32* %1;
    i32 %660 = sdiv i32 %412, i32 %659;
    ubr ^b83;
^if.then22:
    i32 %661 = srem i32 %421, i32 2;
    i1 %662 = scmp eq i32 %661, i32 0;
    cbr i1 %662(prob = 0.5), ^if.then24, ^b84;
^while.body17:
    i32 %663 = srem i32 %519, i32 2;
    i1 %664 = scmp neq i32 %663, i32 0;
    cbr i1 %664(prob = 0.5), ^b78, ^b94;
^if.else8:
    i32 %665 = load i32* %1;
    i32 %666 = sdiv i32 %429, i32 %665;
    ubr ^b85;
^while.body18:
    i32 %667 = srem i32 %534, i32 2;
    i1 %668 = scmp neq i32 %667, i32 0;
    cbr i1 %668(prob = 0.5), ^if.then30, ^if.else13;
^while.body19:
    i32 %669 = srem i32 %545, i32 2;
    i1 %670 = scmp neq i32 %669, i32 0;
    cbr i1 %670(prob = 0.5), ^if.then31, ^if.else14;
^b70:
    i1 %671 = phi [^b61, i1 %619] [^while.body12, i1 false];
    cbr i1 %671(prob = 0.5), ^if.then25, ^b87;
^b71:
    i32 %672 = mul i32 %610, i32 2;
    ubr ^while.header59;
^if.else9:
    i32 %673 = srem i32 %400, i32 2;
    i1 %674 = scmp neq i32 %673, i32 0;
    cbr i1 %674(prob = 0.5), ^if.then23, ^b80;
^while.header46:
    i32 %675 = phi [^while.header77, i32 %1353] [^b57, i32 %383];
    i32 %676 = phi [^while.header77, i32 %1344] [^b57, i32 %381];
    i32 %677 = phi [^while.header77, i32 %1345] [^b57, i32 %382];
    i32 %678 = phi [^while.header77, i32 %1346] [^b57, i32 %383];
    i32 %679 = phi [^while.header77, i32 %1347] [^b57, i32 %384];
    i32 %680 = phi [^while.header77, i32 %1348] [^b57, i32 %385];
    i32 %681 = phi [^while.header77, i32 %1349] [^b57, i32 %386];
    i1 %682 = scmp neq i32 %675, i32 0;
    cbr i1 %682(prob = 0.97), ^while.header53, ^b67;
^while.body20:
    i32 %683 = srem i32 %561, i32 2;
    i1 %684 = scmp neq i32 %683, i32 0;
    cbr i1 %684(prob = 0.5), ^b79, ^b95;
^while.body21:
    i32 %685 = srem i32 %572, i32 2;
    i1 %686 = scmp neq i32 %685, i32 0;
    cbr i1 %686(prob = 0.5), ^b81, ^b96;
^while.body22:
    i32 %687 = srem i32 %582, i32 2;
    i1 %688 = scmp neq i32 %687, i32 0;
    cbr i1 %688(prob = 0.5), ^b82, ^b97;
^if.else10:
    i32 %689 = srem i32 %421, i32 2;
    i1 %690 = scmp neq i32 %689, i32 0;
    cbr i1 %690(prob = 0.5), ^if.then24, ^b84;
^while.header47:
    i32 %691 = phi [^while.header43, i32 %586] [^b123, i32 %691];
    i32 %692 = phi [^while.header43, i32 %587] [^b123, i32 %692];
    i32 %693 = phi [^while.header43, i32 %588] [^b123, i32 %693];
    i32 %694 = phi [^while.header43, i32 %589] [^b123, i32 %694];
    i32 %695 = phi [^while.header43, i32 %590] [^b123, i32 %695];
    i32 %696 = phi [^while.header43, i32 %591] [^b123, i32 %696];
    i32 %697 = phi [^while.header43, i32 %586] [^b123, i32 %1112];
    i32 %698 = phi [^while.header43, i32 %587] [^b123, i32 %1111];
    i32 %699 = phi [^while.header43, i32 0] [^b123, i32 %1113];
    i32 %700 = phi [^while.header43, i32 0] [^b123, i32 %1110];
    i1 %701 = scmp lt i32 %699, i32 16;
    cbr i1 %701(prob = 0.97), ^while.body24, ^while.header58;
^b72:
    i1 %702 = scmp neq i32 %521, i32 0;
    cbr i1 %702(prob = 0.5), ^while.header55, ^b88;
^while.body23:
    i32 %703 = srem i32 %608, i32 2;
    i1 %704 = scmp neq i32 %703, i32 0;
    cbr i1 %704(prob = 0.5), ^b86, ^b98;
^while.header48:
    i32 %705 = phi [^b127, i32 %705] [^while.header44, i32 %595];
    i32 %706 = phi [^b127, i32 %706] [^while.header44, i32 %596];
    i32 %707 = phi [^b127, i32 %707] [^while.header44, i32 %597];
    i32 %708 = phi [^b127, i32 %708] [^while.header44, i32 %598];
    i32 %709 = phi [^b127, i32 %709] [^while.header44, i32 %599];
    i32 %710 = phi [^b127, i32 %710] [^while.header44, i32 %600];
    i32 %711 = phi [^b127, i32 %1143] [^while.header44, i32 1];
    i32 %712 = phi [^b127, i32 %1142] [^while.header44, i32 %596];
    i32 %713 = phi [^b127, i32 %1144] [^while.header44, i32 0];
    i32 %714 = phi [^b127, i32 %1141] [^while.header44, i32 0];
    i1 %715 = scmp lt i32 %713, i32 16;
    cbr i1 %715(prob = 0.97), ^while.body25, ^b99;
^b73:
    i1 %716 = phi [^while.body15, i1 false] [^b64, i1 %629];
    cbr i1 %716(prob = 0.5), ^if.then26, ^b89;
^b74:
    i1 %717 = phi [^while.body16, i1 false] [^b65, i1 %631];
    cbr i1 %717(prob = 0.5), ^if.then27, ^b90;
^while.header49:
    i32 %718 = phi [^while.header38, i32 %536] [^b128, i32 %718];
    i32 %719 = phi [^while.header38, i32 %529] [^b128, i32 %719];
    i32 %720 = phi [^while.header38, i32 %530] [^b128, i32 %720];
    i32 %721 = phi [^while.header38, i32 %531] [^b128, i32 %721];
    i32 %722 = phi [^while.header38, i32 %532] [^b128, i32 %722];
    i32 %723 = phi [^while.header38, i32 %527] [^b128, i32 %1149];
    i32 %724 = phi [^while.header38, i32 %528] [^b128, i32 %1148];
    i32 %725 = phi [^while.header38, i32 0] [^b128, i32 %1150];
    i32 %726 = phi [^while.header38, i32 0] [^b128, i32 %1147];
    i1 %727 = scmp lt i32 %725, i32 16;
    cbr i1 %727(prob = 0.97), ^while.body26, ^b92;
^while.header50:
    i32 %728 = phi [^while.header39, i32 %547] [^b129, i32 %728];
    i32 %729 = phi [^while.header39, i32 %540] [^b129, i32 %729];
    i32 %730 = phi [^while.header39, i32 %541] [^b129, i32 %730];
    i32 %731 = phi [^while.header39, i32 %542] [^b129, i32 %731];
    i32 %732 = phi [^while.header39, i32 %543] [^b129, i32 %732];
    i32 %733 = phi [^while.header39, i32 %538] [^b129, i32 %1153];
    i32 %734 = phi [^while.header39, i32 %539] [^b129, i32 %1152];
    i32 %735 = phi [^while.header39, i32 0] [^b129, i32 %1154];
    i32 %736 = phi [^while.header39, i32 0] [^b129, i32 %1151];
    i1 %737 = scmp lt i32 %735, i32 16;
    cbr i1 %737(prob = 0.97), ^while.body27, ^b93;
^b75:
    i1 %738 = scmp neq i32 %563, i32 0;
    cbr i1 %738(prob = 0.5), ^while.header56, ^b91;
^while.header51:
    i32 %739 = phi [^b130, i32 %739] [^b55, i32 %448];
    i32 %740 = phi [^b130, i32 %740] [^b55, i32 %449];
    i32 %741 = phi [^b130, i32 %741] [^b55, i32 %450];
    i32 %742 = phi [^b130, i32 %742] [^b55, i32 %451];
    i32 %743 = phi [^b130, i32 %743] [^b55, i32 %452];
    i32 %744 = phi [^b130, i32 %1161] [^b55, i32 65535];
    i32 %745 = phi [^b130, i32 %1160] [^b55, i32 %506];
    i32 %746 = phi [^b130, i32 %1162] [^b55, i32 0];
    i32 %747 = phi [^b130, i32 %1159] [^b55, i32 0];
    i1 %748 = scmp lt i32 %746, i32 16;
    cbr i1 %748(prob = 0.97), ^while.body28, ^while.header19;
^while.header52:
    i32 %749 = phi [^b131, i32 %749] [^b56, i32 %458];
    i32 %750 = phi [^b131, i32 %750] [^b56, i32 %459];
    i32 %751 = phi [^b131, i32 %751] [^b56, i32 %460];
    i32 %752 = phi [^b131, i32 %752] [^b56, i32 %461];
    i32 %753 = phi [^b131, i32 %753] [^b56, i32 %462];
    i32 %754 = phi [^b131, i32 %1165] [^b56, i32 65535];
    i32 %755 = phi [^b131, i32 %1164] [^b56, i32 %507];
    i32 %756 = phi [^b131, i32 %1166] [^b56, i32 0];
    i32 %757 = phi [^b131, i32 %1163] [^b56, i32 0];
    i1 %758 = scmp lt i32 %756, i32 16;
    cbr i1 %758(prob = 0.97), ^while.body29, ^while.header20;
^b76:
    i1 %759 = scmp gt i32 %589, i32 32767;
    cbr i1 %759(prob = 0.5), ^if.then28, ^if.else11;
^b77:
    i1 %760 = scmp gt i32 %599, i32 32767;
    cbr i1 %760(prob = 0.5), ^if.then29, ^if.else12;
^if.then23:
    i32* %761 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %402];
    i32 %762 = load i32* %761;
    i32 %763 = add i32 %403, i32 %762;
    ubr ^b80;
^if.then24:
    i32* %764 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %423];
    i32 %765 = load i32* %764;
    i32 %766 = add i32 %765, i32 %424;
    ubr ^b84;
^b78:
    i32 %767 = srem i32 %518, i32 2;
    i1 %768 = scmp neq i32 %767, i32 0;
    ubr ^b94;
^if.then25:
    i32* %769 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %389];
    i32 %770 = load i32* %769;
    i32 %771 = add i32 %770, i32 %390;
    ubr ^b87;
^b79:
    i32 %772 = srem i32 %560, i32 2;
    i1 %773 = scmp neq i32 %772, i32 0;
    ubr ^b95;
^b80:
    i32 %774 = phi [^if.then23, i32 %763] [^if.else9, i32 %403] [^if.then21, i32 %403];
    i32 %775 = sdiv i32 %401, i32 2;
    i32 %776 = sdiv i32 %400, i32 2;
    i32 %777 = add i32 %402, i32 1;
    ubr ^while.header29;
^b81:
    i32 %778 = srem i32 %571, i32 2;
    i1 %779 = scmp neq i32 %778, i32 0;
    ubr ^b96;
^b82:
    i32 %780 = srem i32 %581, i32 2;
    i1 %781 = scmp neq i32 %780, i32 0;
    ubr ^b97;
^b83:
    i32 %782 = phi [^if.else7, i32 %660] [^if.then19, i32 %640];
    ubr ^while.header8;
^b84:
    i32 %783 = phi [^if.then24, i32 %766] [^if.else10, i32 %424] [^if.then22, i32 %424];
    i32 %784 = sdiv i32 %422, i32 2;
    i32 %785 = sdiv i32 %421, i32 2;
    i32 %786 = add i32 %423, i32 1;
    ubr ^while.header31;
^b85:
    i32 %787 = phi [^if.else8, i32 %666] [^if.then20, i32 %645];
    ubr ^while.header10;
^b86:
    i32 %788 = srem i32 %607, i32 2;
    i1 %789 = scmp neq i32 %788, i32 0;
    ubr ^b98;
^b87:
    i32 %790 = phi [^if.then25, i32 %771] [^b70, i32 %390];
    i32 %791 = sdiv i32 %388, i32 2;
    i32 %792 = sdiv i32 %387, i32 2;
    i32 %793 = add i32 %389, i32 1;
    ubr ^while.header28;
^if.then26:
    i32* %794 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %455];
    i32 %795 = load i32* %794;
    i32 %796 = add i32 %456, i32 %795;
    ubr ^b89;
^if.then27:
    i32* %797 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %465];
    i32 %798 = load i32* %797;
    i32 %799 = add i32 %466, i32 %798;
    ubr ^b90;
^if.then28:
    i32 %800 = load i32* %1;
    i32 %801 = sdiv i32 %589, i32 %800;
    i32 %802 = add i32 %801, i32 65536;
    i32 %803 = load i32* %15;
    i32 %804 = sub i32 %802, i32 %803;
    ubr ^b107;
^b88:
    i32 %805 = phi [^while.header55, i32 %868] [^b72, i32 %512];
    i32 %806 = phi [^while.header55, i32 %869] [^b72, i32 %513];
    i32 %807 = phi [^while.header55, i32 %870] [^b72, i32 %514];
    i32 %808 = phi [^while.header55, i32 %871] [^b72, i32 %515];
    i32 %809 = phi [^while.header55, i32 %872] [^b72, i32 %516];
    i32 %810 = phi [^while.header55, i32 %873] [^b72, i32 %517];
    ubr ^while.header64;
^if.then29:
    i32 %811 = load i32* %1;
    i32 %812 = sdiv i32 %599, i32 %811;
    i32 %813 = add i32 %812, i32 65536;
    i32 %814 = load i32* %15;
    i32 %815 = sub i32 %813, i32 %814;
    ubr ^b109;
^if.then30:
    i32 %816 = srem i32 %533, i32 2;
    i1 %817 = scmp eq i32 %816, i32 0;
    cbr i1 %817(prob = 0.5), ^if.then32, ^b101;
^if.then31:
    i32 %818 = srem i32 %544, i32 2;
    i1 %819 = scmp eq i32 %818, i32 0;
    cbr i1 %819(prob = 0.5), ^if.then33, ^b102;
^b89:
    i32 %820 = phi [^if.then26, i32 %796] [^b73, i32 %456];
    i32 %821 = sdiv i32 %454, i32 2;
    i32 %822 = sdiv i32 %453, i32 2;
    i32 %823 = add i32 %455, i32 1;
    ubr ^while.header35;
^b90:
    i32 %824 = phi [^if.then27, i32 %799] [^b74, i32 %466];
    i32 %825 = sdiv i32 %464, i32 2;
    i32 %826 = sdiv i32 %463, i32 2;
    i32 %827 = add i32 %465, i32 1;
    ubr ^while.header36;
^b91:
    i32 %828 = phi [^while.header56, i32 %888] [^b75, i32 %554];
    i32 %829 = phi [^while.header56, i32 %889] [^b75, i32 %555];
    i32 %830 = phi [^while.header56, i32 %890] [^b75, i32 %556];
    i32 %831 = phi [^while.header56, i32 %891] [^b75, i32 %557];
    i32 %832 = phi [^while.header56, i32 %892] [^b75, i32 %558];
    i32 %833 = phi [^while.header56, i32 %893] [^b75, i32 %559];
    ubr ^while.header65;
^b92:
    i32 %834 = mul i32 %726, i32 2;
    ubr ^while.header67;
^b93:
    i32 %835 = mul i32 %736, i32 2;
    ubr ^while.header68;
^while.header53:
    i32 %836 = phi [^while.header46, i32 %675] [^b137, i32 %836];
    i32 %837 = phi [^while.header46, i32 %676] [^b137, i32 %837];
    i32 %838 = phi [^while.header46, i32 %677] [^b137, i32 %838];
    i32 %839 = phi [^while.header46, i32 %678] [^b137, i32 %839];
    i32 %840 = phi [^while.header46, i32 %679] [^b137, i32 %840];
    i32 %841 = phi [^while.header46, i32 %680] [^b137, i32 %841];
    i32 %842 = phi [^while.header46, i32 %681] [^b137, i32 %842];
    i32 %843 = phi [^while.header46, i32 %675] [^b137, i32 %1274];
    i32 %844 = phi [^while.header46, i32 %676] [^b137, i32 %1273];
    i32 %845 = phi [^while.header46, i32 0] [^b137, i32 %1275];
    i32 %846 = phi [^while.header46, i32 0] [^b137, i32 %1272];
    i1 %847 = scmp lt i32 %845, i32 16;
    cbr i1 %847(prob = 0.97), ^while.body30, ^while.header62;
^if.else11:
    i32 %848 = load i32* %1;
    i32 %849 = sdiv i32 %589, i32 %848;
    ubr ^b107;
^while.body24:
    i32 %850 = srem i32 %698, i32 2;
    i1 %851 = scmp neq i32 %850, i32 0;
    cbr i1 %851(prob = 0.5), ^if.then39, ^if.else15;
^b94:
    i1 %852 = phi [^while.body17, i1 false] [^b78, i1 %768];
    cbr i1 %852(prob = 0.5), ^if.then34, ^b108;
^if.else12:
    i32 %853 = load i32* %1;
    i32 %854 = sdiv i32 %599, i32 %853;
    ubr ^b109;
^if.else13:
    i32 %855 = srem i32 %533, i32 2;
    i1 %856 = scmp neq i32 %855, i32 0;
    cbr i1 %856(prob = 0.5), ^if.then32, ^b101;
^if.else14:
    i32 %857 = srem i32 %544, i32 2;
    i1 %858 = scmp neq i32 %857, i32 0;
    cbr i1 %858(prob = 0.5), ^if.then33, ^b102;
^while.header54:
    i32 %859 = phi [^while.header82, i32 %1498] [^b67, i32 %648];
    i32 %860 = phi [^while.header82, i32 %1489] [^b67, i32 %648];
    i32 %861 = phi [^while.header82, i32 %1490] [^b67, i32 %646];
    i32 %862 = phi [^while.header82, i32 %1491] [^b67, i32 %647];
    i32 %863 = phi [^while.header82, i32 %1492] [^b67, i32 %649];
    i32 %864 = phi [^while.header82, i32 %1493] [^b67, i32 %650];
    i32 %865 = phi [^while.header82, i32 %1494] [^b67, i32 %651];
    i1 %866 = scmp neq i32 %859, i32 0;
    cbr i1 %866(prob = 0.97), ^while.header60, ^b116;
^while.header55:
    i32 %867 = phi [^while.header83, i32 %1509] [^b72, i32 %514];
    i32 %868 = phi [^while.header83, i32 %1500] [^b72, i32 %512];
    i32 %869 = phi [^while.header83, i32 %1501] [^b72, i32 %513];
    i32 %870 = phi [^while.header83, i32 %1502] [^b72, i32 %514];
    i32 %871 = phi [^while.header83, i32 %1503] [^b72, i32 %515];
    i32 %872 = phi [^while.header83, i32 %1504] [^b72, i32 %516];
    i32 %873 = phi [^while.header83, i32 %1505] [^b72, i32 %517];
    i1 %874 = scmp neq i32 %867, i32 0;
    cbr i1 %874(prob = 0.97), ^while.header61, ^b88;
^while.body25:
    i32 %875 = srem i32 %712, i32 2;
    i1 %876 = scmp neq i32 %875, i32 0;
    cbr i1 %876(prob = 0.5), ^b100, ^b117;
^while.body26:
    i32 %877 = srem i32 %724, i32 2;
    i1 %878 = scmp neq i32 %877, i32 0;
    cbr i1 %878(prob = 0.5), ^b103, ^b118;
^while.body27:
    i32 %879 = srem i32 %734, i32 2;
    i1 %880 = scmp neq i32 %879, i32 0;
    cbr i1 %880(prob = 0.5), ^b104, ^b119;
^b95:
    i1 %881 = phi [^b79, i1 %773] [^while.body20, i1 false];
    cbr i1 %881(prob = 0.5), ^if.then35, ^b110;
^while.body28:
    i32 %882 = srem i32 %745, i32 2;
    i1 %883 = scmp neq i32 %882, i32 0;
    cbr i1 %883(prob = 0.5), ^b105, ^b120;
^while.body29:
    i32 %884 = srem i32 %755, i32 2;
    i1 %885 = scmp neq i32 %884, i32 0;
    cbr i1 %885(prob = 0.5), ^b106, ^b121;
^b96:
    i1 %886 = phi [^b81, i1 %779] [^while.body21, i1 false];
    cbr i1 %886(prob = 0.5), ^if.then36, ^b111;
^while.header56:
    i32 %887 = phi [^while.header84, i32 %1525] [^b75, i32 %556];
    i32 %888 = phi [^while.header84, i32 %1516] [^b75, i32 %554];
    i32 %889 = phi [^while.header84, i32 %1517] [^b75, i32 %555];
    i32 %890 = phi [^while.header84, i32 %1518] [^b75, i32 %556];
    i32 %891 = phi [^while.header84, i32 %1519] [^b75, i32 %557];
    i32 %892 = phi [^while.header84, i32 %1520] [^b75, i32 %558];
    i32 %893 = phi [^while.header84, i32 %1521] [^b75, i32 %559];
    i1 %894 = scmp neq i32 %887, i32 0;
    cbr i1 %894(prob = 0.97), ^while.header63, ^b91;
^b97:
    i1 %895 = phi [^while.body22, i1 false] [^b82, i1 %781];
    cbr i1 %895(prob = 0.5), ^if.then37, ^b112;
^while.header57:
    i32 %896 = phi [^b144, i32 %896] [^b69, i32 %566];
    i32 %897 = phi [^b144, i32 %897] [^b69, i32 %567];
    i32 %898 = phi [^b144, i32 %898] [^b69, i32 %568];
    i32 %899 = phi [^b144, i32 %899] [^b69, i32 %569];
    i32 %900 = phi [^b144, i32 %900] [^b69, i32 %570];
    i32 %901 = phi [^b144, i32 %1310] [^b69, i32 65535];
    i32 %902 = phi [^b144, i32 %1309] [^b69, i32 %658];
    i32 %903 = phi [^b144, i32 %1311] [^b69, i32 0];
    i32 %904 = phi [^b144, i32 %1308] [^b69, i32 0];
    i1 %905 = scmp lt i32 %903, i32 16;
    cbr i1 %905(prob = 0.97), ^while.body31, ^while.header25;
^b98:
    i1 %906 = phi [^b86, i1 %789] [^while.body23, i1 false];
    cbr i1 %906(prob = 0.5), ^if.then38, ^b113;
^while.header58:
    i32 %907 = phi [^while.header47, i32 %700] [^b146, i32 %907];
    i32 %908 = phi [^while.header47, i32 %693] [^b146, i32 %908];
    i32 %909 = phi [^while.header47, i32 %694] [^b146, i32 %909];
    i32 %910 = phi [^while.header47, i32 %695] [^b146, i32 %910];
    i32 %911 = phi [^while.header47, i32 %696] [^b146, i32 %911];
    i32 %912 = phi [^while.header47, i32 %691] [^b146, i32 %1319];
    i32 %913 = phi [^while.header47, i32 %692] [^b146, i32 %1318];
    i32 %914 = phi [^while.header47, i32 0] [^b146, i32 %1320];
    i32 %915 = phi [^while.header47, i32 0] [^b146, i32 %1317];
    i1 %916 = scmp lt i32 %914, i32 16;
    cbr i1 %916(prob = 0.97), ^while.body32, ^b115;
^b99:
    i1 %917 = scmp neq i32 %714, i32 0;
    cbr i1 %917(prob = 0.5), ^while.header66, ^b114;
^while.header59:
    i32 %918 = phi [^b147, i32 %918] [^b71, i32 %602];
    i32 %919 = phi [^b147, i32 %919] [^b71, i32 %603];
    i32 %920 = phi [^b147, i32 %920] [^b71, i32 %604];
    i32 %921 = phi [^b147, i32 %921] [^b71, i32 %605];
    i32 %922 = phi [^b147, i32 %922] [^b71, i32 %606];
    i32 %923 = phi [^b147, i32 %1325] [^b71, i32 65535];
    i32 %924 = phi [^b147, i32 %1324] [^b71, i32 %672];
    i32 %925 = phi [^b147, i32 %1326] [^b71, i32 0];
    i32 %926 = phi [^b147, i32 %1323] [^b71, i32 0];
    i1 %927 = scmp lt i32 %925, i32 16;
    cbr i1 %927(prob = 0.97), ^while.body33, ^while.header27;
^if.then32:
    i32* %928 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %535];
    i32 %929 = load i32* %928;
    i32 %930 = add i32 %536, i32 %929;
    ubr ^b101;
^if.then33:
    i32* %931 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %546];
    i32 %932 = load i32* %931;
    i32 %933 = add i32 %547, i32 %932;
    ubr ^b102;
^if.then34:
    i32* %934 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %520];
    i32 %935 = load i32* %934;
    i32 %936 = add i32 %935, i32 %521;
    ubr ^b108;
^b100:
    i32 %937 = srem i32 %711, i32 2;
    i1 %938 = scmp neq i32 %937, i32 0;
    ubr ^b117;
^b101:
    i32 %939 = phi [^if.then32, i32 %930] [^if.else13, i32 %536] [^if.then30, i32 %536];
    i32 %940 = sdiv i32 %534, i32 2;
    i32 %941 = sdiv i32 %533, i32 2;
    i32 %942 = add i32 %535, i32 1;
    ubr ^while.header38;
^b102:
    i32 %943 = phi [^if.then33, i32 %933] [^if.else14, i32 %547] [^if.then31, i32 %547];
    i32 %944 = sdiv i32 %545, i32 2;
    i32 %945 = sdiv i32 %544, i32 2;
    i32 %946 = add i32 %546, i32 1;
    ubr ^while.header39;
^b103:
    i32 %947 = srem i32 %723, i32 2;
    i1 %948 = scmp neq i32 %947, i32 0;
    ubr ^b118;
^b104:
    i32 %949 = srem i32 %733, i32 2;
    i1 %950 = scmp neq i32 %949, i32 0;
    ubr ^b119;
^if.then35:
    i32* %951 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %562];
    i32 %952 = load i32* %951;
    i32 %953 = add i32 %563, i32 %952;
    ubr ^b110;
^b105:
    i32 %954 = srem i32 %744, i32 2;
    i1 %955 = scmp neq i32 %954, i32 0;
    ubr ^b120;
^b106:
    i32 %956 = srem i32 %754, i32 2;
    i1 %957 = scmp neq i32 %956, i32 0;
    ubr ^b121;
^if.then36:
    i32* %958 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %573];
    i32 %959 = load i32* %958;
    i32 %960 = add i32 %574, i32 %959;
    ubr ^b111;
^if.then37:
    i32* %961 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %583];
    i32 %962 = load i32* %961;
    i32 %963 = add i32 %584, i32 %962;
    ubr ^b112;
^b107:
    i32 %964 = phi [^if.else11, i32 %849] [^if.then28, i32 %804];
    ubr ^while.header15;
^b108:
    i32 %965 = phi [^if.then34, i32 %936] [^b94, i32 %521];
    i32 %966 = sdiv i32 %519, i32 2;
    i32 %967 = sdiv i32 %518, i32 2;
    i32 %968 = add i32 %520, i32 1;
    ubr ^while.header37;
^b109:
    i32 %969 = phi [^if.else12, i32 %854] [^if.then29, i32 %815];
    ubr ^while.header16;
^if.then38:
    i32* %970 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %609];
    i32 %971 = load i32* %970;
    i32 %972 = add i32 %610, i32 %971;
    ubr ^b113;
^b110:
    i32 %973 = phi [^if.then35, i32 %953] [^b95, i32 %563];
    i32 %974 = sdiv i32 %561, i32 2;
    i32 %975 = sdiv i32 %560, i32 2;
    i32 %976 = add i32 %562, i32 1;
    ubr ^while.header40;
^b111:
    i32 %977 = phi [^if.then36, i32 %960] [^b96, i32 %574];
    i32 %978 = sdiv i32 %572, i32 2;
    i32 %979 = sdiv i32 %571, i32 2;
    i32 %980 = add i32 %573, i32 1;
    ubr ^while.header41;
^while.body30:
    i32 %981 = srem i32 %844, i32 2;
    i1 %982 = scmp neq i32 %981, i32 0;
    cbr i1 %982(prob = 0.5), ^if.then47, ^if.else17;
^b112:
    i32 %983 = phi [^if.then37, i32 %963] [^b97, i32 %584];
    i32 %984 = sdiv i32 %582, i32 2;
    i32 %985 = sdiv i32 %581, i32 2;
    i32 %986 = add i32 %583, i32 1;
    ubr ^while.header42;
^if.then39:
    i32 %987 = srem i32 %697, i32 2;
    i1 %988 = scmp eq i32 %987, i32 0;
    cbr i1 %988(prob = 0.5), ^if.then40, ^b123;
^b113:
    i32 %989 = phi [^if.then38, i32 %972] [^b98, i32 %610];
    i32 %990 = sdiv i32 %608, i32 2;
    i32 %991 = sdiv i32 %607, i32 2;
    i32 %992 = add i32 %609, i32 1;
    ubr ^while.header45;
^b114:
    i32 %993 = phi [^while.header66, i32 %1076] [^b99, i32 %705];
    i32 %994 = phi [^while.header66, i32 %1077] [^b99, i32 %706];
    i32 %995 = phi [^while.header66, i32 %1078] [^b99, i32 %707];
    i32 %996 = phi [^while.header66, i32 %1079] [^b99, i32 %708];
    i32 %997 = phi [^while.header66, i32 %1080] [^b99, i32 %709];
    i32 %998 = phi [^while.header66, i32 %1081] [^b99, i32 %710];
    ubr ^while.header75;
^b115:
    i32 %999 = mul i32 %915, i32 2;
    ubr ^while.header76;
^while.header60:
    i32 %1000 = phi [^while.header54, i32 %859] [^b152, i32 %1000];
    i32 %1001 = phi [^while.header54, i32 %860] [^b152, i32 %1001];
    i32 %1002 = phi [^while.header54, i32 %861] [^b152, i32 %1002];
    i32 %1003 = phi [^while.header54, i32 %862] [^b152, i32 %1003];
    i32 %1004 = phi [^while.header54, i32 %863] [^b152, i32 %1004];
    i32 %1005 = phi [^while.header54, i32 %864] [^b152, i32 %1005];
    i32 %1006 = phi [^while.header54, i32 %865] [^b152, i32 %1006];
    i32 %1007 = phi [^while.header54, i32 %859] [^b152, i32 %1418];
    i32 %1008 = phi [^while.header54, i32 %860] [^b152, i32 %1417];
    i32 %1009 = phi [^while.header54, i32 0] [^b152, i32 %1419];
    i32 %1010 = phi [^while.header54, i32 0] [^b152, i32 %1416];
    i1 %1011 = scmp lt i32 %1009, i32 16;
    cbr i1 %1011(prob = 0.97), ^while.body34, ^while.header70;
^while.header61:
    i32 %1012 = phi [^while.header55, i32 %867] [^b153, i32 %1012];
    i32 %1013 = phi [^while.header55, i32 %868] [^b153, i32 %1013];
    i32 %1014 = phi [^while.header55, i32 %869] [^b153, i32 %1014];
    i32 %1015 = phi [^while.header55, i32 %870] [^b153, i32 %1015];
    i32 %1016 = phi [^while.header55, i32 %871] [^b153, i32 %1016];
    i32 %1017 = phi [^while.header55, i32 %872] [^b153, i32 %1017];
    i32 %1018 = phi [^while.header55, i32 %873] [^b153, i32 %1018];
    i32 %1019 = phi [^while.header55, i32 %867] [^b153, i32 %1422];
    i32 %1020 = phi [^while.header55, i32 %868] [^b153, i32 %1421];
    i32 %1021 = phi [^while.header55, i32 0] [^b153, i32 %1423];
    i32 %1022 = phi [^while.header55, i32 0] [^b153, i32 %1420];
    i1 %1023 = scmp lt i32 %1021, i32 16;
    cbr i1 %1023(prob = 0.97), ^while.body35, ^while.header71;
^while.body31:
    i32 %1024 = srem i32 %902, i32 2;
    i1 %1025 = scmp neq i32 %1024, i32 0;
    cbr i1 %1025(prob = 0.5), ^b122, ^b132;
^while.header62:
    i32 %1026 = phi [^while.header53, i32 %846] [^b161, i32 %1026];
    i32 %1027 = phi [^while.header53, i32 %838] [^b161, i32 %1027];
    i32 %1028 = phi [^while.header53, i32 %839] [^b161, i32 %1028];
    i32 %1029 = phi [^while.header53, i32 %840] [^b161, i32 %1029];
    i32 %1030 = phi [^while.header53, i32 %841] [^b161, i32 %1030];
    i32 %1031 = phi [^while.header53, i32 %842] [^b161, i32 %1031];
    i32 %1032 = phi [^while.header53, i32 %836] [^b161, i32 %1449];
    i32 %1033 = phi [^while.header53, i32 %837] [^b161, i32 %1448];
    i32 %1034 = phi [^while.header53, i32 0] [^b161, i32 %1450];
    i32 %1035 = phi [^while.header53, i32 0] [^b161, i32 %1447];
    i1 %1036 = scmp lt i32 %1034, i32 16;
    cbr i1 %1036(prob = 0.97), ^while.body36, ^b126;
^while.header63:
    i32 %1037 = phi [^while.header56, i32 %887] [^b156, i32 %1037];
    i32 %1038 = phi [^while.header56, i32 %888] [^b156, i32 %1038];
    i32 %1039 = phi [^while.header56, i32 %889] [^b156, i32 %1039];
    i32 %1040 = phi [^while.header56, i32 %890] [^b156, i32 %1040];
    i32 %1041 = phi [^while.header56, i32 %891] [^b156, i32 %1041];
    i32 %1042 = phi [^while.header56, i32 %892] [^b156, i32 %1042];
    i32 %1043 = phi [^while.header56, i32 %893] [^b156, i32 %1043];
    i32 %1044 = phi [^while.header56, i32 %887] [^b156, i32 %1433];
    i32 %1045 = phi [^while.header56, i32 %888] [^b156, i32 %1432];
    i32 %1046 = phi [^while.header56, i32 0] [^b156, i32 %1434];
    i32 %1047 = phi [^while.header56, i32 0] [^b156, i32 %1431];
    i1 %1048 = scmp lt i32 %1046, i32 16;
    cbr i1 %1048(prob = 0.97), ^while.body37, ^while.header74;
^if.else15:
    i32 %1049 = srem i32 %697, i32 2;
    i1 %1050 = scmp neq i32 %1049, i32 0;
    cbr i1 %1050(prob = 0.5), ^if.then40, ^b123;
^while.header64:
    i32 %1051 = phi [^while.header86, i32 %1619] [^b88, i32 %807];
    i32 %1052 = phi [^while.header86, i32 %1610] [^b88, i32 %807];
    i32 %1053 = phi [^while.header86, i32 %1611] [^b88, i32 %805];
    i32 %1054 = phi [^while.header86, i32 %1612] [^b88, i32 %806];
    i32 %1055 = phi [^while.header86, i32 %1613] [^b88, i32 %808];
    i32 %1056 = phi [^while.header86, i32 %1614] [^b88, i32 %809];
    i32 %1057 = phi [^while.header86, i32 %1615] [^b88, i32 %810];
    i1 %1058 = scmp neq i32 %1051, i32 0;
    cbr i1 %1058(prob = 0.97), ^while.header69, ^b133;
^while.body32:
    i32 %1059 = srem i32 %913, i32 2;
    i1 %1060 = scmp neq i32 %1059, i32 0;
    cbr i1 %1060(prob = 0.5), ^b124, ^b134;
^b116:
    i1 %1061 = scmp gt i32 %862, i32 32767;
    cbr i1 %1061(prob = 0.5), ^if.then42, ^if.else16;
^b117:
    i1 %1062 = phi [^while.body25, i1 false] [^b100, i1 %938];
    cbr i1 %1062(prob = 0.5), ^if.then41, ^b127;
^while.body33:
    i32 %1063 = srem i32 %924, i32 2;
    i1 %1064 = scmp neq i32 %1063, i32 0;
    cbr i1 %1064(prob = 0.5), ^b125, ^b135;
^b118:
    i1 %1065 = phi [^while.body26, i1 false] [^b103, i1 %948];
    cbr i1 %1065(prob = 0.5), ^if.then43, ^b128;
^b119:
    i1 %1066 = phi [^while.body27, i1 false] [^b104, i1 %950];
    cbr i1 %1066(prob = 0.5), ^if.then44, ^b129;
^while.header65:
    i32 %1067 = phi [^while.header87, i32 %1634] [^b91, i32 %830];
    i32 %1068 = phi [^while.header87, i32 %1625] [^b91, i32 %830];
    i32 %1069 = phi [^while.header87, i32 %1626] [^b91, i32 %828];
    i32 %1070 = phi [^while.header87, i32 %1627] [^b91, i32 %829];
    i32 %1071 = phi [^while.header87, i32 %1628] [^b91, i32 %831];
    i32 %1072 = phi [^while.header87, i32 %1629] [^b91, i32 %832];
    i32 %1073 = phi [^while.header87, i32 %1630] [^b91, i32 %833];
    i1 %1074 = scmp neq i32 %1067, i32 0;
    cbr i1 %1074(prob = 0.97), ^while.header72, ^b136;
^while.header66:
    i32 %1075 = phi [^b99, i32 %707] [^while.header88, i32 %1645];
    i32 %1076 = phi [^b99, i32 %705] [^while.header88, i32 %1636];
    i32 %1077 = phi [^b99, i32 %706] [^while.header88, i32 %1637];
    i32 %1078 = phi [^b99, i32 %707] [^while.header88, i32 %1638];
    i32 %1079 = phi [^b99, i32 %708] [^while.header88, i32 %1639];
    i32 %1080 = phi [^b99, i32 %709] [^while.header88, i32 %1640];
    i32 %1081 = phi [^b99, i32 %710] [^while.header88, i32 %1641];
    i1 %1082 = scmp neq i32 %1075, i32 0;
    cbr i1 %1082(prob = 0.97), ^while.header73, ^b114;
^b120:
    i1 %1083 = phi [^while.body28, i1 false] [^b105, i1 %955];
    cbr i1 %1083(prob = 0.5), ^if.then45, ^b130;
^b121:
    i1 %1084 = phi [^b106, i1 %957] [^while.body29, i1 false];
    cbr i1 %1084(prob = 0.5), ^if.then46, ^b131;
^while.header67:
    i32 %1085 = phi [^b163, i32 %1085] [^b92, i32 %718];
    i32 %1086 = phi [^b163, i32 %1086] [^b92, i32 %719];
    i32 %1087 = phi [^b163, i32 %1087] [^b92, i32 %720];
    i32 %1088 = phi [^b163, i32 %1088] [^b92, i32 %721];
    i32 %1089 = phi [^b163, i32 %1089] [^b92, i32 %722];
    i32 %1090 = phi [^b163, i32 %1461] [^b92, i32 65535];
    i32 %1091 = phi [^b163, i32 %1460] [^b92, i32 %834];
    i32 %1092 = phi [^b163, i32 %1462] [^b92, i32 0];
    i32 %1093 = phi [^b163, i32 %1459] [^b92, i32 0];
    i1 %1094 = scmp lt i32 %1092, i32 16;
    cbr i1 %1094(prob = 0.97), ^while.body38, ^while.header32;
^while.header68:
    i32 %1095 = phi [^b164, i32 %1095] [^b93, i32 %728];
    i32 %1096 = phi [^b164, i32 %1096] [^b93, i32 %729];
    i32 %1097 = phi [^b164, i32 %1097] [^b93, i32 %730];
    i32 %1098 = phi [^b164, i32 %1098] [^b93, i32 %731];
    i32 %1099 = phi [^b164, i32 %1099] [^b93, i32 %732];
    i32 %1100 = phi [^b164, i32 %1465] [^b93, i32 65535];
    i32 %1101 = phi [^b164, i32 %1464] [^b93, i32 %835];
    i32 %1102 = phi [^b164, i32 %1466] [^b93, i32 0];
    i32 %1103 = phi [^b164, i32 %1463] [^b93, i32 0];
    i1 %1104 = scmp lt i32 %1102, i32 16;
    cbr i1 %1104(prob = 0.97), ^while.body39, ^while.header33;
^if.then40:
    i32* %1105 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %699];
    i32 %1106 = load i32* %1105;
    i32 %1107 = add i32 %700, i32 %1106;
    ubr ^b123;
^b122:
    i32 %1108 = srem i32 %901, i32 2;
    i1 %1109 = scmp neq i32 %1108, i32 0;
    ubr ^b132;
^b123:
    i32 %1110 = phi [^if.then40, i32 %1107] [^if.else15, i32 %700] [^if.then39, i32 %700];
    i32 %1111 = sdiv i32 %698, i32 2;
    i32 %1112 = sdiv i32 %697, i32 2;
    i32 %1113 = add i32 %699, i32 1;
    ubr ^while.header47;
^b124:
    i32 %1114 = srem i32 %912, i32 2;
    i1 %1115 = scmp neq i32 %1114, i32 0;
    ubr ^b134;
^if.then41:
    i32* %1116 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %713];
    i32 %1117 = load i32* %1116;
    i32 %1118 = add i32 %714, i32 %1117;
    ubr ^b127;
^b125:
    i32 %1119 = srem i32 %923, i32 2;
    i1 %1120 = scmp neq i32 %1119, i32 0;
    ubr ^b135;
^if.then42:
    i32 %1121 = load i32* %1;
    i32 %1122 = sdiv i32 %862, i32 %1121;
    i32 %1123 = add i32 %1122, i32 65536;
    i32 %1124 = load i32* %15;
    i32 %1125 = sub i32 %1123, i32 %1124;
    ubr ^b139;
^if.then43:
    i32* %1126 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %725];
    i32 %1127 = load i32* %1126;
    i32 %1128 = add i32 %726, i32 %1127;
    ubr ^b128;
^if.then44:
    i32* %1129 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %735];
    i32 %1130 = load i32* %1129;
    i32 %1131 = add i32 %736, i32 %1130;
    ubr ^b129;
^if.then45:
    i32* %1132 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %746];
    i32 %1133 = load i32* %1132;
    i32 %1134 = add i32 %747, i32 %1133;
    ubr ^b130;
^if.then46:
    i32* %1135 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %756];
    i32 %1136 = load i32* %1135;
    i32 %1137 = add i32 %757, i32 %1136;
    ubr ^b131;
^if.then47:
    i32 %1138 = srem i32 %843, i32 2;
    i1 %1139 = scmp eq i32 %1138, i32 0;
    cbr i1 %1139(prob = 0.5), ^if.then48, ^b137;
^b126:
    i32 %1140 = mul i32 %1035, i32 2;
    ubr ^while.header77;
^b127:
    i32 %1141 = phi [^if.then41, i32 %1118] [^b117, i32 %714];
    i32 %1142 = sdiv i32 %712, i32 2;
    i32 %1143 = sdiv i32 %711, i32 2;
    i32 %1144 = add i32 %713, i32 1;
    ubr ^while.header48;
^if.else16:
    i32 %1145 = load i32* %1;
    i32 %1146 = sdiv i32 %862, i32 %1145;
    ubr ^b139;
^b128:
    i32 %1147 = phi [^if.then43, i32 %1128] [^b118, i32 %726];
    i32 %1148 = sdiv i32 %724, i32 2;
    i32 %1149 = sdiv i32 %723, i32 2;
    i32 %1150 = add i32 %725, i32 1;
    ubr ^while.header49;
^b129:
    i32 %1151 = phi [^if.then44, i32 %1131] [^b119, i32 %736];
    i32 %1152 = sdiv i32 %734, i32 2;
    i32 %1153 = sdiv i32 %733, i32 2;
    i32 %1154 = add i32 %735, i32 1;
    ubr ^while.header50;
^while.body34:
    i32 %1155 = srem i32 %1008, i32 2;
    i1 %1156 = scmp neq i32 %1155, i32 0;
    cbr i1 %1156(prob = 0.5), ^if.then53, ^if.else19;
^while.body35:
    i32 %1157 = srem i32 %1020, i32 2;
    i1 %1158 = scmp neq i32 %1157, i32 0;
    cbr i1 %1158(prob = 0.5), ^if.then54, ^if.else20;
^b130:
    i32 %1159 = phi [^if.then45, i32 %1134] [^b120, i32 %747];
    i32 %1160 = sdiv i32 %745, i32 2;
    i32 %1161 = sdiv i32 %744, i32 2;
    i32 %1162 = add i32 %746, i32 1;
    ubr ^while.header51;
^b131:
    i32 %1163 = phi [^if.then46, i32 %1137] [^b121, i32 %757];
    i32 %1164 = sdiv i32 %755, i32 2;
    i32 %1165 = sdiv i32 %754, i32 2;
    i32 %1166 = add i32 %756, i32 1;
    ubr ^while.header52;
^if.else17:
    i32 %1167 = srem i32 %843, i32 2;
    i1 %1168 = scmp neq i32 %1167, i32 0;
    cbr i1 %1168(prob = 0.5), ^if.then48, ^b137;
^while.body36:
    i32 %1169 = srem i32 %1033, i32 2;
    i1 %1170 = scmp neq i32 %1169, i32 0;
    cbr i1 %1170(prob = 0.5), ^b138, ^b148;
^while.body37:
    i32 %1171 = srem i32 %1045, i32 2;
    i1 %1172 = scmp neq i32 %1171, i32 0;
    cbr i1 %1172(prob = 0.5), ^if.then56, ^if.else22;
^while.header69:
    i32 %1173 = phi [^b172, i32 %1173] [^while.header64, i32 %1051];
    i32 %1174 = phi [^b172, i32 %1174] [^while.header64, i32 %1052];
    i32 %1175 = phi [^b172, i32 %1175] [^while.header64, i32 %1053];
    i32 %1176 = phi [^b172, i32 %1176] [^while.header64, i32 %1054];
    i32 %1177 = phi [^b172, i32 %1177] [^while.header64, i32 %1055];
    i32 %1178 = phi [^b172, i32 %1178] [^while.header64, i32 %1056];
    i32 %1179 = phi [^b172, i32 %1179] [^while.header64, i32 %1057];
    i32 %1180 = phi [^b172, i32 %1552] [^while.header64, i32 %1051];
    i32 %1181 = phi [^b172, i32 %1551] [^while.header64, i32 %1052];
    i32 %1182 = phi [^b172, i32 %1553] [^while.header64, i32 0];
    i32 %1183 = phi [^b172, i32 %1550] [^while.header64, i32 0];
    i1 %1184 = scmp lt i32 %1182, i32 16;
    cbr i1 %1184(prob = 0.97), ^while.body40, ^while.header78;
^while.body38:
    i32 %1185 = srem i32 %1091, i32 2;
    i1 %1186 = scmp neq i32 %1185, i32 0;
    cbr i1 %1186(prob = 0.5), ^b140, ^b149;
^while.body39:
    i32 %1187 = srem i32 %1101, i32 2;
    i1 %1188 = scmp neq i32 %1187, i32 0;
    cbr i1 %1188(prob = 0.5), ^b141, ^b150;
^while.header70:
    i32 %1189 = phi [^while.header60, i32 %1010] [^b179, i32 %1189];
    i32 %1190 = phi [^while.header60, i32 %1002] [^b179, i32 %1190];
    i32 %1191 = phi [^while.header60, i32 %1003] [^b179, i32 %1191];
    i32 %1192 = phi [^while.header60, i32 %1004] [^b179, i32 %1192];
    i32 %1193 = phi [^while.header60, i32 %1005] [^b179, i32 %1193];
    i32 %1194 = phi [^while.header60, i32 %1006] [^b179, i32 %1194];
    i32 %1195 = phi [^while.header60, i32 %1000] [^b179, i32 %1583];
    i32 %1196 = phi [^while.header60, i32 %1001] [^b179, i32 %1582];
    i32 %1197 = phi [^while.header60, i32 0] [^b179, i32 %1584];
    i32 %1198 = phi [^while.header60, i32 0] [^b179, i32 %1581];
    i1 %1199 = scmp lt i32 %1197, i32 16;
    cbr i1 %1199(prob = 0.97), ^while.body41, ^b142;
^while.header71:
    i32 %1200 = phi [^while.header61, i32 %1022] [^b180, i32 %1200];
    i32 %1201 = phi [^while.header61, i32 %1014] [^b180, i32 %1201];
    i32 %1202 = phi [^while.header61, i32 %1015] [^b180, i32 %1202];
    i32 %1203 = phi [^while.header61, i32 %1016] [^b180, i32 %1203];
    i32 %1204 = phi [^while.header61, i32 %1017] [^b180, i32 %1204];
    i32 %1205 = phi [^while.header61, i32 %1018] [^b180, i32 %1205];
    i32 %1206 = phi [^while.header61, i32 %1012] [^b180, i32 %1587];
    i32 %1207 = phi [^while.header61, i32 %1013] [^b180, i32 %1586];
    i32 %1208 = phi [^while.header61, i32 0] [^b180, i32 %1588];
    i32 %1209 = phi [^while.header61, i32 0] [^b180, i32 %1585];
    i1 %1210 = scmp lt i32 %1208, i32 16;
    cbr i1 %1210(prob = 0.97), ^while.body42, ^b143;
^while.header72:
    i32 %1211 = phi [^while.header65, i32 %1067] [^b174, i32 %1211];
    i32 %1212 = phi [^while.header65, i32 %1068] [^b174, i32 %1212];
    i32 %1213 = phi [^while.header65, i32 %1069] [^b174, i32 %1213];
    i32 %1214 = phi [^while.header65, i32 %1070] [^b174, i32 %1214];
    i32 %1215 = phi [^while.header65, i32 %1071] [^b174, i32 %1215];
    i32 %1216 = phi [^while.header65, i32 %1072] [^b174, i32 %1216];
    i32 %1217 = phi [^while.header65, i32 %1073] [^b174, i32 %1217];
    i32 %1218 = phi [^while.header65, i32 %1067] [^b174, i32 %1564];
    i32 %1219 = phi [^while.header65, i32 %1068] [^b174, i32 %1563];
    i32 %1220 = phi [^while.header65, i32 0] [^b174, i32 %1565];
    i32 %1221 = phi [^while.header65, i32 0] [^b174, i32 %1562];
    i1 %1222 = scmp lt i32 %1220, i32 16;
    cbr i1 %1222(prob = 0.97), ^while.body43, ^while.header80;
^while.header73:
    i32 %1223 = phi [^while.header66, i32 %1075] [^b175, i32 %1223];
    i32 %1224 = phi [^while.header66, i32 %1076] [^b175, i32 %1224];
    i32 %1225 = phi [^while.header66, i32 %1077] [^b175, i32 %1225];
    i32 %1226 = phi [^while.header66, i32 %1078] [^b175, i32 %1226];
    i32 %1227 = phi [^while.header66, i32 %1079] [^b175, i32 %1227];
    i32 %1228 = phi [^while.header66, i32 %1080] [^b175, i32 %1228];
    i32 %1229 = phi [^while.header66, i32 %1081] [^b175, i32 %1229];
    i32 %1230 = phi [^while.header66, i32 %1075] [^b175, i32 %1568];
    i32 %1231 = phi [^while.header66, i32 %1076] [^b175, i32 %1567];
    i32 %1232 = phi [^while.header66, i32 0] [^b175, i32 %1569];
    i32 %1233 = phi [^while.header66, i32 0] [^b175, i32 %1566];
    i1 %1234 = scmp lt i32 %1232, i32 16;
    cbr i1 %1234(prob = 0.97), ^while.body44, ^while.header81;
^b132:
    i1 %1235 = phi [^while.body31, i1 false] [^b122, i1 %1109];
    cbr i1 %1235(prob = 0.5), ^if.then49, ^b144;
^while.header74:
    i32 %1236 = phi [^while.header63, i32 %1047] [^b181, i32 %1236];
    i32 %1237 = phi [^while.header63, i32 %1039] [^b181, i32 %1237];
    i32 %1238 = phi [^while.header63, i32 %1040] [^b181, i32 %1238];
    i32 %1239 = phi [^while.header63, i32 %1041] [^b181, i32 %1239];
    i32 %1240 = phi [^while.header63, i32 %1042] [^b181, i32 %1240];
    i32 %1241 = phi [^while.header63, i32 %1043] [^b181, i32 %1241];
    i32 %1242 = phi [^while.header63, i32 %1037] [^b181, i32 %1591];
    i32 %1243 = phi [^while.header63, i32 %1038] [^b181, i32 %1590];
    i32 %1244 = phi [^while.header63, i32 0] [^b181, i32 %1592];
    i32 %1245 = phi [^while.header63, i32 0] [^b181, i32 %1589];
    i1 %1246 = scmp lt i32 %1244, i32 16;
    cbr i1 %1246(prob = 0.97), ^while.body45, ^b145;
^b133:
    i1 %1247 = scmp gt i32 %1054, i32 32767;
    cbr i1 %1247(prob = 0.5), ^if.then50, ^if.else18;
^b134:
    i1 %1248 = phi [^b124, i1 %1115] [^while.body32, i1 false];
    cbr i1 %1248(prob = 0.5), ^if.then51, ^b146;
^while.header75:
    i32 %1249 = phi [^while.header89, i32 %1709] [^b114, i32 %995];
    i32 %1250 = phi [^while.header89, i32 %1700] [^b114, i32 %995];
    i32 %1251 = phi [^while.header89, i32 %1701] [^b114, i32 %993];
    i32 %1252 = phi [^while.header89, i32 %1702] [^b114, i32 %994];
    i32 %1253 = phi [^while.header89, i32 %1703] [^b114, i32 %996];
    i32 %1254 = phi [^while.header89, i32 %1704] [^b114, i32 %997];
    i32 %1255 = phi [^while.header89, i32 %1705] [^b114, i32 %998];
    i1 %1256 = scmp neq i32 %1249, i32 0;
    cbr i1 %1256(prob = 0.97), ^while.header79, ^b151;
^b135:
    i1 %1257 = phi [^while.body33, i1 false] [^b125, i1 %1120];
    cbr i1 %1257(prob = 0.5), ^if.then52, ^b147;
^while.header76:
    i32 %1258 = phi [^b182, i32 %1258] [^b115, i32 %907];
    i32 %1259 = phi [^b182, i32 %1259] [^b115, i32 %908];
    i32 %1260 = phi [^b182, i32 %1260] [^b115, i32 %909];
    i32 %1261 = phi [^b182, i32 %1261] [^b115, i32 %910];
    i32 %1262 = phi [^b182, i32 %1262] [^b115, i32 %911];
    i32 %1263 = phi [^b182, i32 %1595] [^b115, i32 65535];
    i32 %1264 = phi [^b182, i32 %1594] [^b115, i32 %999];
    i32 %1265 = phi [^b182, i32 %1596] [^b115, i32 0];
    i32 %1266 = phi [^b182, i32 %1593] [^b115, i32 0];
    i1 %1267 = scmp lt i32 %1265, i32 16;
    cbr i1 %1267(prob = 0.97), ^while.body46, ^while.header43;
^b136:
    i1 %1268 = scmp gt i32 %1070, i32 32767;
    cbr i1 %1268(prob = 0.5), ^if.then55, ^if.else21;
^if.then48:
    i32* %1269 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %845];
    i32 %1270 = load i32* %1269;
    i32 %1271 = add i32 %846, i32 %1270;
    ubr ^b137;
^b137:
    i32 %1272 = phi [^if.then48, i32 %1271] [^if.else17, i32 %846] [^if.then47, i32 %846];
    i32 %1273 = sdiv i32 %844, i32 2;
    i32 %1274 = sdiv i32 %843, i32 2;
    i32 %1275 = add i32 %845, i32 1;
    ubr ^while.header53;
^b138:
    i32 %1276 = srem i32 %1032, i32 2;
    i1 %1277 = scmp neq i32 %1276, i32 0;
    ubr ^b148;
^b139:
    i32 %1278 = phi [^if.else16, i32 %1146] [^if.then42, i32 %1125];
    ubr ^while.header22;
^b140:
    i32 %1279 = srem i32 %1090, i32 2;
    i1 %1280 = scmp neq i32 %1279, i32 0;
    ubr ^b149;
^b141:
    i32 %1281 = srem i32 %1100, i32 2;
    i1 %1282 = scmp neq i32 %1281, i32 0;
    ubr ^b150;
^if.then49:
    i32* %1283 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %903];
    i32 %1284 = load i32* %1283;
    i32 %1285 = add i32 %904, i32 %1284;
    ubr ^b144;
^if.then50:
    i32 %1286 = load i32* %1;
    i32 %1287 = sdiv i32 %1054, i32 %1286;
    i32 %1288 = add i32 %1287, i32 65536;
    i32 %1289 = load i32* %15;
    i32 %1290 = sub i32 %1288, i32 %1289;
    ubr ^b158;
^if.then51:
    i32* %1291 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %914];
    i32 %1292 = load i32* %1291;
    i32 %1293 = add i32 %915, i32 %1292;
    ubr ^b146;
^if.then52:
    i32* %1294 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %925];
    i32 %1295 = load i32* %1294;
    i32 %1296 = add i32 %926, i32 %1295;
    ubr ^b147;
^if.then53:
    i32 %1297 = srem i32 %1007, i32 2;
    i1 %1298 = scmp eq i32 %1297, i32 0;
    cbr i1 %1298(prob = 0.5), ^if.then57, ^b152;
^if.then54:
    i32 %1299 = srem i32 %1019, i32 2;
    i1 %1300 = scmp eq i32 %1299, i32 0;
    cbr i1 %1300(prob = 0.5), ^if.then58, ^b153;
^if.then55:
    i32 %1301 = load i32* %1;
    i32 %1302 = sdiv i32 %1070, i32 %1301;
    i32 %1303 = add i32 %1302, i32 65536;
    i32 %1304 = load i32* %15;
    i32 %1305 = sub i32 %1303, i32 %1304;
    ubr ^b160;
^b142:
    i32 %1306 = mul i32 %1198, i32 2;
    ubr ^while.header82;
^b143:
    i32 %1307 = mul i32 %1209, i32 2;
    ubr ^while.header83;
^b144:
    i32 %1308 = phi [^if.then49, i32 %1285] [^b132, i32 %904];
    i32 %1309 = sdiv i32 %902, i32 2;
    i32 %1310 = sdiv i32 %901, i32 2;
    i32 %1311 = add i32 %903, i32 1;
    ubr ^while.header57;
^if.then56:
    i32 %1312 = srem i32 %1044, i32 2;
    i1 %1313 = scmp eq i32 %1312, i32 0;
    cbr i1 %1313(prob = 0.5), ^if.then59, ^b156;
^b145:
    i32 %1314 = mul i32 %1245, i32 2;
    ubr ^while.header84;
^if.else18:
    i32 %1315 = load i32* %1;
    i32 %1316 = sdiv i32 %1054, i32 %1315;
    ubr ^b158;
^b146:
    i32 %1317 = phi [^if.then51, i32 %1293] [^b134, i32 %915];
    i32 %1318 = sdiv i32 %913, i32 2;
    i32 %1319 = sdiv i32 %912, i32 2;
    i32 %1320 = add i32 %914, i32 1;
    ubr ^while.header58;
^while.body40:
    i32 %1321 = srem i32 %1181, i32 2;
    i1 %1322 = scmp neq i32 %1321, i32 0;
    cbr i1 %1322(prob = 0.5), ^if.then63, ^if.else23;
^b147:
    i32 %1323 = phi [^if.then52, i32 %1296] [^b135, i32 %926];
    i32 %1324 = sdiv i32 %924, i32 2;
    i32 %1325 = sdiv i32 %923, i32 2;
    i32 %1326 = add i32 %925, i32 1;
    ubr ^while.header59;
^if.else19:
    i32 %1327 = srem i32 %1007, i32 2;
    i1 %1328 = scmp neq i32 %1327, i32 0;
    cbr i1 %1328(prob = 0.5), ^if.then57, ^b152;
^if.else20:
    i32 %1329 = srem i32 %1019, i32 2;
    i1 %1330 = scmp neq i32 %1329, i32 0;
    cbr i1 %1330(prob = 0.5), ^if.then58, ^b153;
^if.else21:
    i32 %1331 = load i32* %1;
    i32 %1332 = sdiv i32 %1070, i32 %1331;
    ubr ^b160;
^while.body41:
    i32 %1333 = srem i32 %1196, i32 2;
    i1 %1334 = scmp neq i32 %1333, i32 0;
    cbr i1 %1334(prob = 0.5), ^b154, ^b167;
^while.body42:
    i32 %1335 = srem i32 %1207, i32 2;
    i1 %1336 = scmp neq i32 %1335, i32 0;
    cbr i1 %1336(prob = 0.5), ^b155, ^b168;
^while.body43:
    i32 %1337 = srem i32 %1219, i32 2;
    i1 %1338 = scmp neq i32 %1337, i32 0;
    cbr i1 %1338(prob = 0.5), ^if.then65, ^if.else25;
^while.body44:
    i32 %1339 = srem i32 %1231, i32 2;
    i1 %1340 = scmp neq i32 %1339, i32 0;
    cbr i1 %1340(prob = 0.5), ^if.then66, ^if.else26;
^b148:
    i1 %1341 = phi [^b138, i1 %1277] [^while.body36, i1 false];
    cbr i1 %1341(prob = 0.5), ^if.then60, ^b161;
^if.else22:
    i32 %1342 = srem i32 %1044, i32 2;
    i1 %1343 = scmp neq i32 %1342, i32 0;
    cbr i1 %1343(prob = 0.5), ^if.then59, ^b156;
^while.header77:
    i32 %1344 = phi [^b193, i32 %1344] [^b126, i32 %1026];
    i32 %1345 = phi [^b193, i32 %1345] [^b126, i32 %1027];
    i32 %1346 = phi [^b193, i32 %1346] [^b126, i32 %1028];
    i32 %1347 = phi [^b193, i32 %1347] [^b126, i32 %1029];
    i32 %1348 = phi [^b193, i32 %1348] [^b126, i32 %1030];
    i32 %1349 = phi [^b193, i32 %1349] [^b126, i32 %1031];
    i32 %1350 = phi [^b193, i32 %1676] [^b126, i32 65535];
    i32 %1351 = phi [^b193, i32 %1675] [^b126, i32 %1140];
    i32 %1352 = phi [^b193, i32 %1677] [^b126, i32 0];
    i32 %1353 = phi [^b193, i32 %1674] [^b126, i32 0];
    i1 %1354 = scmp lt i32 %1352, i32 16;
    cbr i1 %1354(prob = 0.97), ^while.body47, ^while.header46;
^while.body45:
    i32 %1355 = srem i32 %1243, i32 2;
    i1 %1356 = scmp neq i32 %1355, i32 0;
    cbr i1 %1356(prob = 0.5), ^b157, ^b169;
^while.body46:
    i32 %1357 = srem i32 %1264, i32 2;
    i1 %1358 = scmp neq i32 %1357, i32 0;
    cbr i1 %1358(prob = 0.5), ^b159, ^b170;
^while.header78:
    i32 %1359 = phi [^while.header69, i32 %1183] [^b194, i32 %1359];
    i32 %1360 = phi [^while.header69, i32 %1175] [^b194, i32 %1360];
    i32 %1361 = phi [^while.header69, i32 %1176] [^b194, i32 %1361];
    i32 %1362 = phi [^while.header69, i32 %1177] [^b194, i32 %1362];
    i32 %1363 = phi [^while.header69, i32 %1178] [^b194, i32 %1363];
    i32 %1364 = phi [^while.header69, i32 %1179] [^b194, i32 %1364];
    i32 %1365 = phi [^while.header69, i32 %1173] [^b194, i32 %1680];
    i32 %1366 = phi [^while.header69, i32 %1174] [^b194, i32 %1679];
    i32 %1367 = phi [^while.header69, i32 0] [^b194, i32 %1681];
    i32 %1368 = phi [^while.header69, i32 0] [^b194, i32 %1678];
    i1 %1369 = scmp lt i32 %1367, i32 16;
    cbr i1 %1369(prob = 0.97), ^while.body48, ^b162;
^while.header79:
    i32 %1370 = phi [^b191, i32 %1370] [^while.header75, i32 %1249];
    i32 %1371 = phi [^b191, i32 %1371] [^while.header75, i32 %1250];
    i32 %1372 = phi [^b191, i32 %1372] [^while.header75, i32 %1251];
    i32 %1373 = phi [^b191, i32 %1373] [^while.header75, i32 %1252];
    i32 %1374 = phi [^b191, i32 %1374] [^while.header75, i32 %1253];
    i32 %1375 = phi [^b191, i32 %1375] [^while.header75, i32 %1254];
    i32 %1376 = phi [^b191, i32 %1376] [^while.header75, i32 %1255];
    i32 %1377 = phi [^b191, i32 %1664] [^while.header75, i32 %1249];
    i32 %1378 = phi [^b191, i32 %1663] [^while.header75, i32 %1250];
    i32 %1379 = phi [^b191, i32 %1665] [^while.header75, i32 0];
    i32 %1380 = phi [^b191, i32 %1662] [^while.header75, i32 0];
    i1 %1381 = scmp lt i32 %1379, i32 16;
    cbr i1 %1381(prob = 0.97), ^while.body49, ^while.header85;
^b149:
    i1 %1382 = phi [^while.body38, i1 false] [^b140, i1 %1280];
    cbr i1 %1382(prob = 0.5), ^if.then61, ^b163;
^b150:
    i1 %1383 = phi [^b141, i1 %1282] [^while.body39, i1 false];
    cbr i1 %1383(prob = 0.5), ^if.then62, ^b164;
^while.header80:
    i32 %1384 = phi [^while.header72, i32 %1221] [^b195, i32 %1384];
    i32 %1385 = phi [^while.header72, i32 %1213] [^b195, i32 %1385];
    i32 %1386 = phi [^while.header72, i32 %1214] [^b195, i32 %1386];
    i32 %1387 = phi [^while.header72, i32 %1215] [^b195, i32 %1387];
    i32 %1388 = phi [^while.header72, i32 %1216] [^b195, i32 %1388];
    i32 %1389 = phi [^while.header72, i32 %1217] [^b195, i32 %1389];
    i32 %1390 = phi [^while.header72, i32 %1211] [^b195, i32 %1684];
    i32 %1391 = phi [^while.header72, i32 %1212] [^b195, i32 %1683];
    i32 %1392 = phi [^while.header72, i32 0] [^b195, i32 %1685];
    i32 %1393 = phi [^while.header72, i32 0] [^b195, i32 %1682];
    i1 %1394 = scmp lt i32 %1392, i32 16;
    cbr i1 %1394(prob = 0.97), ^while.body50, ^b165;
^while.header81:
    i32 %1395 = phi [^while.header73, i32 %1233] [^b196, i32 %1395];
    i32 %1396 = phi [^while.header73, i32 %1225] [^b196, i32 %1396];
    i32 %1397 = phi [^while.header73, i32 %1226] [^b196, i32 %1397];
    i32 %1398 = phi [^while.header73, i32 %1227] [^b196, i32 %1398];
    i32 %1399 = phi [^while.header73, i32 %1228] [^b196, i32 %1399];
    i32 %1400 = phi [^while.header73, i32 %1229] [^b196, i32 %1400];
    i32 %1401 = phi [^while.header73, i32 %1223] [^b196, i32 %1688];
    i32 %1402 = phi [^while.header73, i32 %1224] [^b196, i32 %1687];
    i32 %1403 = phi [^while.header73, i32 0] [^b196, i32 %1689];
    i32 %1404 = phi [^while.header73, i32 0] [^b196, i32 %1686];
    i1 %1405 = scmp lt i32 %1403, i32 16;
    cbr i1 %1405(prob = 0.97), ^while.body51, ^b166;
^b151:
    i1 %1406 = scmp gt i32 %1252, i32 32767;
    cbr i1 %1406(prob = 0.5), ^if.then64, ^if.else24;
^if.then57:
    i32* %1407 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1009];
    i32 %1408 = load i32* %1407;
    i32 %1409 = add i32 %1010, i32 %1408;
    ubr ^b152;
^if.then58:
    i32* %1410 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1021];
    i32 %1411 = load i32* %1410;
    i32 %1412 = add i32 %1022, i32 %1411;
    ubr ^b153;
^if.then59:
    i32* %1413 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1046];
    i32 %1414 = load i32* %1413;
    i32 %1415 = add i32 %1414, i32 %1047;
    ubr ^b156;
^b152:
    i32 %1416 = phi [^if.then57, i32 %1409] [^if.else19, i32 %1010] [^if.then53, i32 %1010];
    i32 %1417 = sdiv i32 %1008, i32 2;
    i32 %1418 = sdiv i32 %1007, i32 2;
    i32 %1419 = add i32 %1009, i32 1;
    ubr ^while.header60;
^b153:
    i32 %1420 = phi [^if.then58, i32 %1412] [^if.else20, i32 %1022] [^if.then54, i32 %1022];
    i32 %1421 = sdiv i32 %1020, i32 2;
    i32 %1422 = sdiv i32 %1019, i32 2;
    i32 %1423 = add i32 %1021, i32 1;
    ubr ^while.header61;
^b154:
    i32 %1424 = srem i32 %1195, i32 2;
    i1 %1425 = scmp neq i32 %1424, i32 0;
    ubr ^b167;
^b155:
    i32 %1426 = srem i32 %1206, i32 2;
    i1 %1427 = scmp neq i32 %1426, i32 0;
    ubr ^b168;
^if.then60:
    i32* %1428 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1034];
    i32 %1429 = load i32* %1428;
    i32 %1430 = add i32 %1429, i32 %1035;
    ubr ^b161;
^b156:
    i32 %1431 = phi [^if.then59, i32 %1415] [^if.else22, i32 %1047] [^if.then56, i32 %1047];
    i32 %1432 = sdiv i32 %1045, i32 2;
    i32 %1433 = sdiv i32 %1044, i32 2;
    i32 %1434 = add i32 %1046, i32 1;
    ubr ^while.header63;
^b157:
    i32 %1435 = srem i32 %1242, i32 2;
    i1 %1436 = scmp neq i32 %1435, i32 0;
    ubr ^b169;
^b158:
    i32 %1437 = phi [^if.else18, i32 %1316] [^if.then50, i32 %1290];
    ubr ^while.header30;
^b159:
    i32 %1438 = srem i32 %1263, i32 2;
    i1 %1439 = scmp neq i32 %1438, i32 0;
    ubr ^b170;
^if.then61:
    i32* %1440 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1092];
    i32 %1441 = load i32* %1440;
    i32 %1442 = add i32 %1093, i32 %1441;
    ubr ^b163;
^if.then62:
    i32* %1443 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1102];
    i32 %1444 = load i32* %1443;
    i32 %1445 = add i32 %1103, i32 %1444;
    ubr ^b164;
^b160:
    i32 %1446 = phi [^if.else21, i32 %1332] [^if.then55, i32 %1305];
    ubr ^while.header34;
^b161:
    i32 %1447 = phi [^if.then60, i32 %1430] [^b148, i32 %1035];
    i32 %1448 = sdiv i32 %1033, i32 2;
    i32 %1449 = sdiv i32 %1032, i32 2;
    i32 %1450 = add i32 %1034, i32 1;
    ubr ^while.header62;
^if.then63:
    i32 %1451 = srem i32 %1180, i32 2;
    i1 %1452 = scmp eq i32 %1451, i32 0;
    cbr i1 %1452(prob = 0.5), ^if.then67, ^b172;
^if.then64:
    i32 %1453 = load i32* %1;
    i32 %1454 = sdiv i32 %1252, i32 %1453;
    i32 %1455 = add i32 %1454, i32 65536;
    i32 %1456 = load i32* %15;
    i32 %1457 = sub i32 %1455, i32 %1456;
    ubr ^b178;
^b162:
    i32 %1458 = mul i32 %1368, i32 2;
    ubr ^while.header86;
^b163:
    i32 %1459 = phi [^if.then61, i32 %1442] [^b149, i32 %1093];
    i32 %1460 = sdiv i32 %1091, i32 2;
    i32 %1461 = sdiv i32 %1090, i32 2;
    i32 %1462 = add i32 %1092, i32 1;
    ubr ^while.header67;
^b164:
    i32 %1463 = phi [^if.then62, i32 %1445] [^b150, i32 %1103];
    i32 %1464 = sdiv i32 %1101, i32 2;
    i32 %1465 = sdiv i32 %1100, i32 2;
    i32 %1466 = add i32 %1102, i32 1;
    ubr ^while.header68;
^if.then65:
    i32 %1467 = srem i32 %1218, i32 2;
    i1 %1468 = scmp eq i32 %1467, i32 0;
    cbr i1 %1468(prob = 0.5), ^if.then68, ^b174;
^if.then66:
    i32 %1469 = srem i32 %1230, i32 2;
    i1 %1470 = scmp eq i32 %1469, i32 0;
    cbr i1 %1470(prob = 0.5), ^if.then69, ^b175;
^b165:
    i32 %1471 = mul i32 %1393, i32 2;
    ubr ^while.header87;
^b166:
    i32 %1472 = mul i32 %1404, i32 2;
    ubr ^while.header88;
^while.body47:
    i32 %1473 = srem i32 %1351, i32 2;
    i1 %1474 = scmp neq i32 %1473, i32 0;
    cbr i1 %1474(prob = 0.5), ^b171, ^b184;
^if.else23:
    i32 %1475 = srem i32 %1180, i32 2;
    i1 %1476 = scmp neq i32 %1475, i32 0;
    cbr i1 %1476(prob = 0.5), ^if.then67, ^b172;
^if.else24:
    i32 %1477 = load i32* %1;
    i32 %1478 = sdiv i32 %1252, i32 %1477;
    ubr ^b178;
^while.body48:
    i32 %1479 = srem i32 %1366, i32 2;
    i1 %1480 = scmp neq i32 %1479, i32 0;
    cbr i1 %1480(prob = 0.5), ^b173, ^b185;
^while.body49:
    i32 %1481 = srem i32 %1378, i32 2;
    i1 %1482 = scmp neq i32 %1481, i32 0;
    cbr i1 %1482(prob = 0.5), ^if.then74, ^if.else27;
^b167:
    i1 %1483 = phi [^b154, i1 %1425] [^while.body41, i1 false];
    cbr i1 %1483(prob = 0.5), ^if.then70, ^b179;
^b168:
    i1 %1484 = phi [^while.body42, i1 false] [^b155, i1 %1427];
    cbr i1 %1484(prob = 0.5), ^if.then71, ^b180;
^if.else25:
    i32 %1485 = srem i32 %1218, i32 2;
    i1 %1486 = scmp neq i32 %1485, i32 0;
    cbr i1 %1486(prob = 0.5), ^if.then68, ^b174;
^if.else26:
    i32 %1487 = srem i32 %1230, i32 2;
    i1 %1488 = scmp neq i32 %1487, i32 0;
    cbr i1 %1488(prob = 0.5), ^if.then69, ^b175;
^while.header82:
    i32 %1489 = phi [^b204, i32 %1489] [^b142, i32 %1189];
    i32 %1490 = phi [^b204, i32 %1490] [^b142, i32 %1190];
    i32 %1491 = phi [^b204, i32 %1491] [^b142, i32 %1191];
    i32 %1492 = phi [^b204, i32 %1492] [^b142, i32 %1192];
    i32 %1493 = phi [^b204, i32 %1493] [^b142, i32 %1193];
    i32 %1494 = phi [^b204, i32 %1494] [^b142, i32 %1194];
    i32 %1495 = phi [^b204, i32 %1731] [^b142, i32 65535];
    i32 %1496 = phi [^b204, i32 %1730] [^b142, i32 %1306];
    i32 %1497 = phi [^b204, i32 %1732] [^b142, i32 0];
    i32 %1498 = phi [^b204, i32 %1729] [^b142, i32 0];
    i1 %1499 = scmp lt i32 %1497, i32 16;
    cbr i1 %1499(prob = 0.97), ^while.body52, ^while.header54;
^while.header83:
    i32 %1500 = phi [^b205, i32 %1500] [^b143, i32 %1200];
    i32 %1501 = phi [^b205, i32 %1501] [^b143, i32 %1201];
    i32 %1502 = phi [^b205, i32 %1502] [^b143, i32 %1202];
    i32 %1503 = phi [^b205, i32 %1503] [^b143, i32 %1203];
    i32 %1504 = phi [^b205, i32 %1504] [^b143, i32 %1204];
    i32 %1505 = phi [^b205, i32 %1505] [^b143, i32 %1205];
    i32 %1506 = phi [^b205, i32 %1735] [^b143, i32 65535];
    i32 %1507 = phi [^b205, i32 %1734] [^b143, i32 %1307];
    i32 %1508 = phi [^b205, i32 %1736] [^b143, i32 0];
    i32 %1509 = phi [^b205, i32 %1733] [^b143, i32 0];
    i1 %1510 = scmp lt i32 %1508, i32 16;
    cbr i1 %1510(prob = 0.97), ^while.body53, ^while.header55;
^while.body50:
    i32 %1511 = srem i32 %1391, i32 2;
    i1 %1512 = scmp neq i32 %1511, i32 0;
    cbr i1 %1512(prob = 0.5), ^b176, ^b186;
^while.body51:
    i32 %1513 = srem i32 %1402, i32 2;
    i1 %1514 = scmp neq i32 %1513, i32 0;
    cbr i1 %1514(prob = 0.5), ^b177, ^b187;
^b169:
    i1 %1515 = phi [^b157, i1 %1436] [^while.body45, i1 false];
    cbr i1 %1515(prob = 0.5), ^if.then72, ^b181;
^while.header84:
    i32 %1516 = phi [^b206, i32 %1516] [^b145, i32 %1236];
    i32 %1517 = phi [^b206, i32 %1517] [^b145, i32 %1237];
    i32 %1518 = phi [^b206, i32 %1518] [^b145, i32 %1238];
    i32 %1519 = phi [^b206, i32 %1519] [^b145, i32 %1239];
    i32 %1520 = phi [^b206, i32 %1520] [^b145, i32 %1240];
    i32 %1521 = phi [^b206, i32 %1521] [^b145, i32 %1241];
    i32 %1522 = phi [^b206, i32 %1739] [^b145, i32 65535];
    i32 %1523 = phi [^b206, i32 %1738] [^b145, i32 %1314];
    i32 %1524 = phi [^b206, i32 %1740] [^b145, i32 0];
    i32 %1525 = phi [^b206, i32 %1737] [^b145, i32 0];
    i1 %1526 = scmp lt i32 %1524, i32 16;
    cbr i1 %1526(prob = 0.97), ^while.body54, ^while.header56;
^b170:
    i1 %1527 = phi [^while.body46, i1 false] [^b159, i1 %1439];
    cbr i1 %1527(prob = 0.5), ^if.then73, ^b182;
^while.header85:
    i32 %1528 = phi [^while.header79, i32 %1380] [^b207, i32 %1528];
    i32 %1529 = phi [^while.header79, i32 %1372] [^b207, i32 %1529];
    i32 %1530 = phi [^while.header79, i32 %1373] [^b207, i32 %1530];
    i32 %1531 = phi [^while.header79, i32 %1374] [^b207, i32 %1531];
    i32 %1532 = phi [^while.header79, i32 %1375] [^b207, i32 %1532];
    i32 %1533 = phi [^while.header79, i32 %1376] [^b207, i32 %1533];
    i32 %1534 = phi [^while.header79, i32 %1370] [^b207, i32 %1743];
    i32 %1535 = phi [^while.header79, i32 %1371] [^b207, i32 %1742];
    i32 %1536 = phi [^while.header79, i32 0] [^b207, i32 %1744];
    i32 %1537 = phi [^while.header79, i32 0] [^b207, i32 %1741];
    i1 %1538 = scmp lt i32 %1536, i32 16;
    cbr i1 %1538(prob = 0.97), ^while.body55, ^b183;
^if.then67:
    i32* %1539 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1182];
    i32 %1540 = load i32* %1539;
    i32 %1541 = add i32 %1183, i32 %1540;
    ubr ^b172;
^if.then68:
    i32* %1542 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1220];
    i32 %1543 = load i32* %1542;
    i32 %1544 = add i32 %1543, i32 %1221;
    ubr ^b174;
^if.then69:
    i32* %1545 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1232];
    i32 %1546 = load i32* %1545;
    i32 %1547 = add i32 %1546, i32 %1233;
    ubr ^b175;
^b171:
    i32 %1548 = srem i32 %1350, i32 2;
    i1 %1549 = scmp neq i32 %1548, i32 0;
    ubr ^b184;
^b172:
    i32 %1550 = phi [^if.then67, i32 %1541] [^if.else23, i32 %1183] [^if.then63, i32 %1183];
    i32 %1551 = sdiv i32 %1181, i32 2;
    i32 %1552 = sdiv i32 %1180, i32 2;
    i32 %1553 = add i32 %1182, i32 1;
    ubr ^while.header69;
^b173:
    i32 %1554 = srem i32 %1365, i32 2;
    i1 %1555 = scmp neq i32 %1554, i32 0;
    ubr ^b185;
^if.then70:
    i32* %1556 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1197];
    i32 %1557 = load i32* %1556;
    i32 %1558 = add i32 %1557, i32 %1198;
    ubr ^b179;
^if.then71:
    i32* %1559 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1208];
    i32 %1560 = load i32* %1559;
    i32 %1561 = add i32 %1560, i32 %1209;
    ubr ^b180;
^b174:
    i32 %1562 = phi [^if.then68, i32 %1544] [^if.else25, i32 %1221] [^if.then65, i32 %1221];
    i32 %1563 = sdiv i32 %1219, i32 2;
    i32 %1564 = sdiv i32 %1218, i32 2;
    i32 %1565 = add i32 %1220, i32 1;
    ubr ^while.header72;
^b175:
    i32 %1566 = phi [^if.then69, i32 %1547] [^if.else26, i32 %1233] [^if.then66, i32 %1233];
    i32 %1567 = sdiv i32 %1231, i32 2;
    i32 %1568 = sdiv i32 %1230, i32 2;
    i32 %1569 = add i32 %1232, i32 1;
    ubr ^while.header73;
^b176:
    i32 %1570 = srem i32 %1390, i32 2;
    i1 %1571 = scmp neq i32 %1570, i32 0;
    ubr ^b186;
^b177:
    i32 %1572 = srem i32 %1401, i32 2;
    i1 %1573 = scmp neq i32 %1572, i32 0;
    ubr ^b187;
^if.then72:
    i32* %1574 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1244];
    i32 %1575 = load i32* %1574;
    i32 %1576 = add i32 %1575, i32 %1245;
    ubr ^b181;
^if.then73:
    i32* %1577 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1265];
    i32 %1578 = load i32* %1577;
    i32 %1579 = add i32 %1266, i32 %1578;
    ubr ^b182;
^b178:
    i32 %1580 = phi [^if.else24, i32 %1478] [^if.then64, i32 %1457];
    ubr ^while.header44;
^b179:
    i32 %1581 = phi [^if.then70, i32 %1558] [^b167, i32 %1198];
    i32 %1582 = sdiv i32 %1196, i32 2;
    i32 %1583 = sdiv i32 %1195, i32 2;
    i32 %1584 = add i32 %1197, i32 1;
    ubr ^while.header70;
^b180:
    i32 %1585 = phi [^if.then71, i32 %1561] [^b168, i32 %1209];
    i32 %1586 = sdiv i32 %1207, i32 2;
    i32 %1587 = sdiv i32 %1206, i32 2;
    i32 %1588 = add i32 %1208, i32 1;
    ubr ^while.header71;
^b181:
    i32 %1589 = phi [^if.then72, i32 %1576] [^b169, i32 %1245];
    i32 %1590 = sdiv i32 %1243, i32 2;
    i32 %1591 = sdiv i32 %1242, i32 2;
    i32 %1592 = add i32 %1244, i32 1;
    ubr ^while.header74;
^b182:
    i32 %1593 = phi [^if.then73, i32 %1579] [^b170, i32 %1266];
    i32 %1594 = sdiv i32 %1264, i32 2;
    i32 %1595 = sdiv i32 %1263, i32 2;
    i32 %1596 = add i32 %1265, i32 1;
    ubr ^while.header76;
^if.then74:
    i32 %1597 = srem i32 %1377, i32 2;
    i1 %1598 = scmp eq i32 %1597, i32 0;
    cbr i1 %1598(prob = 0.5), ^if.then75, ^b191;
^b183:
    i32 %1599 = mul i32 %1537, i32 2;
    ubr ^while.header89;
^while.body52:
    i32 %1600 = srem i32 %1496, i32 2;
    i1 %1601 = scmp neq i32 %1600, i32 0;
    cbr i1 %1601(prob = 0.5), ^b188, ^b197;
^while.body53:
    i32 %1602 = srem i32 %1507, i32 2;
    i1 %1603 = scmp neq i32 %1602, i32 0;
    cbr i1 %1603(prob = 0.5), ^b189, ^b198;
^b184:
    i1 %1604 = phi [^b171, i1 %1549] [^while.body47, i1 false];
    cbr i1 %1604(prob = 0.5), ^if.then76, ^b193;
^while.body54:
    i32 %1605 = srem i32 %1523, i32 2;
    i1 %1606 = scmp neq i32 %1605, i32 0;
    cbr i1 %1606(prob = 0.5), ^b190, ^b199;
^b185:
    i1 %1607 = phi [^b173, i1 %1555] [^while.body48, i1 false];
    cbr i1 %1607(prob = 0.5), ^if.then77, ^b194;
^if.else27:
    i32 %1608 = srem i32 %1377, i32 2;
    i1 %1609 = scmp neq i32 %1608, i32 0;
    cbr i1 %1609(prob = 0.5), ^if.then75, ^b191;
^while.header86:
    i32 %1610 = phi [^b212, i32 %1610] [^b162, i32 %1359];
    i32 %1611 = phi [^b212, i32 %1611] [^b162, i32 %1360];
    i32 %1612 = phi [^b212, i32 %1612] [^b162, i32 %1361];
    i32 %1613 = phi [^b212, i32 %1613] [^b162, i32 %1362];
    i32 %1614 = phi [^b212, i32 %1614] [^b162, i32 %1363];
    i32 %1615 = phi [^b212, i32 %1615] [^b162, i32 %1364];
    i32 %1616 = phi [^b212, i32 %1763] [^b162, i32 65535];
    i32 %1617 = phi [^b212, i32 %1762] [^b162, i32 %1458];
    i32 %1618 = phi [^b212, i32 %1764] [^b162, i32 0];
    i32 %1619 = phi [^b212, i32 %1761] [^b162, i32 0];
    i1 %1620 = scmp lt i32 %1618, i32 16;
    cbr i1 %1620(prob = 0.97), ^while.body56, ^while.header64;
^while.body55:
    i32 %1621 = srem i32 %1535, i32 2;
    i1 %1622 = scmp neq i32 %1621, i32 0;
    cbr i1 %1622(prob = 0.5), ^b192, ^b200;
^b186:
    i1 %1623 = phi [^while.body50, i1 false] [^b176, i1 %1571];
    cbr i1 %1623(prob = 0.5), ^if.then78, ^b195;
^b187:
    i1 %1624 = phi [^while.body51, i1 false] [^b177, i1 %1573];
    cbr i1 %1624(prob = 0.5), ^if.then79, ^b196;
^while.header87:
    i32 %1625 = phi [^b213, i32 %1625] [^b165, i32 %1384];
    i32 %1626 = phi [^b213, i32 %1626] [^b165, i32 %1385];
    i32 %1627 = phi [^b213, i32 %1627] [^b165, i32 %1386];
    i32 %1628 = phi [^b213, i32 %1628] [^b165, i32 %1387];
    i32 %1629 = phi [^b213, i32 %1629] [^b165, i32 %1388];
    i32 %1630 = phi [^b213, i32 %1630] [^b165, i32 %1389];
    i32 %1631 = phi [^b213, i32 %1767] [^b165, i32 65535];
    i32 %1632 = phi [^b213, i32 %1766] [^b165, i32 %1471];
    i32 %1633 = phi [^b213, i32 %1768] [^b165, i32 0];
    i32 %1634 = phi [^b213, i32 %1765] [^b165, i32 0];
    i1 %1635 = scmp lt i32 %1633, i32 16;
    cbr i1 %1635(prob = 0.97), ^while.body57, ^while.header65;
^while.header88:
    i32 %1636 = phi [^b214, i32 %1636] [^b166, i32 %1395];
    i32 %1637 = phi [^b214, i32 %1637] [^b166, i32 %1396];
    i32 %1638 = phi [^b214, i32 %1638] [^b166, i32 %1397];
    i32 %1639 = phi [^b214, i32 %1639] [^b166, i32 %1398];
    i32 %1640 = phi [^b214, i32 %1640] [^b166, i32 %1399];
    i32 %1641 = phi [^b214, i32 %1641] [^b166, i32 %1400];
    i32 %1642 = phi [^b214, i32 %1771] [^b166, i32 65535];
    i32 %1643 = phi [^b214, i32 %1770] [^b166, i32 %1472];
    i32 %1644 = phi [^b214, i32 %1772] [^b166, i32 0];
    i32 %1645 = phi [^b214, i32 %1769] [^b166, i32 0];
    i1 %1646 = scmp lt i32 %1644, i32 16;
    cbr i1 %1646(prob = 0.97), ^while.body58, ^while.header66;
^if.then75:
    i32* %1647 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1379];
    i32 %1648 = load i32* %1647;
    i32 %1649 = add i32 %1648, i32 %1380;
    ubr ^b191;
^b188:
    i32 %1650 = srem i32 %1495, i32 2;
    i1 %1651 = scmp neq i32 %1650, i32 0;
    ubr ^b197;
^b189:
    i32 %1652 = srem i32 %1506, i32 2;
    i1 %1653 = scmp neq i32 %1652, i32 0;
    ubr ^b198;
^if.then76:
    i32* %1654 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1352];
    i32 %1655 = load i32* %1654;
    i32 %1656 = add i32 %1655, i32 %1353;
    ubr ^b193;
^b190:
    i32 %1657 = srem i32 %1522, i32 2;
    i1 %1658 = scmp neq i32 %1657, i32 0;
    ubr ^b199;
^if.then77:
    i32* %1659 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1367];
    i32 %1660 = load i32* %1659;
    i32 %1661 = add i32 %1660, i32 %1368;
    ubr ^b194;
^b191:
    i32 %1662 = phi [^if.then75, i32 %1649] [^if.else27, i32 %1380] [^if.then74, i32 %1380];
    i32 %1663 = sdiv i32 %1378, i32 2;
    i32 %1664 = sdiv i32 %1377, i32 2;
    i32 %1665 = add i32 %1379, i32 1;
    ubr ^while.header79;
^b192:
    i32 %1666 = srem i32 %1534, i32 2;
    i1 %1667 = scmp neq i32 %1666, i32 0;
    ubr ^b200;
^if.then78:
    i32* %1668 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1392];
    i32 %1669 = load i32* %1668;
    i32 %1670 = add i32 %1669, i32 %1393;
    ubr ^b195;
^if.then79:
    i32* %1671 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1403];
    i32 %1672 = load i32* %1671;
    i32 %1673 = add i32 %1672, i32 %1404;
    ubr ^b196;
^b193:
    i32 %1674 = phi [^if.then76, i32 %1656] [^b184, i32 %1353];
    i32 %1675 = sdiv i32 %1351, i32 2;
    i32 %1676 = sdiv i32 %1350, i32 2;
    i32 %1677 = add i32 %1352, i32 1;
    ubr ^while.header77;
^b194:
    i32 %1678 = phi [^if.then77, i32 %1661] [^b185, i32 %1368];
    i32 %1679 = sdiv i32 %1366, i32 2;
    i32 %1680 = sdiv i32 %1365, i32 2;
    i32 %1681 = add i32 %1367, i32 1;
    ubr ^while.header78;
^b195:
    i32 %1682 = phi [^if.then78, i32 %1670] [^b186, i32 %1393];
    i32 %1683 = sdiv i32 %1391, i32 2;
    i32 %1684 = sdiv i32 %1390, i32 2;
    i32 %1685 = add i32 %1392, i32 1;
    ubr ^while.header80;
^b196:
    i32 %1686 = phi [^if.then79, i32 %1673] [^b187, i32 %1404];
    i32 %1687 = sdiv i32 %1402, i32 2;
    i32 %1688 = sdiv i32 %1401, i32 2;
    i32 %1689 = add i32 %1403, i32 1;
    ubr ^while.header81;
^while.body56:
    i32 %1690 = srem i32 %1617, i32 2;
    i1 %1691 = scmp neq i32 %1690, i32 0;
    cbr i1 %1691(prob = 0.5), ^b201, ^b208;
^b197:
    i1 %1692 = phi [^while.body52, i1 false] [^b188, i1 %1651];
    cbr i1 %1692(prob = 0.5), ^if.then80, ^b204;
^b198:
    i1 %1693 = phi [^b189, i1 %1653] [^while.body53, i1 false];
    cbr i1 %1693(prob = 0.5), ^if.then81, ^b205;
^while.body57:
    i32 %1694 = srem i32 %1632, i32 2;
    i1 %1695 = scmp neq i32 %1694, i32 0;
    cbr i1 %1695(prob = 0.5), ^b202, ^b209;
^while.body58:
    i32 %1696 = srem i32 %1643, i32 2;
    i1 %1697 = scmp neq i32 %1696, i32 0;
    cbr i1 %1697(prob = 0.5), ^b203, ^b210;
^b199:
    i1 %1698 = phi [^while.body54, i1 false] [^b190, i1 %1658];
    cbr i1 %1698(prob = 0.5), ^if.then82, ^b206;
^b200:
    i1 %1699 = phi [^b192, i1 %1667] [^while.body55, i1 false];
    cbr i1 %1699(prob = 0.5), ^if.then83, ^b207;
^while.header89:
    i32 %1700 = phi [^b216, i32 %1700] [^b183, i32 %1528];
    i32 %1701 = phi [^b216, i32 %1701] [^b183, i32 %1529];
    i32 %1702 = phi [^b216, i32 %1702] [^b183, i32 %1530];
    i32 %1703 = phi [^b216, i32 %1703] [^b183, i32 %1531];
    i32 %1704 = phi [^b216, i32 %1704] [^b183, i32 %1532];
    i32 %1705 = phi [^b216, i32 %1705] [^b183, i32 %1533];
    i32 %1706 = phi [^b216, i32 %1779] [^b183, i32 65535];
    i32 %1707 = phi [^b216, i32 %1778] [^b183, i32 %1599];
    i32 %1708 = phi [^b216, i32 %1780] [^b183, i32 0];
    i32 %1709 = phi [^b216, i32 %1777] [^b183, i32 0];
    i1 %1710 = scmp lt i32 %1708, i32 16;
    cbr i1 %1710(prob = 0.97), ^while.body59, ^while.header75;
^b201:
    i32 %1711 = srem i32 %1616, i32 2;
    i1 %1712 = scmp neq i32 %1711, i32 0;
    ubr ^b208;
^if.then80:
    i32* %1713 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1497];
    i32 %1714 = load i32* %1713;
    i32 %1715 = add i32 %1714, i32 %1498;
    ubr ^b204;
^if.then81:
    i32* %1716 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1508];
    i32 %1717 = load i32* %1716;
    i32 %1718 = add i32 %1717, i32 %1509;
    ubr ^b205;
^b202:
    i32 %1719 = srem i32 %1631, i32 2;
    i1 %1720 = scmp neq i32 %1719, i32 0;
    ubr ^b209;
^b203:
    i32 %1721 = srem i32 %1642, i32 2;
    i1 %1722 = scmp neq i32 %1721, i32 0;
    ubr ^b210;
^if.then82:
    i32* %1723 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1524];
    i32 %1724 = load i32* %1723;
    i32 %1725 = add i32 %1724, i32 %1525;
    ubr ^b206;
^if.then83:
    i32* %1726 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1536];
    i32 %1727 = load i32* %1726;
    i32 %1728 = add i32 %1727, i32 %1537;
    ubr ^b207;
^b204:
    i32 %1729 = phi [^if.then80, i32 %1715] [^b197, i32 %1498];
    i32 %1730 = sdiv i32 %1496, i32 2;
    i32 %1731 = sdiv i32 %1495, i32 2;
    i32 %1732 = add i32 %1497, i32 1;
    ubr ^while.header82;
^b205:
    i32 %1733 = phi [^if.then81, i32 %1718] [^b198, i32 %1509];
    i32 %1734 = sdiv i32 %1507, i32 2;
    i32 %1735 = sdiv i32 %1506, i32 2;
    i32 %1736 = add i32 %1508, i32 1;
    ubr ^while.header83;
^b206:
    i32 %1737 = phi [^if.then82, i32 %1725] [^b199, i32 %1525];
    i32 %1738 = sdiv i32 %1523, i32 2;
    i32 %1739 = sdiv i32 %1522, i32 2;
    i32 %1740 = add i32 %1524, i32 1;
    ubr ^while.header84;
^b207:
    i32 %1741 = phi [^if.then83, i32 %1728] [^b200, i32 %1537];
    i32 %1742 = sdiv i32 %1535, i32 2;
    i32 %1743 = sdiv i32 %1534, i32 2;
    i32 %1744 = add i32 %1536, i32 1;
    ubr ^while.header85;
^b208:
    i1 %1745 = phi [^while.body56, i1 false] [^b201, i1 %1712];
    cbr i1 %1745(prob = 0.5), ^if.then84, ^b212;
^while.body59:
    i32 %1746 = srem i32 %1707, i32 2;
    i1 %1747 = scmp neq i32 %1746, i32 0;
    cbr i1 %1747(prob = 0.5), ^b211, ^b215;
^b209:
    i1 %1748 = phi [^while.body57, i1 false] [^b202, i1 %1720];
    cbr i1 %1748(prob = 0.5), ^if.then85, ^b213;
^b210:
    i1 %1749 = phi [^while.body58, i1 false] [^b203, i1 %1722];
    cbr i1 %1749(prob = 0.5), ^if.then86, ^b214;
^if.then84:
    i32* %1750 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1618];
    i32 %1751 = load i32* %1750;
    i32 %1752 = add i32 %1751, i32 %1619;
    ubr ^b212;
^b211:
    i32 %1753 = srem i32 %1706, i32 2;
    i1 %1754 = scmp neq i32 %1753, i32 0;
    ubr ^b215;
^if.then85:
    i32* %1755 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1633];
    i32 %1756 = load i32* %1755;
    i32 %1757 = add i32 %1756, i32 %1634;
    ubr ^b213;
^if.then86:
    i32* %1758 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1644];
    i32 %1759 = load i32* %1758;
    i32 %1760 = add i32 %1759, i32 %1645;
    ubr ^b214;
^b212:
    i32 %1761 = phi [^if.then84, i32 %1752] [^b208, i32 %1619];
    i32 %1762 = sdiv i32 %1617, i32 2;
    i32 %1763 = sdiv i32 %1616, i32 2;
    i32 %1764 = add i32 %1618, i32 1;
    ubr ^while.header86;
^b213:
    i32 %1765 = phi [^if.then85, i32 %1757] [^b209, i32 %1634];
    i32 %1766 = sdiv i32 %1632, i32 2;
    i32 %1767 = sdiv i32 %1631, i32 2;
    i32 %1768 = add i32 %1633, i32 1;
    ubr ^while.header87;
^b214:
    i32 %1769 = phi [^if.then86, i32 %1760] [^b210, i32 %1645];
    i32 %1770 = sdiv i32 %1643, i32 2;
    i32 %1771 = sdiv i32 %1642, i32 2;
    i32 %1772 = add i32 %1644, i32 1;
    ubr ^while.header88;
^b215:
    i1 %1773 = phi [^b211, i1 %1754] [^while.body59, i1 false];
    cbr i1 %1773(prob = 0.5), ^if.then87, ^b216;
^if.then87:
    i32* %1774 = getelementptr &([16 * i32]* %SHIFT_TABLE)[i64 0][i32 %1708];
    i32 %1775 = load i32* %1774;
    i32 %1776 = add i32 %1775, i32 %1709;
    ubr ^b216;
^b216:
    i32 %1777 = phi [^if.then87, i32 %1776] [^b215, i32 %1709];
    i32 %1778 = sdiv i32 %1707, i32 2;
    i32 %1779 = sdiv i32 %1706, i32 2;
    i32 %1780 = add i32 %1708, i32 1;
    ubr ^while.header89;
}
