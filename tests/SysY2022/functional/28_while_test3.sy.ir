func @main() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
^entry():
    ubr [ ^while.body i32 1, i32 2, i32 6, i32 4, i32 5, i32 6, i32 7, i32 10 ];
^while.body(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg4, i32 3;
    i1 %1 = scmp lt i32 %arg5, i32 10;
    cbr i1 %1, [ ^indirect i32 %arg5, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %0, i32 %arg6, i32 %arg7 ], [ ^indirect1 i32 %arg5, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %0, i32 %arg6, i32 %arg7 ];
^indirect(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp eq i32 %arg6, i32 7;
    cbr i1 %1, [ ^indirect2 i32 %arg6, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %0, i32 %arg7 ], [ ^indirect3 i32 %arg6, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %0, i32 %arg7 ];
^indirect1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg, i32 2;
    i1 %1 = scmp lt i32 %arg5, i32 20;
    cbr i1 %1, [ ^while.body i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %0, i32 %arg6, i32 %arg7 ], [ ^b i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg5, i32 %0, i32 %arg6, i32 %arg7 ];
^indirect2(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg, i32 1;
    i1 %1 = scmp lt i32 %arg7, i32 20;
    cbr i1 %1, [ ^indirect4 i32 %arg7, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %0 ], [ ^indirect5 i32 %arg7, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %0 ];
^indirect3(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp lt i32 %arg6, i32 10;
    cbr i1 %1, [ ^indirect i32 %arg6, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %0, i32 %arg7 ], [ ^indirect1 i32 %arg6, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %0, i32 %arg7 ];
^b(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6):
    i32 %0 = add i32 %arg4, i32 %arg6;
    i32 %1 = add i32 %arg3, i32 %0;
    i32 %2 = add i32 %1, i32 %arg5;
    i32 %3 = add i32 %arg2, i32 %arg6;
    i32 %4 = sub i32 %3, i32 %arg;
    i32 %5 = add i32 %4, i32 %arg1;
    i32 %6 = sub i32 %2, i32 %5;
    ret i32 %6;
^indirect4(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg, i32 3;
    i1 %1 = scmp gt i32 %arg4, i32 1;
    cbr i1 %1, [ ^indirect6 i32 %arg4, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg5, i32 %arg6, i32 %arg7, i32 %0 ], [ ^indirect7 i32 %arg4, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg5, i32 %arg6, i32 %arg7, i32 %0 ];
^indirect5(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg, i32 1;
    i1 %1 = scmp eq i32 %arg7, i32 7;
    cbr i1 %1, [ ^indirect2 i32 %arg7, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %0 ], [ ^indirect3 i32 %arg7, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %0 ];
^indirect6(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg, i32 1;
    i1 %1 = scmp gt i32 %arg3, i32 2;
    cbr i1 %1, [ ^indirect8 i32 %arg3, i32 %arg1, i32 %arg2, i32 %0, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^indirect9 i32 %arg3, i32 %arg1, i32 %arg2, i32 %0, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^indirect7(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp lt i32 %arg7, i32 20;
    cbr i1 %1, [ ^indirect4 i32 %arg7, i32 %arg1, i32 %arg2, i32 %arg3, i32 %0, i32 %arg4, i32 %arg5, i32 %arg6 ], [ ^indirect5 i32 %arg7, i32 %arg1, i32 %arg2, i32 %arg3, i32 %0, i32 %arg4, i32 %arg5, i32 %arg6 ];
^indirect8(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg, i32 2;
    i1 %1 = scmp lt i32 %arg1, i32 3;
    cbr i1 %1, [ ^indirect10 i32 %arg1, i32 %arg2, i32 %0, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^indirect11 i32 %arg1, i32 %arg2, i32 %0, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^indirect9(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp gt i32 %arg3, i32 1;
    cbr i1 %1, [ ^indirect6 i32 %arg3, i32 %arg1, i32 %arg2, i32 %0, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^indirect7 i32 %arg3, i32 %arg1, i32 %arg2, i32 %0, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^indirect10(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg, i32 10;
    i1 %1 = scmp lt i32 %arg1, i32 10;
    cbr i1 %1, [ ^while.body1 i32 %0, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^b1 i32 %0, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^indirect11(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg, i32 8;
    i1 %1 = scmp gt i32 %arg2, i32 2;
    cbr i1 %1, [ ^indirect8 i32 %arg2, i32 %0, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^indirect9 i32 %arg2, i32 %0, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^while.body1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg1, i32 8;
    i1 %1 = scmp lt i32 %0, i32 10;
    cbr i1 %1, [ ^while.body1 i32 %arg, i32 %0, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^b1 i32 %arg, i32 %0, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^b1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = sub i32 %arg1, i32 1;
    i1 %1 = scmp lt i32 %arg, i32 3;
    cbr i1 %1, [ ^indirect10 i32 %arg, i32 %0, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ], [ ^indirect11 i32 %arg, i32 %0, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
}
