internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    [3 * f32]* %c2 = alloc [3 * f32];
    [3 * f32]* %c1 = alloc [3 * f32];
    [6 * f32]* %c0 = alloc [6 * f32];
    [3 * f32]* %b2 = alloc [3 * f32];
    [3 * f32]* %b1 = alloc [3 * f32];
    [3 * f32]* %b0 = alloc [3 * f32];
    [3 * f32]* %a2 = alloc [3 * f32];
    [3 * f32]* %a1 = alloc [3 * f32];
    [3 * f32]* %a0 = alloc [3 * f32];
    f32* %0 = getelementptr &([3 * f32]* %a0)[i64 0][i64 0];
    store f32* %0 with f32 0;
    f32* %1 = getelementptr &([3 * f32]* %a1)[i64 0][i64 0];
    store f32* %1 with f32 0;
    f32* %2 = getelementptr &([3 * f32]* %a2)[i64 0][i64 0];
    store f32* %2 with f32 0;
    f32* %3 = getelementptr &([3 * f32]* %b0)[i64 0][i64 0];
    store f32* %3 with f32 0;
    f32* %4 = getelementptr &([3 * f32]* %b1)[i64 0][i64 0];
    store f32* %4 with f32 0;
    f32* %5 = getelementptr &([3 * f32]* %b2)[i64 0][i64 0];
    store f32* %5 with f32 0;
    f32* %6 = getelementptr &([3 * f32]* %a0)[i64 0][i64 1];
    store f32* %6 with f32 1;
    f32* %7 = getelementptr &([3 * f32]* %a1)[i64 0][i64 1];
    store f32* %7 with f32 1;
    f32* %8 = getelementptr &([3 * f32]* %a2)[i64 0][i64 1];
    store f32* %8 with f32 1;
    f32* %9 = getelementptr &([3 * f32]* %b0)[i64 0][i64 1];
    store f32* %9 with f32 1;
    f32* %10 = getelementptr &([3 * f32]* %b1)[i64 0][i64 1];
    store f32* %10 with f32 1;
    f32* %11 = getelementptr &([3 * f32]* %b2)[i64 0][i64 1];
    store f32* %11 with f32 1;
    f32* %12 = getelementptr &([3 * f32]* %a0)[i64 0][i64 2];
    store f32* %12 with f32 2;
    f32* %13 = getelementptr &([3 * f32]* %a1)[i64 0][i64 2];
    store f32* %13 with f32 2;
    f32* %14 = getelementptr &([3 * f32]* %a2)[i64 0][i64 2];
    store f32* %14 with f32 2;
    f32* %15 = getelementptr &([3 * f32]* %b0)[i64 0][i64 2];
    store f32* %15 with f32 2;
    f32* %16 = getelementptr &([3 * f32]* %b1)[i64 0][i64 2];
    store f32* %16 with f32 2;
    f32* %17 = getelementptr &([3 * f32]* %b2)[i64 0][i64 2];
    store f32* %17 with f32 2;
    f32* %18 = getelementptr &([6 * f32]* %c0)[i64 0][i64 0];
    f32* %19 = getelementptr &([3 * f32]* %c1)[i64 0][i64 0];
    f32* %20 = getelementptr &([3 * f32]* %c2)[i64 0][i64 0];
    ubr ^super.header;
  ^super.header:
    i32 %21 = phi [^entry, i32 0] [^while.body, i32 %22];
    i32 %22 = add i32 %21, i32 16;
    i1 %23 = scmp lt i32 %22, i32 3;
    cbr i1 %23(prob = 0.67), ^while.body, ^super.header1;
  ^while.body:
    f32* %24 = getelementptr &(f32* %0)[i32 %21];
    f32 %25 = load f32* %24;
    f32* %26 = getelementptr &(f32* %3)[i32 %21];
    f32 %27 = load f32* %26;
    f32 %28 = fadd f32 %25, f32 %27;
    f32* %29 = getelementptr &(f32* %18)[i32 %21];
    store f32* %29 with f32 %28;
    f32* %30 = getelementptr &(f32* %1)[i32 %21];
    f32 %31 = load f32* %30;
    f32* %32 = getelementptr &(f32* %4)[i32 %21];
    f32 %33 = load f32* %32;
    f32 %34 = fadd f32 %31, f32 %33;
    f32* %35 = getelementptr &(f32* %19)[i32 %21];
    store f32* %35 with f32 %34;
    f32* %36 = getelementptr &(f32* %2)[i32 %21];
    f32 %37 = load f32* %36;
    f32* %38 = getelementptr &(f32* %5)[i32 %21];
    f32 %39 = load f32* %38;
    f32 %40 = fadd f32 %37, f32 %39;
    f32* %41 = getelementptr &(f32* %20)[i32 %21];
    store f32* %41 with f32 %40;
    f32* %42 = getelementptr &(f32* %24)[i64 1];
    f32 %43 = load f32* %42;
    f32* %44 = getelementptr &(f32* %26)[i64 1];
    f32 %45 = load f32* %44;
    f32 %46 = fadd f32 %43, f32 %45;
    f32* %47 = getelementptr &(f32* %29)[i64 1];
    store f32* %47 with f32 %46;
    f32* %48 = getelementptr &(f32* %30)[i64 1];
    f32 %49 = load f32* %48;
    f32* %50 = getelementptr &(f32* %32)[i64 1];
    f32 %51 = load f32* %50;
    f32 %52 = fadd f32 %49, f32 %51;
    f32* %53 = getelementptr &(f32* %35)[i64 1];
    store f32* %53 with f32 %52;
    f32* %54 = getelementptr &(f32* %36)[i64 1];
    f32 %55 = load f32* %54;
    f32* %56 = getelementptr &(f32* %38)[i64 1];
    f32 %57 = load f32* %56;
    f32 %58 = fadd f32 %55, f32 %57;
    f32* %59 = getelementptr &(f32* %41)[i64 1];
    store f32* %59 with f32 %58;
    f32* %60 = getelementptr &(f32* %24)[i64 2];
    f32 %61 = load f32* %60;
    f32* %62 = getelementptr &(f32* %26)[i64 2];
    f32 %63 = load f32* %62;
    f32 %64 = fadd f32 %61, f32 %63;
    f32* %65 = getelementptr &(f32* %29)[i64 2];
    store f32* %65 with f32 %64;
    f32* %66 = getelementptr &(f32* %30)[i64 2];
    f32 %67 = load f32* %66;
    f32* %68 = getelementptr &(f32* %32)[i64 2];
    f32 %69 = load f32* %68;
    f32 %70 = fadd f32 %67, f32 %69;
    f32* %71 = getelementptr &(f32* %35)[i64 2];
    store f32* %71 with f32 %70;
    f32* %72 = getelementptr &(f32* %36)[i64 2];
    f32 %73 = load f32* %72;
    f32* %74 = getelementptr &(f32* %38)[i64 2];
    f32 %75 = load f32* %74;
    f32 %76 = fadd f32 %73, f32 %75;
    f32* %77 = getelementptr &(f32* %41)[i64 2];
    store f32* %77 with f32 %76;
    f32* %78 = getelementptr &(f32* %24)[i64 3];
    f32 %79 = load f32* %78;
    f32* %80 = getelementptr &(f32* %26)[i64 3];
    f32 %81 = load f32* %80;
    f32 %82 = fadd f32 %79, f32 %81;
    f32* %83 = getelementptr &(f32* %29)[i64 3];
    store f32* %83 with f32 %82;
    f32* %84 = getelementptr &(f32* %30)[i64 3];
    f32 %85 = load f32* %84;
    f32* %86 = getelementptr &(f32* %32)[i64 3];
    f32 %87 = load f32* %86;
    f32 %88 = fadd f32 %85, f32 %87;
    f32* %89 = getelementptr &(f32* %35)[i64 3];
    store f32* %89 with f32 %88;
    f32* %90 = getelementptr &(f32* %36)[i64 3];
    f32 %91 = load f32* %90;
    f32* %92 = getelementptr &(f32* %38)[i64 3];
    f32 %93 = load f32* %92;
    f32 %94 = fadd f32 %91, f32 %93;
    f32* %95 = getelementptr &(f32* %41)[i64 3];
    store f32* %95 with f32 %94;
    f32* %96 = getelementptr &(f32* %24)[i64 4];
    f32 %97 = load f32* %96;
    f32* %98 = getelementptr &(f32* %26)[i64 4];
    f32 %99 = load f32* %98;
    f32 %100 = fadd f32 %97, f32 %99;
    f32* %101 = getelementptr &(f32* %29)[i64 4];
    store f32* %101 with f32 %100;
    f32* %102 = getelementptr &(f32* %30)[i64 4];
    f32 %103 = load f32* %102;
    f32* %104 = getelementptr &(f32* %32)[i64 4];
    f32 %105 = load f32* %104;
    f32 %106 = fadd f32 %103, f32 %105;
    f32* %107 = getelementptr &(f32* %35)[i64 4];
    store f32* %107 with f32 %106;
    f32* %108 = getelementptr &(f32* %36)[i64 4];
    f32 %109 = load f32* %108;
    f32* %110 = getelementptr &(f32* %38)[i64 4];
    f32 %111 = load f32* %110;
    f32 %112 = fadd f32 %109, f32 %111;
    f32* %113 = getelementptr &(f32* %41)[i64 4];
    store f32* %113 with f32 %112;
    f32* %114 = getelementptr &(f32* %24)[i64 5];
    f32 %115 = load f32* %114;
    f32* %116 = getelementptr &(f32* %26)[i64 5];
    f32 %117 = load f32* %116;
    f32 %118 = fadd f32 %115, f32 %117;
    f32* %119 = getelementptr &(f32* %29)[i64 5];
    store f32* %119 with f32 %118;
    f32* %120 = getelementptr &(f32* %30)[i64 5];
    f32 %121 = load f32* %120;
    f32* %122 = getelementptr &(f32* %32)[i64 5];
    f32 %123 = load f32* %122;
    f32 %124 = fadd f32 %121, f32 %123;
    f32* %125 = getelementptr &(f32* %35)[i64 5];
    store f32* %125 with f32 %124;
    f32* %126 = getelementptr &(f32* %36)[i64 5];
    f32 %127 = load f32* %126;
    f32* %128 = getelementptr &(f32* %38)[i64 5];
    f32 %129 = load f32* %128;
    f32 %130 = fadd f32 %127, f32 %129;
    f32* %131 = getelementptr &(f32* %41)[i64 5];
    store f32* %131 with f32 %130;
    f32* %132 = getelementptr &(f32* %24)[i64 6];
    f32 %133 = load f32* %132;
    f32* %134 = getelementptr &(f32* %26)[i64 6];
    f32 %135 = load f32* %134;
    f32 %136 = fadd f32 %133, f32 %135;
    f32* %137 = getelementptr &(f32* %29)[i64 6];
    store f32* %137 with f32 %136;
    f32* %138 = getelementptr &(f32* %30)[i64 6];
    f32 %139 = load f32* %138;
    f32* %140 = getelementptr &(f32* %32)[i64 6];
    f32 %141 = load f32* %140;
    f32 %142 = fadd f32 %139, f32 %141;
    f32* %143 = getelementptr &(f32* %35)[i64 6];
    store f32* %143 with f32 %142;
    f32* %144 = getelementptr &(f32* %36)[i64 6];
    f32 %145 = load f32* %144;
    f32* %146 = getelementptr &(f32* %38)[i64 6];
    f32 %147 = load f32* %146;
    f32 %148 = fadd f32 %145, f32 %147;
    f32* %149 = getelementptr &(f32* %41)[i64 6];
    store f32* %149 with f32 %148;
    f32* %150 = getelementptr &(f32* %24)[i64 7];
    f32 %151 = load f32* %150;
    f32* %152 = getelementptr &(f32* %26)[i64 7];
    f32 %153 = load f32* %152;
    f32 %154 = fadd f32 %151, f32 %153;
    f32* %155 = getelementptr &(f32* %29)[i64 7];
    store f32* %155 with f32 %154;
    f32* %156 = getelementptr &(f32* %30)[i64 7];
    f32 %157 = load f32* %156;
    f32* %158 = getelementptr &(f32* %32)[i64 7];
    f32 %159 = load f32* %158;
    f32 %160 = fadd f32 %157, f32 %159;
    f32* %161 = getelementptr &(f32* %35)[i64 7];
    store f32* %161 with f32 %160;
    f32* %162 = getelementptr &(f32* %36)[i64 7];
    f32 %163 = load f32* %162;
    f32* %164 = getelementptr &(f32* %38)[i64 7];
    f32 %165 = load f32* %164;
    f32 %166 = fadd f32 %163, f32 %165;
    f32* %167 = getelementptr &(f32* %41)[i64 7];
    store f32* %167 with f32 %166;
    f32* %168 = getelementptr &(f32* %24)[i64 8];
    f32 %169 = load f32* %168;
    f32* %170 = getelementptr &(f32* %26)[i64 8];
    f32 %171 = load f32* %170;
    f32 %172 = fadd f32 %169, f32 %171;
    f32* %173 = getelementptr &(f32* %29)[i64 8];
    store f32* %173 with f32 %172;
    f32* %174 = getelementptr &(f32* %30)[i64 8];
    f32 %175 = load f32* %174;
    f32* %176 = getelementptr &(f32* %32)[i64 8];
    f32 %177 = load f32* %176;
    f32 %178 = fadd f32 %175, f32 %177;
    f32* %179 = getelementptr &(f32* %35)[i64 8];
    store f32* %179 with f32 %178;
    f32* %180 = getelementptr &(f32* %36)[i64 8];
    f32 %181 = load f32* %180;
    f32* %182 = getelementptr &(f32* %38)[i64 8];
    f32 %183 = load f32* %182;
    f32 %184 = fadd f32 %181, f32 %183;
    f32* %185 = getelementptr &(f32* %41)[i64 8];
    store f32* %185 with f32 %184;
    f32* %186 = getelementptr &(f32* %24)[i64 9];
    f32 %187 = load f32* %186;
    f32* %188 = getelementptr &(f32* %26)[i64 9];
    f32 %189 = load f32* %188;
    f32 %190 = fadd f32 %187, f32 %189;
    f32* %191 = getelementptr &(f32* %29)[i64 9];
    store f32* %191 with f32 %190;
    f32* %192 = getelementptr &(f32* %30)[i64 9];
    f32 %193 = load f32* %192;
    f32* %194 = getelementptr &(f32* %32)[i64 9];
    f32 %195 = load f32* %194;
    f32 %196 = fadd f32 %193, f32 %195;
    f32* %197 = getelementptr &(f32* %35)[i64 9];
    store f32* %197 with f32 %196;
    f32* %198 = getelementptr &(f32* %36)[i64 9];
    f32 %199 = load f32* %198;
    f32* %200 = getelementptr &(f32* %38)[i64 9];
    f32 %201 = load f32* %200;
    f32 %202 = fadd f32 %199, f32 %201;
    f32* %203 = getelementptr &(f32* %41)[i64 9];
    store f32* %203 with f32 %202;
    f32* %204 = getelementptr &(f32* %24)[i64 10];
    f32 %205 = load f32* %204;
    f32* %206 = getelementptr &(f32* %26)[i64 10];
    f32 %207 = load f32* %206;
    f32 %208 = fadd f32 %205, f32 %207;
    f32* %209 = getelementptr &(f32* %29)[i64 10];
    store f32* %209 with f32 %208;
    f32* %210 = getelementptr &(f32* %30)[i64 10];
    f32 %211 = load f32* %210;
    f32* %212 = getelementptr &(f32* %32)[i64 10];
    f32 %213 = load f32* %212;
    f32 %214 = fadd f32 %211, f32 %213;
    f32* %215 = getelementptr &(f32* %35)[i64 10];
    store f32* %215 with f32 %214;
    f32* %216 = getelementptr &(f32* %36)[i64 10];
    f32 %217 = load f32* %216;
    f32* %218 = getelementptr &(f32* %38)[i64 10];
    f32 %219 = load f32* %218;
    f32 %220 = fadd f32 %217, f32 %219;
    f32* %221 = getelementptr &(f32* %41)[i64 10];
    store f32* %221 with f32 %220;
    f32* %222 = getelementptr &(f32* %24)[i64 11];
    f32 %223 = load f32* %222;
    f32* %224 = getelementptr &(f32* %26)[i64 11];
    f32 %225 = load f32* %224;
    f32 %226 = fadd f32 %223, f32 %225;
    f32* %227 = getelementptr &(f32* %29)[i64 11];
    store f32* %227 with f32 %226;
    f32* %228 = getelementptr &(f32* %30)[i64 11];
    f32 %229 = load f32* %228;
    f32* %230 = getelementptr &(f32* %32)[i64 11];
    f32 %231 = load f32* %230;
    f32 %232 = fadd f32 %229, f32 %231;
    f32* %233 = getelementptr &(f32* %35)[i64 11];
    store f32* %233 with f32 %232;
    f32* %234 = getelementptr &(f32* %36)[i64 11];
    f32 %235 = load f32* %234;
    f32* %236 = getelementptr &(f32* %38)[i64 11];
    f32 %237 = load f32* %236;
    f32 %238 = fadd f32 %235, f32 %237;
    f32* %239 = getelementptr &(f32* %41)[i64 11];
    store f32* %239 with f32 %238;
    f32* %240 = getelementptr &(f32* %24)[i64 12];
    f32 %241 = load f32* %240;
    f32* %242 = getelementptr &(f32* %26)[i64 12];
    f32 %243 = load f32* %242;
    f32 %244 = fadd f32 %241, f32 %243;
    f32* %245 = getelementptr &(f32* %29)[i64 12];
    store f32* %245 with f32 %244;
    f32* %246 = getelementptr &(f32* %30)[i64 12];
    f32 %247 = load f32* %246;
    f32* %248 = getelementptr &(f32* %32)[i64 12];
    f32 %249 = load f32* %248;
    f32 %250 = fadd f32 %247, f32 %249;
    f32* %251 = getelementptr &(f32* %35)[i64 12];
    store f32* %251 with f32 %250;
    f32* %252 = getelementptr &(f32* %36)[i64 12];
    f32 %253 = load f32* %252;
    f32* %254 = getelementptr &(f32* %38)[i64 12];
    f32 %255 = load f32* %254;
    f32 %256 = fadd f32 %253, f32 %255;
    f32* %257 = getelementptr &(f32* %41)[i64 12];
    store f32* %257 with f32 %256;
    f32* %258 = getelementptr &(f32* %24)[i64 13];
    f32 %259 = load f32* %258;
    f32* %260 = getelementptr &(f32* %26)[i64 13];
    f32 %261 = load f32* %260;
    f32 %262 = fadd f32 %259, f32 %261;
    f32* %263 = getelementptr &(f32* %29)[i64 13];
    store f32* %263 with f32 %262;
    f32* %264 = getelementptr &(f32* %30)[i64 13];
    f32 %265 = load f32* %264;
    f32* %266 = getelementptr &(f32* %32)[i64 13];
    f32 %267 = load f32* %266;
    f32 %268 = fadd f32 %265, f32 %267;
    f32* %269 = getelementptr &(f32* %35)[i64 13];
    store f32* %269 with f32 %268;
    f32* %270 = getelementptr &(f32* %36)[i64 13];
    f32 %271 = load f32* %270;
    f32* %272 = getelementptr &(f32* %38)[i64 13];
    f32 %273 = load f32* %272;
    f32 %274 = fadd f32 %271, f32 %273;
    f32* %275 = getelementptr &(f32* %41)[i64 13];
    store f32* %275 with f32 %274;
    f32* %276 = getelementptr &(f32* %24)[i64 14];
    f32 %277 = load f32* %276;
    f32* %278 = getelementptr &(f32* %26)[i64 14];
    f32 %279 = load f32* %278;
    f32 %280 = fadd f32 %277, f32 %279;
    f32* %281 = getelementptr &(f32* %29)[i64 14];
    store f32* %281 with f32 %280;
    f32* %282 = getelementptr &(f32* %30)[i64 14];
    f32 %283 = load f32* %282;
    f32* %284 = getelementptr &(f32* %32)[i64 14];
    f32 %285 = load f32* %284;
    f32 %286 = fadd f32 %283, f32 %285;
    f32* %287 = getelementptr &(f32* %35)[i64 14];
    store f32* %287 with f32 %286;
    f32* %288 = getelementptr &(f32* %36)[i64 14];
    f32 %289 = load f32* %288;
    f32* %290 = getelementptr &(f32* %38)[i64 14];
    f32 %291 = load f32* %290;
    f32 %292 = fadd f32 %289, f32 %291;
    f32* %293 = getelementptr &(f32* %41)[i64 14];
    store f32* %293 with f32 %292;
    f32* %294 = getelementptr &(f32* %24)[i64 15];
    f32 %295 = load f32* %294;
    f32* %296 = getelementptr &(f32* %26)[i64 15];
    f32 %297 = load f32* %296;
    f32 %298 = fadd f32 %295, f32 %297;
    f32* %299 = getelementptr &(f32* %29)[i64 15];
    store f32* %299 with f32 %298;
    f32* %300 = getelementptr &(f32* %30)[i64 15];
    f32 %301 = load f32* %300;
    f32* %302 = getelementptr &(f32* %32)[i64 15];
    f32 %303 = load f32* %302;
    f32 %304 = fadd f32 %301, f32 %303;
    f32* %305 = getelementptr &(f32* %35)[i64 15];
    store f32* %305 with f32 %304;
    f32* %306 = getelementptr &(f32* %36)[i64 15];
    f32 %307 = load f32* %306;
    f32* %308 = getelementptr &(f32* %38)[i64 15];
    f32 %309 = load f32* %308;
    f32 %310 = fadd f32 %307, f32 %309;
    f32* %311 = getelementptr &(f32* %41)[i64 15];
    store f32* %311 with f32 %310;
    ubr ^super.header;
  ^super.header1:
    i32 %312 = phi [^super.header, i32 %21] [^while.body1, i32 %313];
    i32 %313 = add i32 %312, i32 16;
    i1 %314 = scmp lt i32 %313, i32 3;
    cbr i1 %314(prob = 0.67), ^while.body1, ^super.header2;
  ^while.body1:
    f32* %315 = getelementptr &(f32* %0)[i32 %312];
    f32 %316 = load f32* %315;
    f32* %317 = getelementptr &(f32* %3)[i32 %312];
    f32 %318 = load f32* %317;
    f32 %319 = fadd f32 %316, f32 %318;
    f32* %320 = getelementptr &(f32* %18)[i32 %312];
    store f32* %320 with f32 %319;
    f32* %321 = getelementptr &(f32* %1)[i32 %312];
    f32 %322 = load f32* %321;
    f32* %323 = getelementptr &(f32* %4)[i32 %312];
    f32 %324 = load f32* %323;
    f32 %325 = fadd f32 %322, f32 %324;
    f32* %326 = getelementptr &(f32* %19)[i32 %312];
    store f32* %326 with f32 %325;
    f32* %327 = getelementptr &(f32* %2)[i32 %312];
    f32 %328 = load f32* %327;
    f32* %329 = getelementptr &(f32* %5)[i32 %312];
    f32 %330 = load f32* %329;
    f32 %331 = fadd f32 %328, f32 %330;
    f32* %332 = getelementptr &(f32* %20)[i32 %312];
    store f32* %332 with f32 %331;
    f32* %333 = getelementptr &(f32* %315)[i64 1];
    f32 %334 = load f32* %333;
    f32* %335 = getelementptr &(f32* %317)[i64 1];
    f32 %336 = load f32* %335;
    f32 %337 = fadd f32 %334, f32 %336;
    f32* %338 = getelementptr &(f32* %320)[i64 1];
    store f32* %338 with f32 %337;
    f32* %339 = getelementptr &(f32* %321)[i64 1];
    f32 %340 = load f32* %339;
    f32* %341 = getelementptr &(f32* %323)[i64 1];
    f32 %342 = load f32* %341;
    f32 %343 = fadd f32 %340, f32 %342;
    f32* %344 = getelementptr &(f32* %326)[i64 1];
    store f32* %344 with f32 %343;
    f32* %345 = getelementptr &(f32* %327)[i64 1];
    f32 %346 = load f32* %345;
    f32* %347 = getelementptr &(f32* %329)[i64 1];
    f32 %348 = load f32* %347;
    f32 %349 = fadd f32 %346, f32 %348;
    f32* %350 = getelementptr &(f32* %332)[i64 1];
    store f32* %350 with f32 %349;
    f32* %351 = getelementptr &(f32* %315)[i64 2];
    f32 %352 = load f32* %351;
    f32* %353 = getelementptr &(f32* %317)[i64 2];
    f32 %354 = load f32* %353;
    f32 %355 = fadd f32 %352, f32 %354;
    f32* %356 = getelementptr &(f32* %320)[i64 2];
    store f32* %356 with f32 %355;
    f32* %357 = getelementptr &(f32* %321)[i64 2];
    f32 %358 = load f32* %357;
    f32* %359 = getelementptr &(f32* %323)[i64 2];
    f32 %360 = load f32* %359;
    f32 %361 = fadd f32 %358, f32 %360;
    f32* %362 = getelementptr &(f32* %326)[i64 2];
    store f32* %362 with f32 %361;
    f32* %363 = getelementptr &(f32* %327)[i64 2];
    f32 %364 = load f32* %363;
    f32* %365 = getelementptr &(f32* %329)[i64 2];
    f32 %366 = load f32* %365;
    f32 %367 = fadd f32 %364, f32 %366;
    f32* %368 = getelementptr &(f32* %332)[i64 2];
    store f32* %368 with f32 %367;
    f32* %369 = getelementptr &(f32* %315)[i64 3];
    f32 %370 = load f32* %369;
    f32* %371 = getelementptr &(f32* %317)[i64 3];
    f32 %372 = load f32* %371;
    f32 %373 = fadd f32 %370, f32 %372;
    f32* %374 = getelementptr &(f32* %320)[i64 3];
    store f32* %374 with f32 %373;
    f32* %375 = getelementptr &(f32* %321)[i64 3];
    f32 %376 = load f32* %375;
    f32* %377 = getelementptr &(f32* %323)[i64 3];
    f32 %378 = load f32* %377;
    f32 %379 = fadd f32 %376, f32 %378;
    f32* %380 = getelementptr &(f32* %326)[i64 3];
    store f32* %380 with f32 %379;
    f32* %381 = getelementptr &(f32* %327)[i64 3];
    f32 %382 = load f32* %381;
    f32* %383 = getelementptr &(f32* %329)[i64 3];
    f32 %384 = load f32* %383;
    f32 %385 = fadd f32 %382, f32 %384;
    f32* %386 = getelementptr &(f32* %332)[i64 3];
    store f32* %386 with f32 %385;
    f32* %387 = getelementptr &(f32* %315)[i64 4];
    f32 %388 = load f32* %387;
    f32* %389 = getelementptr &(f32* %317)[i64 4];
    f32 %390 = load f32* %389;
    f32 %391 = fadd f32 %388, f32 %390;
    f32* %392 = getelementptr &(f32* %320)[i64 4];
    store f32* %392 with f32 %391;
    f32* %393 = getelementptr &(f32* %321)[i64 4];
    f32 %394 = load f32* %393;
    f32* %395 = getelementptr &(f32* %323)[i64 4];
    f32 %396 = load f32* %395;
    f32 %397 = fadd f32 %394, f32 %396;
    f32* %398 = getelementptr &(f32* %326)[i64 4];
    store f32* %398 with f32 %397;
    f32* %399 = getelementptr &(f32* %327)[i64 4];
    f32 %400 = load f32* %399;
    f32* %401 = getelementptr &(f32* %329)[i64 4];
    f32 %402 = load f32* %401;
    f32 %403 = fadd f32 %400, f32 %402;
    f32* %404 = getelementptr &(f32* %332)[i64 4];
    store f32* %404 with f32 %403;
    f32* %405 = getelementptr &(f32* %315)[i64 5];
    f32 %406 = load f32* %405;
    f32* %407 = getelementptr &(f32* %317)[i64 5];
    f32 %408 = load f32* %407;
    f32 %409 = fadd f32 %406, f32 %408;
    f32* %410 = getelementptr &(f32* %320)[i64 5];
    store f32* %410 with f32 %409;
    f32* %411 = getelementptr &(f32* %321)[i64 5];
    f32 %412 = load f32* %411;
    f32* %413 = getelementptr &(f32* %323)[i64 5];
    f32 %414 = load f32* %413;
    f32 %415 = fadd f32 %412, f32 %414;
    f32* %416 = getelementptr &(f32* %326)[i64 5];
    store f32* %416 with f32 %415;
    f32* %417 = getelementptr &(f32* %327)[i64 5];
    f32 %418 = load f32* %417;
    f32* %419 = getelementptr &(f32* %329)[i64 5];
    f32 %420 = load f32* %419;
    f32 %421 = fadd f32 %418, f32 %420;
    f32* %422 = getelementptr &(f32* %332)[i64 5];
    store f32* %422 with f32 %421;
    f32* %423 = getelementptr &(f32* %315)[i64 6];
    f32 %424 = load f32* %423;
    f32* %425 = getelementptr &(f32* %317)[i64 6];
    f32 %426 = load f32* %425;
    f32 %427 = fadd f32 %424, f32 %426;
    f32* %428 = getelementptr &(f32* %320)[i64 6];
    store f32* %428 with f32 %427;
    f32* %429 = getelementptr &(f32* %321)[i64 6];
    f32 %430 = load f32* %429;
    f32* %431 = getelementptr &(f32* %323)[i64 6];
    f32 %432 = load f32* %431;
    f32 %433 = fadd f32 %430, f32 %432;
    f32* %434 = getelementptr &(f32* %326)[i64 6];
    store f32* %434 with f32 %433;
    f32* %435 = getelementptr &(f32* %327)[i64 6];
    f32 %436 = load f32* %435;
    f32* %437 = getelementptr &(f32* %329)[i64 6];
    f32 %438 = load f32* %437;
    f32 %439 = fadd f32 %436, f32 %438;
    f32* %440 = getelementptr &(f32* %332)[i64 6];
    store f32* %440 with f32 %439;
    f32* %441 = getelementptr &(f32* %315)[i64 7];
    f32 %442 = load f32* %441;
    f32* %443 = getelementptr &(f32* %317)[i64 7];
    f32 %444 = load f32* %443;
    f32 %445 = fadd f32 %442, f32 %444;
    f32* %446 = getelementptr &(f32* %320)[i64 7];
    store f32* %446 with f32 %445;
    f32* %447 = getelementptr &(f32* %321)[i64 7];
    f32 %448 = load f32* %447;
    f32* %449 = getelementptr &(f32* %323)[i64 7];
    f32 %450 = load f32* %449;
    f32 %451 = fadd f32 %448, f32 %450;
    f32* %452 = getelementptr &(f32* %326)[i64 7];
    store f32* %452 with f32 %451;
    f32* %453 = getelementptr &(f32* %327)[i64 7];
    f32 %454 = load f32* %453;
    f32* %455 = getelementptr &(f32* %329)[i64 7];
    f32 %456 = load f32* %455;
    f32 %457 = fadd f32 %454, f32 %456;
    f32* %458 = getelementptr &(f32* %332)[i64 7];
    store f32* %458 with f32 %457;
    f32* %459 = getelementptr &(f32* %315)[i64 8];
    f32 %460 = load f32* %459;
    f32* %461 = getelementptr &(f32* %317)[i64 8];
    f32 %462 = load f32* %461;
    f32 %463 = fadd f32 %460, f32 %462;
    f32* %464 = getelementptr &(f32* %320)[i64 8];
    store f32* %464 with f32 %463;
    f32* %465 = getelementptr &(f32* %321)[i64 8];
    f32 %466 = load f32* %465;
    f32* %467 = getelementptr &(f32* %323)[i64 8];
    f32 %468 = load f32* %467;
    f32 %469 = fadd f32 %466, f32 %468;
    f32* %470 = getelementptr &(f32* %326)[i64 8];
    store f32* %470 with f32 %469;
    f32* %471 = getelementptr &(f32* %327)[i64 8];
    f32 %472 = load f32* %471;
    f32* %473 = getelementptr &(f32* %329)[i64 8];
    f32 %474 = load f32* %473;
    f32 %475 = fadd f32 %472, f32 %474;
    f32* %476 = getelementptr &(f32* %332)[i64 8];
    store f32* %476 with f32 %475;
    f32* %477 = getelementptr &(f32* %315)[i64 9];
    f32 %478 = load f32* %477;
    f32* %479 = getelementptr &(f32* %317)[i64 9];
    f32 %480 = load f32* %479;
    f32 %481 = fadd f32 %478, f32 %480;
    f32* %482 = getelementptr &(f32* %320)[i64 9];
    store f32* %482 with f32 %481;
    f32* %483 = getelementptr &(f32* %321)[i64 9];
    f32 %484 = load f32* %483;
    f32* %485 = getelementptr &(f32* %323)[i64 9];
    f32 %486 = load f32* %485;
    f32 %487 = fadd f32 %484, f32 %486;
    f32* %488 = getelementptr &(f32* %326)[i64 9];
    store f32* %488 with f32 %487;
    f32* %489 = getelementptr &(f32* %327)[i64 9];
    f32 %490 = load f32* %489;
    f32* %491 = getelementptr &(f32* %329)[i64 9];
    f32 %492 = load f32* %491;
    f32 %493 = fadd f32 %490, f32 %492;
    f32* %494 = getelementptr &(f32* %332)[i64 9];
    store f32* %494 with f32 %493;
    f32* %495 = getelementptr &(f32* %315)[i64 10];
    f32 %496 = load f32* %495;
    f32* %497 = getelementptr &(f32* %317)[i64 10];
    f32 %498 = load f32* %497;
    f32 %499 = fadd f32 %496, f32 %498;
    f32* %500 = getelementptr &(f32* %320)[i64 10];
    store f32* %500 with f32 %499;
    f32* %501 = getelementptr &(f32* %321)[i64 10];
    f32 %502 = load f32* %501;
    f32* %503 = getelementptr &(f32* %323)[i64 10];
    f32 %504 = load f32* %503;
    f32 %505 = fadd f32 %502, f32 %504;
    f32* %506 = getelementptr &(f32* %326)[i64 10];
    store f32* %506 with f32 %505;
    f32* %507 = getelementptr &(f32* %327)[i64 10];
    f32 %508 = load f32* %507;
    f32* %509 = getelementptr &(f32* %329)[i64 10];
    f32 %510 = load f32* %509;
    f32 %511 = fadd f32 %508, f32 %510;
    f32* %512 = getelementptr &(f32* %332)[i64 10];
    store f32* %512 with f32 %511;
    f32* %513 = getelementptr &(f32* %315)[i64 11];
    f32 %514 = load f32* %513;
    f32* %515 = getelementptr &(f32* %317)[i64 11];
    f32 %516 = load f32* %515;
    f32 %517 = fadd f32 %514, f32 %516;
    f32* %518 = getelementptr &(f32* %320)[i64 11];
    store f32* %518 with f32 %517;
    f32* %519 = getelementptr &(f32* %321)[i64 11];
    f32 %520 = load f32* %519;
    f32* %521 = getelementptr &(f32* %323)[i64 11];
    f32 %522 = load f32* %521;
    f32 %523 = fadd f32 %520, f32 %522;
    f32* %524 = getelementptr &(f32* %326)[i64 11];
    store f32* %524 with f32 %523;
    f32* %525 = getelementptr &(f32* %327)[i64 11];
    f32 %526 = load f32* %525;
    f32* %527 = getelementptr &(f32* %329)[i64 11];
    f32 %528 = load f32* %527;
    f32 %529 = fadd f32 %526, f32 %528;
    f32* %530 = getelementptr &(f32* %332)[i64 11];
    store f32* %530 with f32 %529;
    f32* %531 = getelementptr &(f32* %315)[i64 12];
    f32 %532 = load f32* %531;
    f32* %533 = getelementptr &(f32* %317)[i64 12];
    f32 %534 = load f32* %533;
    f32 %535 = fadd f32 %532, f32 %534;
    f32* %536 = getelementptr &(f32* %320)[i64 12];
    store f32* %536 with f32 %535;
    f32* %537 = getelementptr &(f32* %321)[i64 12];
    f32 %538 = load f32* %537;
    f32* %539 = getelementptr &(f32* %323)[i64 12];
    f32 %540 = load f32* %539;
    f32 %541 = fadd f32 %538, f32 %540;
    f32* %542 = getelementptr &(f32* %326)[i64 12];
    store f32* %542 with f32 %541;
    f32* %543 = getelementptr &(f32* %327)[i64 12];
    f32 %544 = load f32* %543;
    f32* %545 = getelementptr &(f32* %329)[i64 12];
    f32 %546 = load f32* %545;
    f32 %547 = fadd f32 %544, f32 %546;
    f32* %548 = getelementptr &(f32* %332)[i64 12];
    store f32* %548 with f32 %547;
    f32* %549 = getelementptr &(f32* %315)[i64 13];
    f32 %550 = load f32* %549;
    f32* %551 = getelementptr &(f32* %317)[i64 13];
    f32 %552 = load f32* %551;
    f32 %553 = fadd f32 %550, f32 %552;
    f32* %554 = getelementptr &(f32* %320)[i64 13];
    store f32* %554 with f32 %553;
    f32* %555 = getelementptr &(f32* %321)[i64 13];
    f32 %556 = load f32* %555;
    f32* %557 = getelementptr &(f32* %323)[i64 13];
    f32 %558 = load f32* %557;
    f32 %559 = fadd f32 %556, f32 %558;
    f32* %560 = getelementptr &(f32* %326)[i64 13];
    store f32* %560 with f32 %559;
    f32* %561 = getelementptr &(f32* %327)[i64 13];
    f32 %562 = load f32* %561;
    f32* %563 = getelementptr &(f32* %329)[i64 13];
    f32 %564 = load f32* %563;
    f32 %565 = fadd f32 %562, f32 %564;
    f32* %566 = getelementptr &(f32* %332)[i64 13];
    store f32* %566 with f32 %565;
    f32* %567 = getelementptr &(f32* %315)[i64 14];
    f32 %568 = load f32* %567;
    f32* %569 = getelementptr &(f32* %317)[i64 14];
    f32 %570 = load f32* %569;
    f32 %571 = fadd f32 %568, f32 %570;
    f32* %572 = getelementptr &(f32* %320)[i64 14];
    store f32* %572 with f32 %571;
    f32* %573 = getelementptr &(f32* %321)[i64 14];
    f32 %574 = load f32* %573;
    f32* %575 = getelementptr &(f32* %323)[i64 14];
    f32 %576 = load f32* %575;
    f32 %577 = fadd f32 %574, f32 %576;
    f32* %578 = getelementptr &(f32* %326)[i64 14];
    store f32* %578 with f32 %577;
    f32* %579 = getelementptr &(f32* %327)[i64 14];
    f32 %580 = load f32* %579;
    f32* %581 = getelementptr &(f32* %329)[i64 14];
    f32 %582 = load f32* %581;
    f32 %583 = fadd f32 %580, f32 %582;
    f32* %584 = getelementptr &(f32* %332)[i64 14];
    store f32* %584 with f32 %583;
    f32* %585 = getelementptr &(f32* %315)[i64 15];
    f32 %586 = load f32* %585;
    f32* %587 = getelementptr &(f32* %317)[i64 15];
    f32 %588 = load f32* %587;
    f32 %589 = fadd f32 %586, f32 %588;
    f32* %590 = getelementptr &(f32* %320)[i64 15];
    store f32* %590 with f32 %589;
    f32* %591 = getelementptr &(f32* %321)[i64 15];
    f32 %592 = load f32* %591;
    f32* %593 = getelementptr &(f32* %323)[i64 15];
    f32 %594 = load f32* %593;
    f32 %595 = fadd f32 %592, f32 %594;
    f32* %596 = getelementptr &(f32* %326)[i64 15];
    store f32* %596 with f32 %595;
    f32* %597 = getelementptr &(f32* %327)[i64 15];
    f32 %598 = load f32* %597;
    f32* %599 = getelementptr &(f32* %329)[i64 15];
    f32 %600 = load f32* %599;
    f32 %601 = fadd f32 %598, f32 %600;
    f32* %602 = getelementptr &(f32* %332)[i64 15];
    store f32* %602 with f32 %601;
    ubr ^super.header1;
  ^super.header2:
    i32 %603 = phi [^super.header1, i32 %312] [^while.body2, i32 %604];
    i32 %604 = add i32 %603, i32 16;
    i1 %605 = scmp lt i32 %604, i32 3;
    cbr i1 %605(prob = 0.67), ^while.body2, ^while.body3;
  ^while.body2:
    f32* %606 = getelementptr &(f32* %0)[i32 %603];
    f32 %607 = load f32* %606;
    f32* %608 = getelementptr &(f32* %3)[i32 %603];
    f32 %609 = load f32* %608;
    f32 %610 = fadd f32 %607, f32 %609;
    f32* %611 = getelementptr &(f32* %18)[i32 %603];
    store f32* %611 with f32 %610;
    f32* %612 = getelementptr &(f32* %1)[i32 %603];
    f32 %613 = load f32* %612;
    f32* %614 = getelementptr &(f32* %4)[i32 %603];
    f32 %615 = load f32* %614;
    f32 %616 = fadd f32 %613, f32 %615;
    f32* %617 = getelementptr &(f32* %19)[i32 %603];
    store f32* %617 with f32 %616;
    f32* %618 = getelementptr &(f32* %2)[i32 %603];
    f32 %619 = load f32* %618;
    f32* %620 = getelementptr &(f32* %5)[i32 %603];
    f32 %621 = load f32* %620;
    f32 %622 = fadd f32 %619, f32 %621;
    f32* %623 = getelementptr &(f32* %20)[i32 %603];
    store f32* %623 with f32 %622;
    f32* %624 = getelementptr &(f32* %606)[i64 1];
    f32 %625 = load f32* %624;
    f32* %626 = getelementptr &(f32* %608)[i64 1];
    f32 %627 = load f32* %626;
    f32 %628 = fadd f32 %625, f32 %627;
    f32* %629 = getelementptr &(f32* %611)[i64 1];
    store f32* %629 with f32 %628;
    f32* %630 = getelementptr &(f32* %612)[i64 1];
    f32 %631 = load f32* %630;
    f32* %632 = getelementptr &(f32* %614)[i64 1];
    f32 %633 = load f32* %632;
    f32 %634 = fadd f32 %631, f32 %633;
    f32* %635 = getelementptr &(f32* %617)[i64 1];
    store f32* %635 with f32 %634;
    f32* %636 = getelementptr &(f32* %618)[i64 1];
    f32 %637 = load f32* %636;
    f32* %638 = getelementptr &(f32* %620)[i64 1];
    f32 %639 = load f32* %638;
    f32 %640 = fadd f32 %637, f32 %639;
    f32* %641 = getelementptr &(f32* %623)[i64 1];
    store f32* %641 with f32 %640;
    f32* %642 = getelementptr &(f32* %606)[i64 2];
    f32 %643 = load f32* %642;
    f32* %644 = getelementptr &(f32* %608)[i64 2];
    f32 %645 = load f32* %644;
    f32 %646 = fadd f32 %643, f32 %645;
    f32* %647 = getelementptr &(f32* %611)[i64 2];
    store f32* %647 with f32 %646;
    f32* %648 = getelementptr &(f32* %612)[i64 2];
    f32 %649 = load f32* %648;
    f32* %650 = getelementptr &(f32* %614)[i64 2];
    f32 %651 = load f32* %650;
    f32 %652 = fadd f32 %649, f32 %651;
    f32* %653 = getelementptr &(f32* %617)[i64 2];
    store f32* %653 with f32 %652;
    f32* %654 = getelementptr &(f32* %618)[i64 2];
    f32 %655 = load f32* %654;
    f32* %656 = getelementptr &(f32* %620)[i64 2];
    f32 %657 = load f32* %656;
    f32 %658 = fadd f32 %655, f32 %657;
    f32* %659 = getelementptr &(f32* %623)[i64 2];
    store f32* %659 with f32 %658;
    f32* %660 = getelementptr &(f32* %606)[i64 3];
    f32 %661 = load f32* %660;
    f32* %662 = getelementptr &(f32* %608)[i64 3];
    f32 %663 = load f32* %662;
    f32 %664 = fadd f32 %661, f32 %663;
    f32* %665 = getelementptr &(f32* %611)[i64 3];
    store f32* %665 with f32 %664;
    f32* %666 = getelementptr &(f32* %612)[i64 3];
    f32 %667 = load f32* %666;
    f32* %668 = getelementptr &(f32* %614)[i64 3];
    f32 %669 = load f32* %668;
    f32 %670 = fadd f32 %667, f32 %669;
    f32* %671 = getelementptr &(f32* %617)[i64 3];
    store f32* %671 with f32 %670;
    f32* %672 = getelementptr &(f32* %618)[i64 3];
    f32 %673 = load f32* %672;
    f32* %674 = getelementptr &(f32* %620)[i64 3];
    f32 %675 = load f32* %674;
    f32 %676 = fadd f32 %673, f32 %675;
    f32* %677 = getelementptr &(f32* %623)[i64 3];
    store f32* %677 with f32 %676;
    f32* %678 = getelementptr &(f32* %606)[i64 4];
    f32 %679 = load f32* %678;
    f32* %680 = getelementptr &(f32* %608)[i64 4];
    f32 %681 = load f32* %680;
    f32 %682 = fadd f32 %679, f32 %681;
    f32* %683 = getelementptr &(f32* %611)[i64 4];
    store f32* %683 with f32 %682;
    f32* %684 = getelementptr &(f32* %612)[i64 4];
    f32 %685 = load f32* %684;
    f32* %686 = getelementptr &(f32* %614)[i64 4];
    f32 %687 = load f32* %686;
    f32 %688 = fadd f32 %685, f32 %687;
    f32* %689 = getelementptr &(f32* %617)[i64 4];
    store f32* %689 with f32 %688;
    f32* %690 = getelementptr &(f32* %618)[i64 4];
    f32 %691 = load f32* %690;
    f32* %692 = getelementptr &(f32* %620)[i64 4];
    f32 %693 = load f32* %692;
    f32 %694 = fadd f32 %691, f32 %693;
    f32* %695 = getelementptr &(f32* %623)[i64 4];
    store f32* %695 with f32 %694;
    f32* %696 = getelementptr &(f32* %606)[i64 5];
    f32 %697 = load f32* %696;
    f32* %698 = getelementptr &(f32* %608)[i64 5];
    f32 %699 = load f32* %698;
    f32 %700 = fadd f32 %697, f32 %699;
    f32* %701 = getelementptr &(f32* %611)[i64 5];
    store f32* %701 with f32 %700;
    f32* %702 = getelementptr &(f32* %612)[i64 5];
    f32 %703 = load f32* %702;
    f32* %704 = getelementptr &(f32* %614)[i64 5];
    f32 %705 = load f32* %704;
    f32 %706 = fadd f32 %703, f32 %705;
    f32* %707 = getelementptr &(f32* %617)[i64 5];
    store f32* %707 with f32 %706;
    f32* %708 = getelementptr &(f32* %618)[i64 5];
    f32 %709 = load f32* %708;
    f32* %710 = getelementptr &(f32* %620)[i64 5];
    f32 %711 = load f32* %710;
    f32 %712 = fadd f32 %709, f32 %711;
    f32* %713 = getelementptr &(f32* %623)[i64 5];
    store f32* %713 with f32 %712;
    f32* %714 = getelementptr &(f32* %606)[i64 6];
    f32 %715 = load f32* %714;
    f32* %716 = getelementptr &(f32* %608)[i64 6];
    f32 %717 = load f32* %716;
    f32 %718 = fadd f32 %715, f32 %717;
    f32* %719 = getelementptr &(f32* %611)[i64 6];
    store f32* %719 with f32 %718;
    f32* %720 = getelementptr &(f32* %612)[i64 6];
    f32 %721 = load f32* %720;
    f32* %722 = getelementptr &(f32* %614)[i64 6];
    f32 %723 = load f32* %722;
    f32 %724 = fadd f32 %721, f32 %723;
    f32* %725 = getelementptr &(f32* %617)[i64 6];
    store f32* %725 with f32 %724;
    f32* %726 = getelementptr &(f32* %618)[i64 6];
    f32 %727 = load f32* %726;
    f32* %728 = getelementptr &(f32* %620)[i64 6];
    f32 %729 = load f32* %728;
    f32 %730 = fadd f32 %727, f32 %729;
    f32* %731 = getelementptr &(f32* %623)[i64 6];
    store f32* %731 with f32 %730;
    f32* %732 = getelementptr &(f32* %606)[i64 7];
    f32 %733 = load f32* %732;
    f32* %734 = getelementptr &(f32* %608)[i64 7];
    f32 %735 = load f32* %734;
    f32 %736 = fadd f32 %733, f32 %735;
    f32* %737 = getelementptr &(f32* %611)[i64 7];
    store f32* %737 with f32 %736;
    f32* %738 = getelementptr &(f32* %612)[i64 7];
    f32 %739 = load f32* %738;
    f32* %740 = getelementptr &(f32* %614)[i64 7];
    f32 %741 = load f32* %740;
    f32 %742 = fadd f32 %739, f32 %741;
    f32* %743 = getelementptr &(f32* %617)[i64 7];
    store f32* %743 with f32 %742;
    f32* %744 = getelementptr &(f32* %618)[i64 7];
    f32 %745 = load f32* %744;
    f32* %746 = getelementptr &(f32* %620)[i64 7];
    f32 %747 = load f32* %746;
    f32 %748 = fadd f32 %745, f32 %747;
    f32* %749 = getelementptr &(f32* %623)[i64 7];
    store f32* %749 with f32 %748;
    f32* %750 = getelementptr &(f32* %606)[i64 8];
    f32 %751 = load f32* %750;
    f32* %752 = getelementptr &(f32* %608)[i64 8];
    f32 %753 = load f32* %752;
    f32 %754 = fadd f32 %751, f32 %753;
    f32* %755 = getelementptr &(f32* %611)[i64 8];
    store f32* %755 with f32 %754;
    f32* %756 = getelementptr &(f32* %612)[i64 8];
    f32 %757 = load f32* %756;
    f32* %758 = getelementptr &(f32* %614)[i64 8];
    f32 %759 = load f32* %758;
    f32 %760 = fadd f32 %757, f32 %759;
    f32* %761 = getelementptr &(f32* %617)[i64 8];
    store f32* %761 with f32 %760;
    f32* %762 = getelementptr &(f32* %618)[i64 8];
    f32 %763 = load f32* %762;
    f32* %764 = getelementptr &(f32* %620)[i64 8];
    f32 %765 = load f32* %764;
    f32 %766 = fadd f32 %763, f32 %765;
    f32* %767 = getelementptr &(f32* %623)[i64 8];
    store f32* %767 with f32 %766;
    f32* %768 = getelementptr &(f32* %606)[i64 9];
    f32 %769 = load f32* %768;
    f32* %770 = getelementptr &(f32* %608)[i64 9];
    f32 %771 = load f32* %770;
    f32 %772 = fadd f32 %769, f32 %771;
    f32* %773 = getelementptr &(f32* %611)[i64 9];
    store f32* %773 with f32 %772;
    f32* %774 = getelementptr &(f32* %612)[i64 9];
    f32 %775 = load f32* %774;
    f32* %776 = getelementptr &(f32* %614)[i64 9];
    f32 %777 = load f32* %776;
    f32 %778 = fadd f32 %775, f32 %777;
    f32* %779 = getelementptr &(f32* %617)[i64 9];
    store f32* %779 with f32 %778;
    f32* %780 = getelementptr &(f32* %618)[i64 9];
    f32 %781 = load f32* %780;
    f32* %782 = getelementptr &(f32* %620)[i64 9];
    f32 %783 = load f32* %782;
    f32 %784 = fadd f32 %781, f32 %783;
    f32* %785 = getelementptr &(f32* %623)[i64 9];
    store f32* %785 with f32 %784;
    f32* %786 = getelementptr &(f32* %606)[i64 10];
    f32 %787 = load f32* %786;
    f32* %788 = getelementptr &(f32* %608)[i64 10];
    f32 %789 = load f32* %788;
    f32 %790 = fadd f32 %787, f32 %789;
    f32* %791 = getelementptr &(f32* %611)[i64 10];
    store f32* %791 with f32 %790;
    f32* %792 = getelementptr &(f32* %612)[i64 10];
    f32 %793 = load f32* %792;
    f32* %794 = getelementptr &(f32* %614)[i64 10];
    f32 %795 = load f32* %794;
    f32 %796 = fadd f32 %793, f32 %795;
    f32* %797 = getelementptr &(f32* %617)[i64 10];
    store f32* %797 with f32 %796;
    f32* %798 = getelementptr &(f32* %618)[i64 10];
    f32 %799 = load f32* %798;
    f32* %800 = getelementptr &(f32* %620)[i64 10];
    f32 %801 = load f32* %800;
    f32 %802 = fadd f32 %799, f32 %801;
    f32* %803 = getelementptr &(f32* %623)[i64 10];
    store f32* %803 with f32 %802;
    f32* %804 = getelementptr &(f32* %606)[i64 11];
    f32 %805 = load f32* %804;
    f32* %806 = getelementptr &(f32* %608)[i64 11];
    f32 %807 = load f32* %806;
    f32 %808 = fadd f32 %805, f32 %807;
    f32* %809 = getelementptr &(f32* %611)[i64 11];
    store f32* %809 with f32 %808;
    f32* %810 = getelementptr &(f32* %612)[i64 11];
    f32 %811 = load f32* %810;
    f32* %812 = getelementptr &(f32* %614)[i64 11];
    f32 %813 = load f32* %812;
    f32 %814 = fadd f32 %811, f32 %813;
    f32* %815 = getelementptr &(f32* %617)[i64 11];
    store f32* %815 with f32 %814;
    f32* %816 = getelementptr &(f32* %618)[i64 11];
    f32 %817 = load f32* %816;
    f32* %818 = getelementptr &(f32* %620)[i64 11];
    f32 %819 = load f32* %818;
    f32 %820 = fadd f32 %817, f32 %819;
    f32* %821 = getelementptr &(f32* %623)[i64 11];
    store f32* %821 with f32 %820;
    f32* %822 = getelementptr &(f32* %606)[i64 12];
    f32 %823 = load f32* %822;
    f32* %824 = getelementptr &(f32* %608)[i64 12];
    f32 %825 = load f32* %824;
    f32 %826 = fadd f32 %823, f32 %825;
    f32* %827 = getelementptr &(f32* %611)[i64 12];
    store f32* %827 with f32 %826;
    f32* %828 = getelementptr &(f32* %612)[i64 12];
    f32 %829 = load f32* %828;
    f32* %830 = getelementptr &(f32* %614)[i64 12];
    f32 %831 = load f32* %830;
    f32 %832 = fadd f32 %829, f32 %831;
    f32* %833 = getelementptr &(f32* %617)[i64 12];
    store f32* %833 with f32 %832;
    f32* %834 = getelementptr &(f32* %618)[i64 12];
    f32 %835 = load f32* %834;
    f32* %836 = getelementptr &(f32* %620)[i64 12];
    f32 %837 = load f32* %836;
    f32 %838 = fadd f32 %835, f32 %837;
    f32* %839 = getelementptr &(f32* %623)[i64 12];
    store f32* %839 with f32 %838;
    f32* %840 = getelementptr &(f32* %606)[i64 13];
    f32 %841 = load f32* %840;
    f32* %842 = getelementptr &(f32* %608)[i64 13];
    f32 %843 = load f32* %842;
    f32 %844 = fadd f32 %841, f32 %843;
    f32* %845 = getelementptr &(f32* %611)[i64 13];
    store f32* %845 with f32 %844;
    f32* %846 = getelementptr &(f32* %612)[i64 13];
    f32 %847 = load f32* %846;
    f32* %848 = getelementptr &(f32* %614)[i64 13];
    f32 %849 = load f32* %848;
    f32 %850 = fadd f32 %847, f32 %849;
    f32* %851 = getelementptr &(f32* %617)[i64 13];
    store f32* %851 with f32 %850;
    f32* %852 = getelementptr &(f32* %618)[i64 13];
    f32 %853 = load f32* %852;
    f32* %854 = getelementptr &(f32* %620)[i64 13];
    f32 %855 = load f32* %854;
    f32 %856 = fadd f32 %853, f32 %855;
    f32* %857 = getelementptr &(f32* %623)[i64 13];
    store f32* %857 with f32 %856;
    f32* %858 = getelementptr &(f32* %606)[i64 14];
    f32 %859 = load f32* %858;
    f32* %860 = getelementptr &(f32* %608)[i64 14];
    f32 %861 = load f32* %860;
    f32 %862 = fadd f32 %859, f32 %861;
    f32* %863 = getelementptr &(f32* %611)[i64 14];
    store f32* %863 with f32 %862;
    f32* %864 = getelementptr &(f32* %612)[i64 14];
    f32 %865 = load f32* %864;
    f32* %866 = getelementptr &(f32* %614)[i64 14];
    f32 %867 = load f32* %866;
    f32 %868 = fadd f32 %865, f32 %867;
    f32* %869 = getelementptr &(f32* %617)[i64 14];
    store f32* %869 with f32 %868;
    f32* %870 = getelementptr &(f32* %618)[i64 14];
    f32 %871 = load f32* %870;
    f32* %872 = getelementptr &(f32* %620)[i64 14];
    f32 %873 = load f32* %872;
    f32 %874 = fadd f32 %871, f32 %873;
    f32* %875 = getelementptr &(f32* %623)[i64 14];
    store f32* %875 with f32 %874;
    f32* %876 = getelementptr &(f32* %606)[i64 15];
    f32 %877 = load f32* %876;
    f32* %878 = getelementptr &(f32* %608)[i64 15];
    f32 %879 = load f32* %878;
    f32 %880 = fadd f32 %877, f32 %879;
    f32* %881 = getelementptr &(f32* %611)[i64 15];
    store f32* %881 with f32 %880;
    f32* %882 = getelementptr &(f32* %612)[i64 15];
    f32 %883 = load f32* %882;
    f32* %884 = getelementptr &(f32* %614)[i64 15];
    f32 %885 = load f32* %884;
    f32 %886 = fadd f32 %883, f32 %885;
    f32* %887 = getelementptr &(f32* %617)[i64 15];
    store f32* %887 with f32 %886;
    f32* %888 = getelementptr &(f32* %618)[i64 15];
    f32 %889 = load f32* %888;
    f32* %890 = getelementptr &(f32* %620)[i64 15];
    f32 %891 = load f32* %890;
    f32 %892 = fadd f32 %889, f32 %891;
    f32* %893 = getelementptr &(f32* %623)[i64 15];
    store f32* %893 with f32 %892;
    ubr ^super.header2;
  ^while.body3:
    i32 %894 = phi [^super.header2, i32 %603] [^while.body3, i32 %913];
    f32* %895 = getelementptr &(f32* %0)[i32 %894];
    f32 %896 = load f32* %895;
    f32* %897 = getelementptr &(f32* %3)[i32 %894];
    f32 %898 = load f32* %897;
    f32 %899 = fadd f32 %896, f32 %898;
    f32* %900 = getelementptr &(f32* %18)[i32 %894];
    store f32* %900 with f32 %899;
    f32* %901 = getelementptr &(f32* %1)[i32 %894];
    f32 %902 = load f32* %901;
    f32* %903 = getelementptr &(f32* %4)[i32 %894];
    f32 %904 = load f32* %903;
    f32 %905 = fadd f32 %902, f32 %904;
    f32* %906 = getelementptr &(f32* %19)[i32 %894];
    store f32* %906 with f32 %905;
    f32* %907 = getelementptr &(f32* %2)[i32 %894];
    f32 %908 = load f32* %907;
    f32* %909 = getelementptr &(f32* %5)[i32 %894];
    f32 %910 = load f32* %909;
    f32 %911 = fadd f32 %908, f32 %910;
    f32* %912 = getelementptr &(f32* %20)[i32 %894];
    store f32* %912 with f32 %911;
    i32 %913 = add i32 %894, i32 1;
    i1 %914 = scmp lt i32 %913, i32 3;
    cbr i1 %914(prob = 0.97), ^while.body3, ^while.body4;
  ^while.body4:
    i32 %915 = phi [^while.body3, i32 0] [^while.body4, i32 %919];
    f32* %916 = getelementptr &([6 * f32]* %c0)[i64 0][i32 %915];
    f32 %917 = load f32* %916;
    i32 %918 = f2s f32 %917 to i32;
    call (i32) -> void @putint(i32 %918);
    i32 %919 = add i32 %915, i32 1;
    i1 %920 = scmp lt i32 %919, i32 3;
    cbr i1 %920(prob = 0.67), ^while.body4, ^b;
  ^b:
    call (i32) -> void @putch(i32 10);
    ubr ^while.body5;
  ^while.body5:
    i32 %921 = phi [^b, i32 0] [^while.body5, i32 %925];
    f32* %922 = getelementptr &([3 * f32]* %c1)[i64 0][i32 %921];
    f32 %923 = load f32* %922;
    i32 %924 = f2s f32 %923 to i32;
    call (i32) -> void @putint(i32 %924);
    i32 %925 = add i32 %921, i32 1;
    i1 %926 = scmp lt i32 %925, i32 3;
    cbr i1 %926(prob = 0.67), ^while.body5, ^b1;
  ^b1:
    call (i32) -> void @putch(i32 10);
    ubr ^while.body6;
  ^while.body6:
    i32 %927 = phi [^b1, i32 0] [^while.body6, i32 %931];
    f32* %928 = getelementptr &([3 * f32]* %c2)[i64 0][i32 %927];
    f32 %929 = load f32* %928;
    i32 %930 = f2s f32 %929 to i32;
    call (i32) -> void @putint(i32 %930);
    i32 %931 = add i32 %927, i32 1;
    i1 %932 = scmp lt i32 %931, i32 3;
    cbr i1 %932(prob = 0.67), ^while.body6, ^b2;
  ^b2:
    call (i32) -> void @putch(i32 10);
    ret i32 0;
}
