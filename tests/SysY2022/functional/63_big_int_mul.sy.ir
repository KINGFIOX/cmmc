internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    [40 * i32]* %result = alloc [40 * i32];
    [25 * i32]* %c2 = alloc [25 * i32];
    [25 * i32]* %c1 = alloc [25 * i32];
    [20 * i32]* %mult2 = alloc [20 * i32];
    [20 * i32]* %mult1 = alloc [20 * i32];
    i32* %0 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 0];
    store i32* %0 with i32 1;
    i32* %1 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 1];
    store i32* %1 with i32 2;
    i32* %2 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 2];
    store i32* %2 with i32 3;
    i32* %3 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 3];
    store i32* %3 with i32 4;
    i32* %4 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 4];
    store i32* %4 with i32 5;
    i32* %5 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 5];
    store i32* %5 with i32 6;
    i32* %6 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 6];
    store i32* %6 with i32 7;
    i32* %7 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 7];
    store i32* %7 with i32 8;
    i32* %8 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 8];
    store i32* %8 with i32 9;
    i32* %9 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 9];
    store i32* %9 with i32 0;
    i32* %10 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 10];
    store i32* %10 with i32 1;
    i32* %11 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 11];
    store i32* %11 with i32 2;
    i32* %12 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 12];
    store i32* %12 with i32 3;
    i32* %13 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 13];
    store i32* %13 with i32 4;
    i32* %14 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 14];
    store i32* %14 with i32 5;
    i32* %15 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 15];
    store i32* %15 with i32 6;
    i32* %16 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 16];
    store i32* %16 with i32 7;
    i32* %17 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 17];
    store i32* %17 with i32 8;
    i32* %18 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 18];
    store i32* %18 with i32 9;
    i32* %19 = getelementptr &([20 * i32]* %mult1)[i64 0][i64 19];
    store i32* %19 with i32 0;
    i32* %20 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 0];
    store i32* %20 with i32 2;
    i32* %21 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 1];
    store i32* %21 with i32 3;
    i32* %22 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 2];
    store i32* %22 with i32 4;
    i32* %23 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 3];
    store i32* %23 with i32 2;
    i32* %24 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 4];
    store i32* %24 with i32 5;
    i32* %25 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 5];
    store i32* %25 with i32 7;
    i32* %26 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 6];
    store i32* %26 with i32 9;
    i32* %27 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 7];
    store i32* %27 with i32 9;
    i32* %28 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 8];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 9];
    store i32* %29 with i32 1;
    i32* %30 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 10];
    store i32* %30 with i32 9;
    i32* %31 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 11];
    store i32* %31 with i32 8;
    i32* %32 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 12];
    store i32* %32 with i32 7;
    i32* %33 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 13];
    store i32* %33 with i32 6;
    i32* %34 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 14];
    store i32* %34 with i32 4;
    i32* %35 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 15];
    store i32* %35 with i32 3;
    i32* %36 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 16];
    store i32* %36 with i32 2;
    i32* %37 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 17];
    store i32* %37 with i32 1;
    i32* %38 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 18];
    store i32* %38 with i32 2;
    i32* %39 = getelementptr &([20 * i32]* %mult2)[i64 0][i64 19];
    store i32* %39 with i32 2;
    i32* %40 = getelementptr &([40 * i32]* %result)[i64 0][i64 0];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &([40 * i32]* %result)[i64 0][i64 1];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &([40 * i32]* %result)[i64 0][i64 2];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &([40 * i32]* %result)[i64 0][i64 3];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &([40 * i32]* %result)[i64 0][i64 4];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &([40 * i32]* %result)[i64 0][i64 5];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &([40 * i32]* %result)[i64 0][i64 6];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &([40 * i32]* %result)[i64 0][i64 7];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &([40 * i32]* %result)[i64 0][i64 8];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &([40 * i32]* %result)[i64 0][i64 9];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &([40 * i32]* %result)[i64 0][i64 10];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &([40 * i32]* %result)[i64 0][i64 11];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &([40 * i32]* %result)[i64 0][i64 12];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &([40 * i32]* %result)[i64 0][i64 13];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([40 * i32]* %result)[i64 0][i64 14];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &([40 * i32]* %result)[i64 0][i64 15];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &([40 * i32]* %result)[i64 0][i64 16];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &([40 * i32]* %result)[i64 0][i64 17];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &([40 * i32]* %result)[i64 0][i64 18];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &([40 * i32]* %result)[i64 0][i64 19];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &([40 * i32]* %result)[i64 0][i64 20];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &([40 * i32]* %result)[i64 0][i64 21];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &([40 * i32]* %result)[i64 0][i64 22];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &([40 * i32]* %result)[i64 0][i64 23];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &([40 * i32]* %result)[i64 0][i64 24];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &([40 * i32]* %result)[i64 0][i64 25];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &([40 * i32]* %result)[i64 0][i64 26];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &([40 * i32]* %result)[i64 0][i64 27];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &([40 * i32]* %result)[i64 0][i64 28];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &([40 * i32]* %result)[i64 0][i64 29];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &([40 * i32]* %result)[i64 0][i64 30];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &([40 * i32]* %result)[i64 0][i64 31];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &([40 * i32]* %result)[i64 0][i64 32];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &([40 * i32]* %result)[i64 0][i64 33];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &([40 * i32]* %result)[i64 0][i64 34];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &([40 * i32]* %result)[i64 0][i64 35];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &([40 * i32]* %result)[i64 0][i64 36];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &([40 * i32]* %result)[i64 0][i64 37];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &([40 * i32]* %result)[i64 0][i64 38];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &([40 * i32]* %result)[i64 0][i64 39];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &([25 * i32]* %c1)[i64 0][i64 0];
    store i32* %80 with i32 1;
    i32* %81 = getelementptr &([25 * i32]* %c1)[i64 0][i64 1];
    store i32* %81 with i32 2;
    i32* %82 = getelementptr &([25 * i32]* %c1)[i64 0][i64 2];
    store i32* %82 with i32 3;
    i32* %83 = getelementptr &([25 * i32]* %c1)[i64 0][i64 3];
    store i32* %83 with i32 4;
    i32* %84 = getelementptr &([25 * i32]* %c1)[i64 0][i64 4];
    store i32* %84 with i32 5;
    i32* %85 = getelementptr &([25 * i32]* %c1)[i64 0][i64 5];
    store i32* %85 with i32 6;
    i32* %86 = getelementptr &([25 * i32]* %c1)[i64 0][i64 6];
    store i32* %86 with i32 7;
    i32* %87 = getelementptr &([25 * i32]* %c1)[i64 0][i64 7];
    store i32* %87 with i32 8;
    i32* %88 = getelementptr &([25 * i32]* %c1)[i64 0][i64 8];
    store i32* %88 with i32 9;
    i32* %89 = getelementptr &([25 * i32]* %c1)[i64 0][i64 9];
    store i32* %89 with i32 0;
    i32* %90 = getelementptr &([25 * i32]* %c1)[i64 0][i64 10];
    store i32* %90 with i32 1;
    i32* %91 = getelementptr &([25 * i32]* %c1)[i64 0][i64 11];
    store i32* %91 with i32 2;
    i32* %92 = getelementptr &([25 * i32]* %c1)[i64 0][i64 12];
    store i32* %92 with i32 3;
    i32* %93 = getelementptr &([25 * i32]* %c1)[i64 0][i64 13];
    store i32* %93 with i32 4;
    i32* %94 = getelementptr &([25 * i32]* %c1)[i64 0][i64 14];
    store i32* %94 with i32 5;
    i32* %95 = getelementptr &([25 * i32]* %c1)[i64 0][i64 15];
    store i32* %95 with i32 6;
    i32* %96 = getelementptr &([25 * i32]* %c1)[i64 0][i64 16];
    store i32* %96 with i32 7;
    i32* %97 = getelementptr &([25 * i32]* %c1)[i64 0][i64 17];
    store i32* %97 with i32 8;
    i32* %98 = getelementptr &([25 * i32]* %c1)[i64 0][i64 18];
    store i32* %98 with i32 9;
    i32* %99 = getelementptr &([25 * i32]* %c1)[i64 0][i64 19];
    store i32* %99 with i32 0;
    i32* %100 = getelementptr &([25 * i32]* %c2)[i64 0][i64 0];
    store i32* %100 with i32 2;
    i32* %101 = getelementptr &([25 * i32]* %c2)[i64 0][i64 1];
    store i32* %101 with i32 3;
    i32* %102 = getelementptr &([25 * i32]* %c2)[i64 0][i64 2];
    store i32* %102 with i32 4;
    i32* %103 = getelementptr &([25 * i32]* %c2)[i64 0][i64 3];
    store i32* %103 with i32 2;
    i32* %104 = getelementptr &([25 * i32]* %c2)[i64 0][i64 4];
    store i32* %104 with i32 5;
    i32* %105 = getelementptr &([25 * i32]* %c2)[i64 0][i64 5];
    store i32* %105 with i32 7;
    i32* %106 = getelementptr &([25 * i32]* %c2)[i64 0][i64 6];
    store i32* %106 with i32 9;
    i32* %107 = getelementptr &([25 * i32]* %c2)[i64 0][i64 7];
    store i32* %107 with i32 9;
    i32* %108 = getelementptr &([25 * i32]* %c2)[i64 0][i64 8];
    store i32* %108 with i32 0;
    i32* %109 = getelementptr &([25 * i32]* %c2)[i64 0][i64 9];
    store i32* %109 with i32 1;
    i32* %110 = getelementptr &([25 * i32]* %c2)[i64 0][i64 10];
    store i32* %110 with i32 9;
    i32* %111 = getelementptr &([25 * i32]* %c2)[i64 0][i64 11];
    store i32* %111 with i32 8;
    i32* %112 = getelementptr &([25 * i32]* %c2)[i64 0][i64 12];
    store i32* %112 with i32 7;
    i32* %113 = getelementptr &([25 * i32]* %c2)[i64 0][i64 13];
    store i32* %113 with i32 6;
    i32* %114 = getelementptr &([25 * i32]* %c2)[i64 0][i64 14];
    store i32* %114 with i32 4;
    i32* %115 = getelementptr &([25 * i32]* %c2)[i64 0][i64 15];
    store i32* %115 with i32 3;
    i32* %116 = getelementptr &([25 * i32]* %c2)[i64 0][i64 16];
    store i32* %116 with i32 2;
    i32* %117 = getelementptr &([25 * i32]* %c2)[i64 0][i64 17];
    store i32* %117 with i32 1;
    i32* %118 = getelementptr &([25 * i32]* %c2)[i64 0][i64 18];
    store i32* %118 with i32 2;
    i32* %119 = getelementptr &([25 * i32]* %c2)[i64 0][i64 19];
    store i32* %119 with i32 2;
    ubr ^while.body;
  ^while.body:
    i32 %120 = phi [^entry, i32 0] [^while.body, i32 %137];
    i32* %121 = getelementptr &([40 * i32]* %result)[i64 0][i32 %120];
    store i32* %121 with i32 0;
    i32* %122 = getelementptr &(i32* %121)[i64 1];
    store i32* %122 with i32 0;
    i32* %123 = getelementptr &(i32* %121)[i64 2];
    store i32* %123 with i32 0;
    i32* %124 = getelementptr &(i32* %121)[i64 3];
    store i32* %124 with i32 0;
    i32* %125 = getelementptr &(i32* %121)[i64 4];
    store i32* %125 with i32 0;
    i32* %126 = getelementptr &(i32* %121)[i64 5];
    store i32* %126 with i32 0;
    i32* %127 = getelementptr &(i32* %121)[i64 6];
    store i32* %127 with i32 0;
    i32* %128 = getelementptr &(i32* %121)[i64 7];
    store i32* %128 with i32 0;
    i32* %129 = getelementptr &(i32* %121)[i64 8];
    store i32* %129 with i32 0;
    i32* %130 = getelementptr &(i32* %121)[i64 9];
    store i32* %130 with i32 0;
    i32* %131 = getelementptr &(i32* %121)[i64 10];
    store i32* %131 with i32 0;
    i32* %132 = getelementptr &(i32* %121)[i64 11];
    store i32* %132 with i32 0;
    i32* %133 = getelementptr &(i32* %121)[i64 12];
    store i32* %133 with i32 0;
    i32* %134 = getelementptr &(i32* %121)[i64 13];
    store i32* %134 with i32 0;
    i32* %135 = getelementptr &(i32* %121)[i64 14];
    store i32* %135 with i32 0;
    i32* %136 = getelementptr &(i32* %121)[i64 15];
    store i32* %136 with i32 0;
    i32 %137 = add i32 %120, i32 16;
    i1 %138 = icmp slt i32 %137, i32 32;
    cbr i1 %138(prob = 0.5), ^while.body, ^while.body1;
  ^while.body1:
    i32* %139 = getelementptr &([40 * i32]* %result)[i64 0][i32 %137];
    store i32* %139 with i32 0;
    i32* %140 = getelementptr &(i32* %139)[i64 1];
    store i32* %140 with i32 0;
    i32* %141 = getelementptr &(i32* %139)[i64 2];
    store i32* %141 with i32 0;
    i32* %142 = getelementptr &(i32* %139)[i64 3];
    store i32* %142 with i32 0;
    i32* %143 = getelementptr &(i32* %139)[i64 4];
    store i32* %143 with i32 0;
    i32* %144 = getelementptr &(i32* %139)[i64 5];
    store i32* %144 with i32 0;
    i32* %145 = getelementptr &(i32* %139)[i64 6];
    store i32* %145 with i32 0;
    i32* %146 = getelementptr &(i32* %139)[i64 7];
    store i32* %146 with i32 0;
    ubr ^while.header;
  ^while.header:
    i32 %147 = phi [^while.body1, i32 39] [^b1, i32 %162];
    i32 %148 = phi [^while.body1, i32 19] [^b1, i32 %163];
    i1 %149 = icmp sgt i32 %148, i32 -1;
    cbr i1 %149(prob = 0.97), ^while.body2, ^b;
  ^while.body2:
    i32* %150 = getelementptr &([25 * i32]* %c2)[i64 0][i32 %148];
    i32 %151 = load i32* %150;
    ubr ^while.header1;
  ^b:
    i32 %152 = load i32* %40;
    i1 %153 = icmp neq i32 %152, i32 0;
    cbr i1 %153(prob = 0.5), ^if.then, ^while.body3;
  ^if.then:
    call (i32) -> void @putint(i32 %152);
    ubr ^while.body3;
  ^while.header1:
    i32 %154 = phi [^while.body2, i32 19] [^b3, i32 %175];
    i32 %155 = phi [^while.body2, i32 %147] [^b3, i32 %176];
    i1 %156 = icmp sgt i32 %154, i32 -1;
    cbr i1 %156(prob = 0.97), ^while.body4, ^b1;
  ^while.body3:
    i32 %157 = phi [^b, i32 1] [^if.then, i32 1] [^while.body3, i32 %160];
    i32* %158 = getelementptr &([40 * i32]* %result)[i64 0][i32 %157];
    i32 %159 = load i32* %158;
    call (i32) -> void @putint(i32 %159);
    i32 %160 = add i32 %157, i32 1;
    i1 %161 = icmp slt i32 %160, i32 40;
    cbr i1 %161(prob = 0.97), ^while.body3, ^b2;
  ^b1:
    i32 %162 = add i32 %155, i32 19;
    i32 %163 = add i32 %148, i32 -1;
    ubr ^while.header;
  ^while.body4:
    i32* %164 = getelementptr &([40 * i32]* %result)[i64 0][i32 %155];
    i32 %165 = load i32* %164;
    i32* %166 = getelementptr &([25 * i32]* %c1)[i64 0][i32 %154];
    i32 %167 = load i32* %166;
    i32 %168 = mul i32 %151, i32 %167;
    i32 %169 = add i32 %165, i32 %168;
    i1 %170 = icmp sgt i32 %169, i32 9;
    cbr i1 %170(prob = 0.5), ^if.then1, ^if.else;
  ^b2:
    ret i32 0;
  ^if.then1:
    store i32* %164 with i32 %169;
    i32* %171 = getelementptr &(i32* %164)[i64 -1];
    i32 %172 = load i32* %171;
    i32 %173 = sdiv i32 %169, i32 10;
    i32 %174 = add i32 %172, i32 %173;
    store i32* %171 with i32 %174;
    ubr ^b3;
  ^if.else:
    store i32* %164 with i32 %169;
    ubr ^b3;
  ^b3:
    i32 %175 = add i32 %154, i32 -1;
    i32 %176 = add i32 %155, i32 -1;
    ubr ^while.header1;
}
