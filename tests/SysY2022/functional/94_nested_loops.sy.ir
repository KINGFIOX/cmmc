internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal [10 * [2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]]* @arr1;
internal [10 * [2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]]* @arr2;
func @main() -> i32 { NoRecurse Entry } {
^entry():
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    i32 %2 = call () -> i32 @getint();
    i32 %3 = call () -> i32 @getint();
    i32 %4 = call () -> i32 @getint();
    i32 %5 = call () -> i32 @getint();
    i32 %6 = call () -> i32 @getint();
    i32 %7 = call () -> i32 @getint();
    i32 %8 = call () -> i32 @getint();
    i1 %9 = scmp lt i32 0, i32 %0;
    cbr i1 %9, [ ^b i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %0, i32 %1, i32 0 ], [ ^while.body i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 ];
^b(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i1 %0 = scmp lt i32 %arg9, i32 %arg8;
    cbr i1 %0, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 ], [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 ];
^while.body(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13):
    [2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]* %0 = getelementptr &([10 * [2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]]* @arr2)[i32 0][i32 %arg7];
    [3 * [2 * [4 * [8 * [7 * i32]]]]]* %1 = getelementptr &([2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]* %0)[i32 0][i32 %arg8];
    [2 * [4 * [8 * [7 * i32]]]]* %2 = getelementptr &([3 * [2 * [4 * [8 * [7 * i32]]]]]* %1)[i32 0][i32 %arg9];
    [4 * [8 * [7 * i32]]]* %3 = getelementptr &([2 * [4 * [8 * [7 * i32]]]]* %2)[i32 0][i32 %arg10];
    [8 * [7 * i32]]* %4 = getelementptr &([4 * [8 * [7 * i32]]]* %3)[i32 0][i32 %arg11];
    [7 * i32]* %5 = getelementptr &([8 * [7 * i32]]* %4)[i32 0][i32 %arg12];
    i32* %6 = getelementptr &([7 * i32]* %5)[i32 0][i32 %arg13];
    i32 %7 = add i32 %arg7, i32 %arg8;
    i32 %8 = add i32 %7, i32 %arg10;
    i32 %9 = add i32 %8, i32 %arg13;
    store i32* %6 with i32 %9;
    i32 %10 = add i32 %arg13, i32 1;
    i1 %11 = scmp lt i32 %10, i32 7;
    cbr i1 %11, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %10 ], [ ^b1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12 ];
^while.body1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %arg15):
    [2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]* %0 = getelementptr &([10 * [2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]]* @arr1)[i32 0][i32 %arg9];
    [3 * [4 * [5 * [6 * [2 * i32]]]]]* %1 = getelementptr &([2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]* %0)[i32 0][i32 %arg10];
    [4 * [5 * [6 * [2 * i32]]]]* %2 = getelementptr &([3 * [4 * [5 * [6 * [2 * i32]]]]]* %1)[i32 0][i32 %arg11];
    [5 * [6 * [2 * i32]]]* %3 = getelementptr &([4 * [5 * [6 * [2 * i32]]]]* %2)[i32 0][i32 %arg12];
    [6 * [2 * i32]]* %4 = getelementptr &([5 * [6 * [2 * i32]]]* %3)[i32 0][i32 %arg13];
    [2 * i32]* %5 = getelementptr &([6 * [2 * i32]]* %4)[i32 0][i32 %arg14];
    i32* %6 = getelementptr &([2 * i32]* %5)[i32 0][i32 %arg15];
    i32 %7 = add i32 %arg9, i32 %arg10;
    i32 %8 = add i32 %7, i32 %arg11;
    i32 %9 = add i32 %8, i32 %arg12;
    i32 %10 = add i32 %9, i32 %arg13;
    i32 %11 = add i32 %10, i32 %arg14;
    i32 %12 = add i32 %11, i32 %arg15;
    i32 %13 = add i32 %12, i32 %arg7;
    i32 %14 = add i32 %13, i32 %arg8;
    store i32* %6 with i32 %14;
    i32 %15 = add i32 %arg15, i32 1;
    i1 %16 = scmp lt i32 %15, i32 2;
    cbr i1 %16, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %15 ], [ ^b2 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14 ];
^b1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12):
    i32 %0 = add i32 %arg12, i32 1;
    i1 %1 = scmp lt i32 %0, i32 8;
    cbr i1 %1, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %0, i32 0 ], [ ^b3 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11 ];
^b2(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14):
    i32 %0 = add i32 %arg14, i32 1;
    i1 %1 = scmp lt i32 %0, i32 6;
    cbr i1 %1, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %0, i32 0 ], [ ^b4 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13 ];
^b3(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11):
    i32 %0 = add i32 %arg11, i32 1;
    i1 %1 = scmp lt i32 %0, i32 4;
    cbr i1 %1, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %0, i32 0, i32 0 ], [ ^b5 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ];
^b4(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13):
    i32 %0 = add i32 %arg13, i32 1;
    i1 %1 = scmp lt i32 %0, i32 5;
    cbr i1 %1, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %0, i32 0, i32 0 ], [ ^b6 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12 ];
^b5(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    i32 %0 = add i32 %arg10, i32 1;
    i1 %1 = scmp lt i32 %0, i32 2;
    cbr i1 %1, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %0, i32 0, i32 0, i32 0 ], [ ^b7 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9 ];
^b6(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12):
    i32 %0 = add i32 %arg12, i32 1;
    i1 %1 = scmp lt i32 %0, i32 4;
    cbr i1 %1, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %0, i32 0, i32 0, i32 0 ], [ ^b8 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11 ];
^b7(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i32 %0 = add i32 %arg9, i32 1;
    i1 %1 = scmp lt i32 %0, i32 3;
    cbr i1 %1, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %0, i32 0, i32 0, i32 0, i32 0 ], [ ^b9 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8 ];
^b8(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11):
    i32 %0 = add i32 %arg11, i32 1;
    i1 %1 = scmp lt i32 %0, i32 3;
    cbr i1 %1, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %0, i32 0, i32 0, i32 0, i32 0 ], [ ^b10 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ];
^b9(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8):
    i32 %0 = add i32 %arg8, i32 1;
    i1 %1 = scmp lt i32 %0, i32 2;
    cbr i1 %1, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %0, i32 0, i32 0, i32 0, i32 0, i32 0 ], [ ^b11 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7 ];
^b10(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    i32 %0 = add i32 %arg10, i32 1;
    i1 %1 = scmp lt i32 %0, i32 2;
    cbr i1 %1, [ ^while.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %0, i32 0, i32 0, i32 0, i32 0, i32 0 ], [ ^b12 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9 ];
^b11(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = add i32 %arg7, i32 1;
    i1 %1 = scmp lt i32 %0, i32 10;
    cbr i1 %1, [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 ], [ ^while.body2 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 ];
^b12(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i32 %0 = add i32 %arg9, i32 1;
    i1 %1 = scmp lt i32 %0, i32 %arg7;
    cbr i1 %1, [ ^b i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %0 ], [ ^while.body i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 ];
^while.body2(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14):
    i32 %0 = srem i32 %arg14, i32 817;
    [2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]* %1 = getelementptr &([10 * [2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]]* @arr1)[i32 0][i32 %arg7];
    [3 * [4 * [5 * [6 * [2 * i32]]]]]* %2 = getelementptr &([2 * [3 * [4 * [5 * [6 * [2 * i32]]]]]]* %1)[i32 0][i32 %arg8];
    [4 * [5 * [6 * [2 * i32]]]]* %3 = getelementptr &([3 * [4 * [5 * [6 * [2 * i32]]]]]* %2)[i32 0][i32 %arg9];
    [5 * [6 * [2 * i32]]]* %4 = getelementptr &([4 * [5 * [6 * [2 * i32]]]]* %3)[i32 0][i32 %arg10];
    [6 * [2 * i32]]* %5 = getelementptr &([5 * [6 * [2 * i32]]]* %4)[i32 0][i32 %arg11];
    [2 * i32]* %6 = getelementptr &([6 * [2 * i32]]* %5)[i32 0][i32 %arg12];
    i32* %7 = getelementptr &([2 * i32]* %6)[i32 0][i32 %arg13];
    i32 %8 = load i32* %7;
    i32 %9 = add i32 %0, i32 %8;
    [2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]* %10 = getelementptr &([10 * [2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]]* @arr2)[i32 0][i32 %arg7];
    [3 * [2 * [4 * [8 * [7 * i32]]]]]* %11 = getelementptr &([2 * [3 * [2 * [4 * [8 * [7 * i32]]]]]]* %10)[i32 0][i32 %arg8];
    [2 * [4 * [8 * [7 * i32]]]]* %12 = getelementptr &([3 * [2 * [4 * [8 * [7 * i32]]]]]* %11)[i32 0][i32 %arg9];
    [4 * [8 * [7 * i32]]]* %13 = getelementptr &([2 * [4 * [8 * [7 * i32]]]]* %12)[i32 0][i32 %arg10];
    [8 * [7 * i32]]* %14 = getelementptr &([4 * [8 * [7 * i32]]]* %13)[i32 0][i32 %arg11];
    [7 * i32]* %15 = getelementptr &([8 * [7 * i32]]* %14)[i32 0][i32 %arg12];
    i32* %16 = getelementptr &([7 * i32]* %15)[i32 0][i32 %arg13];
    i32 %17 = load i32* %16;
    i32 %18 = add i32 %9, i32 %17;
    i32 %19 = add i32 %arg13, i32 1;
    i1 %20 = scmp ge i32 %19, i32 %arg6;
    cbr i1 %20, [ ^b13 i32 %arg12, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %18 ], [ ^while.header i32 %19, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %19, i32 %18 ];
^b13(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg6;
    cbr i1 %1, [ ^b14 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13 ], [ ^while.header1 i32 %0, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %0, i32 %arg13 ];
^while.header(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %arg15):
    i1 %0 = scmp lt i32 %arg, i32 10000000;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14, i32 %arg15 ], [ ^indirect i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg15 ];
^b14(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12):
    i32 %0 = add i32 %arg11, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg4;
    cbr i1 %1, [ ^b15 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg12 ], [ ^while.header2 i32 %0, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %0, i32 %arg12 ];
^while.header1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 %arg14):
    i1 %0 = scmp lt i32 %arg, i32 1000000;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13, i32 0, i32 %arg14 ], [ ^b14 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg14 ];
^indirect(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13):
    i32 %0 = add i32 %arg12, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg5;
    cbr i1 %1, [ ^b14 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg13 ], [ ^while.header1 i32 %0, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %0, i32 %arg13 ];
^b15(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11):
    i32 %0 = add i32 %arg10, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg3;
    cbr i1 %1, [ ^b16 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg11 ], [ ^while.header3 i32 %0, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %0, i32 %arg11 ];
^while.header2(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 %arg13):
    i1 %0 = scmp lt i32 %arg, i32 100000;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12, i32 0, i32 0, i32 %arg13 ], [ ^b15 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg13 ];
^b16(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    i32 %0 = add i32 %arg9, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg2;
    cbr i1 %1, [ ^b17 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg10 ], [ ^while.header4 i32 %0, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %0, i32 %arg10 ];
^while.header3(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12):
    i1 %0 = scmp lt i32 %arg, i32 10000;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 0, i32 0, i32 0, i32 %arg12 ], [ ^b16 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg12 ];
^b17(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i32 %0 = add i32 %arg8, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg1;
    cbr i1 %1, [ ^b18 i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg9 ], [ ^while.header5 i32 %0, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %0, i32 %arg9 ];
^while.header4(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11):
    i1 %0 = scmp lt i32 %arg, i32 1000;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 0, i32 0, i32 0, i32 0, i32 %arg11 ], [ ^b17 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg11 ];
^b18(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8):
    i32 %0 = add i32 %arg7, i32 1;
    i1 %1 = scmp ge i32 %0, i32 %arg;
    cbr i1 %1, [ ^b19 i32 %arg8 ], [ ^while.header6 i32 %0, i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %0, i32 %arg8 ];
^while.header5(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    i1 %0 = scmp lt i32 %arg, i32 100;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg10 ], [ ^b18 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg10 ];
^while.header6(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i1 %0 = scmp lt i32 %arg, i32 10;
    cbr i1 %0, [ ^while.body2 i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %arg9 ], [ ^b19 i32 %arg9 ];
^b19(i32 %arg):
    ret i32 %arg;
}
