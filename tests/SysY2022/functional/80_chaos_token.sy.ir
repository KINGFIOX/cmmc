internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal [6 * [50 * i32]]* @N4__mE___ { ReadOnly } = [[83, 97, 97, 98, 97, 114, 117], [75, 97, 98, 97, 110], [72, 97, 115, 104, 105, 98, 105, 114, 111, 107, 111, 117], [65, 114, 97, 105, 103, 117, 109, 97], [72, 117, 110, 98, 111, 114, 117, 116, 111, 32, 80, 101, 110, 103, 105, 110], [84, 97, 105, 114, 105, 107, 117, 32, 79, 111, 107, 97, 109, 105]];
func @main() -> i32 { NoMemoryWrite NoRecurse Entry } {
^entry:
    [5 * i32]* %RET = alloc [5 * i32];
    [40 * i32]* %saY_HeI10_To = alloc [40 * i32];
    [100 * i32]* %__HELLO = alloc [100 * i32];
    i32* %0 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 0];
    store i32* %0 with i32 87;
    i32* %1 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 1];
    store i32* %1 with i32 101;
    i32* %2 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 2];
    store i32* %2 with i32 108;
    i32* %3 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 3];
    store i32* %3 with i32 99;
    i32* %4 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 4];
    store i32* %4 with i32 111;
    i32* %5 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 5];
    store i32* %5 with i32 109;
    i32* %6 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 6];
    store i32* %6 with i32 101;
    i32* %7 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 7];
    store i32* %7 with i32 32;
    i32* %8 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 8];
    store i32* %8 with i32 116;
    i32* %9 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 9];
    store i32* %9 with i32 111;
    i32* %10 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 10];
    store i32* %10 with i32 32;
    i32* %11 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 11];
    store i32* %11 with i32 116;
    i32* %12 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 12];
    store i32* %12 with i32 104;
    i32* %13 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 13];
    store i32* %13 with i32 101;
    i32* %14 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 14];
    store i32* %14 with i32 32;
    i32* %15 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 15];
    store i32* %15 with i32 74;
    i32* %16 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 16];
    store i32* %16 with i32 97;
    i32* %17 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 17];
    store i32* %17 with i32 112;
    i32* %18 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 18];
    store i32* %18 with i32 97;
    i32* %19 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 19];
    store i32* %19 with i32 114;
    i32* %20 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 20];
    store i32* %20 with i32 105;
    i32* %21 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 21];
    store i32* %21 with i32 32;
    i32* %22 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 22];
    store i32* %22 with i32 80;
    i32* %23 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 23];
    store i32* %23 with i32 97;
    i32* %24 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 24];
    store i32* %24 with i32 114;
    i32* %25 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 25];
    store i32* %25 with i32 107;
    i32* %26 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 26];
    store i32* %26 with i32 33;
    i32* %27 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 27];
    store i32* %27 with i32 10;
    i32* %28 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 28];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 29];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 30];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 31];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 32];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 33];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 34];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 35];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 36];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 37];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 38];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 39];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 40];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 41];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 42];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 43];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 44];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 45];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 46];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 47];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 48];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 49];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 50];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 51];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 52];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 53];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 54];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 55];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 56];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 57];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 58];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 59];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 60];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 61];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 62];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 63];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 64];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 65];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 66];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 67];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 68];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 69];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 70];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 71];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 72];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 73];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 74];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 75];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 76];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 77];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 78];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 79];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 80];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 81];
    store i32* %81 with i32 0;
    i32* %82 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 82];
    store i32* %82 with i32 0;
    i32* %83 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 83];
    store i32* %83 with i32 0;
    i32* %84 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 84];
    store i32* %84 with i32 0;
    i32* %85 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 85];
    store i32* %85 with i32 0;
    i32* %86 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 86];
    store i32* %86 with i32 0;
    i32* %87 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 87];
    store i32* %87 with i32 0;
    i32* %88 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 88];
    store i32* %88 with i32 0;
    i32* %89 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 89];
    store i32* %89 with i32 0;
    i32* %90 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 90];
    store i32* %90 with i32 0;
    i32* %91 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 91];
    store i32* %91 with i32 0;
    i32* %92 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 92];
    store i32* %92 with i32 0;
    i32* %93 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 93];
    store i32* %93 with i32 0;
    i32* %94 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 94];
    store i32* %94 with i32 0;
    i32* %95 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 95];
    store i32* %95 with i32 0;
    i32* %96 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 96];
    store i32* %96 with i32 0;
    i32* %97 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 97];
    store i32* %97 with i32 0;
    i32* %98 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 98];
    store i32* %98 with i32 0;
    i32* %99 = getelementptr &([100 * i32]* %__HELLO)[i64 0][i64 99];
    store i32* %99 with i32 0;
    i32* %100 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 0];
    store i32* %100 with i32 32;
    i32* %101 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 1];
    store i32* %101 with i32 115;
    i32* %102 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 2];
    store i32* %102 with i32 97;
    i32* %103 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 3];
    store i32* %103 with i32 121;
    i32* %104 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 4];
    store i32* %104 with i32 115;
    i32* %105 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 5];
    store i32* %105 with i32 32;
    i32* %106 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 6];
    store i32* %106 with i32 104;
    i32* %107 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 7];
    store i32* %107 with i32 101;
    i32* %108 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 8];
    store i32* %108 with i32 108;
    i32* %109 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 9];
    store i32* %109 with i32 108;
    i32* %110 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 10];
    store i32* %110 with i32 111;
    i32* %111 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 11];
    store i32* %111 with i32 32;
    i32* %112 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 12];
    store i32* %112 with i32 116;
    i32* %113 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 13];
    store i32* %113 with i32 111;
    i32* %114 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 14];
    store i32* %114 with i32 32;
    i32* %115 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 15];
    store i32* %115 with i32 0;
    i32* %116 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 16];
    store i32* %116 with i32 0;
    i32* %117 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 17];
    store i32* %117 with i32 0;
    i32* %118 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 18];
    store i32* %118 with i32 0;
    i32* %119 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 19];
    store i32* %119 with i32 0;
    i32* %120 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 20];
    store i32* %120 with i32 0;
    i32* %121 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 21];
    store i32* %121 with i32 0;
    i32* %122 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 22];
    store i32* %122 with i32 0;
    i32* %123 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 23];
    store i32* %123 with i32 0;
    i32* %124 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 24];
    store i32* %124 with i32 0;
    i32* %125 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 25];
    store i32* %125 with i32 0;
    i32* %126 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 26];
    store i32* %126 with i32 0;
    i32* %127 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 27];
    store i32* %127 with i32 0;
    i32* %128 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 28];
    store i32* %128 with i32 0;
    i32* %129 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 29];
    store i32* %129 with i32 0;
    i32* %130 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 30];
    store i32* %130 with i32 0;
    i32* %131 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 31];
    store i32* %131 with i32 0;
    i32* %132 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 32];
    store i32* %132 with i32 0;
    i32* %133 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 33];
    store i32* %133 with i32 0;
    i32* %134 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 34];
    store i32* %134 with i32 0;
    i32* %135 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 35];
    store i32* %135 with i32 0;
    i32* %136 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 36];
    store i32* %136 with i32 0;
    i32* %137 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 37];
    store i32* %137 with i32 0;
    i32* %138 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 38];
    store i32* %138 with i32 0;
    i32* %139 = getelementptr &([40 * i32]* %saY_HeI10_To)[i64 0][i64 39];
    store i32* %139 with i32 0;
    i32* %140 = getelementptr &([5 * i32]* %RET)[i64 0][i64 0];
    store i32* %140 with i32 10;
    i32* %141 = getelementptr &([5 * i32]* %RET)[i64 0][i64 1];
    store i32* %141 with i32 0;
    i32* %142 = getelementptr &([5 * i32]* %RET)[i64 0][i64 2];
    store i32* %142 with i32 0;
    i32* %143 = getelementptr &([5 * i32]* %RET)[i64 0][i64 3];
    store i32* %143 with i32 0;
    i32* %144 = getelementptr &([5 * i32]* %RET)[i64 0][i64 4];
    store i32* %144 with i32 0;
    ubr ^while.header;
^while.header:
    i32 %145 = phi [^while.body, i32 %154] [^entry, i32 0];
    i32* %146 = phi [^while.body, i32* %146] [^entry, i32* %0];
    i32* %147 = phi [^entry, i32* %0] [^while.body, i32* %146];
    i32 %148 = phi [^entry, i32 0] [^while.body, i32 %154];
    i32* %149 = getelementptr &(i32* %147)[i32 %148];
    i32 %150 = load i32* %149;
    i1 %151 = scmp neq i32 %150, i32 0;
    cbr i1 %151(prob = 0.97), ^while.body, ^while.body1;
^while.body:
    i32* %152 = getelementptr &(i32* %146)[i32 %145];
    i32 %153 = load i32* %152;
    call (i32) -> void @putch(i32 %153);
    i32 %154 = add i32 %145, i32 1;
    ubr ^while.header;
^while.body1:
    i32 %155 = phi [^while.header, i32 0] [^b, i32 %165];
    i32 %156 = phi [^while.header, i32 0] [^b, i32 %165];
    i32 %157 = sdiv i32 %156, i32 6;
    i32 %158 = srem i32 %156, i32 6;
    i1 %159 = scmp neq i32 %157, i32 %158;
    cbr i1 %159(prob = 0.5), ^if.then, ^b;
^if.then:
    [50 * i32]* %160 = getelementptr &([6 * [50 * i32]]* @N4__mE___)[i64 0][i32 %157];
    i32* %161 = getelementptr &([50 * i32]* %160)[i64 0][i64 0];
    ubr ^while.header1;
^b:
    i32 %162 = phi [^while.header4, i32 %202] [^while.body1, i32 %155];
    i32 %163 = mul i32 %162, i32 17;
    i32 %164 = add i32 %163, i32 23;
    i32 %165 = srem i32 %164, i32 32;
    i1 %166 = scmp eq i32 %165, i32 0;
    cbr i1 %166(prob = 0.5), ^b1, ^while.body1;
^while.header1:
    i32 %167 = phi [^while.body2, i32 %167] [^if.then, i32 %155];
    i32 %168 = phi [^while.body2, i32 %177] [^if.then, i32 0];
    i32* %169 = phi [^while.body2, i32* %169] [^if.then, i32* %161];
    i32* %170 = phi [^if.then, i32* %161] [^while.body2, i32* %169];
    i32 %171 = phi [^if.then, i32 0] [^while.body2, i32 %177];
    i32* %172 = getelementptr &(i32* %170)[i32 %171];
    i32 %173 = load i32* %172;
    i1 %174 = scmp neq i32 %173, i32 0;
    cbr i1 %174(prob = 0.97), ^while.body2, ^while.header2;
^b1:
    ret i32 0;
^while.body2:
    i32* %175 = getelementptr &(i32* %169)[i32 %168];
    i32 %176 = load i32* %175;
    call (i32) -> void @putch(i32 %176);
    i32 %177 = add i32 %168, i32 1;
    ubr ^while.header1;
^while.header2:
    i32 %178 = phi [^while.header1, i32 %167] [^while.body3, i32 %178];
    i32 %179 = phi [^while.header1, i32 0] [^while.body3, i32 %188];
    i32* %180 = phi [^while.header1, i32* %100] [^while.body3, i32* %180];
    i32* %181 = phi [^while.header1, i32* %100] [^while.body3, i32* %180];
    i32 %182 = phi [^while.header1, i32 0] [^while.body3, i32 %188];
    i32* %183 = getelementptr &(i32* %181)[i32 %182];
    i32 %184 = load i32* %183;
    i1 %185 = scmp neq i32 %184, i32 0;
    cbr i1 %185(prob = 0.97), ^while.body3, ^if.then1;
^while.body3:
    i32* %186 = getelementptr &(i32* %180)[i32 %179];
    i32 %187 = load i32* %186;
    call (i32) -> void @putch(i32 %187);
    i32 %188 = add i32 %179, i32 1;
    ubr ^while.header2;
^if.then1:
    [50 * i32]* %189 = getelementptr &([6 * [50 * i32]]* @N4__mE___)[i64 0][i32 %158];
    i32* %190 = getelementptr &([50 * i32]* %189)[i64 0][i64 0];
    ubr ^while.header3;
^while.header3:
    i32 %191 = phi [^while.body4, i32 %191] [^if.then1, i32 %178];
    i32 %192 = phi [^while.body4, i32 %201] [^if.then1, i32 0];
    i32* %193 = phi [^while.body4, i32* %193] [^if.then1, i32* %190];
    i32* %194 = phi [^if.then1, i32* %190] [^while.body4, i32* %193];
    i32 %195 = phi [^if.then1, i32 0] [^while.body4, i32 %201];
    i32* %196 = getelementptr &(i32* %194)[i32 %195];
    i32 %197 = load i32* %196;
    i1 %198 = scmp neq i32 %197, i32 0;
    cbr i1 %198(prob = 0.97), ^while.body4, ^while.header4;
^while.body4:
    i32* %199 = getelementptr &(i32* %193)[i32 %192];
    i32 %200 = load i32* %199;
    call (i32) -> void @putch(i32 %200);
    i32 %201 = add i32 %192, i32 1;
    ubr ^while.header3;
^while.header4:
    i32 %202 = phi [^while.header3, i32 %191] [^while.body5, i32 %202];
    i32 %203 = phi [^while.header3, i32 0] [^while.body5, i32 %212];
    i32* %204 = phi [^while.header3, i32* %140] [^while.body5, i32* %204];
    i32* %205 = phi [^while.header3, i32* %140] [^while.body5, i32* %204];
    i32 %206 = phi [^while.header3, i32 0] [^while.body5, i32 %212];
    i32* %207 = getelementptr &(i32* %205)[i32 %206];
    i32 %208 = load i32* %207;
    i1 %209 = scmp neq i32 %208, i32 0;
    cbr i1 %209(prob = 0.97), ^while.body5, ^b;
^while.body5:
    i32* %210 = getelementptr &(i32* %204)[i32 %203];
    i32 %211 = load i32* %210;
    call (i32) -> void @putch(i32 %211);
    i32 %212 = add i32 %203, i32 1;
    ubr ^while.header4;
}
