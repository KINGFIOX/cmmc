internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal [6 * [50 * i32]]* @N4__mE___ = [[83, 97, 97, 98, 97, 114, 117], [75, 97, 98, 97, 110], [72, 97, 115, 104, 105, 98, 105, 114, 111, 107, 111, 117], [65, 114, 97, 105, 103, 117, 109, 97], [72, 117, 110, 98, 111, 114, 117, 116, 111, 32, 80, 101, 110, 103, 105, 110], [84, 97, 105, 114, 105, 107, 117, 32, 79, 111, 107, 97, 109, 105]];
func @main() -> i32 { NoMemoryWrite NoRecurse } {
^entry():
    [100 * i32]* %__HELLO = alloc [100 * i32];
    i32* %0 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 0];
    store i32* %0 with i32 87;
    i32* %1 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 1];
    store i32* %1 with i32 101;
    i32* %2 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 2];
    store i32* %2 with i32 108;
    i32* %3 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 3];
    store i32* %3 with i32 99;
    i32* %4 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 4];
    store i32* %4 with i32 111;
    i32* %5 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 5];
    store i32* %5 with i32 109;
    i32* %6 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 6];
    store i32* %6 with i32 101;
    i32* %7 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 7];
    store i32* %7 with i32 32;
    i32* %8 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 8];
    store i32* %8 with i32 116;
    i32* %9 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 9];
    store i32* %9 with i32 111;
    i32* %10 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 10];
    store i32* %10 with i32 32;
    i32* %11 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 11];
    store i32* %11 with i32 116;
    i32* %12 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 12];
    store i32* %12 with i32 104;
    i32* %13 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 13];
    store i32* %13 with i32 101;
    i32* %14 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 14];
    store i32* %14 with i32 32;
    i32* %15 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 15];
    store i32* %15 with i32 74;
    i32* %16 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 16];
    store i32* %16 with i32 97;
    i32* %17 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 17];
    store i32* %17 with i32 112;
    i32* %18 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 18];
    store i32* %18 with i32 97;
    i32* %19 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 19];
    store i32* %19 with i32 114;
    i32* %20 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 20];
    store i32* %20 with i32 105;
    i32* %21 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 21];
    store i32* %21 with i32 32;
    i32* %22 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 22];
    store i32* %22 with i32 80;
    i32* %23 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 23];
    store i32* %23 with i32 97;
    i32* %24 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 24];
    store i32* %24 with i32 114;
    i32* %25 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 25];
    store i32* %25 with i32 107;
    i32* %26 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 26];
    store i32* %26 with i32 33;
    i32* %27 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 27];
    store i32* %27 with i32 10;
    i32* %28 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 28];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 29];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 30];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 31];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 32];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 33];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 34];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 35];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 36];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 37];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 38];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 39];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 40];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 41];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 42];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 43];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 44];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 45];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 46];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 47];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 48];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 49];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 50];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 51];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 52];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 53];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 54];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 55];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 56];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 57];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 58];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 59];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 60];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 61];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 62];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 63];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 64];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 65];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 66];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 67];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 68];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 69];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 70];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 71];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 72];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 73];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 74];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 75];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 76];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 77];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 78];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 79];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 80];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 81];
    store i32* %81 with i32 0;
    i32* %82 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 82];
    store i32* %82 with i32 0;
    i32* %83 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 83];
    store i32* %83 with i32 0;
    i32* %84 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 84];
    store i32* %84 with i32 0;
    i32* %85 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 85];
    store i32* %85 with i32 0;
    i32* %86 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 86];
    store i32* %86 with i32 0;
    i32* %87 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 87];
    store i32* %87 with i32 0;
    i32* %88 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 88];
    store i32* %88 with i32 0;
    i32* %89 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 89];
    store i32* %89 with i32 0;
    i32* %90 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 90];
    store i32* %90 with i32 0;
    i32* %91 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 91];
    store i32* %91 with i32 0;
    i32* %92 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 92];
    store i32* %92 with i32 0;
    i32* %93 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 93];
    store i32* %93 with i32 0;
    i32* %94 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 94];
    store i32* %94 with i32 0;
    i32* %95 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 95];
    store i32* %95 with i32 0;
    i32* %96 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 96];
    store i32* %96 with i32 0;
    i32* %97 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 97];
    store i32* %97 with i32 0;
    i32* %98 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 98];
    store i32* %98 with i32 0;
    i32* %99 = getelementptr &([100 * i32]* %__HELLO)[i32 0][i32 99];
    store i32* %99 with i32 0;
    [40 * i32]* %saY_HeI10_To = alloc [40 * i32];
    i32* %100 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 0];
    store i32* %100 with i32 32;
    i32* %101 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 1];
    store i32* %101 with i32 115;
    i32* %102 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 2];
    store i32* %102 with i32 97;
    i32* %103 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 3];
    store i32* %103 with i32 121;
    i32* %104 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 4];
    store i32* %104 with i32 115;
    i32* %105 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 5];
    store i32* %105 with i32 32;
    i32* %106 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 6];
    store i32* %106 with i32 104;
    i32* %107 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 7];
    store i32* %107 with i32 101;
    i32* %108 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 8];
    store i32* %108 with i32 108;
    i32* %109 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 9];
    store i32* %109 with i32 108;
    i32* %110 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 10];
    store i32* %110 with i32 111;
    i32* %111 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 11];
    store i32* %111 with i32 32;
    i32* %112 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 12];
    store i32* %112 with i32 116;
    i32* %113 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 13];
    store i32* %113 with i32 111;
    i32* %114 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 14];
    store i32* %114 with i32 32;
    i32* %115 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 15];
    store i32* %115 with i32 0;
    i32* %116 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 16];
    store i32* %116 with i32 0;
    i32* %117 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 17];
    store i32* %117 with i32 0;
    i32* %118 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 18];
    store i32* %118 with i32 0;
    i32* %119 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 19];
    store i32* %119 with i32 0;
    i32* %120 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 20];
    store i32* %120 with i32 0;
    i32* %121 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 21];
    store i32* %121 with i32 0;
    i32* %122 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 22];
    store i32* %122 with i32 0;
    i32* %123 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 23];
    store i32* %123 with i32 0;
    i32* %124 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 24];
    store i32* %124 with i32 0;
    i32* %125 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 25];
    store i32* %125 with i32 0;
    i32* %126 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 26];
    store i32* %126 with i32 0;
    i32* %127 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 27];
    store i32* %127 with i32 0;
    i32* %128 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 28];
    store i32* %128 with i32 0;
    i32* %129 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 29];
    store i32* %129 with i32 0;
    i32* %130 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 30];
    store i32* %130 with i32 0;
    i32* %131 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 31];
    store i32* %131 with i32 0;
    i32* %132 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 32];
    store i32* %132 with i32 0;
    i32* %133 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 33];
    store i32* %133 with i32 0;
    i32* %134 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 34];
    store i32* %134 with i32 0;
    i32* %135 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 35];
    store i32* %135 with i32 0;
    i32* %136 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 36];
    store i32* %136 with i32 0;
    i32* %137 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 37];
    store i32* %137 with i32 0;
    i32* %138 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 38];
    store i32* %138 with i32 0;
    i32* %139 = getelementptr &([40 * i32]* %saY_HeI10_To)[i32 0][i32 39];
    store i32* %139 with i32 0;
    [5 * i32]* %RET = alloc [5 * i32];
    i32* %140 = getelementptr &([5 * i32]* %RET)[i32 0][i32 0];
    store i32* %140 with i32 10;
    i32* %141 = getelementptr &([5 * i32]* %RET)[i32 0][i32 1];
    store i32* %141 with i32 0;
    i32* %142 = getelementptr &([5 * i32]* %RET)[i32 0][i32 2];
    store i32* %142 with i32 0;
    i32* %143 = getelementptr &([5 * i32]* %RET)[i32 0][i32 3];
    store i32* %143 with i32 0;
    i32* %144 = getelementptr &([5 * i32]* %RET)[i32 0][i32 4];
    store i32* %144 with i32 0;
    i32* %iNd__1X = alloc i32;
    ubr [ ^while.body i32* %iNd__1X, [40 * i32]* %saY_HeI10_To, [5 * i32]* %RET, i32* %0, i32 0 ];
^while.body(i32* %arg, [40 * i32]* %arg1, [5 * i32]* %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &(i32* %arg3)[i32 %arg4];
    i32 %1 = load i32* %0;
    call (i32) -> void @putch(i32 %1);
    i32 %2 = add i32 %arg4, i32 1;
    store i32* %arg with i32 %2;
    i32* %3 = getelementptr &(i32* %arg3)[i32 %2];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^while.body i32* %arg, [40 * i32]* %arg1, [5 * i32]* %arg2, i32* %arg3, i32 %2 ], [ ^b [40 * i32]* %arg1, [5 * i32]* %arg2 ];
^b([40 * i32]* %arg, [5 * i32]* %arg1):
    i32* %i = alloc i32;
    store i32* %i with i32 0;
    ubr [ ^b1 i32* %i, [5 * i32]* %arg1, [40 * i32]* %arg, i32 0 ];
^b1(i32* %arg, [5 * i32]* %arg1, [40 * i32]* %arg2, i32 %arg3):
    i32 %0 = mul i32 %arg3, i32 17;
    i32 %1 = add i32 %0, i32 23;
    i32 %2 = srem i32 %1, i32 32;
    store i32* %arg with i32 %2;
    i1 %3 = scmp eq i32 %2, i32 0;
    cbr i1 %3, [ ^b2 ], [ ^while.body1 i32* %arg, i32 %2, [40 * i32]* %arg2, [5 * i32]* %arg1, i32 %2 ];
^while.body1(i32* %arg, i32 %arg1, [40 * i32]* %arg2, [5 * i32]* %arg3, i32 %arg4):
    i32 %0 = sdiv i32 %arg1, i32 6;
    i32 %1 = srem i32 %arg1, i32 6;
    i1 %2 = scmp neq i32 %0, i32 %1;
    cbr i1 %2, [ ^indirect i32* %arg, i32 %1, i32 %0, [5 * i32]* %arg3, [40 * i32]* %arg2, i32 %arg4 ], [ ^b1 i32* %arg, [5 * i32]* %arg3, [40 * i32]* %arg2, i32 %arg4 ];
^b2():
    ret i32 0;
^indirect(i32* %arg, i32 %arg1, i32 %arg2, [5 * i32]* %arg3, [40 * i32]* %arg4, i32 %arg5):
    [50 * i32]* %0 = getelementptr &([6 * [50 * i32]]* @N4__mE___)[i32 0][i32 %arg2];
    i32* %1 = getelementptr &([50 * i32]* %0)[i32 0][i32 0];
    i32* %iNd__1X = alloc i32;
    store i32* %iNd__1X with i32 0;
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^while.body2 i32* %iNd__1X, [40 * i32]* %arg4, [5 * i32]* %arg3, i32 %arg1, i32* %arg, i32 %arg5, i32* %1, i32 0 ], [ ^b3 [40 * i32]* %arg4, [5 * i32]* %arg3, i32 %arg1, i32* %arg, i32 %arg5 ];
^while.body2(i32* %arg, [40 * i32]* %arg1, [5 * i32]* %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32* %arg6, i32 %arg7):
    i32* %0 = getelementptr &(i32* %arg6)[i32 %arg7];
    i32 %1 = load i32* %0;
    call (i32) -> void @putch(i32 %1);
    i32 %2 = add i32 %arg7, i32 1;
    store i32* %arg with i32 %2;
    i32* %3 = getelementptr &(i32* %arg6)[i32 %2];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^while.body2 i32* %arg, [40 * i32]* %arg1, [5 * i32]* %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32* %arg6, i32 %2 ], [ ^b3 [40 * i32]* %arg1, [5 * i32]* %arg2, i32 %arg3, i32* %arg4, i32 %arg5 ];
^b3([40 * i32]* %arg, [5 * i32]* %arg1, i32 %arg2, i32* %arg3, i32 %arg4):
    i32* %0 = getelementptr &([40 * i32]* %arg)[i32 0][i32 0];
    i32* %iNd__1X = alloc i32;
    store i32* %iNd__1X with i32 0;
    i32 %1 = load i32* %0;
    i1 %2 = scmp neq i32 %1, i32 0;
    cbr i1 %2, [ ^while.body3 i32* %iNd__1X, i32 %arg2, [40 * i32]* %arg, [5 * i32]* %arg1, i32* %arg3, i32 %arg4, i32* %0, i32 0 ], [ ^b4 i32 %arg2, [40 * i32]* %arg, [5 * i32]* %arg1, i32* %arg3, i32 %arg4 ];
^while.body3(i32* %arg, i32 %arg1, [40 * i32]* %arg2, [5 * i32]* %arg3, i32* %arg4, i32 %arg5, i32* %arg6, i32 %arg7):
    i32* %0 = getelementptr &(i32* %arg6)[i32 %arg7];
    i32 %1 = load i32* %0;
    call (i32) -> void @putch(i32 %1);
    i32 %2 = add i32 %arg7, i32 1;
    store i32* %arg with i32 %2;
    i32* %3 = getelementptr &(i32* %arg6)[i32 %2];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^while.body3 i32* %arg, i32 %arg1, [40 * i32]* %arg2, [5 * i32]* %arg3, i32* %arg4, i32 %arg5, i32* %arg6, i32 %2 ], [ ^b4 i32 %arg1, [40 * i32]* %arg2, [5 * i32]* %arg3, i32* %arg4, i32 %arg5 ];
^b4(i32 %arg, [40 * i32]* %arg1, [5 * i32]* %arg2, i32* %arg3, i32 %arg4):
    [50 * i32]* %0 = getelementptr &([6 * [50 * i32]]* @N4__mE___)[i32 0][i32 %arg];
    i32* %1 = getelementptr &([50 * i32]* %0)[i32 0][i32 0];
    i32* %iNd__1X = alloc i32;
    store i32* %iNd__1X with i32 0;
    i32 %2 = load i32* %1;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3, [ ^while.body4 i32* %iNd__1X, [5 * i32]* %arg2, [40 * i32]* %arg1, i32* %arg3, i32 %arg4, i32* %1, i32 0 ], [ ^b5 [5 * i32]* %arg2, [40 * i32]* %arg1, i32* %arg3, i32 %arg4 ];
^while.body4(i32* %arg, [5 * i32]* %arg1, [40 * i32]* %arg2, i32* %arg3, i32 %arg4, i32* %arg5, i32 %arg6):
    i32* %0 = getelementptr &(i32* %arg5)[i32 %arg6];
    i32 %1 = load i32* %0;
    call (i32) -> void @putch(i32 %1);
    i32 %2 = add i32 %arg6, i32 1;
    store i32* %arg with i32 %2;
    i32* %3 = getelementptr &(i32* %arg5)[i32 %2];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^while.body4 i32* %arg, [5 * i32]* %arg1, [40 * i32]* %arg2, i32* %arg3, i32 %arg4, i32* %arg5, i32 %2 ], [ ^b5 [5 * i32]* %arg1, [40 * i32]* %arg2, i32* %arg3, i32 %arg4 ];
^b5([5 * i32]* %arg, [40 * i32]* %arg1, i32* %arg2, i32 %arg3):
    i32* %0 = getelementptr &([5 * i32]* %arg)[i32 0][i32 0];
    i32* %iNd__1X = alloc i32;
    store i32* %iNd__1X with i32 0;
    i32 %1 = load i32* %0;
    i1 %2 = scmp neq i32 %1, i32 0;
    cbr i1 %2, [ ^while.body5 i32* %iNd__1X, i32* %arg2, [5 * i32]* %arg, [40 * i32]* %arg1, i32 %arg3, i32* %0, i32 0 ], [ ^b1 i32* %arg2, [5 * i32]* %arg, [40 * i32]* %arg1, i32 %arg3 ];
^while.body5(i32* %arg, i32* %arg1, [5 * i32]* %arg2, [40 * i32]* %arg3, i32 %arg4, i32* %arg5, i32 %arg6):
    i32* %0 = getelementptr &(i32* %arg5)[i32 %arg6];
    i32 %1 = load i32* %0;
    call (i32) -> void @putch(i32 %1);
    i32 %2 = add i32 %arg6, i32 1;
    store i32* %arg with i32 %2;
    i32* %3 = getelementptr &(i32* %arg5)[i32 %2];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^while.body5 i32* %arg, i32* %arg1, [5 * i32]* %arg2, [40 * i32]* %arg3, i32 %arg4, i32* %arg5, i32 %2 ], [ ^b1 i32* %arg1, [5 * i32]* %arg2, [40 * i32]* %arg3, i32 %arg4 ];
}
