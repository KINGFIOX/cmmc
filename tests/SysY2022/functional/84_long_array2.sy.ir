internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal [4096 * i32]* @a;
func @main() -> i32 { NoMemoryRead NoRecurse Entry } {
^entry:
    [1024 * [4 * i32]]* %c = alloc [1024 * [4 * i32]];
    [4 * [1024 * i32]]* %b = alloc [4 * [1024 * i32]];
    i32* %0 = getelementptr &([4096 * i32]* @a)[i64 0][i64 5];
    i32* %1 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4000];
    i32* %2 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4095];
    i32* %3 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 0][i64 0];
    i32* %4 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 1][i64 1];
    i32* %5 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 1][i64 2];
    i32* %6 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 2][i64 0];
    i32* %7 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 2][i64 2];
    i32* %8 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 3];
    i8* %9 = ptrcast i32* %3 to i8*;
    i8* %10 = ptrcast i32* %4 to i8*;
    i8* %11 = ptrcast i32* %5 to i8*;
    i8* %12 = ptrcast i32* %7 to i8*;
    i8* %13 = ptrcast i32* %8 to i8*;
    i8* %14 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %9, i32 0, i64 4096);
    i8* %15 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %10, i32 0, i64 4092);
    i8* %16 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %12, i32 0, i64 4088);
    i8* %17 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %13, i32 0, i64 4084);
    i8* %18 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %11, i32 0, i64 16360);
    store i32* %0 with i32 4000;
    store i32* %1 with i32 3;
    store i32* %2 with i32 7;
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putch(i32 10);
    i32 %19 = load i32* %6;
    ret i32 %19;
}
internal func @cmmc::Intrinsic::memset() -> i8* { NoMemoryRead };
