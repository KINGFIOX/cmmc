internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal [4096 * i32]* @a;
func @main() -> i32 { NoMemoryRead NoRecurse Entry } {
^entry:
    [1024 * [4 * i32]]* %c = alloc [1024 * [4 * i32]];
    [4 * [1024 * i32]]* %b = alloc [4 * [1024 * i32]];
    i32* %0 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 0][i64 0];
    i8* %1 = ptrcast i32* %0 to i8*;
    call (i8*, i64) -> void @__cmmc_builtin_memset(i8* %1, i64 4096);
    i32* %2 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 1][i64 1];
    i8* %3 = ptrcast i32* %2 to i8*;
    call (i8*, i64) -> void @__cmmc_builtin_memset(i8* %3, i64 4092);
    i32* %4 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 2][i64 2];
    i8* %5 = ptrcast i32* %4 to i8*;
    call (i8*, i64) -> void @__cmmc_builtin_memset(i8* %5, i64 4088);
    i32* %6 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 3];
    i8* %7 = ptrcast i32* %6 to i8*;
    call (i8*, i64) -> void @__cmmc_builtin_memset(i8* %7, i64 4084);
    i32* %8 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 1][i64 2];
    i8* %9 = ptrcast i32* %8 to i8*;
    call (i8*, i64) -> void @__cmmc_builtin_memset(i8* %9, i64 16360);
    i32* %10 = getelementptr &([4096 * i32]* @a)[i64 0][i64 5];
    store i32* %10 with i32 4000;
    i32* %11 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4000];
    store i32* %11 with i32 3;
    i32* %12 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4095];
    store i32* %12 with i32 7;
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putch(i32 10);
    i32* %13 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 2][i64 0];
    i32 %14 = load i32* %13;
    ret i32 %14;
}
internal func @__cmmc_builtin_memset(i8* %0, i64 %1) -> void { NoMemoryRead NoRecurse } {
^b:
    ubr ^b1;
^b1:
    i64 %2 = phi [^b, i64 0] [^b1, i64 %4];
    i8* %3 = getelementptr &(i8* %0)[i64 %2];
    store i8* %3 with i8 0;
    i64 %4 = add i64 %2, i64 1;
    i1 %5 = scmp lt i64 %4, i64 %1;
    cbr i1 %5(prob = 0.97), ^b1, ^b2;
^b2:
    ret;
}
