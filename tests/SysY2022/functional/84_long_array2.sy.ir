internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal [4096 * i32]* @a;
func @main() -> i32 { NoMemoryRead NoRecurse Entry } {
^entry:
    [1024 * [4 * i32]]* %c = alloc [1024 * [4 * i32]];
    [4 * [1024 * i32]]* %b = alloc [4 * [1024 * i32]];
    i32* %0 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 0][i64 0];
    i8* %1 = ptrcast i32* %0 to i8*;
    ubr ^super.header;
^super.header:
    i64 %2 = phi [^entry, i64 0] [^b1, i64 %3];
    i64 %3 = add i64 %2, i64 16;
    i1 %4 = scmp lt i64 %3, i64 4096;
    cbr i1 %4(prob = 0.67), ^b1, ^super.header1;
^b1:
    i8* %5 = getelementptr &(i8* %1)[i64 %2];
    store i8* %5 with i8 0;
    i8* %6 = getelementptr &(i8* %5)[i64 1];
    store i8* %6 with i8 0;
    i8* %7 = getelementptr &(i8* %5)[i64 2];
    store i8* %7 with i8 0;
    i8* %8 = getelementptr &(i8* %5)[i64 3];
    store i8* %8 with i8 0;
    i8* %9 = getelementptr &(i8* %5)[i64 4];
    store i8* %9 with i8 0;
    i8* %10 = getelementptr &(i8* %5)[i64 5];
    store i8* %10 with i8 0;
    i8* %11 = getelementptr &(i8* %5)[i64 6];
    store i8* %11 with i8 0;
    i8* %12 = getelementptr &(i8* %5)[i64 7];
    store i8* %12 with i8 0;
    i8* %13 = getelementptr &(i8* %5)[i64 8];
    store i8* %13 with i8 0;
    i8* %14 = getelementptr &(i8* %5)[i64 9];
    store i8* %14 with i8 0;
    i8* %15 = getelementptr &(i8* %5)[i64 10];
    store i8* %15 with i8 0;
    i8* %16 = getelementptr &(i8* %5)[i64 11];
    store i8* %16 with i8 0;
    i8* %17 = getelementptr &(i8* %5)[i64 12];
    store i8* %17 with i8 0;
    i8* %18 = getelementptr &(i8* %5)[i64 13];
    store i8* %18 with i8 0;
    i8* %19 = getelementptr &(i8* %5)[i64 14];
    store i8* %19 with i8 0;
    i8* %20 = getelementptr &(i8* %5)[i64 15];
    store i8* %20 with i8 0;
    ubr ^super.header;
^super.header1:
    i64 %21 = phi [^super.header, i64 %2] [^b2, i64 %22];
    i64 %22 = add i64 %21, i64 16;
    i1 %23 = scmp lt i64 %22, i64 4096;
    cbr i1 %23(prob = 0.67), ^b2, ^b3;
^b2:
    i8* %24 = getelementptr &(i8* %1)[i64 %21];
    store i8* %24 with i8 0;
    i8* %25 = getelementptr &(i8* %24)[i64 1];
    store i8* %25 with i8 0;
    i8* %26 = getelementptr &(i8* %24)[i64 2];
    store i8* %26 with i8 0;
    i8* %27 = getelementptr &(i8* %24)[i64 3];
    store i8* %27 with i8 0;
    i8* %28 = getelementptr &(i8* %24)[i64 4];
    store i8* %28 with i8 0;
    i8* %29 = getelementptr &(i8* %24)[i64 5];
    store i8* %29 with i8 0;
    i8* %30 = getelementptr &(i8* %24)[i64 6];
    store i8* %30 with i8 0;
    i8* %31 = getelementptr &(i8* %24)[i64 7];
    store i8* %31 with i8 0;
    i8* %32 = getelementptr &(i8* %24)[i64 8];
    store i8* %32 with i8 0;
    i8* %33 = getelementptr &(i8* %24)[i64 9];
    store i8* %33 with i8 0;
    i8* %34 = getelementptr &(i8* %24)[i64 10];
    store i8* %34 with i8 0;
    i8* %35 = getelementptr &(i8* %24)[i64 11];
    store i8* %35 with i8 0;
    i8* %36 = getelementptr &(i8* %24)[i64 12];
    store i8* %36 with i8 0;
    i8* %37 = getelementptr &(i8* %24)[i64 13];
    store i8* %37 with i8 0;
    i8* %38 = getelementptr &(i8* %24)[i64 14];
    store i8* %38 with i8 0;
    i8* %39 = getelementptr &(i8* %24)[i64 15];
    store i8* %39 with i8 0;
    ubr ^super.header1;
^b3:
    i64 %40 = phi [^super.header1, i64 %21] [^b3, i64 %42];
    i8* %41 = getelementptr &(i8* %1)[i64 %40];
    store i8* %41 with i8 0;
    i64 %42 = add i64 %40, i64 1;
    i1 %43 = scmp lt i64 %42, i64 4096;
    cbr i1 %43(prob = 0.97), ^b3, ^entry1;
^entry1:
    i32* %44 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 1][i64 1];
    i8* %45 = ptrcast i32* %44 to i8*;
    ubr ^super.header2;
^super.header2:
    i64 %46 = phi [^entry1, i64 0] [^b4, i64 %47];
    i64 %47 = add i64 %46, i64 16;
    i1 %48 = scmp lt i64 %47, i64 4092;
    cbr i1 %48(prob = 0.67), ^b4, ^super.header3;
^b4:
    i8* %49 = getelementptr &(i8* %45)[i64 %46];
    store i8* %49 with i8 0;
    i8* %50 = getelementptr &(i8* %49)[i64 1];
    store i8* %50 with i8 0;
    i8* %51 = getelementptr &(i8* %49)[i64 2];
    store i8* %51 with i8 0;
    i8* %52 = getelementptr &(i8* %49)[i64 3];
    store i8* %52 with i8 0;
    i8* %53 = getelementptr &(i8* %49)[i64 4];
    store i8* %53 with i8 0;
    i8* %54 = getelementptr &(i8* %49)[i64 5];
    store i8* %54 with i8 0;
    i8* %55 = getelementptr &(i8* %49)[i64 6];
    store i8* %55 with i8 0;
    i8* %56 = getelementptr &(i8* %49)[i64 7];
    store i8* %56 with i8 0;
    i8* %57 = getelementptr &(i8* %49)[i64 8];
    store i8* %57 with i8 0;
    i8* %58 = getelementptr &(i8* %49)[i64 9];
    store i8* %58 with i8 0;
    i8* %59 = getelementptr &(i8* %49)[i64 10];
    store i8* %59 with i8 0;
    i8* %60 = getelementptr &(i8* %49)[i64 11];
    store i8* %60 with i8 0;
    i8* %61 = getelementptr &(i8* %49)[i64 12];
    store i8* %61 with i8 0;
    i8* %62 = getelementptr &(i8* %49)[i64 13];
    store i8* %62 with i8 0;
    i8* %63 = getelementptr &(i8* %49)[i64 14];
    store i8* %63 with i8 0;
    i8* %64 = getelementptr &(i8* %49)[i64 15];
    store i8* %64 with i8 0;
    ubr ^super.header2;
^super.header3:
    i64 %65 = phi [^super.header2, i64 %46] [^b5, i64 %66];
    i64 %66 = add i64 %65, i64 16;
    i1 %67 = scmp lt i64 %66, i64 4092;
    cbr i1 %67(prob = 0.67), ^b5, ^b6;
^b5:
    i8* %68 = getelementptr &(i8* %45)[i64 %65];
    store i8* %68 with i8 0;
    i8* %69 = getelementptr &(i8* %68)[i64 1];
    store i8* %69 with i8 0;
    i8* %70 = getelementptr &(i8* %68)[i64 2];
    store i8* %70 with i8 0;
    i8* %71 = getelementptr &(i8* %68)[i64 3];
    store i8* %71 with i8 0;
    i8* %72 = getelementptr &(i8* %68)[i64 4];
    store i8* %72 with i8 0;
    i8* %73 = getelementptr &(i8* %68)[i64 5];
    store i8* %73 with i8 0;
    i8* %74 = getelementptr &(i8* %68)[i64 6];
    store i8* %74 with i8 0;
    i8* %75 = getelementptr &(i8* %68)[i64 7];
    store i8* %75 with i8 0;
    i8* %76 = getelementptr &(i8* %68)[i64 8];
    store i8* %76 with i8 0;
    i8* %77 = getelementptr &(i8* %68)[i64 9];
    store i8* %77 with i8 0;
    i8* %78 = getelementptr &(i8* %68)[i64 10];
    store i8* %78 with i8 0;
    i8* %79 = getelementptr &(i8* %68)[i64 11];
    store i8* %79 with i8 0;
    i8* %80 = getelementptr &(i8* %68)[i64 12];
    store i8* %80 with i8 0;
    i8* %81 = getelementptr &(i8* %68)[i64 13];
    store i8* %81 with i8 0;
    i8* %82 = getelementptr &(i8* %68)[i64 14];
    store i8* %82 with i8 0;
    i8* %83 = getelementptr &(i8* %68)[i64 15];
    store i8* %83 with i8 0;
    ubr ^super.header3;
^b6:
    i64 %84 = phi [^super.header3, i64 %65] [^b6, i64 %86];
    i8* %85 = getelementptr &(i8* %45)[i64 %84];
    store i8* %85 with i8 0;
    i64 %86 = add i64 %84, i64 1;
    i1 %87 = scmp lt i64 %86, i64 4092;
    cbr i1 %87(prob = 0.97), ^b6, ^entry2;
^entry2:
    i32* %88 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 2][i64 2];
    i8* %89 = ptrcast i32* %88 to i8*;
    ubr ^super.header4;
^super.header4:
    i64 %90 = phi [^entry2, i64 0] [^b7, i64 %91];
    i64 %91 = add i64 %90, i64 16;
    i1 %92 = scmp lt i64 %91, i64 4088;
    cbr i1 %92(prob = 0.67), ^b7, ^super.header5;
^b7:
    i8* %93 = getelementptr &(i8* %89)[i64 %90];
    store i8* %93 with i8 0;
    i8* %94 = getelementptr &(i8* %93)[i64 1];
    store i8* %94 with i8 0;
    i8* %95 = getelementptr &(i8* %93)[i64 2];
    store i8* %95 with i8 0;
    i8* %96 = getelementptr &(i8* %93)[i64 3];
    store i8* %96 with i8 0;
    i8* %97 = getelementptr &(i8* %93)[i64 4];
    store i8* %97 with i8 0;
    i8* %98 = getelementptr &(i8* %93)[i64 5];
    store i8* %98 with i8 0;
    i8* %99 = getelementptr &(i8* %93)[i64 6];
    store i8* %99 with i8 0;
    i8* %100 = getelementptr &(i8* %93)[i64 7];
    store i8* %100 with i8 0;
    i8* %101 = getelementptr &(i8* %93)[i64 8];
    store i8* %101 with i8 0;
    i8* %102 = getelementptr &(i8* %93)[i64 9];
    store i8* %102 with i8 0;
    i8* %103 = getelementptr &(i8* %93)[i64 10];
    store i8* %103 with i8 0;
    i8* %104 = getelementptr &(i8* %93)[i64 11];
    store i8* %104 with i8 0;
    i8* %105 = getelementptr &(i8* %93)[i64 12];
    store i8* %105 with i8 0;
    i8* %106 = getelementptr &(i8* %93)[i64 13];
    store i8* %106 with i8 0;
    i8* %107 = getelementptr &(i8* %93)[i64 14];
    store i8* %107 with i8 0;
    i8* %108 = getelementptr &(i8* %93)[i64 15];
    store i8* %108 with i8 0;
    ubr ^super.header4;
^super.header5:
    i64 %109 = phi [^super.header4, i64 %90] [^b8, i64 %110];
    i64 %110 = add i64 %109, i64 16;
    i1 %111 = scmp lt i64 %110, i64 4088;
    cbr i1 %111(prob = 0.67), ^b8, ^b9;
^b8:
    i8* %112 = getelementptr &(i8* %89)[i64 %109];
    store i8* %112 with i8 0;
    i8* %113 = getelementptr &(i8* %112)[i64 1];
    store i8* %113 with i8 0;
    i8* %114 = getelementptr &(i8* %112)[i64 2];
    store i8* %114 with i8 0;
    i8* %115 = getelementptr &(i8* %112)[i64 3];
    store i8* %115 with i8 0;
    i8* %116 = getelementptr &(i8* %112)[i64 4];
    store i8* %116 with i8 0;
    i8* %117 = getelementptr &(i8* %112)[i64 5];
    store i8* %117 with i8 0;
    i8* %118 = getelementptr &(i8* %112)[i64 6];
    store i8* %118 with i8 0;
    i8* %119 = getelementptr &(i8* %112)[i64 7];
    store i8* %119 with i8 0;
    i8* %120 = getelementptr &(i8* %112)[i64 8];
    store i8* %120 with i8 0;
    i8* %121 = getelementptr &(i8* %112)[i64 9];
    store i8* %121 with i8 0;
    i8* %122 = getelementptr &(i8* %112)[i64 10];
    store i8* %122 with i8 0;
    i8* %123 = getelementptr &(i8* %112)[i64 11];
    store i8* %123 with i8 0;
    i8* %124 = getelementptr &(i8* %112)[i64 12];
    store i8* %124 with i8 0;
    i8* %125 = getelementptr &(i8* %112)[i64 13];
    store i8* %125 with i8 0;
    i8* %126 = getelementptr &(i8* %112)[i64 14];
    store i8* %126 with i8 0;
    i8* %127 = getelementptr &(i8* %112)[i64 15];
    store i8* %127 with i8 0;
    ubr ^super.header5;
^b9:
    i64 %128 = phi [^super.header5, i64 %109] [^b9, i64 %130];
    i8* %129 = getelementptr &(i8* %89)[i64 %128];
    store i8* %129 with i8 0;
    i64 %130 = add i64 %128, i64 1;
    i1 %131 = scmp lt i64 %130, i64 4088;
    cbr i1 %131(prob = 0.97), ^b9, ^entry3;
^entry3:
    i32* %132 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 3];
    i8* %133 = ptrcast i32* %132 to i8*;
    ubr ^super.header6;
^super.header6:
    i64 %134 = phi [^entry3, i64 0] [^b10, i64 %135];
    i64 %135 = add i64 %134, i64 16;
    i1 %136 = scmp lt i64 %135, i64 4084;
    cbr i1 %136(prob = 0.67), ^b10, ^super.header7;
^b10:
    i8* %137 = getelementptr &(i8* %133)[i64 %134];
    store i8* %137 with i8 0;
    i8* %138 = getelementptr &(i8* %137)[i64 1];
    store i8* %138 with i8 0;
    i8* %139 = getelementptr &(i8* %137)[i64 2];
    store i8* %139 with i8 0;
    i8* %140 = getelementptr &(i8* %137)[i64 3];
    store i8* %140 with i8 0;
    i8* %141 = getelementptr &(i8* %137)[i64 4];
    store i8* %141 with i8 0;
    i8* %142 = getelementptr &(i8* %137)[i64 5];
    store i8* %142 with i8 0;
    i8* %143 = getelementptr &(i8* %137)[i64 6];
    store i8* %143 with i8 0;
    i8* %144 = getelementptr &(i8* %137)[i64 7];
    store i8* %144 with i8 0;
    i8* %145 = getelementptr &(i8* %137)[i64 8];
    store i8* %145 with i8 0;
    i8* %146 = getelementptr &(i8* %137)[i64 9];
    store i8* %146 with i8 0;
    i8* %147 = getelementptr &(i8* %137)[i64 10];
    store i8* %147 with i8 0;
    i8* %148 = getelementptr &(i8* %137)[i64 11];
    store i8* %148 with i8 0;
    i8* %149 = getelementptr &(i8* %137)[i64 12];
    store i8* %149 with i8 0;
    i8* %150 = getelementptr &(i8* %137)[i64 13];
    store i8* %150 with i8 0;
    i8* %151 = getelementptr &(i8* %137)[i64 14];
    store i8* %151 with i8 0;
    i8* %152 = getelementptr &(i8* %137)[i64 15];
    store i8* %152 with i8 0;
    ubr ^super.header6;
^super.header7:
    i64 %153 = phi [^super.header6, i64 %134] [^b11, i64 %154];
    i64 %154 = add i64 %153, i64 16;
    i1 %155 = scmp lt i64 %154, i64 4084;
    cbr i1 %155(prob = 0.67), ^b11, ^b12;
^b11:
    i8* %156 = getelementptr &(i8* %133)[i64 %153];
    store i8* %156 with i8 0;
    i8* %157 = getelementptr &(i8* %156)[i64 1];
    store i8* %157 with i8 0;
    i8* %158 = getelementptr &(i8* %156)[i64 2];
    store i8* %158 with i8 0;
    i8* %159 = getelementptr &(i8* %156)[i64 3];
    store i8* %159 with i8 0;
    i8* %160 = getelementptr &(i8* %156)[i64 4];
    store i8* %160 with i8 0;
    i8* %161 = getelementptr &(i8* %156)[i64 5];
    store i8* %161 with i8 0;
    i8* %162 = getelementptr &(i8* %156)[i64 6];
    store i8* %162 with i8 0;
    i8* %163 = getelementptr &(i8* %156)[i64 7];
    store i8* %163 with i8 0;
    i8* %164 = getelementptr &(i8* %156)[i64 8];
    store i8* %164 with i8 0;
    i8* %165 = getelementptr &(i8* %156)[i64 9];
    store i8* %165 with i8 0;
    i8* %166 = getelementptr &(i8* %156)[i64 10];
    store i8* %166 with i8 0;
    i8* %167 = getelementptr &(i8* %156)[i64 11];
    store i8* %167 with i8 0;
    i8* %168 = getelementptr &(i8* %156)[i64 12];
    store i8* %168 with i8 0;
    i8* %169 = getelementptr &(i8* %156)[i64 13];
    store i8* %169 with i8 0;
    i8* %170 = getelementptr &(i8* %156)[i64 14];
    store i8* %170 with i8 0;
    i8* %171 = getelementptr &(i8* %156)[i64 15];
    store i8* %171 with i8 0;
    ubr ^super.header7;
^b12:
    i64 %172 = phi [^super.header7, i64 %153] [^b12, i64 %174];
    i8* %173 = getelementptr &(i8* %133)[i64 %172];
    store i8* %173 with i8 0;
    i64 %174 = add i64 %172, i64 1;
    i1 %175 = scmp lt i64 %174, i64 4084;
    cbr i1 %175(prob = 0.97), ^b12, ^entry4;
^entry4:
    i32* %176 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 1][i64 2];
    i8* %177 = ptrcast i32* %176 to i8*;
    ubr ^super.header8;
^super.header8:
    i64 %178 = phi [^entry4, i64 0] [^b13, i64 %179];
    i64 %179 = add i64 %178, i64 16;
    i1 %180 = scmp lt i64 %179, i64 16360;
    cbr i1 %180(prob = 0.67), ^b13, ^super.header9;
^b13:
    i8* %181 = getelementptr &(i8* %177)[i64 %178];
    store i8* %181 with i8 0;
    i8* %182 = getelementptr &(i8* %181)[i64 1];
    store i8* %182 with i8 0;
    i8* %183 = getelementptr &(i8* %181)[i64 2];
    store i8* %183 with i8 0;
    i8* %184 = getelementptr &(i8* %181)[i64 3];
    store i8* %184 with i8 0;
    i8* %185 = getelementptr &(i8* %181)[i64 4];
    store i8* %185 with i8 0;
    i8* %186 = getelementptr &(i8* %181)[i64 5];
    store i8* %186 with i8 0;
    i8* %187 = getelementptr &(i8* %181)[i64 6];
    store i8* %187 with i8 0;
    i8* %188 = getelementptr &(i8* %181)[i64 7];
    store i8* %188 with i8 0;
    i8* %189 = getelementptr &(i8* %181)[i64 8];
    store i8* %189 with i8 0;
    i8* %190 = getelementptr &(i8* %181)[i64 9];
    store i8* %190 with i8 0;
    i8* %191 = getelementptr &(i8* %181)[i64 10];
    store i8* %191 with i8 0;
    i8* %192 = getelementptr &(i8* %181)[i64 11];
    store i8* %192 with i8 0;
    i8* %193 = getelementptr &(i8* %181)[i64 12];
    store i8* %193 with i8 0;
    i8* %194 = getelementptr &(i8* %181)[i64 13];
    store i8* %194 with i8 0;
    i8* %195 = getelementptr &(i8* %181)[i64 14];
    store i8* %195 with i8 0;
    i8* %196 = getelementptr &(i8* %181)[i64 15];
    store i8* %196 with i8 0;
    ubr ^super.header8;
^super.header9:
    i64 %197 = phi [^super.header8, i64 %178] [^b14, i64 %198];
    i64 %198 = add i64 %197, i64 16;
    i1 %199 = scmp lt i64 %198, i64 16360;
    cbr i1 %199(prob = 0.67), ^b14, ^b15;
^b14:
    i8* %200 = getelementptr &(i8* %177)[i64 %197];
    store i8* %200 with i8 0;
    i8* %201 = getelementptr &(i8* %200)[i64 1];
    store i8* %201 with i8 0;
    i8* %202 = getelementptr &(i8* %200)[i64 2];
    store i8* %202 with i8 0;
    i8* %203 = getelementptr &(i8* %200)[i64 3];
    store i8* %203 with i8 0;
    i8* %204 = getelementptr &(i8* %200)[i64 4];
    store i8* %204 with i8 0;
    i8* %205 = getelementptr &(i8* %200)[i64 5];
    store i8* %205 with i8 0;
    i8* %206 = getelementptr &(i8* %200)[i64 6];
    store i8* %206 with i8 0;
    i8* %207 = getelementptr &(i8* %200)[i64 7];
    store i8* %207 with i8 0;
    i8* %208 = getelementptr &(i8* %200)[i64 8];
    store i8* %208 with i8 0;
    i8* %209 = getelementptr &(i8* %200)[i64 9];
    store i8* %209 with i8 0;
    i8* %210 = getelementptr &(i8* %200)[i64 10];
    store i8* %210 with i8 0;
    i8* %211 = getelementptr &(i8* %200)[i64 11];
    store i8* %211 with i8 0;
    i8* %212 = getelementptr &(i8* %200)[i64 12];
    store i8* %212 with i8 0;
    i8* %213 = getelementptr &(i8* %200)[i64 13];
    store i8* %213 with i8 0;
    i8* %214 = getelementptr &(i8* %200)[i64 14];
    store i8* %214 with i8 0;
    i8* %215 = getelementptr &(i8* %200)[i64 15];
    store i8* %215 with i8 0;
    ubr ^super.header9;
^b15:
    i64 %216 = phi [^super.header9, i64 %197] [^b15, i64 %218];
    i8* %217 = getelementptr &(i8* %177)[i64 %216];
    store i8* %217 with i8 0;
    i64 %218 = add i64 %216, i64 1;
    i1 %219 = scmp lt i64 %218, i64 16360;
    cbr i1 %219(prob = 0.97), ^b15, ^entry5;
^entry5:
    i32* %220 = getelementptr &([4096 * i32]* @a)[i64 0][i64 5];
    store i32* %220 with i32 4000;
    i32* %221 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4000];
    store i32* %221 with i32 3;
    i32* %222 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4095];
    store i32* %222 with i32 7;
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putch(i32 10);
    i32* %223 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 2][i64 0];
    i32 %224 = load i32* %223;
    ret i32 %224;
}
