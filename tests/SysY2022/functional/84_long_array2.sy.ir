internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [4096 * i32]* @a;
internal func @f1(i32* %b) -> i32 {
^entry:
    i32** %b1 = alloc i32*;
    store i32** %b1 with i32* %b;
    i32* %0 = getelementptr &([4096 * i32]* @a)[i64 0][i64 5];
    store i32* %0 with i32 4000;
    i32* %1 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4000];
    store i32* %1 with i32 3;
    i32* %2 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4095];
    store i32* %2 with i32 7;
    i32* %3 = getelementptr &([4096 * i32]* @a)[i64 0][i64 4095];
    i32 %4 = load i32* %3;
    i64 %5 = sext i32 %4 to i64;
    i32* %6 = load i32** %b1;
    i32* %7 = getelementptr &(i32* %6)[i64 %5];
    i32* %8 = getelementptr &([4096 * i32]* @a)[i64 0][i64 2216];
    i32 %9 = load i32* %8;
    i32 %10 = add i32 %9, i32 9;
    store i32* %7 with i32 %10;
    i32* %11 = getelementptr &([4096 * i32]* @a)[i64 0][i64 5];
    i32 %12 = load i32* %11;
    i64 %13 = sext i32 %12 to i64;
    i32* %14 = getelementptr &([4096 * i32]* @a)[i64 0][i64 %13];
    i32 %15 = load i32* %14;
    ret i32 %15;
}
func @main() -> i32 { Entry } {
^entry:
    [1024 * [4 * i32]]* %c = alloc [1024 * [4 * i32]];
    [4 * [1024 * i32]]* %b = alloc [4 * [1024 * i32]];
    i32* %0 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 1][i64 0];
    i32* %1 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 0][i64 0];
    i8* %2 = ptrcast i32* %1 to i8*;
    i8* %3 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %2, i32 0, i64 4096);
    store i32* %0 with i32 1;
    i32* %4 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 2][i64 0];
    i32* %5 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 1][i64 1];
    i8* %6 = ptrcast i32* %5 to i8*;
    i8* %7 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %6, i32 0, i64 4092);
    store i32* %4 with i32 2;
    i32* %8 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 2][i64 1];
    store i32* %8 with i32 3;
    i32* %9 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 0];
    i32* %10 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 2][i64 2];
    i8* %11 = ptrcast i32* %10 to i8*;
    i8* %12 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %11, i32 0, i64 4088);
    store i32* %9 with i32 4;
    i32* %13 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 1];
    store i32* %13 with i32 5;
    i32* %14 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 2];
    store i32* %14 with i32 6;
    i32* %15 = getelementptr &([4 * [1024 * i32]]* %b)[i64 1][i64 0][i64 0];
    i32* %16 = getelementptr &([4 * [1024 * i32]]* %b)[i64 0][i64 3][i64 3];
    i8* %17 = ptrcast i32* %16 to i8*;
    i8* %18 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %17, i32 0, i64 4084);
    i32* %19 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 0][i64 0];
    store i32* %19 with i32 1;
    i32* %20 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 0][i64 1];
    store i32* %20 with i32 2;
    i32* %21 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 1][i64 0];
    i32* %22 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 0][i64 2];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 0][i64 3];
    store i32* %23 with i32 0;
    store i32* %21 with i32 3;
    i32* %24 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 1][i64 1];
    store i32* %24 with i32 4;
    i32* %25 = getelementptr &([1024 * [4 * i32]]* %c)[i64 1][i64 0][i64 0];
    i32* %26 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 1][i64 2];
    i8* %27 = ptrcast i32* %26 to i8*;
    i8* %28 = call (i8*, i32, i64) -> i8* @cmmc::Intrinsic::memset(i8* %27, i32 0, i64 16360);
    [4 * i32]* %29 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 0];
    i32* %30 = getelementptr &([4 * i32]* %29)[i64 0][i64 0];
    i32 %31 = call (i32*) -> i32 @f1(i32* %30);
    call (i32) -> void @putint(i32 %31);
    call (i32) -> void @putch(i32 10);
    [4 * i32]* %32 = getelementptr &([1024 * [4 * i32]]* %c)[i64 0][i64 2];
    i32* %33 = getelementptr &([4 * i32]* %32)[i64 0][i64 0];
    i32 %34 = load i32* %33;
    ret i32 %34;
}
internal func @cmmc::Intrinsic::memset() -> i8* { NoMemoryRead };
