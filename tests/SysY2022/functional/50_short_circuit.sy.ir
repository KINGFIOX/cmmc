internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp sgt i32 %0, i32 10;
    cbr i1 %1(prob = 0.5), ^b, ^b1;
  ^b:
    call (i32) -> void @putint(i32 %0);
    ubr ^b1;
  ^b1:
    i32 %2 = phi [^entry, i32 0] [^b, i32 %0];
    i32 %3 = call () -> i32 @getint();
    i1 %4 = icmp sgt i32 %3, i32 11;
    cbr i1 %4(prob = 0.5), ^b2, ^b3;
  ^b2:
    i32 %5 = add i32 %2, i32 %3;
    call (i32) -> void @putint(i32 %5);
    ubr ^b3;
  ^b3:
    i32 %6 = phi [^b1, i32 %2] [^b2, i32 %5];
    i32 %7 = call () -> i32 @getint();
    i1 %8 = icmp slt i32 %7, i32 100;
    cbr i1 %8(prob = 0.5), ^b5, ^b4;
  ^b4:
    i32 %9 = add i32 %6, i32 %7;
    call (i32) -> void @putint(i32 %9);
    ubr ^b5;
  ^b5:
    i32 %10 = phi [^b3, i32 %6] [^b4, i32 %9];
    i32 %11 = call () -> i32 @getint();
    i1 %12 = icmp slt i32 %11, i32 101;
    cbr i1 %12(prob = 0.5), ^b7, ^b6;
  ^b6:
    i32 %13 = add i32 %10, i32 %11;
    call (i32) -> void @putint(i32 %13);
    ubr ^b7;
  ^b7:
    i32 %14 = phi [^b5, i32 %10] [^b6, i32 %13];
    i32 %15 = add i32 %14, i32 99;
    call (i32) -> void @putint(i32 %15);
    i1 %16 = icmp eq i32 %15, i32 0;
    cbr i1 %16(prob = 0.5), ^b8, ^b9;
  ^b8:
    i32 %17 = add i32 %14, i32 199;
    call (i32) -> void @putint(i32 %17);
    ubr ^b9;
  ^b9:
    ret i32 0;
}
