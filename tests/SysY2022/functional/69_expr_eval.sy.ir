internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getch();
    [256 * i32]* %2 = ptrcast [256 * i32]* @oprs to [256 * i32]*;
    i32* %3 = getelementptr &([256 * i32]* %2)[i64 0][i64 0];
    [256 * i32]* %4 = ptrcast [256 * i32]* @ops to [256 * i32]*;
    i32* %5 = getelementptr &([256 * i32]* %4)[i64 0][i64 0];
    ubr ^entry1;
  ^entry1:
    i32 %6 = call () -> i32 @getch();
    i1 %7 = icmp eq i32 %6, i32 32;
    i1 %8 = icmp eq i32 %6, i32 10;
    i1 %9 = or i1 %7, i1 %8;
    cbr i1 %9(prob = 0.97), ^entry1, ^entry2;
  ^entry2:
    i32 %10 = add i32 %6, i32 -48;
    i1 %11 = icmp ult i32 %10, i32 10;
    cbr i1 %11(prob = 0.5), ^entry3, ^if.else;
  ^if.else:
    i32 %12 = call () -> i32 @getch();
    ubr ^entry4;
  ^entry3:
    i32 %13 = phi [^entry2, i32 %10] [^while.body, i32 %18];
    i32 %14 = call () -> i32 @getch();
    i32 %15 = add i32 %14, i32 -48;
    i1 %16 = icmp ult i32 %15, i32 10;
    cbr i1 %16(prob = 0.97), ^while.body, ^entry4;
  ^while.body:
    i32 %17 = mul i32 %13, i32 10;
    i32 %18 = add i32 %15, i32 %17;
    ubr ^entry3;
  ^entry4:
    i32 %19 = phi [^if.else, i32 %12] [^entry3, i32 %14];
    i32 %20 = phi [^if.else, i32 0] [^entry3, i32 %13];
    i32 %21 = phi [^if.else, i32 1] [^entry3, i32 0];
    i1 %22 = icmp neq i32 %0, i32 0;
    cbr i1 %22(prob = 0.97), ^while.body1, ^b;
  ^while.body1:
    i32 %23 = phi [^entry4, i32 %19] [^b8, i32 %303];
    i32 %24 = phi [^entry4, i32 %20] [^b8, i32 %304];
    i32 %25 = phi [^entry4, i32 %21] [^b8, i32 %305];
    i32 %26 = phi [^entry4, i32 %0] [^b8, i32 %307];
    ubr ^b1;
  ^b:
    ret i32 0;
  ^b1:
    i64 %27 = phi [^while.body1, i64 0] [^b1, i64 %92];
    i32* %28 = getelementptr &(i32* %3)[i64 %27];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &(i32* %28)[i64 1];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &(i32* %28)[i64 2];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &(i32* %28)[i64 3];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &(i32* %28)[i64 4];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &(i32* %28)[i64 5];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &(i32* %28)[i64 6];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &(i32* %28)[i64 7];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &(i32* %28)[i64 8];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &(i32* %28)[i64 9];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &(i32* %28)[i64 10];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &(i32* %28)[i64 11];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &(i32* %28)[i64 12];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &(i32* %28)[i64 13];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &(i32* %28)[i64 14];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &(i32* %28)[i64 15];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &(i32* %28)[i64 16];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &(i32* %28)[i64 17];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &(i32* %28)[i64 18];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &(i32* %28)[i64 19];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &(i32* %28)[i64 20];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &(i32* %28)[i64 21];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &(i32* %28)[i64 22];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &(i32* %28)[i64 23];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &(i32* %28)[i64 24];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &(i32* %28)[i64 25];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &(i32* %28)[i64 26];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &(i32* %28)[i64 27];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &(i32* %28)[i64 28];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &(i32* %28)[i64 29];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &(i32* %28)[i64 30];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &(i32* %28)[i64 31];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &(i32* %28)[i64 32];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &(i32* %28)[i64 33];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &(i32* %28)[i64 34];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &(i32* %28)[i64 35];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &(i32* %28)[i64 36];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &(i32* %28)[i64 37];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &(i32* %28)[i64 38];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &(i32* %28)[i64 39];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &(i32* %28)[i64 40];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &(i32* %28)[i64 41];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &(i32* %28)[i64 42];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &(i32* %28)[i64 43];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &(i32* %28)[i64 44];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &(i32* %28)[i64 45];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &(i32* %28)[i64 46];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &(i32* %28)[i64 47];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &(i32* %28)[i64 48];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &(i32* %28)[i64 49];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &(i32* %28)[i64 50];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &(i32* %28)[i64 51];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &(i32* %28)[i64 52];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &(i32* %28)[i64 53];
    store i32* %81 with i32 0;
    i32* %82 = getelementptr &(i32* %28)[i64 54];
    store i32* %82 with i32 0;
    i32* %83 = getelementptr &(i32* %28)[i64 55];
    store i32* %83 with i32 0;
    i32* %84 = getelementptr &(i32* %28)[i64 56];
    store i32* %84 with i32 0;
    i32* %85 = getelementptr &(i32* %28)[i64 57];
    store i32* %85 with i32 0;
    i32* %86 = getelementptr &(i32* %28)[i64 58];
    store i32* %86 with i32 0;
    i32* %87 = getelementptr &(i32* %28)[i64 59];
    store i32* %87 with i32 0;
    i32* %88 = getelementptr &(i32* %28)[i64 60];
    store i32* %88 with i32 0;
    i32* %89 = getelementptr &(i32* %28)[i64 61];
    store i32* %89 with i32 0;
    i32* %90 = getelementptr &(i32* %28)[i64 62];
    store i32* %90 with i32 0;
    i32* %91 = getelementptr &(i32* %28)[i64 63];
    store i32* %91 with i32 0;
    i64 %92 = add i64 %27, i64 64;
    i1 %93 = icmp slt i64 %92, i64 192;
    cbr i1 %93(prob = 0.67), ^b1, ^b2;
  ^b2:
    i32* %94 = getelementptr &(i32* %3)[i64 %92];
    store i32* %94 with i32 0;
    i32* %95 = getelementptr &(i32* %94)[i64 1];
    store i32* %95 with i32 0;
    i32* %96 = getelementptr &(i32* %94)[i64 2];
    store i32* %96 with i32 0;
    i32* %97 = getelementptr &(i32* %94)[i64 3];
    store i32* %97 with i32 0;
    i32* %98 = getelementptr &(i32* %94)[i64 4];
    store i32* %98 with i32 0;
    i32* %99 = getelementptr &(i32* %94)[i64 5];
    store i32* %99 with i32 0;
    i32* %100 = getelementptr &(i32* %94)[i64 6];
    store i32* %100 with i32 0;
    i32* %101 = getelementptr &(i32* %94)[i64 7];
    store i32* %101 with i32 0;
    i32* %102 = getelementptr &(i32* %94)[i64 8];
    store i32* %102 with i32 0;
    i32* %103 = getelementptr &(i32* %94)[i64 9];
    store i32* %103 with i32 0;
    i32* %104 = getelementptr &(i32* %94)[i64 10];
    store i32* %104 with i32 0;
    i32* %105 = getelementptr &(i32* %94)[i64 11];
    store i32* %105 with i32 0;
    i32* %106 = getelementptr &(i32* %94)[i64 12];
    store i32* %106 with i32 0;
    i32* %107 = getelementptr &(i32* %94)[i64 13];
    store i32* %107 with i32 0;
    i32* %108 = getelementptr &(i32* %94)[i64 14];
    store i32* %108 with i32 0;
    i32* %109 = getelementptr &(i32* %94)[i64 15];
    store i32* %109 with i32 0;
    i32* %110 = getelementptr &(i32* %94)[i64 16];
    store i32* %110 with i32 0;
    i32* %111 = getelementptr &(i32* %94)[i64 17];
    store i32* %111 with i32 0;
    i32* %112 = getelementptr &(i32* %94)[i64 18];
    store i32* %112 with i32 0;
    i32* %113 = getelementptr &(i32* %94)[i64 19];
    store i32* %113 with i32 0;
    i32* %114 = getelementptr &(i32* %94)[i64 20];
    store i32* %114 with i32 0;
    i32* %115 = getelementptr &(i32* %94)[i64 21];
    store i32* %115 with i32 0;
    i32* %116 = getelementptr &(i32* %94)[i64 22];
    store i32* %116 with i32 0;
    i32* %117 = getelementptr &(i32* %94)[i64 23];
    store i32* %117 with i32 0;
    i32* %118 = getelementptr &(i32* %94)[i64 24];
    store i32* %118 with i32 0;
    i32* %119 = getelementptr &(i32* %94)[i64 25];
    store i32* %119 with i32 0;
    i32* %120 = getelementptr &(i32* %94)[i64 26];
    store i32* %120 with i32 0;
    i32* %121 = getelementptr &(i32* %94)[i64 27];
    store i32* %121 with i32 0;
    i32* %122 = getelementptr &(i32* %94)[i64 28];
    store i32* %122 with i32 0;
    i32* %123 = getelementptr &(i32* %94)[i64 29];
    store i32* %123 with i32 0;
    i32* %124 = getelementptr &(i32* %94)[i64 30];
    store i32* %124 with i32 0;
    i32* %125 = getelementptr &(i32* %94)[i64 31];
    store i32* %125 with i32 0;
    i32* %126 = getelementptr &(i32* %94)[i64 32];
    store i32* %126 with i32 0;
    i32* %127 = getelementptr &(i32* %94)[i64 33];
    store i32* %127 with i32 0;
    i32* %128 = getelementptr &(i32* %94)[i64 34];
    store i32* %128 with i32 0;
    i32* %129 = getelementptr &(i32* %94)[i64 35];
    store i32* %129 with i32 0;
    i32* %130 = getelementptr &(i32* %94)[i64 36];
    store i32* %130 with i32 0;
    i32* %131 = getelementptr &(i32* %94)[i64 37];
    store i32* %131 with i32 0;
    i32* %132 = getelementptr &(i32* %94)[i64 38];
    store i32* %132 with i32 0;
    i32* %133 = getelementptr &(i32* %94)[i64 39];
    store i32* %133 with i32 0;
    i32* %134 = getelementptr &(i32* %94)[i64 40];
    store i32* %134 with i32 0;
    i32* %135 = getelementptr &(i32* %94)[i64 41];
    store i32* %135 with i32 0;
    i32* %136 = getelementptr &(i32* %94)[i64 42];
    store i32* %136 with i32 0;
    i32* %137 = getelementptr &(i32* %94)[i64 43];
    store i32* %137 with i32 0;
    i32* %138 = getelementptr &(i32* %94)[i64 44];
    store i32* %138 with i32 0;
    i32* %139 = getelementptr &(i32* %94)[i64 45];
    store i32* %139 with i32 0;
    i32* %140 = getelementptr &(i32* %94)[i64 46];
    store i32* %140 with i32 0;
    i32* %141 = getelementptr &(i32* %94)[i64 47];
    store i32* %141 with i32 0;
    i32* %142 = getelementptr &(i32* %94)[i64 48];
    store i32* %142 with i32 0;
    i32* %143 = getelementptr &(i32* %94)[i64 49];
    store i32* %143 with i32 0;
    i32* %144 = getelementptr &(i32* %94)[i64 50];
    store i32* %144 with i32 0;
    i32* %145 = getelementptr &(i32* %94)[i64 51];
    store i32* %145 with i32 0;
    i32* %146 = getelementptr &(i32* %94)[i64 52];
    store i32* %146 with i32 0;
    i32* %147 = getelementptr &(i32* %94)[i64 53];
    store i32* %147 with i32 0;
    i32* %148 = getelementptr &(i32* %94)[i64 54];
    store i32* %148 with i32 0;
    i32* %149 = getelementptr &(i32* %94)[i64 55];
    store i32* %149 with i32 0;
    i32* %150 = getelementptr &(i32* %94)[i64 56];
    store i32* %150 with i32 0;
    i32* %151 = getelementptr &(i32* %94)[i64 57];
    store i32* %151 with i32 0;
    i32* %152 = getelementptr &(i32* %94)[i64 58];
    store i32* %152 with i32 0;
    i32* %153 = getelementptr &(i32* %94)[i64 59];
    store i32* %153 with i32 0;
    i64 %154 = add i64 %27, i64 124;
    ubr ^b3;
  ^b3:
    i64 %155 = phi [^b2, i64 %154] [^b3, i64 %157];
    i32* %156 = getelementptr &(i32* %3)[i64 %155];
    store i32* %156 with i32 0;
    i64 %157 = add i64 %155, i64 1;
    i1 %158 = icmp slt i64 %157, i64 256;
    cbr i1 %158(prob = 0.75), ^b3, ^b4;
  ^b4:
    i64 %159 = phi [^b3, i64 0] [^b4, i64 %224];
    i32* %160 = getelementptr &(i32* %5)[i64 %159];
    store i32* %160 with i32 0;
    i32* %161 = getelementptr &(i32* %160)[i64 1];
    store i32* %161 with i32 0;
    i32* %162 = getelementptr &(i32* %160)[i64 2];
    store i32* %162 with i32 0;
    i32* %163 = getelementptr &(i32* %160)[i64 3];
    store i32* %163 with i32 0;
    i32* %164 = getelementptr &(i32* %160)[i64 4];
    store i32* %164 with i32 0;
    i32* %165 = getelementptr &(i32* %160)[i64 5];
    store i32* %165 with i32 0;
    i32* %166 = getelementptr &(i32* %160)[i64 6];
    store i32* %166 with i32 0;
    i32* %167 = getelementptr &(i32* %160)[i64 7];
    store i32* %167 with i32 0;
    i32* %168 = getelementptr &(i32* %160)[i64 8];
    store i32* %168 with i32 0;
    i32* %169 = getelementptr &(i32* %160)[i64 9];
    store i32* %169 with i32 0;
    i32* %170 = getelementptr &(i32* %160)[i64 10];
    store i32* %170 with i32 0;
    i32* %171 = getelementptr &(i32* %160)[i64 11];
    store i32* %171 with i32 0;
    i32* %172 = getelementptr &(i32* %160)[i64 12];
    store i32* %172 with i32 0;
    i32* %173 = getelementptr &(i32* %160)[i64 13];
    store i32* %173 with i32 0;
    i32* %174 = getelementptr &(i32* %160)[i64 14];
    store i32* %174 with i32 0;
    i32* %175 = getelementptr &(i32* %160)[i64 15];
    store i32* %175 with i32 0;
    i32* %176 = getelementptr &(i32* %160)[i64 16];
    store i32* %176 with i32 0;
    i32* %177 = getelementptr &(i32* %160)[i64 17];
    store i32* %177 with i32 0;
    i32* %178 = getelementptr &(i32* %160)[i64 18];
    store i32* %178 with i32 0;
    i32* %179 = getelementptr &(i32* %160)[i64 19];
    store i32* %179 with i32 0;
    i32* %180 = getelementptr &(i32* %160)[i64 20];
    store i32* %180 with i32 0;
    i32* %181 = getelementptr &(i32* %160)[i64 21];
    store i32* %181 with i32 0;
    i32* %182 = getelementptr &(i32* %160)[i64 22];
    store i32* %182 with i32 0;
    i32* %183 = getelementptr &(i32* %160)[i64 23];
    store i32* %183 with i32 0;
    i32* %184 = getelementptr &(i32* %160)[i64 24];
    store i32* %184 with i32 0;
    i32* %185 = getelementptr &(i32* %160)[i64 25];
    store i32* %185 with i32 0;
    i32* %186 = getelementptr &(i32* %160)[i64 26];
    store i32* %186 with i32 0;
    i32* %187 = getelementptr &(i32* %160)[i64 27];
    store i32* %187 with i32 0;
    i32* %188 = getelementptr &(i32* %160)[i64 28];
    store i32* %188 with i32 0;
    i32* %189 = getelementptr &(i32* %160)[i64 29];
    store i32* %189 with i32 0;
    i32* %190 = getelementptr &(i32* %160)[i64 30];
    store i32* %190 with i32 0;
    i32* %191 = getelementptr &(i32* %160)[i64 31];
    store i32* %191 with i32 0;
    i32* %192 = getelementptr &(i32* %160)[i64 32];
    store i32* %192 with i32 0;
    i32* %193 = getelementptr &(i32* %160)[i64 33];
    store i32* %193 with i32 0;
    i32* %194 = getelementptr &(i32* %160)[i64 34];
    store i32* %194 with i32 0;
    i32* %195 = getelementptr &(i32* %160)[i64 35];
    store i32* %195 with i32 0;
    i32* %196 = getelementptr &(i32* %160)[i64 36];
    store i32* %196 with i32 0;
    i32* %197 = getelementptr &(i32* %160)[i64 37];
    store i32* %197 with i32 0;
    i32* %198 = getelementptr &(i32* %160)[i64 38];
    store i32* %198 with i32 0;
    i32* %199 = getelementptr &(i32* %160)[i64 39];
    store i32* %199 with i32 0;
    i32* %200 = getelementptr &(i32* %160)[i64 40];
    store i32* %200 with i32 0;
    i32* %201 = getelementptr &(i32* %160)[i64 41];
    store i32* %201 with i32 0;
    i32* %202 = getelementptr &(i32* %160)[i64 42];
    store i32* %202 with i32 0;
    i32* %203 = getelementptr &(i32* %160)[i64 43];
    store i32* %203 with i32 0;
    i32* %204 = getelementptr &(i32* %160)[i64 44];
    store i32* %204 with i32 0;
    i32* %205 = getelementptr &(i32* %160)[i64 45];
    store i32* %205 with i32 0;
    i32* %206 = getelementptr &(i32* %160)[i64 46];
    store i32* %206 with i32 0;
    i32* %207 = getelementptr &(i32* %160)[i64 47];
    store i32* %207 with i32 0;
    i32* %208 = getelementptr &(i32* %160)[i64 48];
    store i32* %208 with i32 0;
    i32* %209 = getelementptr &(i32* %160)[i64 49];
    store i32* %209 with i32 0;
    i32* %210 = getelementptr &(i32* %160)[i64 50];
    store i32* %210 with i32 0;
    i32* %211 = getelementptr &(i32* %160)[i64 51];
    store i32* %211 with i32 0;
    i32* %212 = getelementptr &(i32* %160)[i64 52];
    store i32* %212 with i32 0;
    i32* %213 = getelementptr &(i32* %160)[i64 53];
    store i32* %213 with i32 0;
    i32* %214 = getelementptr &(i32* %160)[i64 54];
    store i32* %214 with i32 0;
    i32* %215 = getelementptr &(i32* %160)[i64 55];
    store i32* %215 with i32 0;
    i32* %216 = getelementptr &(i32* %160)[i64 56];
    store i32* %216 with i32 0;
    i32* %217 = getelementptr &(i32* %160)[i64 57];
    store i32* %217 with i32 0;
    i32* %218 = getelementptr &(i32* %160)[i64 58];
    store i32* %218 with i32 0;
    i32* %219 = getelementptr &(i32* %160)[i64 59];
    store i32* %219 with i32 0;
    i32* %220 = getelementptr &(i32* %160)[i64 60];
    store i32* %220 with i32 0;
    i32* %221 = getelementptr &(i32* %160)[i64 61];
    store i32* %221 with i32 0;
    i32* %222 = getelementptr &(i32* %160)[i64 62];
    store i32* %222 with i32 0;
    i32* %223 = getelementptr &(i32* %160)[i64 63];
    store i32* %223 with i32 0;
    i64 %224 = add i64 %159, i64 64;
    i1 %225 = icmp slt i64 %224, i64 192;
    cbr i1 %225(prob = 0.67), ^b4, ^b5;
  ^b5:
    i32* %226 = getelementptr &(i32* %5)[i64 %224];
    store i32* %226 with i32 0;
    i32* %227 = getelementptr &(i32* %226)[i64 1];
    store i32* %227 with i32 0;
    i32* %228 = getelementptr &(i32* %226)[i64 2];
    store i32* %228 with i32 0;
    i32* %229 = getelementptr &(i32* %226)[i64 3];
    store i32* %229 with i32 0;
    i32* %230 = getelementptr &(i32* %226)[i64 4];
    store i32* %230 with i32 0;
    i32* %231 = getelementptr &(i32* %226)[i64 5];
    store i32* %231 with i32 0;
    i32* %232 = getelementptr &(i32* %226)[i64 6];
    store i32* %232 with i32 0;
    i32* %233 = getelementptr &(i32* %226)[i64 7];
    store i32* %233 with i32 0;
    i32* %234 = getelementptr &(i32* %226)[i64 8];
    store i32* %234 with i32 0;
    i32* %235 = getelementptr &(i32* %226)[i64 9];
    store i32* %235 with i32 0;
    i32* %236 = getelementptr &(i32* %226)[i64 10];
    store i32* %236 with i32 0;
    i32* %237 = getelementptr &(i32* %226)[i64 11];
    store i32* %237 with i32 0;
    i32* %238 = getelementptr &(i32* %226)[i64 12];
    store i32* %238 with i32 0;
    i32* %239 = getelementptr &(i32* %226)[i64 13];
    store i32* %239 with i32 0;
    i32* %240 = getelementptr &(i32* %226)[i64 14];
    store i32* %240 with i32 0;
    i32* %241 = getelementptr &(i32* %226)[i64 15];
    store i32* %241 with i32 0;
    i32* %242 = getelementptr &(i32* %226)[i64 16];
    store i32* %242 with i32 0;
    i32* %243 = getelementptr &(i32* %226)[i64 17];
    store i32* %243 with i32 0;
    i32* %244 = getelementptr &(i32* %226)[i64 18];
    store i32* %244 with i32 0;
    i32* %245 = getelementptr &(i32* %226)[i64 19];
    store i32* %245 with i32 0;
    i32* %246 = getelementptr &(i32* %226)[i64 20];
    store i32* %246 with i32 0;
    i32* %247 = getelementptr &(i32* %226)[i64 21];
    store i32* %247 with i32 0;
    i32* %248 = getelementptr &(i32* %226)[i64 22];
    store i32* %248 with i32 0;
    i32* %249 = getelementptr &(i32* %226)[i64 23];
    store i32* %249 with i32 0;
    i32* %250 = getelementptr &(i32* %226)[i64 24];
    store i32* %250 with i32 0;
    i32* %251 = getelementptr &(i32* %226)[i64 25];
    store i32* %251 with i32 0;
    i32* %252 = getelementptr &(i32* %226)[i64 26];
    store i32* %252 with i32 0;
    i32* %253 = getelementptr &(i32* %226)[i64 27];
    store i32* %253 with i32 0;
    i32* %254 = getelementptr &(i32* %226)[i64 28];
    store i32* %254 with i32 0;
    i32* %255 = getelementptr &(i32* %226)[i64 29];
    store i32* %255 with i32 0;
    i32* %256 = getelementptr &(i32* %226)[i64 30];
    store i32* %256 with i32 0;
    i32* %257 = getelementptr &(i32* %226)[i64 31];
    store i32* %257 with i32 0;
    i32* %258 = getelementptr &(i32* %226)[i64 32];
    store i32* %258 with i32 0;
    i32* %259 = getelementptr &(i32* %226)[i64 33];
    store i32* %259 with i32 0;
    i32* %260 = getelementptr &(i32* %226)[i64 34];
    store i32* %260 with i32 0;
    i32* %261 = getelementptr &(i32* %226)[i64 35];
    store i32* %261 with i32 0;
    i32* %262 = getelementptr &(i32* %226)[i64 36];
    store i32* %262 with i32 0;
    i32* %263 = getelementptr &(i32* %226)[i64 37];
    store i32* %263 with i32 0;
    i32* %264 = getelementptr &(i32* %226)[i64 38];
    store i32* %264 with i32 0;
    i32* %265 = getelementptr &(i32* %226)[i64 39];
    store i32* %265 with i32 0;
    i32* %266 = getelementptr &(i32* %226)[i64 40];
    store i32* %266 with i32 0;
    i32* %267 = getelementptr &(i32* %226)[i64 41];
    store i32* %267 with i32 0;
    i32* %268 = getelementptr &(i32* %226)[i64 42];
    store i32* %268 with i32 0;
    i32* %269 = getelementptr &(i32* %226)[i64 43];
    store i32* %269 with i32 0;
    i32* %270 = getelementptr &(i32* %226)[i64 44];
    store i32* %270 with i32 0;
    i32* %271 = getelementptr &(i32* %226)[i64 45];
    store i32* %271 with i32 0;
    i32* %272 = getelementptr &(i32* %226)[i64 46];
    store i32* %272 with i32 0;
    i32* %273 = getelementptr &(i32* %226)[i64 47];
    store i32* %273 with i32 0;
    i32* %274 = getelementptr &(i32* %226)[i64 48];
    store i32* %274 with i32 0;
    i32* %275 = getelementptr &(i32* %226)[i64 49];
    store i32* %275 with i32 0;
    i32* %276 = getelementptr &(i32* %226)[i64 50];
    store i32* %276 with i32 0;
    i32* %277 = getelementptr &(i32* %226)[i64 51];
    store i32* %277 with i32 0;
    i32* %278 = getelementptr &(i32* %226)[i64 52];
    store i32* %278 with i32 0;
    i32* %279 = getelementptr &(i32* %226)[i64 53];
    store i32* %279 with i32 0;
    i32* %280 = getelementptr &(i32* %226)[i64 54];
    store i32* %280 with i32 0;
    i32* %281 = getelementptr &(i32* %226)[i64 55];
    store i32* %281 with i32 0;
    i32* %282 = getelementptr &(i32* %226)[i64 56];
    store i32* %282 with i32 0;
    i32* %283 = getelementptr &(i32* %226)[i64 57];
    store i32* %283 with i32 0;
    i32* %284 = getelementptr &(i32* %226)[i64 58];
    store i32* %284 with i32 0;
    i32* %285 = getelementptr &(i32* %226)[i64 59];
    store i32* %285 with i32 0;
    i64 %286 = add i64 %159, i64 124;
    ubr ^b6;
  ^b6:
    i64 %287 = phi [^b5, i64 %286] [^b6, i64 %289];
    i32* %288 = getelementptr &(i32* %5)[i64 %287];
    store i32* %288 with i32 0;
    i64 %289 = add i64 %287, i64 1;
    i1 %290 = icmp slt i64 %289, i64 256;
    cbr i1 %290(prob = 0.75), ^b6, ^entry5;
  ^entry5:
    i1 %291 = icmp neq i32 %25, i32 0;
    cbr i1 %291(prob = 0.5), ^entry6, ^b7;
  ^entry6:
    i32 %292 = phi [^entry5, i32 %23] [^entry23, i32 %389];
    i32 %293 = phi [^entry5, i32 %24] [^entry23, i32 %390];
    i32 %294 = phi [^entry5, i32 %25] [^entry23, i32 %391];
    call (i32) -> void @putch(i32 112);
    call (i32) -> void @putch(i32 97);
    call (i32) -> void @putch(i32 110);
    call (i32) -> void @putch(i32 105);
    call (i32) -> void @putch(i32 99);
    call (i32) -> void @putch(i32 33);
    call (i32) -> void @putch(i32 10);
    ubr ^b8;
  ^b7:
    i32 %295 = phi [^entry5, i32 %23] [^entry23, i32 %389];
    i32 %296 = phi [^entry5, i32 %24] [^entry23, i32 %390];
    i32 %297 = load i32* %3;
    i32 %298 = add i32 %297, i32 1;
    store i32* %3 with i32 %298;
    i32* %299 = getelementptr &(i32* %3)[i32 %298];
    store i32* %299 with i32 %296;
    i1 %300 = icmp eq i32 %295, i32 32;
    i1 %301 = icmp eq i32 %295, i32 10;
    i1 %302 = or i1 %300, i1 %301;
    cbr i1 %302(prob = 0.97), ^entry7, ^entry8;
  ^b8:
    i32 %303 = phi [^entry6, i32 %292] [^entry19, i32 %364];
    i32 %304 = phi [^entry6, i32 %293] [^entry19, i32 %365];
    i32 %305 = phi [^entry6, i32 %294] [^entry19, i32 %366];
    i32 %306 = phi [^entry6, i32 -1] [^entry19, i32 %377];
    call (i32) -> void @putint(i32 %306);
    call (i32) -> void @putch(i32 10);
    i32 %307 = add i32 %26, i32 -1;
    i1 %308 = icmp neq i32 %307, i32 0;
    cbr i1 %308(prob = 0.97), ^while.body1, ^b;
  ^entry7:
    i32 %309 = call () -> i32 @getch();
    i1 %310 = icmp eq i32 %309, i32 32;
    i1 %311 = icmp eq i32 %309, i32 10;
    i1 %312 = or i1 %310, i1 %311;
    cbr i1 %312(prob = 0.97), ^entry7, ^entry8;
  ^entry8:
    i32 %313 = phi [^b7, i32 %295] [^entry7, i32 %309];
    i32 %314 = add i32 %313, i32 -48;
    i1 %315 = icmp ult i32 %314, i32 10;
    cbr i1 %315(prob = 0.5), ^entry9, ^if.else1;
  ^entry9:
    i32 %316 = phi [^entry8, i32 %314] [^while.body2, i32 %325];
    i32 %317 = call () -> i32 @getch();
    i32 %318 = add i32 %317, i32 -48;
    i1 %319 = icmp ult i32 %318, i32 10;
    cbr i1 %319(prob = 0.97), ^while.body2, ^entry10;
  ^if.else1:
    i32 %320 = call () -> i32 @getch();
    i1 %321 = icmp eq i32 %313, i32 43;
    i1 %322 = icmp eq i32 %313, i32 45;
    i1 %323 = or i1 %321, i1 %322;
    cbr i1 %323(prob = 0.5), ^b10, ^b9;
  ^while.body2:
    i32 %324 = mul i32 %316, i32 10;
    i32 %325 = add i32 %318, i32 %324;
    ubr ^entry9;
  ^b9:
    i1 %326 = icmp eq i32 %313, i32 42;
    i1 %327 = icmp eq i32 %313, i32 47;
    i1 %328 = or i1 %326, i1 %327;
    i1 %329 = icmp eq i32 %313, i32 37;
    i1 %330 = or i1 %328, i1 %329;
    i32 %331 = select i1 %330 ? i32 20 : i32 0;
    ubr ^b10;
  ^b10:
    i32 %332 = phi [^if.else1, i32 10] [^b9, i32 %331];
    i1 %333 = icmp eq i32 %332, i32 0;
    cbr i1 %333(prob = 0.5), ^entry10, ^entry12;
  ^entry10:
    i32 %334 = phi [^entry9, i32 %316] [^b10, i32 %296];
    i32 %335 = phi [^entry9, i32 %317] [^b10, i32 %320];
    i1 %336 = icmp eq i32 %335, i32 32;
    i1 %337 = icmp eq i32 %335, i32 10;
    i1 %338 = or i1 %336, i1 %337;
    cbr i1 %338(prob = 0.97), ^entry11, ^entry13;
  ^entry11:
    i32 %339 = call () -> i32 @getch();
    i1 %340 = icmp eq i32 %339, i32 32;
    i1 %341 = icmp eq i32 %339, i32 10;
    i1 %342 = or i1 %340, i1 %341;
    cbr i1 %342(prob = 0.97), ^entry11, ^entry13;
  ^entry12:
    i1 %343 = icmp eq i32 %320, i32 32;
    i1 %344 = icmp eq i32 %320, i32 10;
    i1 %345 = or i1 %343, i1 %344;
    cbr i1 %345(prob = 0.97), ^entry14, ^entry16;
  ^entry13:
    i32 %346 = phi [^entry10, i32 %335] [^entry11, i32 %339];
    i32 %347 = add i32 %346, i32 -48;
    i1 %348 = icmp ult i32 %347, i32 10;
    cbr i1 %348(prob = 0.5), ^entry15, ^if.else2;
  ^if.else2:
    i32 %349 = call () -> i32 @getch();
    ubr ^entry17;
  ^entry14:
    i32 %350 = call () -> i32 @getch();
    i1 %351 = icmp eq i32 %350, i32 32;
    i1 %352 = icmp eq i32 %350, i32 10;
    i1 %353 = or i1 %351, i1 %352;
    cbr i1 %353(prob = 0.97), ^entry14, ^entry16;
  ^entry15:
    i32 %354 = phi [^entry13, i32 %347] [^while.body3, i32 %362];
    i32 %355 = call () -> i32 @getch();
    i32 %356 = add i32 %355, i32 -48;
    i1 %357 = icmp ult i32 %356, i32 10;
    cbr i1 %357(prob = 0.97), ^while.body3, ^entry17;
  ^entry16:
    i32 %358 = phi [^entry12, i32 %320] [^entry14, i32 %350];
    i32 %359 = add i32 %358, i32 -48;
    i1 %360 = icmp ult i32 %359, i32 10;
    cbr i1 %360(prob = 0.5), ^entry18, ^if.else3;
  ^while.body3:
    i32 %361 = mul i32 %354, i32 10;
    i32 %362 = add i32 %356, i32 %361;
    ubr ^entry15;
  ^if.else3:
    i32 %363 = call () -> i32 @getch();
    ubr ^entry21;
  ^entry17:
    i32 %364 = phi [^if.else2, i32 %349] [^entry15, i32 %355] [^b12, i32 %364];
    i32 %365 = phi [^if.else2, i32 %334] [^entry15, i32 %354] [^b12, i32 %365];
    i32 %366 = phi [^if.else2, i32 1] [^entry15, i32 0] [^b12, i32 %366];
    i32 %367 = load i32* %5;
    i1 %368 = icmp neq i32 %367, i32 0;
    cbr i1 %368(prob = 0.97), ^entry20, ^entry19;
  ^entry18:
    i32 %369 = phi [^entry16, i32 %359] [^while.body4, i32 %374];
    i32 %370 = call () -> i32 @getch();
    i32 %371 = add i32 %370, i32 -48;
    i1 %372 = icmp ult i32 %371, i32 10;
    cbr i1 %372(prob = 0.97), ^while.body4, ^entry21;
  ^while.body4:
    i32 %373 = mul i32 %369, i32 10;
    i32 %374 = add i32 %371, i32 %373;
    ubr ^entry18;
  ^entry19:
    i32 %375 = load i32* %3;
    i32* %376 = getelementptr &(i32* %3)[i32 %375];
    i32 %377 = load i32* %376;
    ubr ^b8;
  ^entry20:
    i32* %378 = getelementptr &(i32* %5)[i32 %367];
    i32 %379 = load i32* %378;
    i32 %380 = add i32 %367, i32 -1;
    store i32* %5 with i32 %380;
    i32 %381 = load i32* %3;
    i32* %382 = getelementptr &(i32* %3)[i32 %381];
    i32 %383 = load i32* %382;
    i32 %384 = add i32 %381, i32 -1;
    store i32* %3 with i32 %384;
    i32* %385 = getelementptr &(i32* %382)[i64 -1];
    i32 %386 = load i32* %385;
    i32 %387 = add i32 %381, i32 -2;
    store i32* %3 with i32 %387;
    i1 %388 = icmp eq i32 %379, i32 43;
    cbr i1 %388(prob = 0.5), ^if.then, ^b11;
  ^entry21:
    i32 %389 = phi [^if.else3, i32 %363] [^entry18, i32 %370] [^b19, i32 %389];
    i32 %390 = phi [^if.else3, i32 %296] [^entry18, i32 %369] [^b19, i32 %390];
    i32 %391 = phi [^if.else3, i32 1] [^entry18, i32 0] [^b19, i32 %391];
    i32 %392 = load i32* %5;
    i1 %393 = icmp neq i32 %392, i32 0;
    cbr i1 %393(prob = 0.5), ^entry22, ^entry23;
  ^if.then:
    i32 %394 = add i32 %383, i32 %386;
    ubr ^b12;
  ^entry22:
    i32* %395 = getelementptr &(i32* %5)[i32 %392];
    i32 %396 = load i32* %395;
    i1 %397 = icmp eq i32 %396, i32 43;
    i1 %398 = icmp eq i32 %396, i32 45;
    i1 %399 = or i1 %397, i1 %398;
    cbr i1 %399(prob = 0.5), ^b13, ^b14;
  ^b11:
    i1 %400 = icmp eq i32 %379, i32 45;
    cbr i1 %400(prob = 0.5), ^if.then1, ^b15;
  ^entry23:
    i32 %401 = add i32 %392, i32 1;
    store i32* %5 with i32 %401;
    i32* %402 = getelementptr &(i32* %5)[i32 %401];
    store i32* %402 with i32 %313;
    i1 %403 = icmp eq i32 %391, i32 0;
    cbr i1 %403(prob = 0.5), ^b7, ^entry6;
  ^b12:
    i32 %404 = phi [^if.then, i32 %394] [^if.then1, i32 %408] [^if.then2, i32 %418] [^if.then4, i32 %429] [^b18, i32 0] [^if.then6, i32 %436];
    i32 %405 = load i32* %3;
    i32 %406 = add i32 %405, i32 1;
    store i32* %3 with i32 %406;
    i32* %407 = getelementptr &(i32* %3)[i32 %406];
    store i32* %407 with i32 %404;
    ubr ^entry17;
  ^if.then1:
    i32 %408 = sub i32 %386, i32 %383;
    ubr ^b12;
  ^b13:
    i1 %409 = icmp slt i32 %332, i32 11;
    cbr i1 %409(prob = 0.97), ^entry24, ^entry23;
  ^b14:
    i1 %410 = icmp eq i32 %396, i32 42;
    i1 %411 = icmp eq i32 %396, i32 47;
    i1 %412 = or i1 %410, i1 %411;
    i1 %413 = icmp eq i32 %396, i32 37;
    i1 %414 = or i1 %412, i1 %413;
    i1 %415 = icmp sle i32 %332, i32 0;
    i1 %416 = or i1 %414, i1 %415;
    cbr i1 %416(prob = 0.97), ^entry24, ^entry23;
  ^b15:
    i1 %417 = icmp eq i32 %379, i32 42;
    cbr i1 %417(prob = 0.5), ^if.then2, ^b16;
  ^if.then2:
    i32 %418 = mul i32 %383, i32 %386;
    ubr ^b12;
  ^entry24:
    i32 %419 = add i32 %392, i32 -1;
    store i32* %5 with i32 %419;
    i32 %420 = load i32* %3;
    i32* %421 = getelementptr &(i32* %3)[i32 %420];
    i32 %422 = load i32* %421;
    i32 %423 = add i32 %420, i32 -1;
    store i32* %3 with i32 %423;
    i32* %424 = getelementptr &(i32* %421)[i64 -1];
    i32 %425 = load i32* %424;
    i32 %426 = add i32 %420, i32 -2;
    store i32* %3 with i32 %426;
    cbr i1 %397(prob = 0.5), ^if.then3, ^b17;
  ^b16:
    i1 %427 = icmp eq i32 %379, i32 47;
    cbr i1 %427(prob = 0.5), ^if.then4, ^b18;
  ^if.then3:
    i32 %428 = add i32 %422, i32 %425;
    ubr ^b19;
  ^if.then4:
    i32 %429 = sdiv i32 %386, i32 %383;
    ubr ^b12;
  ^b17:
    cbr i1 %398(prob = 0.5), ^if.then5, ^b20;
  ^b18:
    i1 %430 = icmp eq i32 %379, i32 37;
    cbr i1 %430(prob = 0.5), ^if.then6, ^b12;
  ^b19:
    i32 %431 = phi [^if.then3, i32 %428] [^if.then5, i32 %435] [^if.then7, i32 %438] [^if.then8, i32 %440] [^b22, i32 0] [^if.then9, i32 %442];
    i32 %432 = load i32* %3;
    i32 %433 = add i32 %432, i32 1;
    store i32* %3 with i32 %433;
    i32* %434 = getelementptr &(i32* %3)[i32 %433];
    store i32* %434 with i32 %431;
    ubr ^entry21;
  ^if.then5:
    i32 %435 = sub i32 %425, i32 %422;
    ubr ^b19;
  ^if.then6:
    i32 %436 = srem i32 %386, i32 %383;
    ubr ^b12;
  ^b20:
    i1 %437 = icmp eq i32 %396, i32 42;
    cbr i1 %437(prob = 0.5), ^if.then7, ^b21;
  ^if.then7:
    i32 %438 = mul i32 %422, i32 %425;
    ubr ^b19;
  ^b21:
    i1 %439 = icmp eq i32 %396, i32 47;
    cbr i1 %439(prob = 0.5), ^if.then8, ^b22;
  ^if.then8:
    i32 %440 = sdiv i32 %425, i32 %422;
    ubr ^b19;
  ^b22:
    i1 %441 = icmp eq i32 %396, i32 37;
    cbr i1 %441(prob = 0.5), ^if.then9, ^b19;
  ^if.then9:
    i32 %442 = srem i32 %425, i32 %422;
    ubr ^b19;
}
internal [256 * i32]* @oprs { Flexible };
internal [256 * i32]* @ops { Flexible };
