internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal func @sort(i32* %arr, i32 %len) -> void {
^entry:
    i32* %temp = alloc i32;
    i32* %j = alloc i32;
    i32* %i = alloc i32;
    i32* %len1 = alloc i32;
    i32** %arr1 = alloc i32*;
    store i32** %arr1 with i32* %arr;
    store i32* %len1 with i32 %len;
    store i32* %i with i32 0;
    ubr ^while.header;
^while.header:
    i32 %0 = load i32* %i;
    i32 %1 = load i32* %len1;
    i32 %2 = sub i32 %1, i32 1;
    i1 %3 = scmp lt i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5(prob = 0.97), ^while.body, ^b;
^while.body:
    i32 %6 = load i32* %i;
    i32 %7 = add i32 %6, i32 1;
    store i32* %j with i32 %7;
    ubr ^while.header1;
^b:
    ret;
^while.header1:
    i32 %8 = load i32* %j;
    i32 %9 = load i32* %len1;
    i1 %10 = scmp lt i32 %8, i32 %9;
    i32 %11 = zext i1 %10 to i32;
    i1 %12 = scmp neq i32 %11, i32 0;
    cbr i1 %12(prob = 0.97), ^while.body1, ^b1;
^b1:
    i32 %13 = load i32* %i;
    i32 %14 = add i32 %13, i32 1;
    store i32* %i with i32 %14;
    ubr ^while.header;
^while.body1:
    i32 %15 = load i32* %i;
    i64 %16 = sext i32 %15 to i64;
    i32* %17 = load i32** %arr1;
    i32* %18 = getelementptr &(i32* %17)[i64 %16];
    i32 %19 = load i32* %18;
    i32 %20 = load i32* %j;
    i64 %21 = sext i32 %20 to i64;
    i32* %22 = load i32** %arr1;
    i32* %23 = getelementptr &(i32* %22)[i64 %21];
    i32 %24 = load i32* %23;
    i1 %25 = scmp lt i32 %19, i32 %24;
    i32 %26 = zext i1 %25 to i32;
    i1 %27 = scmp neq i32 %26, i32 0;
    cbr i1 %27(prob = 0.5), ^if.then, ^b2;
^if.then:
    i32 %28 = load i32* %i;
    i64 %29 = sext i32 %28 to i64;
    i32* %30 = load i32** %arr1;
    i32* %31 = getelementptr &(i32* %30)[i64 %29];
    i32 %32 = load i32* %31;
    store i32* %temp with i32 %32;
    i32 %33 = load i32* %i;
    i64 %34 = sext i32 %33 to i64;
    i32* %35 = load i32** %arr1;
    i32* %36 = getelementptr &(i32* %35)[i64 %34];
    i32 %37 = load i32* %j;
    i64 %38 = sext i32 %37 to i64;
    i32* %39 = load i32** %arr1;
    i32* %40 = getelementptr &(i32* %39)[i64 %38];
    i32 %41 = load i32* %40;
    store i32* %36 with i32 %41;
    i32 %42 = load i32* %j;
    i64 %43 = sext i32 %42 to i64;
    i32* %44 = load i32** %arr1;
    i32* %45 = getelementptr &(i32* %44)[i64 %43];
    i32 %46 = load i32* %temp;
    store i32* %45 with i32 %46;
    ubr ^b2;
^b2:
    i32 %47 = load i32* %j;
    i32 %48 = add i32 %47, i32 1;
    store i32* %j with i32 %48;
    ubr ^while.header1;
}
internal func @param32_rec(i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7, i32 %a8, i32 %a9, i32 %a10, i32 %a11, i32 %a12, i32 %a13, i32 %a14, i32 %a15, i32 %a16, i32 %a17, i32 %a18, i32 %a19, i32 %a20, i32 %a21, i32 %a22, i32 %a23, i32 %a24, i32 %a25, i32 %a26, i32 %a27, i32 %a28, i32 %a29, i32 %a30, i32 %a31, i32 %a32) -> i32 {
^entry:
    i32* %a321 = alloc i32;
    i32* %a311 = alloc i32;
    i32* %a301 = alloc i32;
    i32* %a291 = alloc i32;
    i32* %a281 = alloc i32;
    i32* %a271 = alloc i32;
    i32* %a261 = alloc i32;
    i32* %a251 = alloc i32;
    i32* %a241 = alloc i32;
    i32* %a231 = alloc i32;
    i32* %a221 = alloc i32;
    i32* %a211 = alloc i32;
    i32* %a201 = alloc i32;
    i32* %a191 = alloc i32;
    i32* %a181 = alloc i32;
    i32* %a171 = alloc i32;
    i32* %a161 = alloc i32;
    i32* %a151 = alloc i32;
    i32* %a141 = alloc i32;
    i32* %a131 = alloc i32;
    i32* %a121 = alloc i32;
    i32* %a111 = alloc i32;
    i32* %a101 = alloc i32;
    i32* %a91 = alloc i32;
    i32* %a81 = alloc i32;
    i32* %a71 = alloc i32;
    i32* %a61 = alloc i32;
    i32* %a51 = alloc i32;
    i32* %a41 = alloc i32;
    i32* %a31 = alloc i32;
    i32* %a21 = alloc i32;
    i32* %a11 = alloc i32;
    store i32* %a11 with i32 %a1;
    store i32* %a21 with i32 %a2;
    store i32* %a31 with i32 %a3;
    store i32* %a41 with i32 %a4;
    store i32* %a51 with i32 %a5;
    store i32* %a61 with i32 %a6;
    store i32* %a71 with i32 %a7;
    store i32* %a81 with i32 %a8;
    store i32* %a91 with i32 %a9;
    store i32* %a101 with i32 %a10;
    store i32* %a111 with i32 %a11;
    store i32* %a121 with i32 %a12;
    store i32* %a131 with i32 %a13;
    store i32* %a141 with i32 %a14;
    store i32* %a151 with i32 %a15;
    store i32* %a161 with i32 %a16;
    store i32* %a171 with i32 %a17;
    store i32* %a181 with i32 %a18;
    store i32* %a191 with i32 %a19;
    store i32* %a201 with i32 %a20;
    store i32* %a211 with i32 %a21;
    store i32* %a221 with i32 %a22;
    store i32* %a231 with i32 %a23;
    store i32* %a241 with i32 %a24;
    store i32* %a251 with i32 %a25;
    store i32* %a261 with i32 %a26;
    store i32* %a271 with i32 %a27;
    store i32* %a281 with i32 %a28;
    store i32* %a291 with i32 %a29;
    store i32* %a301 with i32 %a30;
    store i32* %a311 with i32 %a31;
    store i32* %a321 with i32 %a32;
    i32 %0 = load i32* %a11;
    i1 %1 = scmp eq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3(prob = 0.5), ^if.then, ^if.else;
^if.then:
    i32 %4 = load i32* %a21;
    ret i32 %4;
^if.else:
    i32 %5 = load i32* %a11;
    i32 %6 = sub i32 %5, i32 1;
    i32 %7 = load i32* %a21;
    i32 %8 = load i32* %a31;
    i32 %9 = add i32 %7, i32 %8;
    i32 %10 = srem i32 %9, i32 998244353;
    i32 %11 = load i32* %a41;
    i32 %12 = load i32* %a51;
    i32 %13 = load i32* %a61;
    i32 %14 = load i32* %a71;
    i32 %15 = load i32* %a81;
    i32 %16 = load i32* %a91;
    i32 %17 = load i32* %a101;
    i32 %18 = load i32* %a111;
    i32 %19 = load i32* %a121;
    i32 %20 = load i32* %a131;
    i32 %21 = load i32* %a141;
    i32 %22 = load i32* %a151;
    i32 %23 = load i32* %a161;
    i32 %24 = load i32* %a171;
    i32 %25 = load i32* %a181;
    i32 %26 = load i32* %a191;
    i32 %27 = load i32* %a201;
    i32 %28 = load i32* %a211;
    i32 %29 = load i32* %a221;
    i32 %30 = load i32* %a231;
    i32 %31 = load i32* %a241;
    i32 %32 = load i32* %a251;
    i32 %33 = load i32* %a261;
    i32 %34 = load i32* %a271;
    i32 %35 = load i32* %a281;
    i32 %36 = load i32* %a291;
    i32 %37 = load i32* %a301;
    i32 %38 = load i32* %a311;
    i32 %39 = load i32* %a321;
    i32 %40 = call (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) -> i32 @param32_rec(i32 %6, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22, i32 %23, i32 %24, i32 %25, i32 %26, i32 %27, i32 %28, i32 %29, i32 %30, i32 %31, i32 %32, i32 %33, i32 %34, i32 %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 0);
    ret i32 %40;
^b:
    unreachable;
}
internal func @param32_arr(i32* %a1, i32* %a2, i32* %a3, i32* %a4, i32* %a5, i32* %a6, i32* %a7, i32* %a8, i32* %a9, i32* %a10, i32* %a11, i32* %a12, i32* %a13, i32* %a14, i32* %a15, i32* %a16, i32* %a17, i32* %a18, i32* %a19, i32* %a20, i32* %a21, i32* %a22, i32* %a23, i32* %a24, i32* %a25, i32* %a26, i32* %a27, i32* %a28, i32* %a29, i32* %a30, i32* %a31, i32* %a32) -> i32 {
^entry:
    i32* %sum = alloc i32;
    i32** %a321 = alloc i32*;
    i32** %a311 = alloc i32*;
    i32** %a301 = alloc i32*;
    i32** %a291 = alloc i32*;
    i32** %a281 = alloc i32*;
    i32** %a271 = alloc i32*;
    i32** %a261 = alloc i32*;
    i32** %a251 = alloc i32*;
    i32** %a241 = alloc i32*;
    i32** %a231 = alloc i32*;
    i32** %a221 = alloc i32*;
    i32** %a211 = alloc i32*;
    i32** %a201 = alloc i32*;
    i32** %a191 = alloc i32*;
    i32** %a181 = alloc i32*;
    i32** %a171 = alloc i32*;
    i32** %a161 = alloc i32*;
    i32** %a151 = alloc i32*;
    i32** %a141 = alloc i32*;
    i32** %a131 = alloc i32*;
    i32** %a121 = alloc i32*;
    i32** %a111 = alloc i32*;
    i32** %a101 = alloc i32*;
    i32** %a91 = alloc i32*;
    i32** %a81 = alloc i32*;
    i32** %a71 = alloc i32*;
    i32** %a61 = alloc i32*;
    i32** %a51 = alloc i32*;
    i32** %a41 = alloc i32*;
    i32** %a31 = alloc i32*;
    i32** %a21 = alloc i32*;
    i32** %a11 = alloc i32*;
    store i32** %a11 with i32* %a1;
    store i32** %a21 with i32* %a2;
    store i32** %a31 with i32* %a3;
    store i32** %a41 with i32* %a4;
    store i32** %a51 with i32* %a5;
    store i32** %a61 with i32* %a6;
    store i32** %a71 with i32* %a7;
    store i32** %a81 with i32* %a8;
    store i32** %a91 with i32* %a9;
    store i32** %a101 with i32* %a10;
    store i32** %a111 with i32* %a11;
    store i32** %a121 with i32* %a12;
    store i32** %a131 with i32* %a13;
    store i32** %a141 with i32* %a14;
    store i32** %a151 with i32* %a15;
    store i32** %a161 with i32* %a16;
    store i32** %a171 with i32* %a17;
    store i32** %a181 with i32* %a18;
    store i32** %a191 with i32* %a19;
    store i32** %a201 with i32* %a20;
    store i32** %a211 with i32* %a21;
    store i32** %a221 with i32* %a22;
    store i32** %a231 with i32* %a23;
    store i32** %a241 with i32* %a24;
    store i32** %a251 with i32* %a25;
    store i32** %a261 with i32* %a26;
    store i32** %a271 with i32* %a27;
    store i32** %a281 with i32* %a28;
    store i32** %a291 with i32* %a29;
    store i32** %a301 with i32* %a30;
    store i32** %a311 with i32* %a31;
    store i32** %a321 with i32* %a32;
    i32* %0 = load i32** %a11;
    i32* %1 = getelementptr &(i32* %0)[i64 0];
    i32 %2 = load i32* %1;
    i32* %3 = load i32** %a11;
    i32* %4 = getelementptr &(i32* %3)[i64 1];
    i32 %5 = load i32* %4;
    i32 %6 = add i32 %2, i32 %5;
    store i32* %sum with i32 %6;
    i32 %7 = load i32* %sum;
    i32* %8 = load i32** %a21;
    i32* %9 = getelementptr &(i32* %8)[i64 0];
    i32 %10 = load i32* %9;
    i32 %11 = add i32 %7, i32 %10;
    i32* %12 = load i32** %a21;
    i32* %13 = getelementptr &(i32* %12)[i64 1];
    i32 %14 = load i32* %13;
    i32 %15 = add i32 %11, i32 %14;
    store i32* %sum with i32 %15;
    i32 %16 = load i32* %sum;
    i32* %17 = load i32** %a31;
    i32* %18 = getelementptr &(i32* %17)[i64 0];
    i32 %19 = load i32* %18;
    i32 %20 = add i32 %16, i32 %19;
    i32* %21 = load i32** %a31;
    i32* %22 = getelementptr &(i32* %21)[i64 1];
    i32 %23 = load i32* %22;
    i32 %24 = add i32 %20, i32 %23;
    store i32* %sum with i32 %24;
    i32 %25 = load i32* %sum;
    i32* %26 = load i32** %a41;
    i32* %27 = getelementptr &(i32* %26)[i64 0];
    i32 %28 = load i32* %27;
    i32 %29 = add i32 %25, i32 %28;
    i32* %30 = load i32** %a41;
    i32* %31 = getelementptr &(i32* %30)[i64 1];
    i32 %32 = load i32* %31;
    i32 %33 = add i32 %29, i32 %32;
    store i32* %sum with i32 %33;
    i32 %34 = load i32* %sum;
    i32* %35 = load i32** %a51;
    i32* %36 = getelementptr &(i32* %35)[i64 0];
    i32 %37 = load i32* %36;
    i32 %38 = add i32 %34, i32 %37;
    i32* %39 = load i32** %a51;
    i32* %40 = getelementptr &(i32* %39)[i64 1];
    i32 %41 = load i32* %40;
    i32 %42 = add i32 %38, i32 %41;
    store i32* %sum with i32 %42;
    i32 %43 = load i32* %sum;
    i32* %44 = load i32** %a61;
    i32* %45 = getelementptr &(i32* %44)[i64 0];
    i32 %46 = load i32* %45;
    i32 %47 = add i32 %43, i32 %46;
    i32* %48 = load i32** %a61;
    i32* %49 = getelementptr &(i32* %48)[i64 1];
    i32 %50 = load i32* %49;
    i32 %51 = add i32 %47, i32 %50;
    store i32* %sum with i32 %51;
    i32 %52 = load i32* %sum;
    i32* %53 = load i32** %a71;
    i32* %54 = getelementptr &(i32* %53)[i64 0];
    i32 %55 = load i32* %54;
    i32 %56 = add i32 %52, i32 %55;
    i32* %57 = load i32** %a71;
    i32* %58 = getelementptr &(i32* %57)[i64 1];
    i32 %59 = load i32* %58;
    i32 %60 = add i32 %56, i32 %59;
    store i32* %sum with i32 %60;
    i32 %61 = load i32* %sum;
    i32* %62 = load i32** %a81;
    i32* %63 = getelementptr &(i32* %62)[i64 0];
    i32 %64 = load i32* %63;
    i32 %65 = add i32 %61, i32 %64;
    i32* %66 = load i32** %a81;
    i32* %67 = getelementptr &(i32* %66)[i64 1];
    i32 %68 = load i32* %67;
    i32 %69 = add i32 %65, i32 %68;
    store i32* %sum with i32 %69;
    i32 %70 = load i32* %sum;
    i32* %71 = load i32** %a91;
    i32* %72 = getelementptr &(i32* %71)[i64 0];
    i32 %73 = load i32* %72;
    i32 %74 = add i32 %70, i32 %73;
    i32* %75 = load i32** %a91;
    i32* %76 = getelementptr &(i32* %75)[i64 1];
    i32 %77 = load i32* %76;
    i32 %78 = add i32 %74, i32 %77;
    store i32* %sum with i32 %78;
    i32 %79 = load i32* %sum;
    i32* %80 = load i32** %a101;
    i32* %81 = getelementptr &(i32* %80)[i64 0];
    i32 %82 = load i32* %81;
    i32 %83 = add i32 %79, i32 %82;
    i32* %84 = load i32** %a101;
    i32* %85 = getelementptr &(i32* %84)[i64 1];
    i32 %86 = load i32* %85;
    i32 %87 = add i32 %83, i32 %86;
    store i32* %sum with i32 %87;
    i32 %88 = load i32* %sum;
    i32* %89 = load i32** %a111;
    i32* %90 = getelementptr &(i32* %89)[i64 0];
    i32 %91 = load i32* %90;
    i32 %92 = add i32 %88, i32 %91;
    i32* %93 = load i32** %a111;
    i32* %94 = getelementptr &(i32* %93)[i64 1];
    i32 %95 = load i32* %94;
    i32 %96 = add i32 %92, i32 %95;
    store i32* %sum with i32 %96;
    i32 %97 = load i32* %sum;
    i32* %98 = load i32** %a121;
    i32* %99 = getelementptr &(i32* %98)[i64 0];
    i32 %100 = load i32* %99;
    i32 %101 = add i32 %97, i32 %100;
    i32* %102 = load i32** %a121;
    i32* %103 = getelementptr &(i32* %102)[i64 1];
    i32 %104 = load i32* %103;
    i32 %105 = add i32 %101, i32 %104;
    store i32* %sum with i32 %105;
    i32 %106 = load i32* %sum;
    i32* %107 = load i32** %a131;
    i32* %108 = getelementptr &(i32* %107)[i64 0];
    i32 %109 = load i32* %108;
    i32 %110 = add i32 %106, i32 %109;
    i32* %111 = load i32** %a131;
    i32* %112 = getelementptr &(i32* %111)[i64 1];
    i32 %113 = load i32* %112;
    i32 %114 = add i32 %110, i32 %113;
    store i32* %sum with i32 %114;
    i32 %115 = load i32* %sum;
    i32* %116 = load i32** %a141;
    i32* %117 = getelementptr &(i32* %116)[i64 0];
    i32 %118 = load i32* %117;
    i32 %119 = add i32 %115, i32 %118;
    i32* %120 = load i32** %a141;
    i32* %121 = getelementptr &(i32* %120)[i64 1];
    i32 %122 = load i32* %121;
    i32 %123 = add i32 %119, i32 %122;
    store i32* %sum with i32 %123;
    i32 %124 = load i32* %sum;
    i32* %125 = load i32** %a151;
    i32* %126 = getelementptr &(i32* %125)[i64 0];
    i32 %127 = load i32* %126;
    i32 %128 = add i32 %124, i32 %127;
    i32* %129 = load i32** %a151;
    i32* %130 = getelementptr &(i32* %129)[i64 1];
    i32 %131 = load i32* %130;
    i32 %132 = add i32 %128, i32 %131;
    store i32* %sum with i32 %132;
    i32 %133 = load i32* %sum;
    i32* %134 = load i32** %a161;
    i32* %135 = getelementptr &(i32* %134)[i64 0];
    i32 %136 = load i32* %135;
    i32 %137 = add i32 %133, i32 %136;
    i32* %138 = load i32** %a161;
    i32* %139 = getelementptr &(i32* %138)[i64 1];
    i32 %140 = load i32* %139;
    i32 %141 = add i32 %137, i32 %140;
    store i32* %sum with i32 %141;
    i32 %142 = load i32* %sum;
    i32* %143 = load i32** %a171;
    i32* %144 = getelementptr &(i32* %143)[i64 0];
    i32 %145 = load i32* %144;
    i32 %146 = add i32 %142, i32 %145;
    i32* %147 = load i32** %a171;
    i32* %148 = getelementptr &(i32* %147)[i64 1];
    i32 %149 = load i32* %148;
    i32 %150 = add i32 %146, i32 %149;
    store i32* %sum with i32 %150;
    i32 %151 = load i32* %sum;
    i32* %152 = load i32** %a181;
    i32* %153 = getelementptr &(i32* %152)[i64 0];
    i32 %154 = load i32* %153;
    i32 %155 = add i32 %151, i32 %154;
    i32* %156 = load i32** %a181;
    i32* %157 = getelementptr &(i32* %156)[i64 1];
    i32 %158 = load i32* %157;
    i32 %159 = add i32 %155, i32 %158;
    store i32* %sum with i32 %159;
    i32 %160 = load i32* %sum;
    i32* %161 = load i32** %a191;
    i32* %162 = getelementptr &(i32* %161)[i64 0];
    i32 %163 = load i32* %162;
    i32 %164 = add i32 %160, i32 %163;
    i32* %165 = load i32** %a191;
    i32* %166 = getelementptr &(i32* %165)[i64 1];
    i32 %167 = load i32* %166;
    i32 %168 = add i32 %164, i32 %167;
    store i32* %sum with i32 %168;
    i32 %169 = load i32* %sum;
    i32* %170 = load i32** %a201;
    i32* %171 = getelementptr &(i32* %170)[i64 0];
    i32 %172 = load i32* %171;
    i32 %173 = add i32 %169, i32 %172;
    i32* %174 = load i32** %a201;
    i32* %175 = getelementptr &(i32* %174)[i64 1];
    i32 %176 = load i32* %175;
    i32 %177 = add i32 %173, i32 %176;
    store i32* %sum with i32 %177;
    i32 %178 = load i32* %sum;
    i32* %179 = load i32** %a211;
    i32* %180 = getelementptr &(i32* %179)[i64 0];
    i32 %181 = load i32* %180;
    i32 %182 = add i32 %178, i32 %181;
    i32* %183 = load i32** %a211;
    i32* %184 = getelementptr &(i32* %183)[i64 1];
    i32 %185 = load i32* %184;
    i32 %186 = add i32 %182, i32 %185;
    store i32* %sum with i32 %186;
    i32 %187 = load i32* %sum;
    i32* %188 = load i32** %a221;
    i32* %189 = getelementptr &(i32* %188)[i64 0];
    i32 %190 = load i32* %189;
    i32 %191 = add i32 %187, i32 %190;
    i32* %192 = load i32** %a221;
    i32* %193 = getelementptr &(i32* %192)[i64 1];
    i32 %194 = load i32* %193;
    i32 %195 = add i32 %191, i32 %194;
    store i32* %sum with i32 %195;
    i32 %196 = load i32* %sum;
    i32* %197 = load i32** %a231;
    i32* %198 = getelementptr &(i32* %197)[i64 0];
    i32 %199 = load i32* %198;
    i32 %200 = add i32 %196, i32 %199;
    i32* %201 = load i32** %a231;
    i32* %202 = getelementptr &(i32* %201)[i64 1];
    i32 %203 = load i32* %202;
    i32 %204 = add i32 %200, i32 %203;
    store i32* %sum with i32 %204;
    i32 %205 = load i32* %sum;
    i32* %206 = load i32** %a241;
    i32* %207 = getelementptr &(i32* %206)[i64 0];
    i32 %208 = load i32* %207;
    i32 %209 = add i32 %205, i32 %208;
    i32* %210 = load i32** %a241;
    i32* %211 = getelementptr &(i32* %210)[i64 1];
    i32 %212 = load i32* %211;
    i32 %213 = add i32 %209, i32 %212;
    store i32* %sum with i32 %213;
    i32 %214 = load i32* %sum;
    i32* %215 = load i32** %a251;
    i32* %216 = getelementptr &(i32* %215)[i64 0];
    i32 %217 = load i32* %216;
    i32 %218 = add i32 %214, i32 %217;
    i32* %219 = load i32** %a251;
    i32* %220 = getelementptr &(i32* %219)[i64 1];
    i32 %221 = load i32* %220;
    i32 %222 = add i32 %218, i32 %221;
    store i32* %sum with i32 %222;
    i32 %223 = load i32* %sum;
    i32* %224 = load i32** %a261;
    i32* %225 = getelementptr &(i32* %224)[i64 0];
    i32 %226 = load i32* %225;
    i32 %227 = add i32 %223, i32 %226;
    i32* %228 = load i32** %a261;
    i32* %229 = getelementptr &(i32* %228)[i64 1];
    i32 %230 = load i32* %229;
    i32 %231 = add i32 %227, i32 %230;
    store i32* %sum with i32 %231;
    i32 %232 = load i32* %sum;
    i32* %233 = load i32** %a271;
    i32* %234 = getelementptr &(i32* %233)[i64 0];
    i32 %235 = load i32* %234;
    i32 %236 = add i32 %232, i32 %235;
    i32* %237 = load i32** %a271;
    i32* %238 = getelementptr &(i32* %237)[i64 1];
    i32 %239 = load i32* %238;
    i32 %240 = add i32 %236, i32 %239;
    store i32* %sum with i32 %240;
    i32 %241 = load i32* %sum;
    i32* %242 = load i32** %a281;
    i32* %243 = getelementptr &(i32* %242)[i64 0];
    i32 %244 = load i32* %243;
    i32 %245 = add i32 %241, i32 %244;
    i32* %246 = load i32** %a281;
    i32* %247 = getelementptr &(i32* %246)[i64 1];
    i32 %248 = load i32* %247;
    i32 %249 = add i32 %245, i32 %248;
    store i32* %sum with i32 %249;
    i32 %250 = load i32* %sum;
    i32* %251 = load i32** %a291;
    i32* %252 = getelementptr &(i32* %251)[i64 0];
    i32 %253 = load i32* %252;
    i32 %254 = add i32 %250, i32 %253;
    i32* %255 = load i32** %a291;
    i32* %256 = getelementptr &(i32* %255)[i64 1];
    i32 %257 = load i32* %256;
    i32 %258 = add i32 %254, i32 %257;
    store i32* %sum with i32 %258;
    i32 %259 = load i32* %sum;
    i32* %260 = load i32** %a301;
    i32* %261 = getelementptr &(i32* %260)[i64 0];
    i32 %262 = load i32* %261;
    i32 %263 = add i32 %259, i32 %262;
    i32* %264 = load i32** %a301;
    i32* %265 = getelementptr &(i32* %264)[i64 1];
    i32 %266 = load i32* %265;
    i32 %267 = add i32 %263, i32 %266;
    store i32* %sum with i32 %267;
    i32 %268 = load i32* %sum;
    i32* %269 = load i32** %a311;
    i32* %270 = getelementptr &(i32* %269)[i64 0];
    i32 %271 = load i32* %270;
    i32 %272 = add i32 %268, i32 %271;
    i32* %273 = load i32** %a311;
    i32* %274 = getelementptr &(i32* %273)[i64 1];
    i32 %275 = load i32* %274;
    i32 %276 = add i32 %272, i32 %275;
    store i32* %sum with i32 %276;
    i32 %277 = load i32* %sum;
    i32* %278 = load i32** %a321;
    i32* %279 = getelementptr &(i32* %278)[i64 0];
    i32 %280 = load i32* %279;
    i32 %281 = add i32 %277, i32 %280;
    i32* %282 = load i32** %a321;
    i32* %283 = getelementptr &(i32* %282)[i64 1];
    i32 %284 = load i32* %283;
    i32 %285 = add i32 %281, i32 %284;
    store i32* %sum with i32 %285;
    i32 %286 = load i32* %sum;
    ret i32 %286;
}
internal func @param16(i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7, i32 %a8, i32 %a9, i32 %a10, i32 %a11, i32 %a12, i32 %a13, i32 %a14, i32 %a15, i32 %a16) -> i32 {
^entry:
    [16 * i32]* %arr = alloc [16 * i32];
    i32* %a161 = alloc i32;
    i32* %a151 = alloc i32;
    i32* %a141 = alloc i32;
    i32* %a131 = alloc i32;
    i32* %a121 = alloc i32;
    i32* %a111 = alloc i32;
    i32* %a101 = alloc i32;
    i32* %a91 = alloc i32;
    i32* %a81 = alloc i32;
    i32* %a71 = alloc i32;
    i32* %a61 = alloc i32;
    i32* %a51 = alloc i32;
    i32* %a41 = alloc i32;
    i32* %a31 = alloc i32;
    i32* %a21 = alloc i32;
    i32* %a11 = alloc i32;
    store i32* %a11 with i32 %a1;
    store i32* %a21 with i32 %a2;
    store i32* %a31 with i32 %a3;
    store i32* %a41 with i32 %a4;
    store i32* %a51 with i32 %a5;
    store i32* %a61 with i32 %a6;
    store i32* %a71 with i32 %a7;
    store i32* %a81 with i32 %a8;
    store i32* %a91 with i32 %a9;
    store i32* %a101 with i32 %a10;
    store i32* %a111 with i32 %a11;
    store i32* %a121 with i32 %a12;
    store i32* %a131 with i32 %a13;
    store i32* %a141 with i32 %a14;
    store i32* %a151 with i32 %a15;
    store i32* %a161 with i32 %a16;
    i32 %0 = load i32* %a11;
    i32* %1 = getelementptr &([16 * i32]* %arr)[i64 0][i64 0];
    store i32* %1 with i32 %0;
    i32 %2 = load i32* %a21;
    i32* %3 = getelementptr &([16 * i32]* %arr)[i64 0][i64 1];
    store i32* %3 with i32 %2;
    i32 %4 = load i32* %a31;
    i32* %5 = getelementptr &([16 * i32]* %arr)[i64 0][i64 2];
    store i32* %5 with i32 %4;
    i32 %6 = load i32* %a41;
    i32* %7 = getelementptr &([16 * i32]* %arr)[i64 0][i64 3];
    store i32* %7 with i32 %6;
    i32 %8 = load i32* %a51;
    i32* %9 = getelementptr &([16 * i32]* %arr)[i64 0][i64 4];
    store i32* %9 with i32 %8;
    i32 %10 = load i32* %a61;
    i32* %11 = getelementptr &([16 * i32]* %arr)[i64 0][i64 5];
    store i32* %11 with i32 %10;
    i32 %12 = load i32* %a71;
    i32* %13 = getelementptr &([16 * i32]* %arr)[i64 0][i64 6];
    store i32* %13 with i32 %12;
    i32 %14 = load i32* %a81;
    i32* %15 = getelementptr &([16 * i32]* %arr)[i64 0][i64 7];
    store i32* %15 with i32 %14;
    i32 %16 = load i32* %a91;
    i32* %17 = getelementptr &([16 * i32]* %arr)[i64 0][i64 8];
    store i32* %17 with i32 %16;
    i32 %18 = load i32* %a101;
    i32* %19 = getelementptr &([16 * i32]* %arr)[i64 0][i64 9];
    store i32* %19 with i32 %18;
    i32 %20 = load i32* %a111;
    i32* %21 = getelementptr &([16 * i32]* %arr)[i64 0][i64 10];
    store i32* %21 with i32 %20;
    i32 %22 = load i32* %a121;
    i32* %23 = getelementptr &([16 * i32]* %arr)[i64 0][i64 11];
    store i32* %23 with i32 %22;
    i32 %24 = load i32* %a131;
    i32* %25 = getelementptr &([16 * i32]* %arr)[i64 0][i64 12];
    store i32* %25 with i32 %24;
    i32 %26 = load i32* %a141;
    i32* %27 = getelementptr &([16 * i32]* %arr)[i64 0][i64 13];
    store i32* %27 with i32 %26;
    i32 %28 = load i32* %a151;
    i32* %29 = getelementptr &([16 * i32]* %arr)[i64 0][i64 14];
    store i32* %29 with i32 %28;
    i32 %30 = load i32* %a161;
    i32* %31 = getelementptr &([16 * i32]* %arr)[i64 0][i64 15];
    store i32* %31 with i32 %30;
    i32* %32 = getelementptr &([16 * i32]* %arr)[i64 1][i64 0];
    i32* %33 = getelementptr &([16 * i32]* %arr)[i64 0][i64 0];
    call (i32*, i32) -> void @sort(i32* %33, i32 16);
    i32* %34 = getelementptr &([16 * i32]* %arr)[i64 0][i64 0];
    i32 %35 = load i32* %34;
    i32* %36 = getelementptr &([16 * i32]* %arr)[i64 0][i64 1];
    i32 %37 = load i32* %36;
    i32* %38 = getelementptr &([16 * i32]* %arr)[i64 0][i64 2];
    i32 %39 = load i32* %38;
    i32* %40 = getelementptr &([16 * i32]* %arr)[i64 0][i64 3];
    i32 %41 = load i32* %40;
    i32* %42 = getelementptr &([16 * i32]* %arr)[i64 0][i64 4];
    i32 %43 = load i32* %42;
    i32* %44 = getelementptr &([16 * i32]* %arr)[i64 0][i64 5];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &([16 * i32]* %arr)[i64 0][i64 6];
    i32 %47 = load i32* %46;
    i32* %48 = getelementptr &([16 * i32]* %arr)[i64 0][i64 7];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &([16 * i32]* %arr)[i64 0][i64 8];
    i32 %51 = load i32* %50;
    i32* %52 = getelementptr &([16 * i32]* %arr)[i64 0][i64 9];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &([16 * i32]* %arr)[i64 0][i64 10];
    i32 %55 = load i32* %54;
    i32* %56 = getelementptr &([16 * i32]* %arr)[i64 0][i64 11];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &([16 * i32]* %arr)[i64 0][i64 12];
    i32 %59 = load i32* %58;
    i32* %60 = getelementptr &([16 * i32]* %arr)[i64 0][i64 13];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &([16 * i32]* %arr)[i64 0][i64 14];
    i32 %63 = load i32* %62;
    i32* %64 = getelementptr &([16 * i32]* %arr)[i64 0][i64 15];
    i32 %65 = load i32* %64;
    i32 %66 = load i32* %a11;
    i32 %67 = load i32* %a21;
    i32 %68 = load i32* %a31;
    i32 %69 = load i32* %a41;
    i32 %70 = load i32* %a51;
    i32 %71 = load i32* %a61;
    i32 %72 = load i32* %a71;
    i32 %73 = load i32* %a81;
    i32 %74 = load i32* %a91;
    i32 %75 = load i32* %a101;
    i32 %76 = load i32* %a111;
    i32 %77 = load i32* %a121;
    i32 %78 = load i32* %a131;
    i32 %79 = load i32* %a141;
    i32 %80 = load i32* %a151;
    i32 %81 = load i32* %a161;
    i32 %82 = call (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) -> i32 @param32_rec(i32 %35, i32 %37, i32 %39, i32 %41, i32 %43, i32 %45, i32 %47, i32 %49, i32 %51, i32 %53, i32 %55, i32 %57, i32 %59, i32 %61, i32 %63, i32 %65, i32 %66, i32 %67, i32 %68, i32 %69, i32 %70, i32 %71, i32 %72, i32 %73, i32 %74, i32 %75, i32 %76, i32 %77, i32 %78, i32 %79, i32 %80, i32 %81);
    ret i32 %82;
}
internal func @cmmc::Intrinsic::memset() -> i8* { NoMemoryRead };
func @main() -> i32 { Entry } {
^entry:
    i32* %i = alloc i32;
    [32 * [2 * i32]]* %arr = alloc [32 * [2 * i32]];
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    i32 %2 = call () -> i32 @getint();
    i32 %3 = call () -> i32 @getint();
    i32 %4 = call () -> i32 @getint();
    i32 %5 = call () -> i32 @getint();
    i32 %6 = call () -> i32 @getint();
    i32 %7 = call () -> i32 @getint();
    i32 %8 = call () -> i32 @getint();
    i32 %9 = call () -> i32 @getint();
    i32 %10 = call () -> i32 @getint();
    i32 %11 = call () -> i32 @getint();
    i32 %12 = call () -> i32 @getint();
    i32 %13 = call () -> i32 @getint();
    i32 %14 = call () -> i32 @getint();
    i32 %15 = call () -> i32 @getint();
    i32 %16 = call (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) -> i32 @param16(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15);
    i32* %17 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 0][i64 0];
    store i32* %17 with i32 %16;
    i32* %18 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 0][i64 1];
    store i32* %18 with i32 8848;
    i32* %19 = getelementptr &([32 * [2 * i32]]* %arr)[i64 1][i64 0][i64 0];
    i32* %20 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 1][i64 0];
    store i32* %20 with i32 0;
    i32* %21 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 1][i64 1];
    store i32* %21 with i32 0;
    i32* %22 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 2][i64 0];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 2][i64 1];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 3][i64 0];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 3][i64 1];
    store i32* %25 with i32 0;
    i32* %26 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 4][i64 0];
    store i32* %26 with i32 0;
    i32* %27 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 4][i64 1];
    store i32* %27 with i32 0;
    i32* %28 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 5][i64 0];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 5][i64 1];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 6][i64 0];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 6][i64 1];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 7][i64 0];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 7][i64 1];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 8][i64 0];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 8][i64 1];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 9][i64 0];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 9][i64 1];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 10][i64 0];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 10][i64 1];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 11][i64 0];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 11][i64 1];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 12][i64 0];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 12][i64 1];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 13][i64 0];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 13][i64 1];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 14][i64 0];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 14][i64 1];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 15][i64 0];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 15][i64 1];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 16][i64 0];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 16][i64 1];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 17][i64 0];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 17][i64 1];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 18][i64 0];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 18][i64 1];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 19][i64 0];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 19][i64 1];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 20][i64 0];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 20][i64 1];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 21][i64 0];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 21][i64 1];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 22][i64 0];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 22][i64 1];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 23][i64 0];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 23][i64 1];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 24][i64 0];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 24][i64 1];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 25][i64 0];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 25][i64 1];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 26][i64 0];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 26][i64 1];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 27][i64 0];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 27][i64 1];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 28][i64 0];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 28][i64 1];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 29][i64 0];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 29][i64 1];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 30][i64 0];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 30][i64 1];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 31][i64 0];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 31][i64 1];
    store i32* %81 with i32 0;
    store i32* %i with i32 1;
    ubr ^while.header;
^while.header:
    i32 %82 = load i32* %i;
    i1 %83 = scmp lt i32 %82, i32 32;
    i32 %84 = zext i1 %83 to i32;
    i1 %85 = scmp neq i32 %84, i32 0;
    cbr i1 %85(prob = 0.97), ^while.body, ^b;
^while.body:
    i32 %86 = load i32* %i;
    i64 %87 = sext i32 %86 to i64;
    [2 * i32]* %88 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 %87];
    i32* %89 = getelementptr &([2 * i32]* %88)[i64 0][i64 0];
    i32 %90 = load i32* %i;
    i32 %91 = sub i32 %90, i32 1;
    i64 %92 = sext i32 %91 to i64;
    [2 * i32]* %93 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 %92];
    i32* %94 = getelementptr &([2 * i32]* %93)[i64 0][i64 1];
    i32 %95 = load i32* %94;
    i32 %96 = sub i32 %95, i32 1;
    store i32* %89 with i32 %96;
    i32 %97 = load i32* %i;
    i64 %98 = sext i32 %97 to i64;
    [2 * i32]* %99 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 %98];
    i32* %100 = getelementptr &([2 * i32]* %99)[i64 0][i64 1];
    i32 %101 = load i32* %i;
    i32 %102 = sub i32 %101, i32 1;
    i64 %103 = sext i32 %102 to i64;
    [2 * i32]* %104 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 %103];
    i32* %105 = getelementptr &([2 * i32]* %104)[i64 0][i64 0];
    i32 %106 = load i32* %105;
    i32 %107 = sub i32 %106, i32 2;
    store i32* %100 with i32 %107;
    i32 %108 = load i32* %i;
    i32 %109 = add i32 %108, i32 1;
    store i32* %i with i32 %109;
    ubr ^while.header;
^b:
    [2 * i32]* %110 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 0];
    i32* %111 = getelementptr &([2 * i32]* %110)[i64 0][i64 0];
    [2 * i32]* %112 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 1];
    i32* %113 = getelementptr &([2 * i32]* %112)[i64 0][i64 0];
    [2 * i32]* %114 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 2];
    i32* %115 = getelementptr &([2 * i32]* %114)[i64 0][i64 0];
    [2 * i32]* %116 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 3];
    i32* %117 = getelementptr &([2 * i32]* %116)[i64 0][i64 0];
    [2 * i32]* %118 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 4];
    i32* %119 = getelementptr &([2 * i32]* %118)[i64 0][i64 0];
    [2 * i32]* %120 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 5];
    i32* %121 = getelementptr &([2 * i32]* %120)[i64 0][i64 0];
    [2 * i32]* %122 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 6];
    i32* %123 = getelementptr &([2 * i32]* %122)[i64 0][i64 0];
    [2 * i32]* %124 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 7];
    i32* %125 = getelementptr &([2 * i32]* %124)[i64 0][i64 0];
    [2 * i32]* %126 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 8];
    i32* %127 = getelementptr &([2 * i32]* %126)[i64 0][i64 0];
    [2 * i32]* %128 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 9];
    i32* %129 = getelementptr &([2 * i32]* %128)[i64 0][i64 0];
    [2 * i32]* %130 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 10];
    i32* %131 = getelementptr &([2 * i32]* %130)[i64 0][i64 0];
    [2 * i32]* %132 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 11];
    i32* %133 = getelementptr &([2 * i32]* %132)[i64 0][i64 0];
    [2 * i32]* %134 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 12];
    i32* %135 = getelementptr &([2 * i32]* %134)[i64 0][i64 0];
    [2 * i32]* %136 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 13];
    i32* %137 = getelementptr &([2 * i32]* %136)[i64 0][i64 0];
    [2 * i32]* %138 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 14];
    i32* %139 = getelementptr &([2 * i32]* %138)[i64 0][i64 0];
    [2 * i32]* %140 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 15];
    i32* %141 = getelementptr &([2 * i32]* %140)[i64 0][i64 0];
    [2 * i32]* %142 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 16];
    i32* %143 = getelementptr &([2 * i32]* %142)[i64 0][i64 0];
    [2 * i32]* %144 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 17];
    i32* %145 = getelementptr &([2 * i32]* %144)[i64 0][i64 0];
    [2 * i32]* %146 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 18];
    i32* %147 = getelementptr &([2 * i32]* %146)[i64 0][i64 0];
    [2 * i32]* %148 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 19];
    i32* %149 = getelementptr &([2 * i32]* %148)[i64 0][i64 0];
    [2 * i32]* %150 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 20];
    i32* %151 = getelementptr &([2 * i32]* %150)[i64 0][i64 0];
    [2 * i32]* %152 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 21];
    i32* %153 = getelementptr &([2 * i32]* %152)[i64 0][i64 0];
    [2 * i32]* %154 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 22];
    i32* %155 = getelementptr &([2 * i32]* %154)[i64 0][i64 0];
    [2 * i32]* %156 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 23];
    i32* %157 = getelementptr &([2 * i32]* %156)[i64 0][i64 0];
    [2 * i32]* %158 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 24];
    i32* %159 = getelementptr &([2 * i32]* %158)[i64 0][i64 0];
    [2 * i32]* %160 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 25];
    i32* %161 = getelementptr &([2 * i32]* %160)[i64 0][i64 0];
    [2 * i32]* %162 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 26];
    i32* %163 = getelementptr &([2 * i32]* %162)[i64 0][i64 0];
    [2 * i32]* %164 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 27];
    i32* %165 = getelementptr &([2 * i32]* %164)[i64 0][i64 0];
    [2 * i32]* %166 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 28];
    i32* %167 = getelementptr &([2 * i32]* %166)[i64 0][i64 0];
    [2 * i32]* %168 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 29];
    i32* %169 = getelementptr &([2 * i32]* %168)[i64 0][i64 0];
    [2 * i32]* %170 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 30];
    i32* %171 = getelementptr &([2 * i32]* %170)[i64 0][i64 0];
    [2 * i32]* %172 = getelementptr &([32 * [2 * i32]]* %arr)[i64 0][i64 31];
    i32* %173 = getelementptr &([2 * i32]* %172)[i64 0][i64 0];
    i32 %174 = call (i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) -> i32 @param32_arr(i32* %111, i32* %113, i32* %115, i32* %117, i32* %119, i32* %121, i32* %123, i32* %125, i32* %127, i32* %129, i32* %131, i32* %133, i32* %135, i32* %137, i32* %139, i32* %141, i32* %143, i32* %145, i32* %147, i32* %149, i32* %151, i32* %153, i32* %155, i32* %157, i32* %159, i32* %161, i32* %163, i32* %165, i32* %167, i32* %169, i32* %171, i32* %173);
    call (i32) -> void @putint(i32 %174);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
}
