internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @dfs(i32, i32, i32, [10 * i32]*, [10 * [10 * i32]]*, [10 * [10 * i32]]*, [10 * [10 * i32]]*, [10 * i32]*) -> i32 {
^entry(i32 %arg, i32 %arg1, i32 %arg2, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg4, [10 * [10 * i32]]* %arg5, [10 * [10 * i32]]* %arg6, [10 * i32]* %arg7):
    i1 %0 = scmp eq i32 %arg, i32 %arg1;
    cbr i1 %0, [ ^indirect1 i32 %arg2 ], [ ^indirect i32 %arg, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg5, [10 * [10 * i32]]* %arg6, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg7, i32 %arg, i32 %arg1, i32 %arg2 ];
^indirect(i32 %arg, [10 * i32]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg5, i32 %arg6, i32 %arg7, i32 %arg8):
    i32* %0 = getelementptr &([10 * i32]* %arg5)[i32 0][i32 %arg];
    store i32* %0 with i32 1;
    i32* %i = alloc i32;
    store i32* %i with i32 0;
    i32* %1 = getelementptr &([10 * i32]* %arg1)[i32 0][i32 %arg6];
    i32 %2 = load i32* %1;
    i1 %3 = scmp lt i32 0, i32 %2;
    cbr i1 %3, [ ^indirect2 i32* %i, i32 %arg6, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg1, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg4, i32 %arg6, i32 %arg7, i32 %arg8, i32 0 ], [ ^b ];
^indirect1(i32 %arg):
    ret i32 %arg;
^indirect2(i32* %arg, i32 %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    [10 * i32]* %0 = getelementptr &([10 * [10 * i32]]* %arg6)[i32 0][i32 %arg1];
    i32* %1 = getelementptr &([10 * i32]* %0)[i32 0][i32 %arg10];
    i32 %2 = load i32* %1;
    i32* %3 = getelementptr &([10 * i32]* %arg5)[i32 0][i32 %2];
    i32 %4 = load i32* %3;
    i1 %5 = scmp neq i32 %4, i32 0;
    cbr i1 %5, [ ^indirect3 i32* %arg, i32 %arg10, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg6, [10 * i32]* %arg4, i32 %arg7, i32 %arg8, i32 %arg9 ], [ ^indirect4 i32* %arg, i32 %arg10, [10 * [10 * i32]]* %arg6, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg5, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg2, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ];
^b():
    ret i32 0;
^indirect3(i32* %arg, i32 %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i32 %0 = add i32 %arg1, i32 1;
    store i32* %arg with i32 %0;
    i32* %1 = getelementptr &([10 * i32]* %arg6)[i32 0][i32 %arg7];
    i32 %2 = load i32* %1;
    i1 %3 = scmp lt i32 %0, i32 %2;
    cbr i1 %3, [ ^indirect2 i32* %arg, i32 %arg7, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg6, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg5, i32 %arg7, i32 %arg8, i32 %arg9, i32 %0 ], [ ^b ];
^indirect4(i32* %arg, i32 %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    [10 * i32]* %0 = getelementptr &([10 * [10 * i32]]* %arg6)[i32 0][i32 %arg7];
    i32* %1 = getelementptr &([10 * i32]* %0)[i32 0][i32 %arg1];
    i32 %2 = load i32* %1;
    i1 %3 = scmp le i32 %2, i32 0;
    cbr i1 %3, [ ^if.then i32* %arg, [10 * [10 * i32]]* %arg6, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg2, [10 * i32]* %arg5, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ], [ ^indirect5 i32* %arg, i32 %arg7, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ];
^if.then(i32* %arg, [10 * [10 * i32]]* %arg1, [10 * [10 * i32]]* %arg2, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9):
    i32 %0 = add i32 %arg9, i32 1;
    store i32* %arg with i32 %0;
    i32* %1 = getelementptr &([10 * i32]* %arg5)[i32 0][i32 %arg6];
    i32 %2 = load i32* %1;
    i1 %3 = scmp lt i32 %0, i32 %2;
    cbr i1 %3, [ ^indirect2 i32* %arg, i32 %arg6, [10 * [10 * i32]]* %arg1, [10 * [10 * i32]]* %arg2, [10 * i32]* %arg5, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg4, i32 %arg6, i32 %arg7, i32 %arg8, i32 %0 ], [ ^b ];
^indirect5(i32* %arg, i32 %arg1, [10 * i32]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg5, [10 * [10 * i32]]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    [10 * i32]* %0 = getelementptr &([10 * [10 * i32]]* %arg6)[i32 0][i32 %arg1];
    i32* %1 = getelementptr &([10 * i32]* %0)[i32 0][i32 %arg10];
    i32 %2 = load i32* %1;
    i1 %3 = scmp lt i32 %arg9, i32 %2;
    cbr i1 %3, [ ^b1 i32* %arg, i32 %arg9, i32 %arg7, [10 * i32]* %arg2, [10 * [10 * i32]]* %arg3, [10 * [10 * i32]]* %arg6, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg5, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ], [ ^indirect6 i32* %arg, i32 %arg10, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg4, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg2, [10 * [10 * i32]]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ];
^indirect6(i32* %arg, i32 %arg1, [10 * [10 * i32]]* %arg2, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10):
    [10 * i32]* %0 = getelementptr &([10 * [10 * i32]]* %arg6)[i32 0][i32 %arg7];
    i32* %1 = getelementptr &([10 * i32]* %0)[i32 0][i32 %arg1];
    i32 %2 = load i32* %1;
    ubr [ ^b1 i32* %arg, i32 %2, i32 %arg7, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg4, [10 * [10 * i32]]* %arg6, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg2, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10 ];
^b1(i32* %arg, i32 %arg1, i32 %arg2, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg4, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11):
    [10 * i32]* %0 = getelementptr &([10 * [10 * i32]]* %arg7)[i32 0][i32 %arg2];
    i32* %1 = getelementptr &([10 * i32]* %0)[i32 0][i32 %arg11];
    i32 %2 = load i32* %1;
    i32 %3 = call (i32, i32, i32, [10 * i32]*, [10 * [10 * i32]]*, [10 * [10 * i32]]*, [10 * [10 * i32]]*, [10 * i32]*) -> i32 @dfs(i32 %2, i32 %arg9, i32 %arg1, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg5, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg3);
    i1 %4 = scmp gt i32 %3, i32 0;
    cbr i1 %4, [ ^indirect7 i32 %3, [10 * [10 * i32]]* %arg4, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg5, i32 %arg8, i32 %arg11 ], [ ^if.then i32* %arg, [10 * [10 * i32]]* %arg5, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg3, [10 * [10 * i32]]* %arg7, [10 * i32]* %arg6, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11 ];
^indirect7(i32 %arg, [10 * [10 * i32]]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, i32 %arg4, i32 %arg5):
    [10 * i32]* %0 = getelementptr &([10 * [10 * i32]]* %arg3)[i32 0][i32 %arg4];
    i32* %1 = getelementptr &([10 * i32]* %0)[i32 0][i32 %arg5];
    i32 %2 = load i32* %1;
    i32 %3 = sub i32 %2, i32 %arg;
    store i32* %1 with i32 %3;
    [10 * i32]* %4 = getelementptr &([10 * [10 * i32]]* %arg2)[i32 0][i32 %arg4];
    i32* %5 = getelementptr &([10 * i32]* %4)[i32 0][i32 %arg5];
    i32 %6 = load i32* %5;
    [10 * i32]* %7 = getelementptr &([10 * [10 * i32]]* %arg3)[i32 0][i32 %6];
    [10 * i32]* %8 = getelementptr &([10 * [10 * i32]]* %arg1)[i32 0][i32 %arg4];
    i32* %9 = getelementptr &([10 * i32]* %8)[i32 0][i32 %arg5];
    i32 %10 = load i32* %9;
    i32* %11 = getelementptr &([10 * i32]* %7)[i32 0][i32 %10];
    i32 %12 = load i32* %11;
    i32 %13 = add i32 %12, i32 %arg;
    store i32* %11 with i32 %13;
    ret i32 %arg;
}
func @main() -> i32 { NoRecurse } {
^entry():
    [10 * i32]* %size = alloc [10 * i32];
    i32* %0 = getelementptr &([10 * i32]* %size)[i32 0][i32 0];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([10 * i32]* %size)[i32 0][i32 1];
    store i32* %1 with i32 0;
    i32* %2 = getelementptr &([10 * i32]* %size)[i32 0][i32 2];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &([10 * i32]* %size)[i32 0][i32 3];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([10 * i32]* %size)[i32 0][i32 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([10 * i32]* %size)[i32 0][i32 5];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([10 * i32]* %size)[i32 0][i32 6];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &([10 * i32]* %size)[i32 0][i32 7];
    store i32* %7 with i32 0;
    i32* %8 = getelementptr &([10 * i32]* %size)[i32 0][i32 8];
    store i32* %8 with i32 0;
    i32* %9 = getelementptr &([10 * i32]* %size)[i32 0][i32 9];
    store i32* %9 with i32 0;
    [10 * [10 * i32]]* %to = alloc [10 * [10 * i32]];
    i32* %10 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 0];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 1];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 2];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 3];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 4];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 5];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 6];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 7];
    store i32* %17 with i32 0;
    i32* %18 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 8];
    store i32* %18 with i32 0;
    i32* %19 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 0][i32 9];
    store i32* %19 with i32 0;
    i32* %20 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 0];
    store i32* %20 with i32 0;
    i32* %21 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 1];
    store i32* %21 with i32 0;
    i32* %22 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 2];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 3];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 4];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 5];
    store i32* %25 with i32 0;
    i32* %26 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 6];
    store i32* %26 with i32 0;
    i32* %27 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 7];
    store i32* %27 with i32 0;
    i32* %28 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 8];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 1][i32 9];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 0];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 1];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 2];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 3];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 4];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 5];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 6];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 7];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 8];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 2][i32 9];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 0];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 1];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 2];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 3];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 4];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 5];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 6];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 7];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 8];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 3][i32 9];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 0];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 1];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 2];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 3];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 4];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 5];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 6];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 7];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 8];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 4][i32 9];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 0];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 1];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 2];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 3];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 4];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 5];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 6];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 7];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 8];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 5][i32 9];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 0];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 1];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 2];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 3];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 4];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 5];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 6];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 7];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 8];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 6][i32 9];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 0];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 1];
    store i32* %81 with i32 0;
    i32* %82 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 2];
    store i32* %82 with i32 0;
    i32* %83 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 3];
    store i32* %83 with i32 0;
    i32* %84 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 4];
    store i32* %84 with i32 0;
    i32* %85 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 5];
    store i32* %85 with i32 0;
    i32* %86 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 6];
    store i32* %86 with i32 0;
    i32* %87 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 7];
    store i32* %87 with i32 0;
    i32* %88 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 8];
    store i32* %88 with i32 0;
    i32* %89 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 7][i32 9];
    store i32* %89 with i32 0;
    i32* %90 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 0];
    store i32* %90 with i32 0;
    i32* %91 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 1];
    store i32* %91 with i32 0;
    i32* %92 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 2];
    store i32* %92 with i32 0;
    i32* %93 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 3];
    store i32* %93 with i32 0;
    i32* %94 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 4];
    store i32* %94 with i32 0;
    i32* %95 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 5];
    store i32* %95 with i32 0;
    i32* %96 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 6];
    store i32* %96 with i32 0;
    i32* %97 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 7];
    store i32* %97 with i32 0;
    i32* %98 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 8];
    store i32* %98 with i32 0;
    i32* %99 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 8][i32 9];
    store i32* %99 with i32 0;
    i32* %100 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 0];
    store i32* %100 with i32 0;
    i32* %101 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 1];
    store i32* %101 with i32 0;
    i32* %102 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 2];
    store i32* %102 with i32 0;
    i32* %103 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 3];
    store i32* %103 with i32 0;
    i32* %104 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 4];
    store i32* %104 with i32 0;
    i32* %105 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 5];
    store i32* %105 with i32 0;
    i32* %106 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 6];
    store i32* %106 with i32 0;
    i32* %107 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 7];
    store i32* %107 with i32 0;
    i32* %108 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 8];
    store i32* %108 with i32 0;
    i32* %109 = getelementptr &([10 * [10 * i32]]* %to)[i32 0][i32 9][i32 9];
    store i32* %109 with i32 0;
    [10 * [10 * i32]]* %cap = alloc [10 * [10 * i32]];
    i32* %110 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 0];
    store i32* %110 with i32 0;
    i32* %111 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 1];
    store i32* %111 with i32 0;
    i32* %112 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 2];
    store i32* %112 with i32 0;
    i32* %113 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 3];
    store i32* %113 with i32 0;
    i32* %114 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 4];
    store i32* %114 with i32 0;
    i32* %115 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 5];
    store i32* %115 with i32 0;
    i32* %116 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 6];
    store i32* %116 with i32 0;
    i32* %117 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 7];
    store i32* %117 with i32 0;
    i32* %118 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 8];
    store i32* %118 with i32 0;
    i32* %119 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 0][i32 9];
    store i32* %119 with i32 0;
    i32* %120 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 0];
    store i32* %120 with i32 0;
    i32* %121 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 1];
    store i32* %121 with i32 0;
    i32* %122 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 2];
    store i32* %122 with i32 0;
    i32* %123 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 3];
    store i32* %123 with i32 0;
    i32* %124 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 4];
    store i32* %124 with i32 0;
    i32* %125 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 5];
    store i32* %125 with i32 0;
    i32* %126 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 6];
    store i32* %126 with i32 0;
    i32* %127 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 7];
    store i32* %127 with i32 0;
    i32* %128 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 8];
    store i32* %128 with i32 0;
    i32* %129 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 1][i32 9];
    store i32* %129 with i32 0;
    i32* %130 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 0];
    store i32* %130 with i32 0;
    i32* %131 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 1];
    store i32* %131 with i32 0;
    i32* %132 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 2];
    store i32* %132 with i32 0;
    i32* %133 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 3];
    store i32* %133 with i32 0;
    i32* %134 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 4];
    store i32* %134 with i32 0;
    i32* %135 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 5];
    store i32* %135 with i32 0;
    i32* %136 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 6];
    store i32* %136 with i32 0;
    i32* %137 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 7];
    store i32* %137 with i32 0;
    i32* %138 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 8];
    store i32* %138 with i32 0;
    i32* %139 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 2][i32 9];
    store i32* %139 with i32 0;
    i32* %140 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 0];
    store i32* %140 with i32 0;
    i32* %141 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 1];
    store i32* %141 with i32 0;
    i32* %142 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 2];
    store i32* %142 with i32 0;
    i32* %143 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 3];
    store i32* %143 with i32 0;
    i32* %144 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 4];
    store i32* %144 with i32 0;
    i32* %145 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 5];
    store i32* %145 with i32 0;
    i32* %146 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 6];
    store i32* %146 with i32 0;
    i32* %147 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 7];
    store i32* %147 with i32 0;
    i32* %148 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 8];
    store i32* %148 with i32 0;
    i32* %149 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 3][i32 9];
    store i32* %149 with i32 0;
    i32* %150 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 0];
    store i32* %150 with i32 0;
    i32* %151 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 1];
    store i32* %151 with i32 0;
    i32* %152 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 2];
    store i32* %152 with i32 0;
    i32* %153 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 3];
    store i32* %153 with i32 0;
    i32* %154 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 4];
    store i32* %154 with i32 0;
    i32* %155 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 5];
    store i32* %155 with i32 0;
    i32* %156 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 6];
    store i32* %156 with i32 0;
    i32* %157 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 7];
    store i32* %157 with i32 0;
    i32* %158 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 8];
    store i32* %158 with i32 0;
    i32* %159 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 4][i32 9];
    store i32* %159 with i32 0;
    i32* %160 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 0];
    store i32* %160 with i32 0;
    i32* %161 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 1];
    store i32* %161 with i32 0;
    i32* %162 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 2];
    store i32* %162 with i32 0;
    i32* %163 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 3];
    store i32* %163 with i32 0;
    i32* %164 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 4];
    store i32* %164 with i32 0;
    i32* %165 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 5];
    store i32* %165 with i32 0;
    i32* %166 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 6];
    store i32* %166 with i32 0;
    i32* %167 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 7];
    store i32* %167 with i32 0;
    i32* %168 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 8];
    store i32* %168 with i32 0;
    i32* %169 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 5][i32 9];
    store i32* %169 with i32 0;
    i32* %170 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 0];
    store i32* %170 with i32 0;
    i32* %171 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 1];
    store i32* %171 with i32 0;
    i32* %172 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 2];
    store i32* %172 with i32 0;
    i32* %173 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 3];
    store i32* %173 with i32 0;
    i32* %174 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 4];
    store i32* %174 with i32 0;
    i32* %175 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 5];
    store i32* %175 with i32 0;
    i32* %176 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 6];
    store i32* %176 with i32 0;
    i32* %177 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 7];
    store i32* %177 with i32 0;
    i32* %178 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 8];
    store i32* %178 with i32 0;
    i32* %179 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 6][i32 9];
    store i32* %179 with i32 0;
    i32* %180 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 0];
    store i32* %180 with i32 0;
    i32* %181 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 1];
    store i32* %181 with i32 0;
    i32* %182 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 2];
    store i32* %182 with i32 0;
    i32* %183 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 3];
    store i32* %183 with i32 0;
    i32* %184 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 4];
    store i32* %184 with i32 0;
    i32* %185 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 5];
    store i32* %185 with i32 0;
    i32* %186 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 6];
    store i32* %186 with i32 0;
    i32* %187 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 7];
    store i32* %187 with i32 0;
    i32* %188 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 8];
    store i32* %188 with i32 0;
    i32* %189 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 7][i32 9];
    store i32* %189 with i32 0;
    i32* %190 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 0];
    store i32* %190 with i32 0;
    i32* %191 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 1];
    store i32* %191 with i32 0;
    i32* %192 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 2];
    store i32* %192 with i32 0;
    i32* %193 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 3];
    store i32* %193 with i32 0;
    i32* %194 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 4];
    store i32* %194 with i32 0;
    i32* %195 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 5];
    store i32* %195 with i32 0;
    i32* %196 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 6];
    store i32* %196 with i32 0;
    i32* %197 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 7];
    store i32* %197 with i32 0;
    i32* %198 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 8];
    store i32* %198 with i32 0;
    i32* %199 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 8][i32 9];
    store i32* %199 with i32 0;
    i32* %200 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 0];
    store i32* %200 with i32 0;
    i32* %201 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 1];
    store i32* %201 with i32 0;
    i32* %202 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 2];
    store i32* %202 with i32 0;
    i32* %203 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 3];
    store i32* %203 with i32 0;
    i32* %204 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 4];
    store i32* %204 with i32 0;
    i32* %205 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 5];
    store i32* %205 with i32 0;
    i32* %206 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 6];
    store i32* %206 with i32 0;
    i32* %207 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 7];
    store i32* %207 with i32 0;
    i32* %208 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 8];
    store i32* %208 with i32 0;
    i32* %209 = getelementptr &([10 * [10 * i32]]* %cap)[i32 0][i32 9][i32 9];
    store i32* %209 with i32 0;
    [10 * [10 * i32]]* %rev = alloc [10 * [10 * i32]];
    i32* %210 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 0];
    store i32* %210 with i32 0;
    i32* %211 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 1];
    store i32* %211 with i32 0;
    i32* %212 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 2];
    store i32* %212 with i32 0;
    i32* %213 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 3];
    store i32* %213 with i32 0;
    i32* %214 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 4];
    store i32* %214 with i32 0;
    i32* %215 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 5];
    store i32* %215 with i32 0;
    i32* %216 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 6];
    store i32* %216 with i32 0;
    i32* %217 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 7];
    store i32* %217 with i32 0;
    i32* %218 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 8];
    store i32* %218 with i32 0;
    i32* %219 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 0][i32 9];
    store i32* %219 with i32 0;
    i32* %220 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 0];
    store i32* %220 with i32 0;
    i32* %221 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 1];
    store i32* %221 with i32 0;
    i32* %222 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 2];
    store i32* %222 with i32 0;
    i32* %223 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 3];
    store i32* %223 with i32 0;
    i32* %224 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 4];
    store i32* %224 with i32 0;
    i32* %225 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 5];
    store i32* %225 with i32 0;
    i32* %226 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 6];
    store i32* %226 with i32 0;
    i32* %227 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 7];
    store i32* %227 with i32 0;
    i32* %228 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 8];
    store i32* %228 with i32 0;
    i32* %229 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 1][i32 9];
    store i32* %229 with i32 0;
    i32* %230 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 0];
    store i32* %230 with i32 0;
    i32* %231 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 1];
    store i32* %231 with i32 0;
    i32* %232 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 2];
    store i32* %232 with i32 0;
    i32* %233 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 3];
    store i32* %233 with i32 0;
    i32* %234 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 4];
    store i32* %234 with i32 0;
    i32* %235 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 5];
    store i32* %235 with i32 0;
    i32* %236 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 6];
    store i32* %236 with i32 0;
    i32* %237 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 7];
    store i32* %237 with i32 0;
    i32* %238 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 8];
    store i32* %238 with i32 0;
    i32* %239 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 2][i32 9];
    store i32* %239 with i32 0;
    i32* %240 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 0];
    store i32* %240 with i32 0;
    i32* %241 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 1];
    store i32* %241 with i32 0;
    i32* %242 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 2];
    store i32* %242 with i32 0;
    i32* %243 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 3];
    store i32* %243 with i32 0;
    i32* %244 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 4];
    store i32* %244 with i32 0;
    i32* %245 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 5];
    store i32* %245 with i32 0;
    i32* %246 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 6];
    store i32* %246 with i32 0;
    i32* %247 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 7];
    store i32* %247 with i32 0;
    i32* %248 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 8];
    store i32* %248 with i32 0;
    i32* %249 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 3][i32 9];
    store i32* %249 with i32 0;
    i32* %250 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 0];
    store i32* %250 with i32 0;
    i32* %251 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 1];
    store i32* %251 with i32 0;
    i32* %252 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 2];
    store i32* %252 with i32 0;
    i32* %253 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 3];
    store i32* %253 with i32 0;
    i32* %254 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 4];
    store i32* %254 with i32 0;
    i32* %255 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 5];
    store i32* %255 with i32 0;
    i32* %256 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 6];
    store i32* %256 with i32 0;
    i32* %257 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 7];
    store i32* %257 with i32 0;
    i32* %258 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 8];
    store i32* %258 with i32 0;
    i32* %259 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 4][i32 9];
    store i32* %259 with i32 0;
    i32* %260 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 0];
    store i32* %260 with i32 0;
    i32* %261 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 1];
    store i32* %261 with i32 0;
    i32* %262 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 2];
    store i32* %262 with i32 0;
    i32* %263 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 3];
    store i32* %263 with i32 0;
    i32* %264 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 4];
    store i32* %264 with i32 0;
    i32* %265 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 5];
    store i32* %265 with i32 0;
    i32* %266 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 6];
    store i32* %266 with i32 0;
    i32* %267 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 7];
    store i32* %267 with i32 0;
    i32* %268 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 8];
    store i32* %268 with i32 0;
    i32* %269 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 5][i32 9];
    store i32* %269 with i32 0;
    i32* %270 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 0];
    store i32* %270 with i32 0;
    i32* %271 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 1];
    store i32* %271 with i32 0;
    i32* %272 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 2];
    store i32* %272 with i32 0;
    i32* %273 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 3];
    store i32* %273 with i32 0;
    i32* %274 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 4];
    store i32* %274 with i32 0;
    i32* %275 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 5];
    store i32* %275 with i32 0;
    i32* %276 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 6];
    store i32* %276 with i32 0;
    i32* %277 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 7];
    store i32* %277 with i32 0;
    i32* %278 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 8];
    store i32* %278 with i32 0;
    i32* %279 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 6][i32 9];
    store i32* %279 with i32 0;
    i32* %280 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 0];
    store i32* %280 with i32 0;
    i32* %281 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 1];
    store i32* %281 with i32 0;
    i32* %282 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 2];
    store i32* %282 with i32 0;
    i32* %283 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 3];
    store i32* %283 with i32 0;
    i32* %284 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 4];
    store i32* %284 with i32 0;
    i32* %285 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 5];
    store i32* %285 with i32 0;
    i32* %286 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 6];
    store i32* %286 with i32 0;
    i32* %287 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 7];
    store i32* %287 with i32 0;
    i32* %288 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 8];
    store i32* %288 with i32 0;
    i32* %289 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 7][i32 9];
    store i32* %289 with i32 0;
    i32* %290 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 0];
    store i32* %290 with i32 0;
    i32* %291 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 1];
    store i32* %291 with i32 0;
    i32* %292 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 2];
    store i32* %292 with i32 0;
    i32* %293 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 3];
    store i32* %293 with i32 0;
    i32* %294 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 4];
    store i32* %294 with i32 0;
    i32* %295 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 5];
    store i32* %295 with i32 0;
    i32* %296 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 6];
    store i32* %296 with i32 0;
    i32* %297 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 7];
    store i32* %297 with i32 0;
    i32* %298 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 8];
    store i32* %298 with i32 0;
    i32* %299 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 8][i32 9];
    store i32* %299 with i32 0;
    i32* %300 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 0];
    store i32* %300 with i32 0;
    i32* %301 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 1];
    store i32* %301 with i32 0;
    i32* %302 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 2];
    store i32* %302 with i32 0;
    i32* %303 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 3];
    store i32* %303 with i32 0;
    i32* %304 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 4];
    store i32* %304 with i32 0;
    i32* %305 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 5];
    store i32* %305 with i32 0;
    i32* %306 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 6];
    store i32* %306 with i32 0;
    i32* %307 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 7];
    store i32* %307 with i32 0;
    i32* %308 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 8];
    store i32* %308 with i32 0;
    i32* %309 = getelementptr &([10 * [10 * i32]]* %rev)[i32 0][i32 9][i32 9];
    store i32* %309 with i32 0;
    [10 * i32]* %used = alloc [10 * i32];
    i32* %310 = getelementptr &([10 * i32]* %used)[i32 0][i32 0];
    store i32* %310 with i32 0;
    i32* %311 = getelementptr &([10 * i32]* %used)[i32 0][i32 1];
    store i32* %311 with i32 0;
    i32* %312 = getelementptr &([10 * i32]* %used)[i32 0][i32 2];
    store i32* %312 with i32 0;
    i32* %313 = getelementptr &([10 * i32]* %used)[i32 0][i32 3];
    store i32* %313 with i32 0;
    i32* %314 = getelementptr &([10 * i32]* %used)[i32 0][i32 4];
    store i32* %314 with i32 0;
    i32* %315 = getelementptr &([10 * i32]* %used)[i32 0][i32 5];
    store i32* %315 with i32 0;
    i32* %316 = getelementptr &([10 * i32]* %used)[i32 0][i32 6];
    store i32* %316 with i32 0;
    i32* %317 = getelementptr &([10 * i32]* %used)[i32 0][i32 7];
    store i32* %317 with i32 0;
    i32* %318 = getelementptr &([10 * i32]* %used)[i32 0][i32 8];
    store i32* %318 with i32 0;
    i32* %319 = getelementptr &([10 * i32]* %used)[i32 0][i32 9];
    store i32* %319 with i32 0;
    i32* %V = alloc i32;
    i32* %E = alloc i32;
    i32 %320 = call () -> i32 @getint();
    store i32* %V with i32 %320;
    i32 %321 = call () -> i32 @getint();
    store i32* %E with i32 %321;
    i32** %arr = alloc i32*;
    store i32** %arr with i32* %0;
    i32* %val = alloc i32;
    store i32* %val with i32 0;
    i32* %n = alloc i32;
    store i32* %n with i32 10;
    i32* %i = alloc i32;
    store i32* %i with i32 0;
    ubr [ ^while.body i32* %n, i32* %val, i32** %arr, i32* %i, i32* %E, [10 * [10 * i32]]* %to, i32* %V, [10 * i32]* %size, [10 * [10 * i32]]* %cap, [10 * [10 * i32]]* %rev, [10 * i32]* %used, i32* %0, i32 0, i32 0 ];
^while.body(i32* %arg, i32* %arg1, i32** %arg2, i32* %arg3, i32* %arg4, [10 * [10 * i32]]* %arg5, i32* %arg6, [10 * i32]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32* %arg11, i32 %arg12, i32 %arg13):
    i32* %0 = getelementptr &(i32* %arg11)[i32 %arg13];
    store i32* %0 with i32 %arg12;
    i32 %1 = load i32* %arg;
    i32 %2 = load i32* %arg1;
    i32* %3 = load i32** %arg2;
    i32 %4 = load i32* %arg4;
    i32 %5 = load i32* %arg6;
    i32 %6 = add i32 %arg13, i32 1;
    store i32* %arg3 with i32 %6;
    i1 %7 = scmp lt i32 %6, i32 %1;
    cbr i1 %7, [ ^while.body i32* %arg, i32* %arg1, i32** %arg2, i32* %arg3, i32* %arg4, [10 * [10 * i32]]* %arg5, i32* %arg6, [10 * i32]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32* %3, i32 %2, i32 %6 ], [ ^b i32** %arg2, i32* %arg1, i32* %arg, i32* %arg3, i32* %arg4, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32 %5, i32 %4 ];
^b(i32** %arg, i32* %arg1, i32* %arg2, i32* %arg3, i32* %arg4, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * i32]* %arg9, i32 %arg10, i32 %arg11):
    free i32* %arg3;
    free i32* %arg2;
    free i32* %arg1;
    free i32** %arg;
    i1 %0 = scmp gt i32 %arg11, i32 0;
    cbr i1 %0, [ ^while.body1 i32* %arg4, [10 * i32]* %arg9, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg6, i32 %arg10, i32 %arg11 ], [ ^b1 [10 * i32]* %arg9, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg6, i32 %arg10 ];
^b1([10 * i32]* %arg, [10 * [10 * i32]]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, i32 %arg5):
    i32* %s = alloc i32;
    store i32* %s with i32 1;
    i32* %t = alloc i32;
    store i32* %t with i32 %arg5;
    i32* %flow = alloc i32;
    store i32* %flow with i32 0;
    ubr [ ^while.body2 i32* %flow, i32* %t, i32* %s, [10 * [10 * i32]]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg4, [10 * i32]* %arg ];
^while.body1(i32* %arg, [10 * i32]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg5, i32 %arg6, i32 %arg7):
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    i32 %2 = call () -> i32 @getint();
    [10 * i32]* %3 = getelementptr &([10 * [10 * i32]]* %arg4)[i32 0][i32 %0];
    i32* %4 = getelementptr &([10 * i32]* %arg5)[i32 0][i32 %0];
    i32 %5 = load i32* %4;
    i32* %6 = getelementptr &([10 * i32]* %3)[i32 0][i32 %5];
    store i32* %6 with i32 %1;
    [10 * i32]* %7 = getelementptr &([10 * [10 * i32]]* %arg3)[i32 0][i32 %0];
    i32* %8 = getelementptr &([10 * i32]* %7)[i32 0][i32 %5];
    store i32* %8 with i32 %2;
    [10 * i32]* %9 = getelementptr &([10 * [10 * i32]]* %arg2)[i32 0][i32 %0];
    i32* %10 = getelementptr &([10 * i32]* %9)[i32 0][i32 %5];
    i32* %11 = getelementptr &([10 * i32]* %arg5)[i32 0][i32 %1];
    i32 %12 = load i32* %11;
    store i32* %10 with i32 %12;
    [10 * i32]* %13 = getelementptr &([10 * [10 * i32]]* %arg4)[i32 0][i32 %1];
    i32* %14 = getelementptr &([10 * i32]* %13)[i32 0][i32 %12];
    store i32* %14 with i32 %0;
    [10 * i32]* %15 = getelementptr &([10 * [10 * i32]]* %arg3)[i32 0][i32 %1];
    i32* %16 = getelementptr &([10 * i32]* %15)[i32 0][i32 %12];
    store i32* %16 with i32 0;
    [10 * i32]* %17 = getelementptr &([10 * [10 * i32]]* %arg2)[i32 0][i32 %1];
    i32* %18 = getelementptr &([10 * i32]* %17)[i32 0][i32 %12];
    store i32* %18 with i32 %5;
    i32 %19 = add i32 %5, i32 1;
    store i32* %4 with i32 %19;
    i32 %20 = add i32 %12, i32 1;
    store i32* %11 with i32 %20;
    i32 %21 = sub i32 %arg7, i32 1;
    store i32* %arg with i32 %21;
    i1 %22 = scmp gt i32 %21, i32 0;
    cbr i1 %22, [ ^while.body1 i32* %arg, [10 * i32]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg5, i32 %arg6, i32 %21 ], [ ^b1 [10 * i32]* %arg1, [10 * [10 * i32]]* %arg2, [10 * [10 * i32]]* %arg3, [10 * [10 * i32]]* %arg4, [10 * i32]* %arg5, i32 %arg6 ];
^while.body2(i32* %arg, i32* %arg1, i32* %arg2, [10 * [10 * i32]]* %arg3, [10 * [10 * i32]]* %arg4, [10 * [10 * i32]]* %arg5, [10 * i32]* %arg6, [10 * i32]* %arg7):
    i32* %0 = getelementptr &([10 * i32]* %arg7)[i32 0][i32 0];
    i32** %arr = alloc i32*;
    store i32** %arr with i32* %0;
    i32* %val = alloc i32;
    store i32* %val with i32 0;
    i32* %n = alloc i32;
    store i32* %n with i32 10;
    i32* %i = alloc i32;
    store i32* %i with i32 0;
    ubr [ ^while.body3 i32* %n, i32* %val, i32** %arr, i32* %i, i32* %arg2, i32* %arg1, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg5, [10 * [10 * i32]]* %arg4, [10 * [10 * i32]]* %arg3, [10 * i32]* %arg7, i32* %arg, i32* %0, i32 0, i32 0 ];
^while.body3(i32* %arg, i32* %arg1, i32** %arg2, i32* %arg3, i32* %arg4, i32* %arg5, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32* %arg11, i32* %arg12, i32 %arg13, i32 %arg14):
    i32* %0 = getelementptr &(i32* %arg12)[i32 %arg14];
    store i32* %0 with i32 %arg13;
    i32 %1 = load i32* %arg;
    i32 %2 = load i32* %arg1;
    i32* %3 = load i32** %arg2;
    i32 %4 = load i32* %arg5;
    i32 %5 = load i32* %arg4;
    i32 %6 = add i32 %arg14, i32 1;
    store i32* %arg3 with i32 %6;
    i1 %7 = scmp lt i32 %6, i32 %1;
    cbr i1 %7, [ ^while.body3 i32* %arg, i32* %arg1, i32** %arg2, i32* %arg3, i32* %arg4, i32* %arg5, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32* %arg11, i32* %3, i32 %2, i32 %6 ], [ ^b2 i32** %arg2, i32* %arg1, i32* %arg, i32* %arg3, i32* %arg4, i32* %arg5, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32* %arg11, i32 %5, i32 %4 ];
^b2(i32** %arg, i32* %arg1, i32* %arg2, i32* %arg3, i32* %arg4, i32* %arg5, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10, i32* %arg11, i32 %arg12, i32 %arg13):
    free i32* %arg3;
    free i32* %arg2;
    free i32* %arg1;
    free i32** %arg;
    i32 %0 = call (i32, i32, i32, [10 * i32]*, [10 * [10 * i32]]*, [10 * [10 * i32]]*, [10 * [10 * i32]]*, [10 * i32]*) -> i32 @dfs(i32 %arg12, i32 %arg13, i32 1879048192, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, [10 * i32]* %arg10);
    i32 %1 = load i32* %arg11;
    i1 %2 = scmp eq i32 %0, i32 0;
    cbr i1 %2, [ ^if.then i32 %1 ], [ ^indirect i32* %arg5, i32* %arg4, i32* %arg11, i32 %0, [10 * i32]* %arg10, [10 * i32]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg9, i32 %1 ];
^indirect(i32* %arg, i32* %arg1, i32* %arg2, i32 %arg3, [10 * i32]* %arg4, [10 * i32]* %arg5, [10 * [10 * i32]]* %arg6, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg8, i32 %arg9):
    i32 %0 = add i32 %arg9, i32 %arg3;
    store i32* %arg2 with i32 %0;
    ubr [ ^while.body2 i32* %arg2, i32* %arg, i32* %arg1, [10 * [10 * i32]]* %arg8, [10 * [10 * i32]]* %arg7, [10 * [10 * i32]]* %arg6, [10 * i32]* %arg5, [10 * i32]* %arg4 ];
^if.then(i32 %arg):
    call (i32) -> void @putint(i32 %arg);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
}
