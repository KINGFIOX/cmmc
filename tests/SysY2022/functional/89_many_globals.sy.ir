internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal i32* @a0;
internal i32* @a1;
internal i32* @a2;
internal i32* @a3;
internal i32* @a4;
internal i32* @a5;
internal i32* @a6;
internal i32* @a7;
internal i32* @a8;
internal i32* @a9;
internal i32* @a10;
internal i32* @a11;
internal i32* @a12;
internal i32* @a13;
internal i32* @a14;
internal i32* @a15;
internal i32* @a16;
internal i32* @a17;
internal i32* @a18;
internal i32* @a19;
internal i32* @a20;
internal i32* @a21;
internal i32* @a22;
internal i32* @a23;
internal i32* @a24;
internal i32* @a25;
internal i32* @a26;
internal i32* @a27;
internal i32* @a28;
internal i32* @a29;
internal i32* @a30;
internal i32* @a31;
internal i32* @a32;
internal i32* @a33;
internal i32* @a34;
internal i32* @a35;
internal i32* @a36;
internal i32* @a37;
internal i32* @a38;
internal i32* @a39;
internal func @testParam8(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7) -> i32 {
^entry:
    i32* %a71 = alloc i32;
    i32* %a61 = alloc i32;
    i32* %a51 = alloc i32;
    i32* %a41 = alloc i32;
    i32* %a31 = alloc i32;
    i32* %a21 = alloc i32;
    i32* %a11 = alloc i32;
    i32* %a01 = alloc i32;
    store i32* %a01 with i32 %a0;
    store i32* %a11 with i32 %a1;
    store i32* %a21 with i32 %a2;
    store i32* %a31 with i32 %a3;
    store i32* %a41 with i32 %a4;
    store i32* %a51 with i32 %a5;
    store i32* %a61 with i32 %a6;
    store i32* %a71 with i32 %a7;
    i32 %0 = load i32* %a01;
    i32 %1 = load i32* %a11;
    i32 %2 = add i32 %0, i32 %1;
    i32 %3 = load i32* %a21;
    i32 %4 = add i32 %2, i32 %3;
    i32 %5 = load i32* %a31;
    i32 %6 = add i32 %4, i32 %5;
    i32 %7 = load i32* %a41;
    i32 %8 = add i32 %6, i32 %7;
    i32 %9 = load i32* %a51;
    i32 %10 = add i32 %8, i32 %9;
    i32 %11 = load i32* %a61;
    i32 %12 = add i32 %10, i32 %11;
    i32 %13 = load i32* %a71;
    i32 %14 = add i32 %12, i32 %13;
    ret i32 %14;
}
internal func @testParam16(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7, i32 %a8, i32 %a9, i32 %a10, i32 %a11, i32 %a12, i32 %a13, i32 %a14, i32 %a15) -> i32 {
^entry:
    i32* %a151 = alloc i32;
    i32* %a141 = alloc i32;
    i32* %a131 = alloc i32;
    i32* %a121 = alloc i32;
    i32* %a111 = alloc i32;
    i32* %a101 = alloc i32;
    i32* %a91 = alloc i32;
    i32* %a81 = alloc i32;
    i32* %a71 = alloc i32;
    i32* %a61 = alloc i32;
    i32* %a51 = alloc i32;
    i32* %a41 = alloc i32;
    i32* %a31 = alloc i32;
    i32* %a21 = alloc i32;
    i32* %a11 = alloc i32;
    i32* %a01 = alloc i32;
    store i32* %a01 with i32 %a0;
    store i32* %a11 with i32 %a1;
    store i32* %a21 with i32 %a2;
    store i32* %a31 with i32 %a3;
    store i32* %a41 with i32 %a4;
    store i32* %a51 with i32 %a5;
    store i32* %a61 with i32 %a6;
    store i32* %a71 with i32 %a7;
    store i32* %a81 with i32 %a8;
    store i32* %a91 with i32 %a9;
    store i32* %a101 with i32 %a10;
    store i32* %a111 with i32 %a11;
    store i32* %a121 with i32 %a12;
    store i32* %a131 with i32 %a13;
    store i32* %a141 with i32 %a14;
    store i32* %a151 with i32 %a15;
    i32 %0 = load i32* %a01;
    i32 %1 = load i32* %a11;
    i32 %2 = add i32 %0, i32 %1;
    i32 %3 = load i32* %a21;
    i32 %4 = add i32 %2, i32 %3;
    i32 %5 = load i32* %a31;
    i32 %6 = sub i32 %4, i32 %5;
    i32 %7 = load i32* %a41;
    i32 %8 = sub i32 %6, i32 %7;
    i32 %9 = load i32* %a51;
    i32 %10 = sub i32 %8, i32 %9;
    i32 %11 = load i32* %a61;
    i32 %12 = sub i32 %10, i32 %11;
    i32 %13 = load i32* %a71;
    i32 %14 = sub i32 %12, i32 %13;
    i32 %15 = load i32* %a81;
    i32 %16 = add i32 %14, i32 %15;
    i32 %17 = load i32* %a91;
    i32 %18 = add i32 %16, i32 %17;
    i32 %19 = load i32* %a101;
    i32 %20 = add i32 %18, i32 %19;
    i32 %21 = load i32* %a111;
    i32 %22 = add i32 %20, i32 %21;
    i32 %23 = load i32* %a121;
    i32 %24 = add i32 %22, i32 %23;
    i32 %25 = load i32* %a131;
    i32 %26 = add i32 %24, i32 %25;
    i32 %27 = load i32* %a141;
    i32 %28 = add i32 %26, i32 %27;
    i32 %29 = load i32* %a151;
    i32 %30 = add i32 %28, i32 %29;
    ret i32 %30;
}
internal func @testParam32(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7, i32 %a8, i32 %a9, i32 %a10, i32 %a11, i32 %a12, i32 %a13, i32 %a14, i32 %a15, i32 %a16, i32 %a17, i32 %a18, i32 %a19, i32 %a20, i32 %a21, i32 %a22, i32 %a23, i32 %a24, i32 %a25, i32 %a26, i32 %a27, i32 %a28, i32 %a29, i32 %a30, i32 %a31) -> i32 {
^entry:
    i32* %a311 = alloc i32;
    i32* %a301 = alloc i32;
    i32* %a291 = alloc i32;
    i32* %a281 = alloc i32;
    i32* %a271 = alloc i32;
    i32* %a261 = alloc i32;
    i32* %a251 = alloc i32;
    i32* %a241 = alloc i32;
    i32* %a231 = alloc i32;
    i32* %a221 = alloc i32;
    i32* %a211 = alloc i32;
    i32* %a201 = alloc i32;
    i32* %a191 = alloc i32;
    i32* %a181 = alloc i32;
    i32* %a171 = alloc i32;
    i32* %a161 = alloc i32;
    i32* %a151 = alloc i32;
    i32* %a141 = alloc i32;
    i32* %a131 = alloc i32;
    i32* %a121 = alloc i32;
    i32* %a111 = alloc i32;
    i32* %a101 = alloc i32;
    i32* %a91 = alloc i32;
    i32* %a81 = alloc i32;
    i32* %a71 = alloc i32;
    i32* %a61 = alloc i32;
    i32* %a51 = alloc i32;
    i32* %a41 = alloc i32;
    i32* %a31 = alloc i32;
    i32* %a21 = alloc i32;
    i32* %a11 = alloc i32;
    i32* %a01 = alloc i32;
    store i32* %a01 with i32 %a0;
    store i32* %a11 with i32 %a1;
    store i32* %a21 with i32 %a2;
    store i32* %a31 with i32 %a3;
    store i32* %a41 with i32 %a4;
    store i32* %a51 with i32 %a5;
    store i32* %a61 with i32 %a6;
    store i32* %a71 with i32 %a7;
    store i32* %a81 with i32 %a8;
    store i32* %a91 with i32 %a9;
    store i32* %a101 with i32 %a10;
    store i32* %a111 with i32 %a11;
    store i32* %a121 with i32 %a12;
    store i32* %a131 with i32 %a13;
    store i32* %a141 with i32 %a14;
    store i32* %a151 with i32 %a15;
    store i32* %a161 with i32 %a16;
    store i32* %a171 with i32 %a17;
    store i32* %a181 with i32 %a18;
    store i32* %a191 with i32 %a19;
    store i32* %a201 with i32 %a20;
    store i32* %a211 with i32 %a21;
    store i32* %a221 with i32 %a22;
    store i32* %a231 with i32 %a23;
    store i32* %a241 with i32 %a24;
    store i32* %a251 with i32 %a25;
    store i32* %a261 with i32 %a26;
    store i32* %a271 with i32 %a27;
    store i32* %a281 with i32 %a28;
    store i32* %a291 with i32 %a29;
    store i32* %a301 with i32 %a30;
    store i32* %a311 with i32 %a31;
    i32 %0 = load i32* %a01;
    i32 %1 = load i32* %a11;
    i32 %2 = add i32 %0, i32 %1;
    i32 %3 = load i32* %a21;
    i32 %4 = add i32 %2, i32 %3;
    i32 %5 = load i32* %a31;
    i32 %6 = add i32 %4, i32 %5;
    i32 %7 = load i32* %a41;
    i32 %8 = add i32 %6, i32 %7;
    i32 %9 = load i32* %a51;
    i32 %10 = add i32 %8, i32 %9;
    i32 %11 = load i32* %a61;
    i32 %12 = add i32 %10, i32 %11;
    i32 %13 = load i32* %a71;
    i32 %14 = add i32 %12, i32 %13;
    i32 %15 = load i32* %a81;
    i32 %16 = add i32 %14, i32 %15;
    i32 %17 = load i32* %a91;
    i32 %18 = add i32 %16, i32 %17;
    i32 %19 = load i32* %a101;
    i32 %20 = add i32 %18, i32 %19;
    i32 %21 = load i32* %a111;
    i32 %22 = add i32 %20, i32 %21;
    i32 %23 = load i32* %a121;
    i32 %24 = add i32 %22, i32 %23;
    i32 %25 = load i32* %a131;
    i32 %26 = add i32 %24, i32 %25;
    i32 %27 = load i32* %a141;
    i32 %28 = add i32 %26, i32 %27;
    i32 %29 = load i32* %a151;
    i32 %30 = add i32 %28, i32 %29;
    i32 %31 = load i32* %a161;
    i32 %32 = add i32 %30, i32 %31;
    i32 %33 = load i32* %a171;
    i32 %34 = add i32 %32, i32 %33;
    i32 %35 = load i32* %a181;
    i32 %36 = sub i32 %34, i32 %35;
    i32 %37 = load i32* %a191;
    i32 %38 = sub i32 %36, i32 %37;
    i32 %39 = load i32* %a201;
    i32 %40 = sub i32 %38, i32 %39;
    i32 %41 = load i32* %a211;
    i32 %42 = sub i32 %40, i32 %41;
    i32 %43 = load i32* %a221;
    i32 %44 = sub i32 %42, i32 %43;
    i32 %45 = load i32* %a231;
    i32 %46 = add i32 %44, i32 %45;
    i32 %47 = load i32* %a241;
    i32 %48 = add i32 %46, i32 %47;
    i32 %49 = load i32* %a251;
    i32 %50 = add i32 %48, i32 %49;
    i32 %51 = load i32* %a261;
    i32 %52 = add i32 %50, i32 %51;
    i32 %53 = load i32* %a271;
    i32 %54 = add i32 %52, i32 %53;
    i32 %55 = load i32* %a281;
    i32 %56 = add i32 %54, i32 %55;
    i32 %57 = load i32* %a291;
    i32 %58 = add i32 %56, i32 %57;
    i32 %59 = load i32* %a301;
    i32 %60 = add i32 %58, i32 %59;
    i32 %61 = load i32* %a311;
    i32 %62 = add i32 %60, i32 %61;
    ret i32 %62;
}
func @main() -> i32 { Entry } {
^entry:
    store i32* @a0 with i32 0;
    store i32* @a1 with i32 1;
    store i32* @a2 with i32 2;
    store i32* @a3 with i32 3;
    store i32* @a4 with i32 4;
    store i32* @a5 with i32 5;
    store i32* @a6 with i32 6;
    store i32* @a7 with i32 7;
    store i32* @a8 with i32 8;
    store i32* @a9 with i32 9;
    store i32* @a10 with i32 0;
    store i32* @a11 with i32 1;
    store i32* @a12 with i32 2;
    store i32* @a13 with i32 3;
    store i32* @a14 with i32 4;
    store i32* @a15 with i32 5;
    store i32* @a16 with i32 6;
    store i32* @a17 with i32 7;
    store i32* @a18 with i32 8;
    store i32* @a19 with i32 9;
    store i32* @a20 with i32 0;
    store i32* @a21 with i32 1;
    store i32* @a22 with i32 2;
    store i32* @a23 with i32 3;
    store i32* @a24 with i32 4;
    store i32* @a25 with i32 5;
    store i32* @a26 with i32 6;
    store i32* @a27 with i32 7;
    store i32* @a28 with i32 8;
    store i32* @a29 with i32 9;
    store i32* @a30 with i32 0;
    store i32* @a31 with i32 1;
    store i32* @a32 with i32 4;
    store i32* @a33 with i32 5;
    store i32* @a34 with i32 6;
    store i32* @a35 with i32 7;
    store i32* @a36 with i32 8;
    store i32* @a37 with i32 9;
    store i32* @a38 with i32 0;
    store i32* @a39 with i32 1;
    i32 %0 = load i32* @a0;
    i32 %1 = load i32* @a1;
    i32 %2 = load i32* @a2;
    i32 %3 = load i32* @a3;
    i32 %4 = load i32* @a4;
    i32 %5 = load i32* @a5;
    i32 %6 = load i32* @a6;
    i32 %7 = load i32* @a7;
    i32 %8 = call (i32, i32, i32, i32, i32, i32, i32, i32) -> i32 @testParam8(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7);
    store i32* @a0 with i32 %8;
    i32 %9 = load i32* @a0;
    call (i32) -> void @putint(i32 %9);
    i32 %10 = load i32* @a32;
    i32 %11 = load i32* @a33;
    i32 %12 = load i32* @a34;
    i32 %13 = load i32* @a35;
    i32 %14 = load i32* @a36;
    i32 %15 = load i32* @a37;
    i32 %16 = load i32* @a38;
    i32 %17 = load i32* @a39;
    i32 %18 = load i32* @a8;
    i32 %19 = load i32* @a9;
    i32 %20 = load i32* @a10;
    i32 %21 = load i32* @a11;
    i32 %22 = load i32* @a12;
    i32 %23 = load i32* @a13;
    i32 %24 = load i32* @a14;
    i32 %25 = load i32* @a15;
    i32 %26 = call (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) -> i32 @testParam16(i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22, i32 %23, i32 %24, i32 %25);
    store i32* @a0 with i32 %26;
    i32 %27 = load i32* @a0;
    call (i32) -> void @putint(i32 %27);
    i32 %28 = load i32* @a0;
    i32 %29 = load i32* @a1;
    i32 %30 = load i32* @a2;
    i32 %31 = load i32* @a3;
    i32 %32 = load i32* @a4;
    i32 %33 = load i32* @a5;
    i32 %34 = load i32* @a6;
    i32 %35 = load i32* @a7;
    i32 %36 = load i32* @a8;
    i32 %37 = load i32* @a9;
    i32 %38 = load i32* @a10;
    i32 %39 = load i32* @a11;
    i32 %40 = load i32* @a12;
    i32 %41 = load i32* @a13;
    i32 %42 = load i32* @a14;
    i32 %43 = load i32* @a15;
    i32 %44 = load i32* @a16;
    i32 %45 = load i32* @a17;
    i32 %46 = load i32* @a18;
    i32 %47 = load i32* @a19;
    i32 %48 = load i32* @a20;
    i32 %49 = load i32* @a21;
    i32 %50 = load i32* @a22;
    i32 %51 = load i32* @a23;
    i32 %52 = load i32* @a24;
    i32 %53 = load i32* @a25;
    i32 %54 = load i32* @a26;
    i32 %55 = load i32* @a27;
    i32 %56 = load i32* @a28;
    i32 %57 = load i32* @a29;
    i32 %58 = load i32* @a30;
    i32 %59 = load i32* @a31;
    i32 %60 = call (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) -> i32 @testParam32(i32 %28, i32 %29, i32 %30, i32 %31, i32 %32, i32 %33, i32 %34, i32 %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 %40, i32 %41, i32 %42, i32 %43, i32 %44, i32 %45, i32 %46, i32 %47, i32 %48, i32 %49, i32 %50, i32 %51, i32 %52, i32 %53, i32 %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59);
    store i32* @a0 with i32 %60;
    i32 %61 = load i32* @a0;
    call (i32) -> void @putint(i32 %61);
    ret i32 0;
}
