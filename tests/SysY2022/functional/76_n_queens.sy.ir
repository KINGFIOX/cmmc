internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @f(i32, [50 * i32]*, i32*, i32*, [50 * i32]*, [50 * i32]*, [100 * i32]*) -> void {
^entry(i32 %arg, [50 * i32]* %arg1, i32* %arg2, i32* %arg3, [50 * i32]* %arg4, [50 * i32]* %arg5, [100 * i32]* %arg6):
    i32* %step = alloc i32;
    store i32* %step with i32 %arg;
    i32* %i = alloc i32;
    store i32* %i with i32 1;
    i32 %0 = load i32* %arg3;
    i1 %1 = scmp le i32 1, i32 %0;
    cbr i1 %1, [ ^while.body i32* %step, i32* %i, [50 * i32]* %arg5, i32* %arg3, [100 * i32]* %arg6, [50 * i32]* %arg1, i32* %arg2, [50 * i32]* %arg4, i32 1 ], [ ^b i32* %step, i32* %i ];
^while.body(i32* %arg, i32* %arg1, [50 * i32]* %arg2, i32* %arg3, [100 * i32]* %arg4, [50 * i32]* %arg5, i32* %arg6, [50 * i32]* %arg7, i32 %arg8):
    i32* %0 = getelementptr &([50 * i32]* %arg7)[i32 0][i32 %arg8];
    i32 %1 = load i32* %0;
    i1 %2 = scmp neq i32 %1, i32 1;
    cbr i1 %2, [ ^indirect1 i32* %arg1, i32* %arg, i32 %arg8, i32* %arg6, [50 * i32]* %arg7, [50 * i32]* %arg5, [100 * i32]* %arg4, i32* %arg3, [50 * i32]* %arg2 ], [ ^indirect i32* %arg, i32* %arg1, [50 * i32]* %arg7, i32* %arg6, [50 * i32]* %arg5, [100 * i32]* %arg4, [50 * i32]* %arg2, i32* %arg3 ];
^b(i32* %arg, i32* %arg1):
    free i32* %arg1;
    free i32* %arg;
    ret;
^indirect(i32* %arg, i32* %arg1, [50 * i32]* %arg2, i32* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7):
    i32 %0 = load i32* %arg1;
    ubr [ ^indirect3 i32* %arg, i32* %arg1, [50 * i32]* %arg2, i32* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7, i32 %0 ];
^indirect1(i32* %arg, i32* %arg1, i32 %arg2, i32* %arg3, [50 * i32]* %arg4, [50 * i32]* %arg5, [100 * i32]* %arg6, i32* %arg7, [50 * i32]* %arg8):
    i32 %0 = load i32* %arg1;
    i32 %1 = add i32 %0, i32 %arg2;
    i32* %2 = getelementptr &([50 * i32]* %arg8)[i32 0][i32 %1];
    i32 %3 = load i32* %2;
    i1 %4 = scmp eq i32 %3, i32 0;
    cbr i1 %4, [ ^indirect2 i32* %arg, i32* %arg1, i32* %arg3, [50 * i32]* %arg4, [50 * i32]* %arg8, [50 * i32]* %arg5, [100 * i32]* %arg6, i32* %arg7, i32 %0 ], [ ^indirect i32* %arg1, i32* %arg, [50 * i32]* %arg4, i32* %arg3, [50 * i32]* %arg5, [100 * i32]* %arg6, [50 * i32]* %arg8, i32* %arg7 ];
^indirect2(i32* %arg, i32* %arg1, i32* %arg2, [50 * i32]* %arg3, [50 * i32]* %arg4, [50 * i32]* %arg5, [100 * i32]* %arg6, i32* %arg7, i32 %arg8):
    i32 %0 = load i32* %arg7;
    i32 %1 = add i32 %0, i32 %arg8;
    i32 %2 = load i32* %arg;
    i32 %3 = sub i32 %1, i32 %2;
    i32* %4 = getelementptr &([100 * i32]* %arg6)[i32 0][i32 %3];
    i32 %5 = load i32* %4;
    i1 %6 = scmp neq i32 %5, i32 0;
    i1 %7 = xor i1 %6, i1 true;
    cbr i1 %7, [ ^indirect4 i32* %arg, i32* %arg1, i32* %arg2, [50 * i32]* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg6, i32* %arg7, [50 * i32]* %arg5, i32 %2 ], [ ^indirect3 i32* %arg1, i32* %arg, [50 * i32]* %arg3, i32* %arg2, [50 * i32]* %arg5, [100 * i32]* %arg6, [50 * i32]* %arg4, i32* %arg7, i32 %2 ];
^indirect3(i32* %arg, i32* %arg1, [50 * i32]* %arg2, i32* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7, i32 %arg8):
    i32 %0 = add i32 %arg8, i32 1;
    store i32* %arg1 with i32 %0;
    i32 %1 = load i32* %arg7;
    i1 %2 = scmp le i32 %0, i32 %1;
    cbr i1 %2, [ ^while.body i32* %arg, i32* %arg1, [50 * i32]* %arg6, i32* %arg7, [100 * i32]* %arg5, [50 * i32]* %arg4, i32* %arg3, [50 * i32]* %arg2, i32 %0 ], [ ^b i32* %arg, i32* %arg1 ];
^indirect4(i32* %arg, i32* %arg1, i32* %arg2, [50 * i32]* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg5, i32* %arg6, [50 * i32]* %arg7, i32 %arg8):
    i32 %0 = load i32* %arg1;
    i32* %1 = getelementptr &([50 * i32]* %arg7)[i32 0][i32 %0];
    store i32* %1 with i32 %arg8;
    i32 %2 = load i32* %arg6;
    i1 %3 = scmp eq i32 %0, i32 %2;
    cbr i1 %3, [ ^entry1 [50 * i32]* %arg7, i32* %arg2, i32* %arg6, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg7, i32* %arg2, i32* %arg1, i32* %arg6, [50 * i32]* %arg3, i32* %arg ], [ ^b1 i32* %arg1, i32* %arg, i32 %2, i32 %arg8, i32* %arg6, i32* %arg2, [50 * i32]* %arg7, [100 * i32]* %arg5, [50 * i32]* %arg4, [50 * i32]* %arg3 ];
^entry1([50 * i32]* %arg, i32* %arg1, i32* %arg2, [50 * i32]* %arg3, [100 * i32]* %arg4, [50 * i32]* %arg5, i32* %arg6, i32* %arg7, i32* %arg8, [50 * i32]* %arg9, i32* %arg10):
    i32 %0 = load i32* %arg1;
    i32 %1 = add i32 %0, i32 1;
    store i32* %arg1 with i32 %1;
    i32* %i = alloc i32;
    store i32* %i with i32 1;
    i32 %2 = load i32* %arg2;
    i1 %3 = scmp le i32 1, i32 %2;
    cbr i1 %3, [ ^indirect5 i32* %i, i32 %2, i32* %arg2, [50 * i32]* %arg, [50 * i32]* %arg3, [100 * i32]* %arg4, [50 * i32]* %arg5, i32* %arg6, i32* %arg7, i32* %arg8, [50 * i32]* %arg9, i32* %arg10, i32 1 ], [ ^b2 i32* %i, i32* %arg10, [50 * i32]* %arg9, i32* %arg8, i32* %arg7, i32* %arg6, [50 * i32]* %arg5, [100 * i32]* %arg4, [50 * i32]* %arg3 ];
^b1(i32* %arg, i32* %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32* %arg5, [50 * i32]* %arg6, [100 * i32]* %arg7, [50 * i32]* %arg8, [50 * i32]* %arg9):
    i32* %0 = getelementptr &([50 * i32]* %arg9)[i32 0][i32 %arg3];
    store i32* %0 with i32 1;
    i32 %1 = load i32* %arg;
    i32 %2 = add i32 %1, i32 %arg3;
    i32* %3 = getelementptr &([50 * i32]* %arg8)[i32 0][i32 %2];
    store i32* %3 with i32 1;
    i32 %4 = add i32 %arg2, i32 %1;
    i32 %5 = sub i32 %4, i32 %arg3;
    i32* %6 = getelementptr &([100 * i32]* %arg7)[i32 0][i32 %5];
    store i32* %6 with i32 1;
    i32 %7 = add i32 %1, i32 1;
    call (i32, [50 * i32]*, i32*, i32*, [50 * i32]*, [50 * i32]*, [100 * i32]*) -> void @f(i32 %7, [50 * i32]* %arg6, i32* %arg5, i32* %arg4, [50 * i32]* %arg9, [50 * i32]* %arg8, [100 * i32]* %arg7);
    i32 %8 = load i32* %arg1;
    i32* %9 = getelementptr &([50 * i32]* %arg9)[i32 0][i32 %8];
    store i32* %9 with i32 0;
    i32 %10 = load i32* %arg;
    i32 %11 = add i32 %10, i32 %8;
    i32* %12 = getelementptr &([50 * i32]* %arg8)[i32 0][i32 %11];
    store i32* %12 with i32 0;
    i32 %13 = load i32* %arg4;
    i32 %14 = add i32 %13, i32 %10;
    i32 %15 = sub i32 %14, i32 %8;
    i32* %16 = getelementptr &([100 * i32]* %arg7)[i32 0][i32 %15];
    store i32* %16 with i32 0;
    i32 %17 = add i32 %8, i32 1;
    store i32* %arg1 with i32 %17;
    i1 %18 = scmp le i32 %17, i32 %13;
    cbr i1 %18, [ ^while.body i32* %arg, i32* %arg1, [50 * i32]* %arg8, i32* %arg4, [100 * i32]* %arg7, [50 * i32]* %arg6, i32* %arg5, [50 * i32]* %arg9, i32 %17 ], [ ^b i32* %arg, i32* %arg1 ];
^b2(i32* %arg, i32* %arg1, [50 * i32]* %arg2, i32* %arg3, i32* %arg4, i32* %arg5, [50 * i32]* %arg6, [100 * i32]* %arg7, [50 * i32]* %arg8):
    free i32* %arg;
    i32 %0 = load i32* %arg1;
    i32 %1 = load i32* %arg3;
    ubr [ ^b1 i32* %arg4, i32* %arg1, i32 %1, i32 %0, i32* %arg3, i32* %arg5, [50 * i32]* %arg6, [100 * i32]* %arg7, [50 * i32]* %arg8, [50 * i32]* %arg2 ];
^indirect5(i32* %arg, i32 %arg1, i32* %arg2, [50 * i32]* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7, i32* %arg8, i32* %arg9, [50 * i32]* %arg10, i32* %arg11, i32 %arg12):
    i32* %0 = getelementptr &([50 * i32]* %arg3)[i32 0][i32 %arg12];
    i32 %1 = load i32* %0;
    call (i32) -> void @putint(i32 %1);
    i1 %2 = scmp eq i32 %arg12, i32 %arg1;
    cbr i1 %2, [ ^if.then i32* %arg11, [50 * i32]* %arg10, i32* %arg9, i32* %arg8, i32* %arg7, [50 * i32]* %arg6, [100 * i32]* %arg5, [50 * i32]* %arg4 ], [ ^indirect6 i32* %arg, i32 %arg12, [50 * i32]* %arg3, i32* %arg2, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7, i32* %arg8, i32* %arg9, [50 * i32]* %arg10, i32* %arg11 ];
^if.then(i32* %arg, [50 * i32]* %arg1, i32* %arg2, i32* %arg3, i32* %arg4, [50 * i32]* %arg5, [100 * i32]* %arg6, [50 * i32]* %arg7):
    call (i32) -> void @putch(i32 10);
    i32 %0 = load i32* %arg;
    i32 %1 = load i32* %arg2;
    ubr [ ^b1 i32* %arg3, i32* %arg, i32 %1, i32 %0, i32* %arg2, i32* %arg4, [50 * i32]* %arg5, [100 * i32]* %arg6, [50 * i32]* %arg7, [50 * i32]* %arg1 ];
^indirect6(i32* %arg, i32 %arg1, [50 * i32]* %arg2, i32* %arg3, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7, i32* %arg8, i32* %arg9, [50 * i32]* %arg10, i32* %arg11):
    call (i32) -> void @putch(i32 32);
    i32 %0 = add i32 %arg1, i32 1;
    store i32* %arg with i32 %0;
    i32 %1 = load i32* %arg3;
    i1 %2 = scmp le i32 %0, i32 %1;
    cbr i1 %2, [ ^indirect5 i32* %arg, i32 %1, i32* %arg3, [50 * i32]* %arg2, [50 * i32]* %arg4, [100 * i32]* %arg5, [50 * i32]* %arg6, i32* %arg7, i32* %arg8, i32* %arg9, [50 * i32]* %arg10, i32* %arg11, i32 %0 ], [ ^b2 i32* %arg, i32* %arg11, [50 * i32]* %arg10, i32* %arg9, i32* %arg8, i32* %arg7, [50 * i32]* %arg6, [100 * i32]* %arg5, [50 * i32]* %arg4 ];
}
func @main() -> i32 { NoRecurse } {
^entry():
    [50 * i32]* %ans = alloc [50 * i32];
    i32* %0 = getelementptr &([50 * i32]* %ans)[i32 0][i32 0];
    store i32* %0 with i32 0;
    i32* %1 = getelementptr &([50 * i32]* %ans)[i32 0][i32 1];
    store i32* %1 with i32 0;
    i32* %2 = getelementptr &([50 * i32]* %ans)[i32 0][i32 2];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &([50 * i32]* %ans)[i32 0][i32 3];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([50 * i32]* %ans)[i32 0][i32 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([50 * i32]* %ans)[i32 0][i32 5];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([50 * i32]* %ans)[i32 0][i32 6];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &([50 * i32]* %ans)[i32 0][i32 7];
    store i32* %7 with i32 0;
    i32* %8 = getelementptr &([50 * i32]* %ans)[i32 0][i32 8];
    store i32* %8 with i32 0;
    i32* %9 = getelementptr &([50 * i32]* %ans)[i32 0][i32 9];
    store i32* %9 with i32 0;
    i32* %10 = getelementptr &([50 * i32]* %ans)[i32 0][i32 10];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &([50 * i32]* %ans)[i32 0][i32 11];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &([50 * i32]* %ans)[i32 0][i32 12];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &([50 * i32]* %ans)[i32 0][i32 13];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &([50 * i32]* %ans)[i32 0][i32 14];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &([50 * i32]* %ans)[i32 0][i32 15];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &([50 * i32]* %ans)[i32 0][i32 16];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &([50 * i32]* %ans)[i32 0][i32 17];
    store i32* %17 with i32 0;
    i32* %18 = getelementptr &([50 * i32]* %ans)[i32 0][i32 18];
    store i32* %18 with i32 0;
    i32* %19 = getelementptr &([50 * i32]* %ans)[i32 0][i32 19];
    store i32* %19 with i32 0;
    i32* %20 = getelementptr &([50 * i32]* %ans)[i32 0][i32 20];
    store i32* %20 with i32 0;
    i32* %21 = getelementptr &([50 * i32]* %ans)[i32 0][i32 21];
    store i32* %21 with i32 0;
    i32* %22 = getelementptr &([50 * i32]* %ans)[i32 0][i32 22];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &([50 * i32]* %ans)[i32 0][i32 23];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &([50 * i32]* %ans)[i32 0][i32 24];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &([50 * i32]* %ans)[i32 0][i32 25];
    store i32* %25 with i32 0;
    i32* %26 = getelementptr &([50 * i32]* %ans)[i32 0][i32 26];
    store i32* %26 with i32 0;
    i32* %27 = getelementptr &([50 * i32]* %ans)[i32 0][i32 27];
    store i32* %27 with i32 0;
    i32* %28 = getelementptr &([50 * i32]* %ans)[i32 0][i32 28];
    store i32* %28 with i32 0;
    i32* %29 = getelementptr &([50 * i32]* %ans)[i32 0][i32 29];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &([50 * i32]* %ans)[i32 0][i32 30];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &([50 * i32]* %ans)[i32 0][i32 31];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &([50 * i32]* %ans)[i32 0][i32 32];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &([50 * i32]* %ans)[i32 0][i32 33];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &([50 * i32]* %ans)[i32 0][i32 34];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &([50 * i32]* %ans)[i32 0][i32 35];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &([50 * i32]* %ans)[i32 0][i32 36];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &([50 * i32]* %ans)[i32 0][i32 37];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &([50 * i32]* %ans)[i32 0][i32 38];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &([50 * i32]* %ans)[i32 0][i32 39];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &([50 * i32]* %ans)[i32 0][i32 40];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &([50 * i32]* %ans)[i32 0][i32 41];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &([50 * i32]* %ans)[i32 0][i32 42];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &([50 * i32]* %ans)[i32 0][i32 43];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &([50 * i32]* %ans)[i32 0][i32 44];
    store i32* %44 with i32 0;
    i32* %45 = getelementptr &([50 * i32]* %ans)[i32 0][i32 45];
    store i32* %45 with i32 0;
    i32* %46 = getelementptr &([50 * i32]* %ans)[i32 0][i32 46];
    store i32* %46 with i32 0;
    i32* %47 = getelementptr &([50 * i32]* %ans)[i32 0][i32 47];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &([50 * i32]* %ans)[i32 0][i32 48];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &([50 * i32]* %ans)[i32 0][i32 49];
    store i32* %49 with i32 0;
    i32* %sum = alloc i32;
    store i32* %sum with i32 0;
    i32* %n = alloc i32;
    [50 * i32]* %row = alloc [50 * i32];
    i32* %50 = getelementptr &([50 * i32]* %row)[i32 0][i32 0];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &([50 * i32]* %row)[i32 0][i32 1];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &([50 * i32]* %row)[i32 0][i32 2];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &([50 * i32]* %row)[i32 0][i32 3];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([50 * i32]* %row)[i32 0][i32 4];
    store i32* %54 with i32 0;
    i32* %55 = getelementptr &([50 * i32]* %row)[i32 0][i32 5];
    store i32* %55 with i32 0;
    i32* %56 = getelementptr &([50 * i32]* %row)[i32 0][i32 6];
    store i32* %56 with i32 0;
    i32* %57 = getelementptr &([50 * i32]* %row)[i32 0][i32 7];
    store i32* %57 with i32 0;
    i32* %58 = getelementptr &([50 * i32]* %row)[i32 0][i32 8];
    store i32* %58 with i32 0;
    i32* %59 = getelementptr &([50 * i32]* %row)[i32 0][i32 9];
    store i32* %59 with i32 0;
    i32* %60 = getelementptr &([50 * i32]* %row)[i32 0][i32 10];
    store i32* %60 with i32 0;
    i32* %61 = getelementptr &([50 * i32]* %row)[i32 0][i32 11];
    store i32* %61 with i32 0;
    i32* %62 = getelementptr &([50 * i32]* %row)[i32 0][i32 12];
    store i32* %62 with i32 0;
    i32* %63 = getelementptr &([50 * i32]* %row)[i32 0][i32 13];
    store i32* %63 with i32 0;
    i32* %64 = getelementptr &([50 * i32]* %row)[i32 0][i32 14];
    store i32* %64 with i32 0;
    i32* %65 = getelementptr &([50 * i32]* %row)[i32 0][i32 15];
    store i32* %65 with i32 0;
    i32* %66 = getelementptr &([50 * i32]* %row)[i32 0][i32 16];
    store i32* %66 with i32 0;
    i32* %67 = getelementptr &([50 * i32]* %row)[i32 0][i32 17];
    store i32* %67 with i32 0;
    i32* %68 = getelementptr &([50 * i32]* %row)[i32 0][i32 18];
    store i32* %68 with i32 0;
    i32* %69 = getelementptr &([50 * i32]* %row)[i32 0][i32 19];
    store i32* %69 with i32 0;
    i32* %70 = getelementptr &([50 * i32]* %row)[i32 0][i32 20];
    store i32* %70 with i32 0;
    i32* %71 = getelementptr &([50 * i32]* %row)[i32 0][i32 21];
    store i32* %71 with i32 0;
    i32* %72 = getelementptr &([50 * i32]* %row)[i32 0][i32 22];
    store i32* %72 with i32 0;
    i32* %73 = getelementptr &([50 * i32]* %row)[i32 0][i32 23];
    store i32* %73 with i32 0;
    i32* %74 = getelementptr &([50 * i32]* %row)[i32 0][i32 24];
    store i32* %74 with i32 0;
    i32* %75 = getelementptr &([50 * i32]* %row)[i32 0][i32 25];
    store i32* %75 with i32 0;
    i32* %76 = getelementptr &([50 * i32]* %row)[i32 0][i32 26];
    store i32* %76 with i32 0;
    i32* %77 = getelementptr &([50 * i32]* %row)[i32 0][i32 27];
    store i32* %77 with i32 0;
    i32* %78 = getelementptr &([50 * i32]* %row)[i32 0][i32 28];
    store i32* %78 with i32 0;
    i32* %79 = getelementptr &([50 * i32]* %row)[i32 0][i32 29];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &([50 * i32]* %row)[i32 0][i32 30];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &([50 * i32]* %row)[i32 0][i32 31];
    store i32* %81 with i32 0;
    i32* %82 = getelementptr &([50 * i32]* %row)[i32 0][i32 32];
    store i32* %82 with i32 0;
    i32* %83 = getelementptr &([50 * i32]* %row)[i32 0][i32 33];
    store i32* %83 with i32 0;
    i32* %84 = getelementptr &([50 * i32]* %row)[i32 0][i32 34];
    store i32* %84 with i32 0;
    i32* %85 = getelementptr &([50 * i32]* %row)[i32 0][i32 35];
    store i32* %85 with i32 0;
    i32* %86 = getelementptr &([50 * i32]* %row)[i32 0][i32 36];
    store i32* %86 with i32 0;
    i32* %87 = getelementptr &([50 * i32]* %row)[i32 0][i32 37];
    store i32* %87 with i32 0;
    i32* %88 = getelementptr &([50 * i32]* %row)[i32 0][i32 38];
    store i32* %88 with i32 0;
    i32* %89 = getelementptr &([50 * i32]* %row)[i32 0][i32 39];
    store i32* %89 with i32 0;
    i32* %90 = getelementptr &([50 * i32]* %row)[i32 0][i32 40];
    store i32* %90 with i32 0;
    i32* %91 = getelementptr &([50 * i32]* %row)[i32 0][i32 41];
    store i32* %91 with i32 0;
    i32* %92 = getelementptr &([50 * i32]* %row)[i32 0][i32 42];
    store i32* %92 with i32 0;
    i32* %93 = getelementptr &([50 * i32]* %row)[i32 0][i32 43];
    store i32* %93 with i32 0;
    i32* %94 = getelementptr &([50 * i32]* %row)[i32 0][i32 44];
    store i32* %94 with i32 0;
    i32* %95 = getelementptr &([50 * i32]* %row)[i32 0][i32 45];
    store i32* %95 with i32 0;
    i32* %96 = getelementptr &([50 * i32]* %row)[i32 0][i32 46];
    store i32* %96 with i32 0;
    i32* %97 = getelementptr &([50 * i32]* %row)[i32 0][i32 47];
    store i32* %97 with i32 0;
    i32* %98 = getelementptr &([50 * i32]* %row)[i32 0][i32 48];
    store i32* %98 with i32 0;
    i32* %99 = getelementptr &([50 * i32]* %row)[i32 0][i32 49];
    store i32* %99 with i32 0;
    [50 * i32]* %line1 = alloc [50 * i32];
    i32* %100 = getelementptr &([50 * i32]* %line1)[i32 0][i32 0];
    store i32* %100 with i32 0;
    i32* %101 = getelementptr &([50 * i32]* %line1)[i32 0][i32 1];
    store i32* %101 with i32 0;
    i32* %102 = getelementptr &([50 * i32]* %line1)[i32 0][i32 2];
    store i32* %102 with i32 0;
    i32* %103 = getelementptr &([50 * i32]* %line1)[i32 0][i32 3];
    store i32* %103 with i32 0;
    i32* %104 = getelementptr &([50 * i32]* %line1)[i32 0][i32 4];
    store i32* %104 with i32 0;
    i32* %105 = getelementptr &([50 * i32]* %line1)[i32 0][i32 5];
    store i32* %105 with i32 0;
    i32* %106 = getelementptr &([50 * i32]* %line1)[i32 0][i32 6];
    store i32* %106 with i32 0;
    i32* %107 = getelementptr &([50 * i32]* %line1)[i32 0][i32 7];
    store i32* %107 with i32 0;
    i32* %108 = getelementptr &([50 * i32]* %line1)[i32 0][i32 8];
    store i32* %108 with i32 0;
    i32* %109 = getelementptr &([50 * i32]* %line1)[i32 0][i32 9];
    store i32* %109 with i32 0;
    i32* %110 = getelementptr &([50 * i32]* %line1)[i32 0][i32 10];
    store i32* %110 with i32 0;
    i32* %111 = getelementptr &([50 * i32]* %line1)[i32 0][i32 11];
    store i32* %111 with i32 0;
    i32* %112 = getelementptr &([50 * i32]* %line1)[i32 0][i32 12];
    store i32* %112 with i32 0;
    i32* %113 = getelementptr &([50 * i32]* %line1)[i32 0][i32 13];
    store i32* %113 with i32 0;
    i32* %114 = getelementptr &([50 * i32]* %line1)[i32 0][i32 14];
    store i32* %114 with i32 0;
    i32* %115 = getelementptr &([50 * i32]* %line1)[i32 0][i32 15];
    store i32* %115 with i32 0;
    i32* %116 = getelementptr &([50 * i32]* %line1)[i32 0][i32 16];
    store i32* %116 with i32 0;
    i32* %117 = getelementptr &([50 * i32]* %line1)[i32 0][i32 17];
    store i32* %117 with i32 0;
    i32* %118 = getelementptr &([50 * i32]* %line1)[i32 0][i32 18];
    store i32* %118 with i32 0;
    i32* %119 = getelementptr &([50 * i32]* %line1)[i32 0][i32 19];
    store i32* %119 with i32 0;
    i32* %120 = getelementptr &([50 * i32]* %line1)[i32 0][i32 20];
    store i32* %120 with i32 0;
    i32* %121 = getelementptr &([50 * i32]* %line1)[i32 0][i32 21];
    store i32* %121 with i32 0;
    i32* %122 = getelementptr &([50 * i32]* %line1)[i32 0][i32 22];
    store i32* %122 with i32 0;
    i32* %123 = getelementptr &([50 * i32]* %line1)[i32 0][i32 23];
    store i32* %123 with i32 0;
    i32* %124 = getelementptr &([50 * i32]* %line1)[i32 0][i32 24];
    store i32* %124 with i32 0;
    i32* %125 = getelementptr &([50 * i32]* %line1)[i32 0][i32 25];
    store i32* %125 with i32 0;
    i32* %126 = getelementptr &([50 * i32]* %line1)[i32 0][i32 26];
    store i32* %126 with i32 0;
    i32* %127 = getelementptr &([50 * i32]* %line1)[i32 0][i32 27];
    store i32* %127 with i32 0;
    i32* %128 = getelementptr &([50 * i32]* %line1)[i32 0][i32 28];
    store i32* %128 with i32 0;
    i32* %129 = getelementptr &([50 * i32]* %line1)[i32 0][i32 29];
    store i32* %129 with i32 0;
    i32* %130 = getelementptr &([50 * i32]* %line1)[i32 0][i32 30];
    store i32* %130 with i32 0;
    i32* %131 = getelementptr &([50 * i32]* %line1)[i32 0][i32 31];
    store i32* %131 with i32 0;
    i32* %132 = getelementptr &([50 * i32]* %line1)[i32 0][i32 32];
    store i32* %132 with i32 0;
    i32* %133 = getelementptr &([50 * i32]* %line1)[i32 0][i32 33];
    store i32* %133 with i32 0;
    i32* %134 = getelementptr &([50 * i32]* %line1)[i32 0][i32 34];
    store i32* %134 with i32 0;
    i32* %135 = getelementptr &([50 * i32]* %line1)[i32 0][i32 35];
    store i32* %135 with i32 0;
    i32* %136 = getelementptr &([50 * i32]* %line1)[i32 0][i32 36];
    store i32* %136 with i32 0;
    i32* %137 = getelementptr &([50 * i32]* %line1)[i32 0][i32 37];
    store i32* %137 with i32 0;
    i32* %138 = getelementptr &([50 * i32]* %line1)[i32 0][i32 38];
    store i32* %138 with i32 0;
    i32* %139 = getelementptr &([50 * i32]* %line1)[i32 0][i32 39];
    store i32* %139 with i32 0;
    i32* %140 = getelementptr &([50 * i32]* %line1)[i32 0][i32 40];
    store i32* %140 with i32 0;
    i32* %141 = getelementptr &([50 * i32]* %line1)[i32 0][i32 41];
    store i32* %141 with i32 0;
    i32* %142 = getelementptr &([50 * i32]* %line1)[i32 0][i32 42];
    store i32* %142 with i32 0;
    i32* %143 = getelementptr &([50 * i32]* %line1)[i32 0][i32 43];
    store i32* %143 with i32 0;
    i32* %144 = getelementptr &([50 * i32]* %line1)[i32 0][i32 44];
    store i32* %144 with i32 0;
    i32* %145 = getelementptr &([50 * i32]* %line1)[i32 0][i32 45];
    store i32* %145 with i32 0;
    i32* %146 = getelementptr &([50 * i32]* %line1)[i32 0][i32 46];
    store i32* %146 with i32 0;
    i32* %147 = getelementptr &([50 * i32]* %line1)[i32 0][i32 47];
    store i32* %147 with i32 0;
    i32* %148 = getelementptr &([50 * i32]* %line1)[i32 0][i32 48];
    store i32* %148 with i32 0;
    i32* %149 = getelementptr &([50 * i32]* %line1)[i32 0][i32 49];
    store i32* %149 with i32 0;
    [100 * i32]* %line2 = alloc [100 * i32];
    i32* %150 = getelementptr &([100 * i32]* %line2)[i32 0][i32 0];
    store i32* %150 with i32 0;
    i32* %151 = getelementptr &([100 * i32]* %line2)[i32 0][i32 1];
    store i32* %151 with i32 0;
    i32* %152 = getelementptr &([100 * i32]* %line2)[i32 0][i32 2];
    store i32* %152 with i32 0;
    i32* %153 = getelementptr &([100 * i32]* %line2)[i32 0][i32 3];
    store i32* %153 with i32 0;
    i32* %154 = getelementptr &([100 * i32]* %line2)[i32 0][i32 4];
    store i32* %154 with i32 0;
    i32* %155 = getelementptr &([100 * i32]* %line2)[i32 0][i32 5];
    store i32* %155 with i32 0;
    i32* %156 = getelementptr &([100 * i32]* %line2)[i32 0][i32 6];
    store i32* %156 with i32 0;
    i32* %157 = getelementptr &([100 * i32]* %line2)[i32 0][i32 7];
    store i32* %157 with i32 0;
    i32* %158 = getelementptr &([100 * i32]* %line2)[i32 0][i32 8];
    store i32* %158 with i32 0;
    i32* %159 = getelementptr &([100 * i32]* %line2)[i32 0][i32 9];
    store i32* %159 with i32 0;
    i32* %160 = getelementptr &([100 * i32]* %line2)[i32 0][i32 10];
    store i32* %160 with i32 0;
    i32* %161 = getelementptr &([100 * i32]* %line2)[i32 0][i32 11];
    store i32* %161 with i32 0;
    i32* %162 = getelementptr &([100 * i32]* %line2)[i32 0][i32 12];
    store i32* %162 with i32 0;
    i32* %163 = getelementptr &([100 * i32]* %line2)[i32 0][i32 13];
    store i32* %163 with i32 0;
    i32* %164 = getelementptr &([100 * i32]* %line2)[i32 0][i32 14];
    store i32* %164 with i32 0;
    i32* %165 = getelementptr &([100 * i32]* %line2)[i32 0][i32 15];
    store i32* %165 with i32 0;
    i32* %166 = getelementptr &([100 * i32]* %line2)[i32 0][i32 16];
    store i32* %166 with i32 0;
    i32* %167 = getelementptr &([100 * i32]* %line2)[i32 0][i32 17];
    store i32* %167 with i32 0;
    i32* %168 = getelementptr &([100 * i32]* %line2)[i32 0][i32 18];
    store i32* %168 with i32 0;
    i32* %169 = getelementptr &([100 * i32]* %line2)[i32 0][i32 19];
    store i32* %169 with i32 0;
    i32* %170 = getelementptr &([100 * i32]* %line2)[i32 0][i32 20];
    store i32* %170 with i32 0;
    i32* %171 = getelementptr &([100 * i32]* %line2)[i32 0][i32 21];
    store i32* %171 with i32 0;
    i32* %172 = getelementptr &([100 * i32]* %line2)[i32 0][i32 22];
    store i32* %172 with i32 0;
    i32* %173 = getelementptr &([100 * i32]* %line2)[i32 0][i32 23];
    store i32* %173 with i32 0;
    i32* %174 = getelementptr &([100 * i32]* %line2)[i32 0][i32 24];
    store i32* %174 with i32 0;
    i32* %175 = getelementptr &([100 * i32]* %line2)[i32 0][i32 25];
    store i32* %175 with i32 0;
    i32* %176 = getelementptr &([100 * i32]* %line2)[i32 0][i32 26];
    store i32* %176 with i32 0;
    i32* %177 = getelementptr &([100 * i32]* %line2)[i32 0][i32 27];
    store i32* %177 with i32 0;
    i32* %178 = getelementptr &([100 * i32]* %line2)[i32 0][i32 28];
    store i32* %178 with i32 0;
    i32* %179 = getelementptr &([100 * i32]* %line2)[i32 0][i32 29];
    store i32* %179 with i32 0;
    i32* %180 = getelementptr &([100 * i32]* %line2)[i32 0][i32 30];
    store i32* %180 with i32 0;
    i32* %181 = getelementptr &([100 * i32]* %line2)[i32 0][i32 31];
    store i32* %181 with i32 0;
    i32* %182 = getelementptr &([100 * i32]* %line2)[i32 0][i32 32];
    store i32* %182 with i32 0;
    i32* %183 = getelementptr &([100 * i32]* %line2)[i32 0][i32 33];
    store i32* %183 with i32 0;
    i32* %184 = getelementptr &([100 * i32]* %line2)[i32 0][i32 34];
    store i32* %184 with i32 0;
    i32* %185 = getelementptr &([100 * i32]* %line2)[i32 0][i32 35];
    store i32* %185 with i32 0;
    i32* %186 = getelementptr &([100 * i32]* %line2)[i32 0][i32 36];
    store i32* %186 with i32 0;
    i32* %187 = getelementptr &([100 * i32]* %line2)[i32 0][i32 37];
    store i32* %187 with i32 0;
    i32* %188 = getelementptr &([100 * i32]* %line2)[i32 0][i32 38];
    store i32* %188 with i32 0;
    i32* %189 = getelementptr &([100 * i32]* %line2)[i32 0][i32 39];
    store i32* %189 with i32 0;
    i32* %190 = getelementptr &([100 * i32]* %line2)[i32 0][i32 40];
    store i32* %190 with i32 0;
    i32* %191 = getelementptr &([100 * i32]* %line2)[i32 0][i32 41];
    store i32* %191 with i32 0;
    i32* %192 = getelementptr &([100 * i32]* %line2)[i32 0][i32 42];
    store i32* %192 with i32 0;
    i32* %193 = getelementptr &([100 * i32]* %line2)[i32 0][i32 43];
    store i32* %193 with i32 0;
    i32* %194 = getelementptr &([100 * i32]* %line2)[i32 0][i32 44];
    store i32* %194 with i32 0;
    i32* %195 = getelementptr &([100 * i32]* %line2)[i32 0][i32 45];
    store i32* %195 with i32 0;
    i32* %196 = getelementptr &([100 * i32]* %line2)[i32 0][i32 46];
    store i32* %196 with i32 0;
    i32* %197 = getelementptr &([100 * i32]* %line2)[i32 0][i32 47];
    store i32* %197 with i32 0;
    i32* %198 = getelementptr &([100 * i32]* %line2)[i32 0][i32 48];
    store i32* %198 with i32 0;
    i32* %199 = getelementptr &([100 * i32]* %line2)[i32 0][i32 49];
    store i32* %199 with i32 0;
    i32* %200 = getelementptr &([100 * i32]* %line2)[i32 0][i32 50];
    store i32* %200 with i32 0;
    i32* %201 = getelementptr &([100 * i32]* %line2)[i32 0][i32 51];
    store i32* %201 with i32 0;
    i32* %202 = getelementptr &([100 * i32]* %line2)[i32 0][i32 52];
    store i32* %202 with i32 0;
    i32* %203 = getelementptr &([100 * i32]* %line2)[i32 0][i32 53];
    store i32* %203 with i32 0;
    i32* %204 = getelementptr &([100 * i32]* %line2)[i32 0][i32 54];
    store i32* %204 with i32 0;
    i32* %205 = getelementptr &([100 * i32]* %line2)[i32 0][i32 55];
    store i32* %205 with i32 0;
    i32* %206 = getelementptr &([100 * i32]* %line2)[i32 0][i32 56];
    store i32* %206 with i32 0;
    i32* %207 = getelementptr &([100 * i32]* %line2)[i32 0][i32 57];
    store i32* %207 with i32 0;
    i32* %208 = getelementptr &([100 * i32]* %line2)[i32 0][i32 58];
    store i32* %208 with i32 0;
    i32* %209 = getelementptr &([100 * i32]* %line2)[i32 0][i32 59];
    store i32* %209 with i32 0;
    i32* %210 = getelementptr &([100 * i32]* %line2)[i32 0][i32 60];
    store i32* %210 with i32 0;
    i32* %211 = getelementptr &([100 * i32]* %line2)[i32 0][i32 61];
    store i32* %211 with i32 0;
    i32* %212 = getelementptr &([100 * i32]* %line2)[i32 0][i32 62];
    store i32* %212 with i32 0;
    i32* %213 = getelementptr &([100 * i32]* %line2)[i32 0][i32 63];
    store i32* %213 with i32 0;
    i32* %214 = getelementptr &([100 * i32]* %line2)[i32 0][i32 64];
    store i32* %214 with i32 0;
    i32* %215 = getelementptr &([100 * i32]* %line2)[i32 0][i32 65];
    store i32* %215 with i32 0;
    i32* %216 = getelementptr &([100 * i32]* %line2)[i32 0][i32 66];
    store i32* %216 with i32 0;
    i32* %217 = getelementptr &([100 * i32]* %line2)[i32 0][i32 67];
    store i32* %217 with i32 0;
    i32* %218 = getelementptr &([100 * i32]* %line2)[i32 0][i32 68];
    store i32* %218 with i32 0;
    i32* %219 = getelementptr &([100 * i32]* %line2)[i32 0][i32 69];
    store i32* %219 with i32 0;
    i32* %220 = getelementptr &([100 * i32]* %line2)[i32 0][i32 70];
    store i32* %220 with i32 0;
    i32* %221 = getelementptr &([100 * i32]* %line2)[i32 0][i32 71];
    store i32* %221 with i32 0;
    i32* %222 = getelementptr &([100 * i32]* %line2)[i32 0][i32 72];
    store i32* %222 with i32 0;
    i32* %223 = getelementptr &([100 * i32]* %line2)[i32 0][i32 73];
    store i32* %223 with i32 0;
    i32* %224 = getelementptr &([100 * i32]* %line2)[i32 0][i32 74];
    store i32* %224 with i32 0;
    i32* %225 = getelementptr &([100 * i32]* %line2)[i32 0][i32 75];
    store i32* %225 with i32 0;
    i32* %226 = getelementptr &([100 * i32]* %line2)[i32 0][i32 76];
    store i32* %226 with i32 0;
    i32* %227 = getelementptr &([100 * i32]* %line2)[i32 0][i32 77];
    store i32* %227 with i32 0;
    i32* %228 = getelementptr &([100 * i32]* %line2)[i32 0][i32 78];
    store i32* %228 with i32 0;
    i32* %229 = getelementptr &([100 * i32]* %line2)[i32 0][i32 79];
    store i32* %229 with i32 0;
    i32* %230 = getelementptr &([100 * i32]* %line2)[i32 0][i32 80];
    store i32* %230 with i32 0;
    i32* %231 = getelementptr &([100 * i32]* %line2)[i32 0][i32 81];
    store i32* %231 with i32 0;
    i32* %232 = getelementptr &([100 * i32]* %line2)[i32 0][i32 82];
    store i32* %232 with i32 0;
    i32* %233 = getelementptr &([100 * i32]* %line2)[i32 0][i32 83];
    store i32* %233 with i32 0;
    i32* %234 = getelementptr &([100 * i32]* %line2)[i32 0][i32 84];
    store i32* %234 with i32 0;
    i32* %235 = getelementptr &([100 * i32]* %line2)[i32 0][i32 85];
    store i32* %235 with i32 0;
    i32* %236 = getelementptr &([100 * i32]* %line2)[i32 0][i32 86];
    store i32* %236 with i32 0;
    i32* %237 = getelementptr &([100 * i32]* %line2)[i32 0][i32 87];
    store i32* %237 with i32 0;
    i32* %238 = getelementptr &([100 * i32]* %line2)[i32 0][i32 88];
    store i32* %238 with i32 0;
    i32* %239 = getelementptr &([100 * i32]* %line2)[i32 0][i32 89];
    store i32* %239 with i32 0;
    i32* %240 = getelementptr &([100 * i32]* %line2)[i32 0][i32 90];
    store i32* %240 with i32 0;
    i32* %241 = getelementptr &([100 * i32]* %line2)[i32 0][i32 91];
    store i32* %241 with i32 0;
    i32* %242 = getelementptr &([100 * i32]* %line2)[i32 0][i32 92];
    store i32* %242 with i32 0;
    i32* %243 = getelementptr &([100 * i32]* %line2)[i32 0][i32 93];
    store i32* %243 with i32 0;
    i32* %244 = getelementptr &([100 * i32]* %line2)[i32 0][i32 94];
    store i32* %244 with i32 0;
    i32* %245 = getelementptr &([100 * i32]* %line2)[i32 0][i32 95];
    store i32* %245 with i32 0;
    i32* %246 = getelementptr &([100 * i32]* %line2)[i32 0][i32 96];
    store i32* %246 with i32 0;
    i32* %247 = getelementptr &([100 * i32]* %line2)[i32 0][i32 97];
    store i32* %247 with i32 0;
    i32* %248 = getelementptr &([100 * i32]* %line2)[i32 0][i32 98];
    store i32* %248 with i32 0;
    i32* %249 = getelementptr &([100 * i32]* %line2)[i32 0][i32 99];
    store i32* %249 with i32 0;
    i32 %250 = call () -> i32 @getint();
    i1 %251 = scmp gt i32 %250, i32 0;
    cbr i1 %251, [ ^while.body [100 * i32]* %line2, [50 * i32]* %line1, [50 * i32]* %row, i32* %sum, [50 * i32]* %ans, i32* %n, i32 %250 ], [ ^b i32 0 ];
^while.body([100 * i32]* %arg, [50 * i32]* %arg1, [50 * i32]* %arg2, i32* %arg3, [50 * i32]* %arg4, i32* %arg5, i32 %arg6):
    i32 %0 = call () -> i32 @getint();
    store i32* %arg5 with i32 %0;
    call (i32, [50 * i32]*, i32*, i32*, [50 * i32]*, [50 * i32]*, [100 * i32]*) -> void @f(i32 1, [50 * i32]* %arg4, i32* %arg3, i32* %arg5, [50 * i32]* %arg2, [50 * i32]* %arg1, [100 * i32]* %arg);
    i32 %1 = load i32* %arg3;
    i32 %2 = sub i32 %arg6, i32 1;
    i1 %3 = scmp gt i32 %2, i32 0;
    cbr i1 %3, [ ^while.body [100 * i32]* %arg, [50 * i32]* %arg1, [50 * i32]* %arg2, i32* %arg3, [50 * i32]* %arg4, i32* %arg5, i32 %2 ], [ ^b i32 %1 ];
^b(i32 %arg):
    ret i32 %arg;
}
