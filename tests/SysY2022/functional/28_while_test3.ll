; ModuleID = 'tests//SysY2022/functional/28_while_test3.sy'
source_filename = "tests//SysY2022/functional/28_while_test3.sy"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@g = dso_local local_unnamed_addr global i32 0, align 4
@h = dso_local local_unnamed_addr global i32 0, align 4
@f = dso_local local_unnamed_addr global i32 0, align 4
@e = dso_local local_unnamed_addr global i32 0, align 4

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local noundef i32 @_Z10EightWhilev() local_unnamed_addr #0 {
  %1 = load i32, i32* @e, align 4, !tbaa !4
  %2 = load i32, i32* @f, align 4, !tbaa !4
  %3 = load i32, i32* @g, align 4, !tbaa !4
  %4 = load i32, i32* @h, align 4, !tbaa !4
  br label %5

5:                                                ; preds = %430, %0
  %6 = phi i32 [ 10, %0 ], [ %435, %430 ]
  %7 = phi i1 [ false, %0 ], [ true, %430 ]
  %8 = phi i32 [ 5, %0 ], [ %13, %430 ]
  %9 = phi i32 [ %1, %0 ], [ %434, %430 ]
  %10 = phi i32 [ %2, %0 ], [ %433, %430 ]
  %11 = phi i32 [ %3, %0 ], [ %432, %430 ]
  %12 = phi i32 [ %4, %0 ], [ %431, %430 ]
  %13 = add nuw nsw i32 %8, 3
  %14 = icmp slt i32 %6, 20
  br i1 %14, label %15, label %109

15:                                               ; preds = %5, %95
  %16 = phi i32 [ %96, %95 ], [ %12, %5 ]
  %17 = phi i32 [ %97, %95 ], [ %11, %5 ]
  %18 = phi i32 [ %98, %95 ], [ %10, %5 ]
  %19 = phi i32 [ %99, %95 ], [ %12, %5 ]
  %20 = phi i32 [ %100, %95 ], [ %11, %5 ]
  %21 = phi i32 [ %101, %95 ], [ %10, %5 ]
  %22 = phi i32 [ %27, %95 ], [ %6, %5 ]
  %23 = phi i32 [ %106, %95 ], [ %9, %5 ]
  %24 = phi i32 [ %104, %95 ], [ %10, %5 ]
  %25 = phi i32 [ %103, %95 ], [ %11, %5 ]
  %26 = phi i32 [ %102, %95 ], [ %12, %5 ]
  %27 = add nsw i32 %22, 3
  %28 = icmp sgt i32 %23, 1
  br i1 %28, label %29, label %95

29:                                               ; preds = %15
  %30 = call i32 @llvm.smin.i32(i32 %23, i32 2)
  br label %31

31:                                               ; preds = %29, %81
  %32 = phi i32 [ %82, %81 ], [ %16, %29 ]
  %33 = phi i32 [ %83, %81 ], [ %17, %29 ]
  %34 = phi i32 [ %84, %81 ], [ %19, %29 ]
  %35 = phi i32 [ %85, %81 ], [ %20, %29 ]
  %36 = phi i32 [ %86, %81 ], [ %26, %29 ]
  %37 = phi i32 [ %87, %81 ], [ %25, %29 ]
  %38 = phi i32 [ %42, %81 ], [ %23, %29 ]
  %39 = phi i32 [ %91, %81 ], [ %24, %29 ]
  %40 = phi i32 [ %89, %81 ], [ %25, %29 ]
  %41 = phi i32 [ %88, %81 ], [ %26, %29 ]
  %42 = add nsw i32 %38, -1
  %43 = icmp sgt i32 %39, 2
  br i1 %43, label %44, label %81

44:                                               ; preds = %31, %71
  %45 = phi i32 [ %72, %71 ], [ %32, %31 ]
  %46 = phi i32 [ %73, %71 ], [ %34, %31 ]
  %47 = phi i32 [ %74, %71 ], [ %36, %31 ]
  %48 = phi i32 [ %75, %71 ], [ %41, %31 ]
  %49 = phi i32 [ %52, %71 ], [ %39, %31 ]
  %50 = phi i32 [ %78, %71 ], [ %40, %31 ]
  %51 = phi i32 [ %76, %71 ], [ %41, %31 ]
  %52 = add nsw i32 %49, -2
  %53 = icmp slt i32 %50, 3
  br i1 %53, label %54, label %71

54:                                               ; preds = %44, %66
  %55 = phi i32 [ %57, %66 ], [ %50, %44 ]
  %56 = phi i32 [ %68, %66 ], [ %51, %44 ]
  %57 = add nsw i32 %55, 10
  %58 = icmp slt i32 %56, 10
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = call i32 @llvm.smax.i32(i32 %56, i32 2)
  %61 = add nuw nsw i32 %60, 7
  %62 = sub i32 %61, %56
  %63 = and i32 %62, -8
  %64 = add nsw i32 %56, 8
  %65 = add i32 %64, %63
  br label %66

66:                                               ; preds = %59, %54
  %67 = phi i32 [ %56, %54 ], [ %65, %59 ]
  %68 = add nsw i32 %67, -1
  %69 = icmp slt i32 %55, -7
  br i1 %69, label %54, label %70, !llvm.loop !8

70:                                               ; preds = %66
  store i32 %68, i32* @h, align 4, !tbaa !4
  br label %71

71:                                               ; preds = %70, %44
  %72 = phi i32 [ %68, %70 ], [ %45, %44 ]
  %73 = phi i32 [ %68, %70 ], [ %46, %44 ]
  %74 = phi i32 [ %68, %70 ], [ %47, %44 ]
  %75 = phi i32 [ %68, %70 ], [ %48, %44 ]
  %76 = phi i32 [ %68, %70 ], [ %51, %44 ]
  %77 = phi i32 [ %57, %70 ], [ %50, %44 ]
  %78 = add nsw i32 %77, -8
  %79 = icmp sgt i32 %49, 4
  br i1 %79, label %44, label %80, !llvm.loop !10

80:                                               ; preds = %71
  store i32 %78, i32* @g, align 4, !tbaa !4
  br label %81

81:                                               ; preds = %80, %31
  %82 = phi i32 [ %72, %80 ], [ %32, %31 ]
  %83 = phi i32 [ %78, %80 ], [ %33, %31 ]
  %84 = phi i32 [ %73, %80 ], [ %34, %31 ]
  %85 = phi i32 [ %78, %80 ], [ %35, %31 ]
  %86 = phi i32 [ %74, %80 ], [ %36, %31 ]
  %87 = phi i32 [ %78, %80 ], [ %37, %31 ]
  %88 = phi i32 [ %75, %80 ], [ %41, %31 ]
  %89 = phi i32 [ %78, %80 ], [ %40, %31 ]
  %90 = phi i32 [ %52, %80 ], [ %39, %31 ]
  %91 = add nsw i32 %90, 1
  %92 = icmp sgt i32 %38, 2
  br i1 %92, label %31, label %93, !llvm.loop !11

93:                                               ; preds = %81
  %94 = add i32 %30, -1
  store i32 %91, i32* @f, align 4, !tbaa !4
  br label %95

95:                                               ; preds = %93, %15
  %96 = phi i32 [ %82, %93 ], [ %16, %15 ]
  %97 = phi i32 [ %83, %93 ], [ %17, %15 ]
  %98 = phi i32 [ %91, %93 ], [ %18, %15 ]
  %99 = phi i32 [ %84, %93 ], [ %19, %15 ]
  %100 = phi i32 [ %85, %93 ], [ %20, %15 ]
  %101 = phi i32 [ %91, %93 ], [ %21, %15 ]
  %102 = phi i32 [ %86, %93 ], [ %26, %15 ]
  %103 = phi i32 [ %87, %93 ], [ %25, %15 ]
  %104 = phi i32 [ %91, %93 ], [ %24, %15 ]
  %105 = phi i32 [ %94, %93 ], [ %23, %15 ]
  %106 = add nsw i32 %105, 1
  %107 = icmp slt i32 %22, 17
  br i1 %107, label %15, label %108, !llvm.loop !12

108:                                              ; preds = %95
  store i32 %106, i32* @e, align 4, !tbaa !4
  br label %109

109:                                              ; preds = %108, %5
  %110 = phi i32 [ %96, %108 ], [ %12, %5 ]
  %111 = phi i32 [ %97, %108 ], [ %11, %5 ]
  %112 = phi i32 [ %98, %108 ], [ %10, %5 ]
  %113 = phi i32 [ %99, %108 ], [ %12, %5 ]
  %114 = phi i32 [ %100, %108 ], [ %11, %5 ]
  %115 = phi i32 [ %101, %108 ], [ %10, %5 ]
  %116 = phi i32 [ %106, %108 ], [ %9, %5 ]
  %117 = phi i32 [ %27, %108 ], [ %6, %5 ]
  %118 = add nsw i32 %117, -1
  %119 = icmp slt i32 %117, 21
  br i1 %119, label %120, label %214

120:                                              ; preds = %109, %200
  %121 = phi i32 [ %201, %200 ], [ %110, %109 ]
  %122 = phi i32 [ %202, %200 ], [ %111, %109 ]
  %123 = phi i32 [ %203, %200 ], [ %112, %109 ]
  %124 = phi i32 [ %204, %200 ], [ %113, %109 ]
  %125 = phi i32 [ %205, %200 ], [ %114, %109 ]
  %126 = phi i32 [ %206, %200 ], [ %115, %109 ]
  %127 = phi i32 [ %132, %200 ], [ %118, %109 ]
  %128 = phi i32 [ %211, %200 ], [ %116, %109 ]
  %129 = phi i32 [ %209, %200 ], [ %115, %109 ]
  %130 = phi i32 [ %208, %200 ], [ %114, %109 ]
  %131 = phi i32 [ %207, %200 ], [ %113, %109 ]
  %132 = add nsw i32 %127, 3
  %133 = icmp sgt i32 %128, 1
  br i1 %133, label %134, label %200

134:                                              ; preds = %120
  %135 = call i32 @llvm.smin.i32(i32 %128, i32 2)
  br label %136

136:                                              ; preds = %186, %134
  %137 = phi i32 [ %187, %186 ], [ %121, %134 ]
  %138 = phi i32 [ %188, %186 ], [ %122, %134 ]
  %139 = phi i32 [ %189, %186 ], [ %124, %134 ]
  %140 = phi i32 [ %190, %186 ], [ %125, %134 ]
  %141 = phi i32 [ %191, %186 ], [ %131, %134 ]
  %142 = phi i32 [ %192, %186 ], [ %130, %134 ]
  %143 = phi i32 [ %147, %186 ], [ %128, %134 ]
  %144 = phi i32 [ %196, %186 ], [ %129, %134 ]
  %145 = phi i32 [ %194, %186 ], [ %130, %134 ]
  %146 = phi i32 [ %193, %186 ], [ %131, %134 ]
  %147 = add nsw i32 %143, -1
  %148 = icmp sgt i32 %144, 2
  br i1 %148, label %149, label %186

149:                                              ; preds = %136, %176
  %150 = phi i32 [ %177, %176 ], [ %137, %136 ]
  %151 = phi i32 [ %178, %176 ], [ %139, %136 ]
  %152 = phi i32 [ %179, %176 ], [ %141, %136 ]
  %153 = phi i32 [ %180, %176 ], [ %146, %136 ]
  %154 = phi i32 [ %157, %176 ], [ %144, %136 ]
  %155 = phi i32 [ %183, %176 ], [ %145, %136 ]
  %156 = phi i32 [ %181, %176 ], [ %146, %136 ]
  %157 = add nsw i32 %154, -2
  %158 = icmp slt i32 %155, 3
  br i1 %158, label %159, label %176

159:                                              ; preds = %149, %171
  %160 = phi i32 [ %162, %171 ], [ %155, %149 ]
  %161 = phi i32 [ %173, %171 ], [ %156, %149 ]
  %162 = add nsw i32 %160, 10
  %163 = icmp slt i32 %161, 10
  br i1 %163, label %164, label %171

164:                                              ; preds = %159
  %165 = call i32 @llvm.smax.i32(i32 %161, i32 2)
  %166 = add nuw nsw i32 %165, 7
  %167 = sub i32 %166, %161
  %168 = and i32 %167, -8
  %169 = add nsw i32 %161, 8
  %170 = add i32 %169, %168
  br label %171

171:                                              ; preds = %164, %159
  %172 = phi i32 [ %161, %159 ], [ %170, %164 ]
  %173 = add nsw i32 %172, -1
  %174 = icmp slt i32 %160, -7
  br i1 %174, label %159, label %175, !llvm.loop !8

175:                                              ; preds = %171
  store i32 %173, i32* @h, align 4, !tbaa !4
  br label %176

176:                                              ; preds = %175, %149
  %177 = phi i32 [ %173, %175 ], [ %150, %149 ]
  %178 = phi i32 [ %173, %175 ], [ %151, %149 ]
  %179 = phi i32 [ %173, %175 ], [ %152, %149 ]
  %180 = phi i32 [ %173, %175 ], [ %153, %149 ]
  %181 = phi i32 [ %173, %175 ], [ %156, %149 ]
  %182 = phi i32 [ %162, %175 ], [ %155, %149 ]
  %183 = add nsw i32 %182, -8
  %184 = icmp sgt i32 %154, 4
  br i1 %184, label %149, label %185, !llvm.loop !10

185:                                              ; preds = %176
  store i32 %183, i32* @g, align 4, !tbaa !4
  br label %186

186:                                              ; preds = %185, %136
  %187 = phi i32 [ %177, %185 ], [ %137, %136 ]
  %188 = phi i32 [ %183, %185 ], [ %138, %136 ]
  %189 = phi i32 [ %178, %185 ], [ %139, %136 ]
  %190 = phi i32 [ %183, %185 ], [ %140, %136 ]
  %191 = phi i32 [ %179, %185 ], [ %141, %136 ]
  %192 = phi i32 [ %183, %185 ], [ %142, %136 ]
  %193 = phi i32 [ %180, %185 ], [ %146, %136 ]
  %194 = phi i32 [ %183, %185 ], [ %145, %136 ]
  %195 = phi i32 [ %157, %185 ], [ %144, %136 ]
  %196 = add nsw i32 %195, 1
  %197 = icmp sgt i32 %143, 2
  br i1 %197, label %136, label %198, !llvm.loop !11

198:                                              ; preds = %186
  %199 = add i32 %135, -1
  store i32 %196, i32* @f, align 4, !tbaa !4
  br label %200

200:                                              ; preds = %198, %120
  %201 = phi i32 [ %187, %198 ], [ %121, %120 ]
  %202 = phi i32 [ %188, %198 ], [ %122, %120 ]
  %203 = phi i32 [ %196, %198 ], [ %123, %120 ]
  %204 = phi i32 [ %189, %198 ], [ %124, %120 ]
  %205 = phi i32 [ %190, %198 ], [ %125, %120 ]
  %206 = phi i32 [ %196, %198 ], [ %126, %120 ]
  %207 = phi i32 [ %191, %198 ], [ %131, %120 ]
  %208 = phi i32 [ %192, %198 ], [ %130, %120 ]
  %209 = phi i32 [ %196, %198 ], [ %129, %120 ]
  %210 = phi i32 [ %199, %198 ], [ %128, %120 ]
  %211 = add nsw i32 %210, 1
  %212 = icmp slt i32 %127, 17
  br i1 %212, label %120, label %213, !llvm.loop !12

213:                                              ; preds = %200
  store i32 %211, i32* @e, align 4, !tbaa !4
  br label %214

214:                                              ; preds = %213, %109
  %215 = phi i32 [ %201, %213 ], [ %110, %109 ]
  %216 = phi i32 [ %202, %213 ], [ %111, %109 ]
  %217 = phi i32 [ %203, %213 ], [ %112, %109 ]
  %218 = phi i32 [ %204, %213 ], [ %113, %109 ]
  %219 = phi i32 [ %205, %213 ], [ %114, %109 ]
  %220 = phi i32 [ %206, %213 ], [ %115, %109 ]
  %221 = phi i32 [ %211, %213 ], [ %116, %109 ]
  %222 = phi i32 [ %132, %213 ], [ %118, %109 ]
  %223 = add nsw i32 %222, -1
  br i1 %7, label %430, label %224, !llvm.loop !13

224:                                              ; preds = %214
  %225 = icmp slt i32 %222, 21
  br i1 %225, label %226, label %320

226:                                              ; preds = %224, %306
  %227 = phi i32 [ %307, %306 ], [ %215, %224 ]
  %228 = phi i32 [ %308, %306 ], [ %216, %224 ]
  %229 = phi i32 [ %309, %306 ], [ %217, %224 ]
  %230 = phi i32 [ %310, %306 ], [ %218, %224 ]
  %231 = phi i32 [ %311, %306 ], [ %219, %224 ]
  %232 = phi i32 [ %312, %306 ], [ %220, %224 ]
  %233 = phi i32 [ %238, %306 ], [ %223, %224 ]
  %234 = phi i32 [ %317, %306 ], [ %221, %224 ]
  %235 = phi i32 [ %315, %306 ], [ %220, %224 ]
  %236 = phi i32 [ %314, %306 ], [ %219, %224 ]
  %237 = phi i32 [ %313, %306 ], [ %218, %224 ]
  %238 = add nsw i32 %233, 3
  %239 = icmp sgt i32 %234, 1
  br i1 %239, label %240, label %306

240:                                              ; preds = %226
  %241 = call i32 @llvm.smin.i32(i32 %234, i32 2)
  br label %242

242:                                              ; preds = %292, %240
  %243 = phi i32 [ %293, %292 ], [ %227, %240 ]
  %244 = phi i32 [ %294, %292 ], [ %228, %240 ]
  %245 = phi i32 [ %295, %292 ], [ %230, %240 ]
  %246 = phi i32 [ %296, %292 ], [ %231, %240 ]
  %247 = phi i32 [ %297, %292 ], [ %237, %240 ]
  %248 = phi i32 [ %298, %292 ], [ %236, %240 ]
  %249 = phi i32 [ %253, %292 ], [ %234, %240 ]
  %250 = phi i32 [ %302, %292 ], [ %235, %240 ]
  %251 = phi i32 [ %300, %292 ], [ %236, %240 ]
  %252 = phi i32 [ %299, %292 ], [ %237, %240 ]
  %253 = add nsw i32 %249, -1
  %254 = icmp sgt i32 %250, 2
  br i1 %254, label %255, label %292

255:                                              ; preds = %242, %282
  %256 = phi i32 [ %283, %282 ], [ %243, %242 ]
  %257 = phi i32 [ %284, %282 ], [ %245, %242 ]
  %258 = phi i32 [ %285, %282 ], [ %247, %242 ]
  %259 = phi i32 [ %286, %282 ], [ %252, %242 ]
  %260 = phi i32 [ %263, %282 ], [ %250, %242 ]
  %261 = phi i32 [ %289, %282 ], [ %251, %242 ]
  %262 = phi i32 [ %287, %282 ], [ %252, %242 ]
  %263 = add nsw i32 %260, -2
  %264 = icmp slt i32 %261, 3
  br i1 %264, label %265, label %282

265:                                              ; preds = %255, %277
  %266 = phi i32 [ %268, %277 ], [ %261, %255 ]
  %267 = phi i32 [ %279, %277 ], [ %262, %255 ]
  %268 = add nsw i32 %266, 10
  %269 = icmp slt i32 %267, 10
  br i1 %269, label %270, label %277

270:                                              ; preds = %265
  %271 = call i32 @llvm.smax.i32(i32 %267, i32 2)
  %272 = add nuw nsw i32 %271, 7
  %273 = sub i32 %272, %267
  %274 = and i32 %273, -8
  %275 = add nsw i32 %267, 8
  %276 = add i32 %275, %274
  br label %277

277:                                              ; preds = %270, %265
  %278 = phi i32 [ %267, %265 ], [ %276, %270 ]
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %266, -7
  br i1 %280, label %265, label %281, !llvm.loop !8

281:                                              ; preds = %277
  store i32 %279, i32* @h, align 4, !tbaa !4
  br label %282

282:                                              ; preds = %281, %255
  %283 = phi i32 [ %279, %281 ], [ %256, %255 ]
  %284 = phi i32 [ %279, %281 ], [ %257, %255 ]
  %285 = phi i32 [ %279, %281 ], [ %258, %255 ]
  %286 = phi i32 [ %279, %281 ], [ %259, %255 ]
  %287 = phi i32 [ %279, %281 ], [ %262, %255 ]
  %288 = phi i32 [ %268, %281 ], [ %261, %255 ]
  %289 = add nsw i32 %288, -8
  %290 = icmp sgt i32 %260, 4
  br i1 %290, label %255, label %291, !llvm.loop !10

291:                                              ; preds = %282
  store i32 %289, i32* @g, align 4, !tbaa !4
  br label %292

292:                                              ; preds = %291, %242
  %293 = phi i32 [ %283, %291 ], [ %243, %242 ]
  %294 = phi i32 [ %289, %291 ], [ %244, %242 ]
  %295 = phi i32 [ %284, %291 ], [ %245, %242 ]
  %296 = phi i32 [ %289, %291 ], [ %246, %242 ]
  %297 = phi i32 [ %285, %291 ], [ %247, %242 ]
  %298 = phi i32 [ %289, %291 ], [ %248, %242 ]
  %299 = phi i32 [ %286, %291 ], [ %252, %242 ]
  %300 = phi i32 [ %289, %291 ], [ %251, %242 ]
  %301 = phi i32 [ %263, %291 ], [ %250, %242 ]
  %302 = add nsw i32 %301, 1
  %303 = icmp sgt i32 %249, 2
  br i1 %303, label %242, label %304, !llvm.loop !11

304:                                              ; preds = %292
  %305 = add i32 %241, -1
  store i32 %302, i32* @f, align 4, !tbaa !4
  br label %306

306:                                              ; preds = %304, %226
  %307 = phi i32 [ %293, %304 ], [ %227, %226 ]
  %308 = phi i32 [ %294, %304 ], [ %228, %226 ]
  %309 = phi i32 [ %302, %304 ], [ %229, %226 ]
  %310 = phi i32 [ %295, %304 ], [ %230, %226 ]
  %311 = phi i32 [ %296, %304 ], [ %231, %226 ]
  %312 = phi i32 [ %302, %304 ], [ %232, %226 ]
  %313 = phi i32 [ %297, %304 ], [ %237, %226 ]
  %314 = phi i32 [ %298, %304 ], [ %236, %226 ]
  %315 = phi i32 [ %302, %304 ], [ %235, %226 ]
  %316 = phi i32 [ %305, %304 ], [ %234, %226 ]
  %317 = add nsw i32 %316, 1
  %318 = icmp slt i32 %233, 17
  br i1 %318, label %226, label %319, !llvm.loop !12

319:                                              ; preds = %306
  store i32 %317, i32* @e, align 4, !tbaa !4
  br label %320

320:                                              ; preds = %319, %224
  %321 = phi i32 [ %307, %319 ], [ %215, %224 ]
  %322 = phi i32 [ %308, %319 ], [ %216, %224 ]
  %323 = phi i32 [ %309, %319 ], [ %217, %224 ]
  %324 = phi i32 [ %310, %319 ], [ %218, %224 ]
  %325 = phi i32 [ %311, %319 ], [ %219, %224 ]
  %326 = phi i32 [ %312, %319 ], [ %220, %224 ]
  %327 = phi i32 [ %317, %319 ], [ %221, %224 ]
  %328 = phi i32 [ %238, %319 ], [ %223, %224 ]
  %329 = add nsw i32 %328, -1
  %330 = icmp slt i32 %328, 21
  br i1 %330, label %331, label %423

331:                                              ; preds = %320, %410
  %332 = phi i32 [ %411, %410 ], [ %321, %320 ]
  %333 = phi i32 [ %412, %410 ], [ %322, %320 ]
  %334 = phi i32 [ %413, %410 ], [ %323, %320 ]
  %335 = phi i32 [ %414, %410 ], [ %324, %320 ]
  %336 = phi i32 [ %415, %410 ], [ %325, %320 ]
  %337 = phi i32 [ %342, %410 ], [ %329, %320 ]
  %338 = phi i32 [ %420, %410 ], [ %327, %320 ]
  %339 = phi i32 [ %418, %410 ], [ %326, %320 ]
  %340 = phi i32 [ %417, %410 ], [ %325, %320 ]
  %341 = phi i32 [ %416, %410 ], [ %324, %320 ]
  %342 = add nsw i32 %337, 3
  %343 = icmp sgt i32 %338, 1
  br i1 %343, label %344, label %410

344:                                              ; preds = %331
  %345 = call i32 @llvm.smin.i32(i32 %338, i32 2)
  br label %346

346:                                              ; preds = %396, %344
  %347 = phi i32 [ %397, %396 ], [ %332, %344 ]
  %348 = phi i32 [ %398, %396 ], [ %333, %344 ]
  %349 = phi i32 [ %399, %396 ], [ %335, %344 ]
  %350 = phi i32 [ %400, %396 ], [ %336, %344 ]
  %351 = phi i32 [ %401, %396 ], [ %341, %344 ]
  %352 = phi i32 [ %402, %396 ], [ %340, %344 ]
  %353 = phi i32 [ %357, %396 ], [ %338, %344 ]
  %354 = phi i32 [ %406, %396 ], [ %339, %344 ]
  %355 = phi i32 [ %404, %396 ], [ %340, %344 ]
  %356 = phi i32 [ %403, %396 ], [ %341, %344 ]
  %357 = add nsw i32 %353, -1
  %358 = icmp sgt i32 %354, 2
  br i1 %358, label %359, label %396

359:                                              ; preds = %346, %386
  %360 = phi i32 [ %387, %386 ], [ %347, %346 ]
  %361 = phi i32 [ %388, %386 ], [ %349, %346 ]
  %362 = phi i32 [ %389, %386 ], [ %351, %346 ]
  %363 = phi i32 [ %390, %386 ], [ %356, %346 ]
  %364 = phi i32 [ %367, %386 ], [ %354, %346 ]
  %365 = phi i32 [ %393, %386 ], [ %355, %346 ]
  %366 = phi i32 [ %391, %386 ], [ %356, %346 ]
  %367 = add nsw i32 %364, -2
  %368 = icmp slt i32 %365, 3
  br i1 %368, label %369, label %386

369:                                              ; preds = %359, %381
  %370 = phi i32 [ %372, %381 ], [ %365, %359 ]
  %371 = phi i32 [ %383, %381 ], [ %366, %359 ]
  %372 = add nsw i32 %370, 10
  %373 = icmp slt i32 %371, 10
  br i1 %373, label %374, label %381

374:                                              ; preds = %369
  %375 = call i32 @llvm.smax.i32(i32 %371, i32 2)
  %376 = add nuw nsw i32 %375, 7
  %377 = sub i32 %376, %371
  %378 = and i32 %377, -8
  %379 = add nsw i32 %371, 8
  %380 = add i32 %379, %378
  br label %381

381:                                              ; preds = %374, %369
  %382 = phi i32 [ %371, %369 ], [ %380, %374 ]
  %383 = add nsw i32 %382, -1
  %384 = icmp slt i32 %370, -7
  br i1 %384, label %369, label %385, !llvm.loop !8

385:                                              ; preds = %381
  store i32 %383, i32* @h, align 4, !tbaa !4
  br label %386

386:                                              ; preds = %385, %359
  %387 = phi i32 [ %383, %385 ], [ %360, %359 ]
  %388 = phi i32 [ %383, %385 ], [ %361, %359 ]
  %389 = phi i32 [ %383, %385 ], [ %362, %359 ]
  %390 = phi i32 [ %383, %385 ], [ %363, %359 ]
  %391 = phi i32 [ %383, %385 ], [ %366, %359 ]
  %392 = phi i32 [ %372, %385 ], [ %365, %359 ]
  %393 = add nsw i32 %392, -8
  %394 = icmp sgt i32 %364, 4
  br i1 %394, label %359, label %395, !llvm.loop !10

395:                                              ; preds = %386
  store i32 %393, i32* @g, align 4, !tbaa !4
  br label %396

396:                                              ; preds = %395, %346
  %397 = phi i32 [ %387, %395 ], [ %347, %346 ]
  %398 = phi i32 [ %393, %395 ], [ %348, %346 ]
  %399 = phi i32 [ %388, %395 ], [ %349, %346 ]
  %400 = phi i32 [ %393, %395 ], [ %350, %346 ]
  %401 = phi i32 [ %389, %395 ], [ %351, %346 ]
  %402 = phi i32 [ %393, %395 ], [ %352, %346 ]
  %403 = phi i32 [ %390, %395 ], [ %356, %346 ]
  %404 = phi i32 [ %393, %395 ], [ %355, %346 ]
  %405 = phi i32 [ %367, %395 ], [ %354, %346 ]
  %406 = add nsw i32 %405, 1
  %407 = icmp sgt i32 %353, 2
  br i1 %407, label %346, label %408, !llvm.loop !11

408:                                              ; preds = %396
  %409 = add i32 %345, -1
  store i32 %406, i32* @f, align 4, !tbaa !4
  br label %410

410:                                              ; preds = %408, %331
  %411 = phi i32 [ %397, %408 ], [ %332, %331 ]
  %412 = phi i32 [ %398, %408 ], [ %333, %331 ]
  %413 = phi i32 [ %406, %408 ], [ %334, %331 ]
  %414 = phi i32 [ %399, %408 ], [ %335, %331 ]
  %415 = phi i32 [ %400, %408 ], [ %336, %331 ]
  %416 = phi i32 [ %401, %408 ], [ %341, %331 ]
  %417 = phi i32 [ %402, %408 ], [ %340, %331 ]
  %418 = phi i32 [ %406, %408 ], [ %339, %331 ]
  %419 = phi i32 [ %409, %408 ], [ %338, %331 ]
  %420 = add nsw i32 %419, 1
  %421 = icmp slt i32 %337, 17
  br i1 %421, label %331, label %422, !llvm.loop !12

422:                                              ; preds = %410
  store i32 %420, i32* @e, align 4, !tbaa !4
  br label %423

423:                                              ; preds = %422, %320
  %424 = phi i32 [ %411, %422 ], [ %321, %320 ]
  %425 = phi i32 [ %412, %422 ], [ %322, %320 ]
  %426 = phi i32 [ %413, %422 ], [ %323, %320 ]
  %427 = phi i32 [ %420, %422 ], [ %327, %320 ]
  %428 = phi i32 [ %342, %422 ], [ %329, %320 ]
  %429 = add nsw i32 %428, -1
  br label %430

430:                                              ; preds = %423, %214
  %431 = phi i32 [ %215, %214 ], [ %424, %423 ]
  %432 = phi i32 [ %216, %214 ], [ %425, %423 ]
  %433 = phi i32 [ %217, %214 ], [ %426, %423 ]
  %434 = phi i32 [ %221, %214 ], [ %427, %423 ]
  %435 = phi i32 [ %223, %214 ], [ %429, %423 ]
  %436 = icmp ult i32 %8, 17
  br i1 %436, label %5, label %437, !llvm.loop !14

437:                                              ; preds = %430
  %438 = add i32 %432, 35
  %439 = add i32 %434, %431
  %440 = sub i32 %438, %439
  ret i32 %440
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local noundef i32 @main() local_unnamed_addr #0 {
  store i32 13, i32* @h, align 4, !tbaa !4
  store i32 3, i32* @g, align 4, !tbaa !4
  store i32 3, i32* @f, align 4, !tbaa !4
  store i32 2, i32* @e, align 4, !tbaa !4
  ret i32 23
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !9}
!14 = distinct !{!14, !9}
