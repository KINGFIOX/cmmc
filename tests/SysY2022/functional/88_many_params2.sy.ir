internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry:
    [53 * [59 * i32]]* %b = alloc [53 * [59 * i32]];
    [61 * [67 * i32]]* %a = alloc [61 * [67 * i32]];
    i32* %0 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 0][i64 0];
    ubr ^b1;
^b1:
    i64 %1 = phi [^entry, i64 0] [^b1, i64 %18];
    i32* %2 = getelementptr &(i32* %0)[i64 %1];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &(i32* %2)[i64 1];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &(i32* %2)[i64 2];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &(i32* %2)[i64 3];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &(i32* %2)[i64 4];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &(i32* %2)[i64 5];
    store i32* %7 with i32 0;
    i32* %8 = getelementptr &(i32* %2)[i64 6];
    store i32* %8 with i32 0;
    i32* %9 = getelementptr &(i32* %2)[i64 7];
    store i32* %9 with i32 0;
    i32* %10 = getelementptr &(i32* %2)[i64 8];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &(i32* %2)[i64 9];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &(i32* %2)[i64 10];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &(i32* %2)[i64 11];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &(i32* %2)[i64 12];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &(i32* %2)[i64 13];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &(i32* %2)[i64 14];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &(i32* %2)[i64 15];
    store i32* %17 with i32 0;
    i64 %18 = add i64 %1, i64 16;
    i1 %19 = scmp lt i64 %18, i64 4080;
    cbr i1 %19(prob = 1), ^b1, ^b2;
^b2:
    i32* %20 = getelementptr &(i32* %0)[i64 %18];
    store i32* %20 with i32 0;
    i32* %21 = getelementptr &(i32* %20)[i64 1];
    store i32* %21 with i32 0;
    i32* %22 = getelementptr &(i32* %20)[i64 2];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &(i32* %20)[i64 3];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &(i32* %20)[i64 4];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &(i32* %20)[i64 5];
    store i32* %25 with i32 0;
    i32* %26 = getelementptr &(i32* %20)[i64 6];
    store i32* %26 with i32 0;
    i32* %27 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 0][i64 0];
    ubr ^b3;
^b3:
    i64 %28 = phi [^b2, i64 0] [^b3, i64 %45];
    i32* %29 = getelementptr &(i32* %27)[i64 %28];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &(i32* %29)[i64 1];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &(i32* %29)[i64 2];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &(i32* %29)[i64 3];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &(i32* %29)[i64 4];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &(i32* %29)[i64 5];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &(i32* %29)[i64 6];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &(i32* %29)[i64 7];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &(i32* %29)[i64 8];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &(i32* %29)[i64 9];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &(i32* %29)[i64 10];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &(i32* %29)[i64 11];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &(i32* %29)[i64 12];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &(i32* %29)[i64 13];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &(i32* %29)[i64 14];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &(i32* %29)[i64 15];
    store i32* %44 with i32 0;
    i64 %45 = add i64 %28, i64 16;
    i1 %46 = scmp lt i64 %45, i64 3120;
    cbr i1 %46(prob = 0.99), ^b3, ^b4;
^b4:
    i32* %47 = getelementptr &(i32* %27)[i64 %45];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &(i32* %47)[i64 1];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &(i32* %47)[i64 2];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &(i32* %47)[i64 3];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &(i32* %47)[i64 4];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &(i32* %47)[i64 5];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &(i32* %47)[i64 6];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 1];
    store i32* %54 with i32 6;
    i32* %55 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 3];
    store i32* %55 with i32 7;
    i32* %56 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 4];
    store i32* %56 with i32 4;
    i32* %57 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 7];
    store i32* %57 with i32 9;
    i32* %58 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 11];
    store i32* %58 with i32 11;
    i32* %59 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 1];
    store i32* %59 with i32 1;
    i32* %60 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 2];
    store i32* %60 with i32 2;
    i32* %61 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 3];
    store i32* %61 with i32 3;
    i32* %62 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 9];
    store i32* %62 with i32 9;
    i32* %63 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 0];
    i32 %64 = load i32* %63;
    i32* %65 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 34][i64 4];
    i32 %66 = load i32* %65;
    i32* %67 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 51][i64 18];
    i32 %68 = load i32* %67;
    [59 * i32]* %69 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6];
    call (i32) -> void @putint(i32 %64);
    ubr ^indirect;
^indirect:
    i32 %70 = phi [^b4, i32 1] [^indirect, i32 %73];
    i32* %71 = getelementptr &([59 * i32]* %69)[i64 0][i32 %70];
    i32 %72 = load i32* %71;
    call (i32) -> void @putint(i32 %72);
    i32 %73 = add i32 %70, i32 1;
    i1 %74 = scmp lt i32 %73, i32 10;
    cbr i1 %74(prob = 0.89), ^indirect, ^b5;
^b5:
    call (i32) -> void @putch(i32 10);
    i32 %75 = load i32* %57;
    call (i32) -> void @putint(i32 %75);
    call (i32) -> void @putch(i32 10);
    i1 %76 = scmp lt i32 %68, i32 10;
    cbr i1 %76(prob = 0.97), ^super.header, ^b6;
^super.header:
    i32 %77 = phi [^b5, i32 %66] [^while.body, i32 %147];
    i32 %78 = phi [^b5, i32 %68] [^while.body, i32 %79];
    i32 %79 = add i32 %78, i32 16;
    i1 %80 = scmp lt i32 %79, i32 10;
    cbr i1 %80(prob = 0.67), ^while.body, ^super.header1;
^b6:
    i32 %81 = add i32 %64, i32 3;
    i32 %82 = mul i32 %81, i32 3;
    i1 %83 = scmp gt i32 %82, i32 -1;
    cbr i1 %83(prob = 0.97), ^while.body1, ^b7;
^while.body:
    i32* %84 = getelementptr &(i32* %63)[i32 %78];
    i32 %85 = mul i32 %77, i32 128875;
    i32 %86 = srem i32 %85, i32 3724;
    store i32* %84 with i32 %86;
    i32 %87 = add i32 %77, i32 7;
    i32* %88 = getelementptr &(i32* %84)[i64 1];
    i32 %89 = mul i32 %87, i32 128875;
    i32 %90 = srem i32 %89, i32 3724;
    store i32* %88 with i32 %90;
    i32 %91 = add i32 %77, i32 14;
    i32* %92 = getelementptr &(i32* %84)[i64 2];
    i32 %93 = mul i32 %91, i32 128875;
    i32 %94 = srem i32 %93, i32 3724;
    store i32* %92 with i32 %94;
    i32 %95 = add i32 %77, i32 21;
    i32* %96 = getelementptr &(i32* %84)[i64 3];
    i32 %97 = mul i32 %95, i32 128875;
    i32 %98 = srem i32 %97, i32 3724;
    store i32* %96 with i32 %98;
    i32 %99 = add i32 %77, i32 28;
    i32* %100 = getelementptr &(i32* %84)[i64 4];
    i32 %101 = mul i32 %99, i32 128875;
    i32 %102 = srem i32 %101, i32 3724;
    store i32* %100 with i32 %102;
    i32 %103 = add i32 %77, i32 35;
    i32* %104 = getelementptr &(i32* %84)[i64 5];
    i32 %105 = mul i32 %103, i32 128875;
    i32 %106 = srem i32 %105, i32 3724;
    store i32* %104 with i32 %106;
    i32 %107 = add i32 %77, i32 42;
    i32* %108 = getelementptr &(i32* %84)[i64 6];
    i32 %109 = mul i32 %107, i32 128875;
    i32 %110 = srem i32 %109, i32 3724;
    store i32* %108 with i32 %110;
    i32 %111 = add i32 %77, i32 49;
    i32* %112 = getelementptr &(i32* %84)[i64 7];
    i32 %113 = mul i32 %111, i32 128875;
    i32 %114 = srem i32 %113, i32 3724;
    store i32* %112 with i32 %114;
    i32 %115 = add i32 %77, i32 56;
    i32* %116 = getelementptr &(i32* %84)[i64 8];
    i32 %117 = mul i32 %115, i32 128875;
    i32 %118 = srem i32 %117, i32 3724;
    store i32* %116 with i32 %118;
    i32 %119 = add i32 %77, i32 63;
    i32* %120 = getelementptr &(i32* %84)[i64 9];
    i32 %121 = mul i32 %119, i32 128875;
    i32 %122 = srem i32 %121, i32 3724;
    store i32* %120 with i32 %122;
    i32 %123 = add i32 %77, i32 70;
    i32* %124 = getelementptr &(i32* %84)[i64 10];
    i32 %125 = mul i32 %123, i32 128875;
    i32 %126 = srem i32 %125, i32 3724;
    store i32* %124 with i32 %126;
    i32 %127 = add i32 %77, i32 77;
    i32* %128 = getelementptr &(i32* %84)[i64 11];
    i32 %129 = mul i32 %127, i32 128875;
    i32 %130 = srem i32 %129, i32 3724;
    store i32* %128 with i32 %130;
    i32 %131 = add i32 %77, i32 84;
    i32* %132 = getelementptr &(i32* %84)[i64 12];
    i32 %133 = mul i32 %131, i32 128875;
    i32 %134 = srem i32 %133, i32 3724;
    store i32* %132 with i32 %134;
    i32 %135 = add i32 %77, i32 91;
    i32* %136 = getelementptr &(i32* %84)[i64 13];
    i32 %137 = mul i32 %135, i32 128875;
    i32 %138 = srem i32 %137, i32 3724;
    store i32* %136 with i32 %138;
    i32 %139 = add i32 %77, i32 98;
    i32* %140 = getelementptr &(i32* %84)[i64 14];
    i32 %141 = mul i32 %139, i32 128875;
    i32 %142 = srem i32 %141, i32 3724;
    store i32* %140 with i32 %142;
    i32 %143 = add i32 %77, i32 105;
    i32* %144 = getelementptr &(i32* %84)[i64 15];
    i32 %145 = mul i32 %143, i32 128875;
    i32 %146 = srem i32 %145, i32 3724;
    store i32* %144 with i32 %146;
    i32 %147 = add i32 %77, i32 112;
    ubr ^super.header;
^super.header1:
    i32 %148 = phi [^super.header, i32 %77] [^while.body2, i32 %220];
    i32 %149 = phi [^super.header, i32 %78] [^while.body2, i32 %150];
    i32 %150 = add i32 %149, i32 16;
    i1 %151 = scmp lt i32 %150, i32 10;
    cbr i1 %151(prob = 0.67), ^while.body2, ^super.header2;
^while.body1:
    i32 %152 = phi [^b6, i32 %82] [^while.body1, i32 %155];
    i32* %153 = getelementptr &([59 * i32]* %69)[i64 0][i32 %152];
    i32 %154 = load i32* %153;
    call (i32) -> void @putint(i32 %154);
    call (i32) -> void @putch(i32 32);
    i32 %155 = add i32 %152, i32 -1;
    i1 %156 = scmp gt i32 %155, i32 -1;
    cbr i1 %156(prob = 0.97), ^while.body1, ^b7;
^b7:
    call (i32) -> void @putch(i32 10);
    ret i32 0;
^while.body2:
    i32* %157 = getelementptr &(i32* %63)[i32 %149];
    i32 %158 = mul i32 %148, i32 128875;
    i32 %159 = srem i32 %158, i32 3724;
    store i32* %157 with i32 %159;
    i32 %160 = add i32 %148, i32 7;
    i32* %161 = getelementptr &(i32* %157)[i64 1];
    i32 %162 = mul i32 %160, i32 128875;
    i32 %163 = srem i32 %162, i32 3724;
    store i32* %161 with i32 %163;
    i32 %164 = add i32 %148, i32 14;
    i32* %165 = getelementptr &(i32* %157)[i64 2];
    i32 %166 = mul i32 %164, i32 128875;
    i32 %167 = srem i32 %166, i32 3724;
    store i32* %165 with i32 %167;
    i32 %168 = add i32 %148, i32 21;
    i32* %169 = getelementptr &(i32* %157)[i64 3];
    i32 %170 = mul i32 %168, i32 128875;
    i32 %171 = srem i32 %170, i32 3724;
    store i32* %169 with i32 %171;
    i32 %172 = add i32 %148, i32 28;
    i32* %173 = getelementptr &(i32* %157)[i64 4];
    i32 %174 = mul i32 %172, i32 128875;
    i32 %175 = srem i32 %174, i32 3724;
    store i32* %173 with i32 %175;
    i32 %176 = add i32 %148, i32 35;
    i32* %177 = getelementptr &(i32* %157)[i64 5];
    i32 %178 = mul i32 %176, i32 128875;
    i32 %179 = srem i32 %178, i32 3724;
    store i32* %177 with i32 %179;
    i32 %180 = add i32 %148, i32 42;
    i32* %181 = getelementptr &(i32* %157)[i64 6];
    i32 %182 = mul i32 %180, i32 128875;
    i32 %183 = srem i32 %182, i32 3724;
    store i32* %181 with i32 %183;
    i32 %184 = add i32 %148, i32 49;
    i32* %185 = getelementptr &(i32* %157)[i64 7];
    i32 %186 = mul i32 %184, i32 128875;
    i32 %187 = srem i32 %186, i32 3724;
    store i32* %185 with i32 %187;
    i32 %188 = add i32 %148, i32 56;
    i32* %189 = getelementptr &(i32* %157)[i64 8];
    i32 %190 = mul i32 %188, i32 128875;
    i32 %191 = srem i32 %190, i32 3724;
    store i32* %189 with i32 %191;
    i32 %192 = add i32 %148, i32 63;
    i32* %193 = getelementptr &(i32* %157)[i64 9];
    i32 %194 = mul i32 %192, i32 128875;
    i32 %195 = srem i32 %194, i32 3724;
    store i32* %193 with i32 %195;
    i32 %196 = add i32 %148, i32 70;
    i32* %197 = getelementptr &(i32* %157)[i64 10];
    i32 %198 = mul i32 %196, i32 128875;
    i32 %199 = srem i32 %198, i32 3724;
    store i32* %197 with i32 %199;
    i32 %200 = add i32 %148, i32 77;
    i32* %201 = getelementptr &(i32* %157)[i64 11];
    i32 %202 = mul i32 %200, i32 128875;
    i32 %203 = srem i32 %202, i32 3724;
    store i32* %201 with i32 %203;
    i32 %204 = add i32 %148, i32 84;
    i32* %205 = getelementptr &(i32* %157)[i64 12];
    i32 %206 = mul i32 %204, i32 128875;
    i32 %207 = srem i32 %206, i32 3724;
    store i32* %205 with i32 %207;
    i32 %208 = add i32 %148, i32 91;
    i32* %209 = getelementptr &(i32* %157)[i64 13];
    i32 %210 = mul i32 %208, i32 128875;
    i32 %211 = srem i32 %210, i32 3724;
    store i32* %209 with i32 %211;
    i32 %212 = add i32 %148, i32 98;
    i32* %213 = getelementptr &(i32* %157)[i64 14];
    i32 %214 = mul i32 %212, i32 128875;
    i32 %215 = srem i32 %214, i32 3724;
    store i32* %213 with i32 %215;
    i32 %216 = add i32 %148, i32 105;
    i32* %217 = getelementptr &(i32* %157)[i64 15];
    i32 %218 = mul i32 %216, i32 128875;
    i32 %219 = srem i32 %218, i32 3724;
    store i32* %217 with i32 %219;
    i32 %220 = add i32 %148, i32 112;
    ubr ^super.header1;
^super.header2:
    i32 %221 = phi [^super.header1, i32 %148] [^while.body3, i32 %288];
    i32 %222 = phi [^super.header1, i32 %149] [^while.body3, i32 %223];
    i32 %223 = add i32 %222, i32 16;
    i1 %224 = scmp lt i32 %223, i32 10;
    cbr i1 %224(prob = 0.67), ^while.body3, ^while.body4;
^while.body3:
    i32* %225 = getelementptr &(i32* %63)[i32 %222];
    i32 %226 = mul i32 %221, i32 128875;
    i32 %227 = srem i32 %226, i32 3724;
    store i32* %225 with i32 %227;
    i32 %228 = add i32 %221, i32 7;
    i32* %229 = getelementptr &(i32* %225)[i64 1];
    i32 %230 = mul i32 %228, i32 128875;
    i32 %231 = srem i32 %230, i32 3724;
    store i32* %229 with i32 %231;
    i32 %232 = add i32 %221, i32 14;
    i32* %233 = getelementptr &(i32* %225)[i64 2];
    i32 %234 = mul i32 %232, i32 128875;
    i32 %235 = srem i32 %234, i32 3724;
    store i32* %233 with i32 %235;
    i32 %236 = add i32 %221, i32 21;
    i32* %237 = getelementptr &(i32* %225)[i64 3];
    i32 %238 = mul i32 %236, i32 128875;
    i32 %239 = srem i32 %238, i32 3724;
    store i32* %237 with i32 %239;
    i32 %240 = add i32 %221, i32 28;
    i32* %241 = getelementptr &(i32* %225)[i64 4];
    i32 %242 = mul i32 %240, i32 128875;
    i32 %243 = srem i32 %242, i32 3724;
    store i32* %241 with i32 %243;
    i32 %244 = add i32 %221, i32 35;
    i32* %245 = getelementptr &(i32* %225)[i64 5];
    i32 %246 = mul i32 %244, i32 128875;
    i32 %247 = srem i32 %246, i32 3724;
    store i32* %245 with i32 %247;
    i32 %248 = add i32 %221, i32 42;
    i32* %249 = getelementptr &(i32* %225)[i64 6];
    i32 %250 = mul i32 %248, i32 128875;
    i32 %251 = srem i32 %250, i32 3724;
    store i32* %249 with i32 %251;
    i32 %252 = add i32 %221, i32 49;
    i32* %253 = getelementptr &(i32* %225)[i64 7];
    i32 %254 = mul i32 %252, i32 128875;
    i32 %255 = srem i32 %254, i32 3724;
    store i32* %253 with i32 %255;
    i32 %256 = add i32 %221, i32 56;
    i32* %257 = getelementptr &(i32* %225)[i64 8];
    i32 %258 = mul i32 %256, i32 128875;
    i32 %259 = srem i32 %258, i32 3724;
    store i32* %257 with i32 %259;
    i32 %260 = add i32 %221, i32 63;
    i32* %261 = getelementptr &(i32* %225)[i64 9];
    i32 %262 = mul i32 %260, i32 128875;
    i32 %263 = srem i32 %262, i32 3724;
    store i32* %261 with i32 %263;
    i32 %264 = add i32 %221, i32 70;
    i32* %265 = getelementptr &(i32* %225)[i64 10];
    i32 %266 = mul i32 %264, i32 128875;
    i32 %267 = srem i32 %266, i32 3724;
    store i32* %265 with i32 %267;
    i32 %268 = add i32 %221, i32 77;
    i32* %269 = getelementptr &(i32* %225)[i64 11];
    i32 %270 = mul i32 %268, i32 128875;
    i32 %271 = srem i32 %270, i32 3724;
    store i32* %269 with i32 %271;
    i32 %272 = add i32 %221, i32 84;
    i32* %273 = getelementptr &(i32* %225)[i64 12];
    i32 %274 = mul i32 %272, i32 128875;
    i32 %275 = srem i32 %274, i32 3724;
    store i32* %273 with i32 %275;
    i32 %276 = add i32 %221, i32 91;
    i32* %277 = getelementptr &(i32* %225)[i64 13];
    i32 %278 = mul i32 %276, i32 128875;
    i32 %279 = srem i32 %278, i32 3724;
    store i32* %277 with i32 %279;
    i32 %280 = add i32 %221, i32 98;
    i32* %281 = getelementptr &(i32* %225)[i64 14];
    i32 %282 = mul i32 %280, i32 128875;
    i32 %283 = srem i32 %282, i32 3724;
    store i32* %281 with i32 %283;
    i32 %284 = add i32 %221, i32 105;
    i32* %285 = getelementptr &(i32* %225)[i64 15];
    i32 %286 = mul i32 %284, i32 128875;
    i32 %287 = srem i32 %286, i32 3724;
    store i32* %285 with i32 %287;
    i32 %288 = add i32 %221, i32 112;
    ubr ^super.header2;
^while.body4:
    i32 %289 = phi [^super.header2, i32 %221] [^while.body4, i32 %295];
    i32 %290 = phi [^super.header2, i32 %222] [^while.body4, i32 %294];
    i32* %291 = getelementptr &(i32* %63)[i32 %290];
    i32 %292 = mul i32 %289, i32 128875;
    i32 %293 = srem i32 %292, i32 3724;
    store i32* %291 with i32 %293;
    i32 %294 = add i32 %290, i32 1;
    i32 %295 = add i32 %289, i32 7;
    i1 %296 = scmp lt i32 %294, i32 10;
    cbr i1 %296(prob = 0.97), ^while.body4, ^b6;
}
