internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    [53 * [59 * i32]]* %b = alloc [53 * [59 * i32]];
    [61 * [67 * i32]]* %a = alloc [61 * [67 * i32]];
    i32* %0 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 0][i64 0];
    ubr ^b1;
  ^b1:
    i64 %1 = phi [^entry, i64 0] [^b1, i64 %18];
    i32* %2 = getelementptr &(i32* %0)[i64 %1];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &(i32* %2)[i64 1];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &(i32* %2)[i64 2];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &(i32* %2)[i64 3];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &(i32* %2)[i64 4];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &(i32* %2)[i64 5];
    store i32* %7 with i32 0;
    i32* %8 = getelementptr &(i32* %2)[i64 6];
    store i32* %8 with i32 0;
    i32* %9 = getelementptr &(i32* %2)[i64 7];
    store i32* %9 with i32 0;
    i32* %10 = getelementptr &(i32* %2)[i64 8];
    store i32* %10 with i32 0;
    i32* %11 = getelementptr &(i32* %2)[i64 9];
    store i32* %11 with i32 0;
    i32* %12 = getelementptr &(i32* %2)[i64 10];
    store i32* %12 with i32 0;
    i32* %13 = getelementptr &(i32* %2)[i64 11];
    store i32* %13 with i32 0;
    i32* %14 = getelementptr &(i32* %2)[i64 12];
    store i32* %14 with i32 0;
    i32* %15 = getelementptr &(i32* %2)[i64 13];
    store i32* %15 with i32 0;
    i32* %16 = getelementptr &(i32* %2)[i64 14];
    store i32* %16 with i32 0;
    i32* %17 = getelementptr &(i32* %2)[i64 15];
    store i32* %17 with i32 0;
    i64 %18 = add i64 %1, i64 16;
    i1 %19 = scmp lt i64 %18, i64 4080;
    cbr i1 %19(prob = 1), ^b1, ^b2;
  ^b2:
    i32* %20 = getelementptr &(i32* %0)[i64 %18];
    store i32* %20 with i32 0;
    i32* %21 = getelementptr &(i32* %20)[i64 1];
    store i32* %21 with i32 0;
    i32* %22 = getelementptr &(i32* %20)[i64 2];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &(i32* %20)[i64 3];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &(i32* %20)[i64 4];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &(i32* %20)[i64 5];
    store i32* %25 with i32 0;
    i32* %26 = getelementptr &(i32* %20)[i64 6];
    store i32* %26 with i32 0;
    i32* %27 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 0][i64 0];
    ubr ^b3;
  ^b3:
    i64 %28 = phi [^b2, i64 0] [^b3, i64 %45];
    i32* %29 = getelementptr &(i32* %27)[i64 %28];
    store i32* %29 with i32 0;
    i32* %30 = getelementptr &(i32* %29)[i64 1];
    store i32* %30 with i32 0;
    i32* %31 = getelementptr &(i32* %29)[i64 2];
    store i32* %31 with i32 0;
    i32* %32 = getelementptr &(i32* %29)[i64 3];
    store i32* %32 with i32 0;
    i32* %33 = getelementptr &(i32* %29)[i64 4];
    store i32* %33 with i32 0;
    i32* %34 = getelementptr &(i32* %29)[i64 5];
    store i32* %34 with i32 0;
    i32* %35 = getelementptr &(i32* %29)[i64 6];
    store i32* %35 with i32 0;
    i32* %36 = getelementptr &(i32* %29)[i64 7];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &(i32* %29)[i64 8];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &(i32* %29)[i64 9];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &(i32* %29)[i64 10];
    store i32* %39 with i32 0;
    i32* %40 = getelementptr &(i32* %29)[i64 11];
    store i32* %40 with i32 0;
    i32* %41 = getelementptr &(i32* %29)[i64 12];
    store i32* %41 with i32 0;
    i32* %42 = getelementptr &(i32* %29)[i64 13];
    store i32* %42 with i32 0;
    i32* %43 = getelementptr &(i32* %29)[i64 14];
    store i32* %43 with i32 0;
    i32* %44 = getelementptr &(i32* %29)[i64 15];
    store i32* %44 with i32 0;
    i64 %45 = add i64 %28, i64 16;
    i1 %46 = scmp lt i64 %45, i64 3120;
    cbr i1 %46(prob = 0.99), ^b3, ^b4;
  ^b4:
    i32* %47 = getelementptr &(i32* %27)[i64 %45];
    store i32* %47 with i32 0;
    i32* %48 = getelementptr &(i32* %47)[i64 1];
    store i32* %48 with i32 0;
    i32* %49 = getelementptr &(i32* %47)[i64 2];
    store i32* %49 with i32 0;
    i32* %50 = getelementptr &(i32* %47)[i64 3];
    store i32* %50 with i32 0;
    i32* %51 = getelementptr &(i32* %47)[i64 4];
    store i32* %51 with i32 0;
    i32* %52 = getelementptr &(i32* %47)[i64 5];
    store i32* %52 with i32 0;
    i32* %53 = getelementptr &(i32* %47)[i64 6];
    store i32* %53 with i32 0;
    i32* %54 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 1];
    store i32* %54 with i32 6;
    i32* %55 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 3];
    store i32* %55 with i32 7;
    i32* %56 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 4];
    store i32* %56 with i32 4;
    i32* %57 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 7];
    store i32* %57 with i32 9;
    i32* %58 = getelementptr &([61 * [67 * i32]]* %a)[i64 0][i64 17][i64 11];
    store i32* %58 with i32 11;
    i32* %59 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 1];
    store i32* %59 with i32 1;
    i32* %60 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 2];
    store i32* %60 with i32 2;
    i32* %61 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 3];
    store i32* %61 with i32 3;
    i32* %62 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 9];
    store i32* %62 with i32 9;
    i32* %63 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6][i64 0];
    i32 %64 = load i32* %63;
    i32* %65 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 34][i64 4];
    i32 %66 = load i32* %65;
    i32* %67 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 51][i64 18];
    i32 %68 = load i32* %67;
    [59 * i32]* %69 = getelementptr &([53 * [59 * i32]]* %b)[i64 0][i64 6];
    ubr ^while.body;
  ^while.body:
    i32 %70 = phi [^b4, i32 0] [^while.body, i32 %73];
    i32* %71 = getelementptr &([59 * i32]* %69)[i64 0][i32 %70];
    i32 %72 = load i32* %71;
    call (i32) -> void @putint(i32 %72);
    i32 %73 = add i32 %70, i32 1;
    i1 %74 = scmp lt i32 %73, i32 10;
    cbr i1 %74(prob = 0.9), ^while.body, ^b5;
  ^b5:
    call (i32) -> void @putch(i32 10);
    i32 %75 = load i32* %57;
    call (i32) -> void @putint(i32 %75);
    call (i32) -> void @putch(i32 10);
    i1 %76 = scmp lt i32 %68, i32 10;
    cbr i1 %76(prob = 0.97), ^super.header, ^b6;
  ^super.header:
    i32 %77 = phi [^b5, i32 %66] [^while.body1, i32 %147];
    i32 %78 = phi [^b5, i32 %68] [^while.body1, i32 %79];
    i32 %79 = add i32 %78, i32 16;
    i1 %80 = scmp lt i32 %79, i32 10;
    cbr i1 %80(prob = 0.67), ^while.body1, ^super.header1;
  ^b6:
    i32 %81 = add i32 %64, i32 3;
    i32 %82 = mul i32 %81, i32 3;
    i1 %83 = scmp gt i32 %82, i32 -1;
    cbr i1 %83(prob = 0.97), ^while.body2, ^b7;
  ^while.body1:
    i32 %84 = mul i32 %77, i32 128875;
    i32 %85 = srem i32 %84, i32 3724;
    i32* %86 = getelementptr &(i32* %63)[i32 %78];
    store i32* %86 with i32 %85;
    i32 %87 = add i32 %77, i32 7;
    i32 %88 = mul i32 %87, i32 128875;
    i32 %89 = srem i32 %88, i32 3724;
    i32* %90 = getelementptr &(i32* %86)[i64 1];
    store i32* %90 with i32 %89;
    i32 %91 = add i32 %77, i32 14;
    i32 %92 = mul i32 %91, i32 128875;
    i32 %93 = srem i32 %92, i32 3724;
    i32* %94 = getelementptr &(i32* %86)[i64 2];
    store i32* %94 with i32 %93;
    i32 %95 = add i32 %77, i32 21;
    i32 %96 = mul i32 %95, i32 128875;
    i32 %97 = srem i32 %96, i32 3724;
    i32* %98 = getelementptr &(i32* %86)[i64 3];
    store i32* %98 with i32 %97;
    i32 %99 = add i32 %77, i32 28;
    i32 %100 = mul i32 %99, i32 128875;
    i32 %101 = srem i32 %100, i32 3724;
    i32* %102 = getelementptr &(i32* %86)[i64 4];
    store i32* %102 with i32 %101;
    i32 %103 = add i32 %77, i32 35;
    i32 %104 = mul i32 %103, i32 128875;
    i32 %105 = srem i32 %104, i32 3724;
    i32* %106 = getelementptr &(i32* %86)[i64 5];
    store i32* %106 with i32 %105;
    i32 %107 = add i32 %77, i32 42;
    i32 %108 = mul i32 %107, i32 128875;
    i32 %109 = srem i32 %108, i32 3724;
    i32* %110 = getelementptr &(i32* %86)[i64 6];
    store i32* %110 with i32 %109;
    i32 %111 = add i32 %77, i32 49;
    i32 %112 = mul i32 %111, i32 128875;
    i32 %113 = srem i32 %112, i32 3724;
    i32* %114 = getelementptr &(i32* %86)[i64 7];
    store i32* %114 with i32 %113;
    i32 %115 = add i32 %77, i32 56;
    i32 %116 = mul i32 %115, i32 128875;
    i32 %117 = srem i32 %116, i32 3724;
    i32* %118 = getelementptr &(i32* %86)[i64 8];
    store i32* %118 with i32 %117;
    i32 %119 = add i32 %77, i32 63;
    i32 %120 = mul i32 %119, i32 128875;
    i32 %121 = srem i32 %120, i32 3724;
    i32* %122 = getelementptr &(i32* %86)[i64 9];
    store i32* %122 with i32 %121;
    i32 %123 = add i32 %77, i32 70;
    i32 %124 = mul i32 %123, i32 128875;
    i32 %125 = srem i32 %124, i32 3724;
    i32* %126 = getelementptr &(i32* %86)[i64 10];
    store i32* %126 with i32 %125;
    i32 %127 = add i32 %77, i32 77;
    i32 %128 = mul i32 %127, i32 128875;
    i32 %129 = srem i32 %128, i32 3724;
    i32* %130 = getelementptr &(i32* %86)[i64 11];
    store i32* %130 with i32 %129;
    i32 %131 = add i32 %77, i32 84;
    i32 %132 = mul i32 %131, i32 128875;
    i32 %133 = srem i32 %132, i32 3724;
    i32* %134 = getelementptr &(i32* %86)[i64 12];
    store i32* %134 with i32 %133;
    i32 %135 = add i32 %77, i32 91;
    i32 %136 = mul i32 %135, i32 128875;
    i32 %137 = srem i32 %136, i32 3724;
    i32* %138 = getelementptr &(i32* %86)[i64 13];
    store i32* %138 with i32 %137;
    i32 %139 = add i32 %77, i32 98;
    i32 %140 = mul i32 %139, i32 128875;
    i32 %141 = srem i32 %140, i32 3724;
    i32* %142 = getelementptr &(i32* %86)[i64 14];
    store i32* %142 with i32 %141;
    i32 %143 = add i32 %77, i32 105;
    i32 %144 = mul i32 %143, i32 128875;
    i32 %145 = srem i32 %144, i32 3724;
    i32* %146 = getelementptr &(i32* %86)[i64 15];
    store i32* %146 with i32 %145;
    i32 %147 = add i32 %77, i32 112;
    ubr ^super.header;
  ^super.header1:
    i32 %148 = phi [^super.header, i32 %77] [^while.body3, i32 %220];
    i32 %149 = phi [^super.header, i32 %78] [^while.body3, i32 %150];
    i32 %150 = add i32 %149, i32 16;
    i1 %151 = scmp lt i32 %150, i32 10;
    cbr i1 %151(prob = 0.67), ^while.body3, ^super.header2;
  ^while.body2:
    i32 %152 = phi [^b6, i32 %82] [^while.body2, i32 %155];
    i32* %153 = getelementptr &([59 * i32]* %69)[i64 0][i32 %152];
    i32 %154 = load i32* %153;
    call (i32) -> void @putint(i32 %154);
    call (i32) -> void @putch(i32 32);
    i32 %155 = add i32 %152, i32 -1;
    i1 %156 = scmp gt i32 %155, i32 -1;
    cbr i1 %156(prob = 0.97), ^while.body2, ^b7;
  ^b7:
    call (i32) -> void @putch(i32 10);
    ret i32 0;
  ^while.body3:
    i32 %157 = mul i32 %148, i32 128875;
    i32 %158 = srem i32 %157, i32 3724;
    i32* %159 = getelementptr &(i32* %63)[i32 %149];
    store i32* %159 with i32 %158;
    i32 %160 = add i32 %148, i32 7;
    i32 %161 = mul i32 %160, i32 128875;
    i32 %162 = srem i32 %161, i32 3724;
    i32* %163 = getelementptr &(i32* %159)[i64 1];
    store i32* %163 with i32 %162;
    i32 %164 = add i32 %148, i32 14;
    i32 %165 = mul i32 %164, i32 128875;
    i32 %166 = srem i32 %165, i32 3724;
    i32* %167 = getelementptr &(i32* %159)[i64 2];
    store i32* %167 with i32 %166;
    i32 %168 = add i32 %148, i32 21;
    i32 %169 = mul i32 %168, i32 128875;
    i32 %170 = srem i32 %169, i32 3724;
    i32* %171 = getelementptr &(i32* %159)[i64 3];
    store i32* %171 with i32 %170;
    i32 %172 = add i32 %148, i32 28;
    i32 %173 = mul i32 %172, i32 128875;
    i32 %174 = srem i32 %173, i32 3724;
    i32* %175 = getelementptr &(i32* %159)[i64 4];
    store i32* %175 with i32 %174;
    i32 %176 = add i32 %148, i32 35;
    i32 %177 = mul i32 %176, i32 128875;
    i32 %178 = srem i32 %177, i32 3724;
    i32* %179 = getelementptr &(i32* %159)[i64 5];
    store i32* %179 with i32 %178;
    i32 %180 = add i32 %148, i32 42;
    i32 %181 = mul i32 %180, i32 128875;
    i32 %182 = srem i32 %181, i32 3724;
    i32* %183 = getelementptr &(i32* %159)[i64 6];
    store i32* %183 with i32 %182;
    i32 %184 = add i32 %148, i32 49;
    i32 %185 = mul i32 %184, i32 128875;
    i32 %186 = srem i32 %185, i32 3724;
    i32* %187 = getelementptr &(i32* %159)[i64 7];
    store i32* %187 with i32 %186;
    i32 %188 = add i32 %148, i32 56;
    i32 %189 = mul i32 %188, i32 128875;
    i32 %190 = srem i32 %189, i32 3724;
    i32* %191 = getelementptr &(i32* %159)[i64 8];
    store i32* %191 with i32 %190;
    i32 %192 = add i32 %148, i32 63;
    i32 %193 = mul i32 %192, i32 128875;
    i32 %194 = srem i32 %193, i32 3724;
    i32* %195 = getelementptr &(i32* %159)[i64 9];
    store i32* %195 with i32 %194;
    i32 %196 = add i32 %148, i32 70;
    i32 %197 = mul i32 %196, i32 128875;
    i32 %198 = srem i32 %197, i32 3724;
    i32* %199 = getelementptr &(i32* %159)[i64 10];
    store i32* %199 with i32 %198;
    i32 %200 = add i32 %148, i32 77;
    i32 %201 = mul i32 %200, i32 128875;
    i32 %202 = srem i32 %201, i32 3724;
    i32* %203 = getelementptr &(i32* %159)[i64 11];
    store i32* %203 with i32 %202;
    i32 %204 = add i32 %148, i32 84;
    i32 %205 = mul i32 %204, i32 128875;
    i32 %206 = srem i32 %205, i32 3724;
    i32* %207 = getelementptr &(i32* %159)[i64 12];
    store i32* %207 with i32 %206;
    i32 %208 = add i32 %148, i32 91;
    i32 %209 = mul i32 %208, i32 128875;
    i32 %210 = srem i32 %209, i32 3724;
    i32* %211 = getelementptr &(i32* %159)[i64 13];
    store i32* %211 with i32 %210;
    i32 %212 = add i32 %148, i32 98;
    i32 %213 = mul i32 %212, i32 128875;
    i32 %214 = srem i32 %213, i32 3724;
    i32* %215 = getelementptr &(i32* %159)[i64 14];
    store i32* %215 with i32 %214;
    i32 %216 = add i32 %148, i32 105;
    i32 %217 = mul i32 %216, i32 128875;
    i32 %218 = srem i32 %217, i32 3724;
    i32* %219 = getelementptr &(i32* %159)[i64 15];
    store i32* %219 with i32 %218;
    i32 %220 = add i32 %148, i32 112;
    ubr ^super.header1;
  ^super.header2:
    i32 %221 = phi [^super.header1, i32 %148] [^while.body4, i32 %288];
    i32 %222 = phi [^super.header1, i32 %149] [^while.body4, i32 %223];
    i32 %223 = add i32 %222, i32 16;
    i1 %224 = scmp lt i32 %223, i32 10;
    cbr i1 %224(prob = 0.67), ^while.body4, ^while.body5;
  ^while.body4:
    i32 %225 = mul i32 %221, i32 128875;
    i32 %226 = srem i32 %225, i32 3724;
    i32* %227 = getelementptr &(i32* %63)[i32 %222];
    store i32* %227 with i32 %226;
    i32 %228 = add i32 %221, i32 7;
    i32 %229 = mul i32 %228, i32 128875;
    i32 %230 = srem i32 %229, i32 3724;
    i32* %231 = getelementptr &(i32* %227)[i64 1];
    store i32* %231 with i32 %230;
    i32 %232 = add i32 %221, i32 14;
    i32 %233 = mul i32 %232, i32 128875;
    i32 %234 = srem i32 %233, i32 3724;
    i32* %235 = getelementptr &(i32* %227)[i64 2];
    store i32* %235 with i32 %234;
    i32 %236 = add i32 %221, i32 21;
    i32 %237 = mul i32 %236, i32 128875;
    i32 %238 = srem i32 %237, i32 3724;
    i32* %239 = getelementptr &(i32* %227)[i64 3];
    store i32* %239 with i32 %238;
    i32 %240 = add i32 %221, i32 28;
    i32 %241 = mul i32 %240, i32 128875;
    i32 %242 = srem i32 %241, i32 3724;
    i32* %243 = getelementptr &(i32* %227)[i64 4];
    store i32* %243 with i32 %242;
    i32 %244 = add i32 %221, i32 35;
    i32 %245 = mul i32 %244, i32 128875;
    i32 %246 = srem i32 %245, i32 3724;
    i32* %247 = getelementptr &(i32* %227)[i64 5];
    store i32* %247 with i32 %246;
    i32 %248 = add i32 %221, i32 42;
    i32 %249 = mul i32 %248, i32 128875;
    i32 %250 = srem i32 %249, i32 3724;
    i32* %251 = getelementptr &(i32* %227)[i64 6];
    store i32* %251 with i32 %250;
    i32 %252 = add i32 %221, i32 49;
    i32 %253 = mul i32 %252, i32 128875;
    i32 %254 = srem i32 %253, i32 3724;
    i32* %255 = getelementptr &(i32* %227)[i64 7];
    store i32* %255 with i32 %254;
    i32 %256 = add i32 %221, i32 56;
    i32 %257 = mul i32 %256, i32 128875;
    i32 %258 = srem i32 %257, i32 3724;
    i32* %259 = getelementptr &(i32* %227)[i64 8];
    store i32* %259 with i32 %258;
    i32 %260 = add i32 %221, i32 63;
    i32 %261 = mul i32 %260, i32 128875;
    i32 %262 = srem i32 %261, i32 3724;
    i32* %263 = getelementptr &(i32* %227)[i64 9];
    store i32* %263 with i32 %262;
    i32 %264 = add i32 %221, i32 70;
    i32 %265 = mul i32 %264, i32 128875;
    i32 %266 = srem i32 %265, i32 3724;
    i32* %267 = getelementptr &(i32* %227)[i64 10];
    store i32* %267 with i32 %266;
    i32 %268 = add i32 %221, i32 77;
    i32 %269 = mul i32 %268, i32 128875;
    i32 %270 = srem i32 %269, i32 3724;
    i32* %271 = getelementptr &(i32* %227)[i64 11];
    store i32* %271 with i32 %270;
    i32 %272 = add i32 %221, i32 84;
    i32 %273 = mul i32 %272, i32 128875;
    i32 %274 = srem i32 %273, i32 3724;
    i32* %275 = getelementptr &(i32* %227)[i64 12];
    store i32* %275 with i32 %274;
    i32 %276 = add i32 %221, i32 91;
    i32 %277 = mul i32 %276, i32 128875;
    i32 %278 = srem i32 %277, i32 3724;
    i32* %279 = getelementptr &(i32* %227)[i64 13];
    store i32* %279 with i32 %278;
    i32 %280 = add i32 %221, i32 98;
    i32 %281 = mul i32 %280, i32 128875;
    i32 %282 = srem i32 %281, i32 3724;
    i32* %283 = getelementptr &(i32* %227)[i64 14];
    store i32* %283 with i32 %282;
    i32 %284 = add i32 %221, i32 105;
    i32 %285 = mul i32 %284, i32 128875;
    i32 %286 = srem i32 %285, i32 3724;
    i32* %287 = getelementptr &(i32* %227)[i64 15];
    store i32* %287 with i32 %286;
    i32 %288 = add i32 %221, i32 112;
    ubr ^super.header2;
  ^while.body5:
    i32 %289 = phi [^super.header2, i32 %221] [^while.body5, i32 %296];
    i32 %290 = phi [^super.header2, i32 %222] [^while.body5, i32 %294];
    i32 %291 = mul i32 %289, i32 128875;
    i32 %292 = srem i32 %291, i32 3724;
    i32* %293 = getelementptr &(i32* %63)[i32 %290];
    store i32* %293 with i32 %292;
    i32 %294 = add i32 %290, i32 1;
    i1 %295 = scmp lt i32 %294, i32 10;
    i32 %296 = add i32 %289, i32 7;
    cbr i1 %295(prob = 0.97), ^while.body5, ^b6;
}
