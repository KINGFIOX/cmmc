internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    ubr ^while.body;
  ^while.body:
    i32 %0 = phi [^entry, i32 1] [^b4, i32 %16];
    i32 %1 = phi [^entry, i32 -1] [^b4, i32 %17];
    i32 %2 = phi [^entry, i32 5] [^b4, i32 %18];
    i32 %3 = add i32 %1, i32 1;
    i1 %4 = icmp neq i32 %3, i32 0;
    cbr i1 %4(prob = 0.5), ^b, ^b1;
  ^b:
    i32 %5 = add i32 %1, i32 2;
    i1 %6 = icmp neq i32 %5, i32 0;
    cbr i1 %6(prob = 0.5), ^b2, ^b1;
  ^b1:
    i32 %7 = phi [^while.body, i32 %3] [^b, i32 %5] [^b2, i32 %12] [^if.then1, i32 %12];
    i32 %8 = add i32 %7, i32 1;
    i1 %9 = icmp slt i32 %8, i32 14;
    cbr i1 %9(prob = 0.5), ^if.then, ^b3;
  ^if.then:
    i32 %10 = phi [^b1, i32 %8] [^b5, i32 %23];
    call (i32) -> void @putint(i32 %10);
    call (i32) -> void @putch(i32 10);
    i32 %11 = mul i32 %0, i32 2;
    ubr ^b4;
  ^b2:
    i32 %12 = add i32 %1, i32 3;
    i1 %13 = icmp neq i32 %12, i32 0;
    cbr i1 %13(prob = 0.5), ^if.then1, ^b1;
  ^b3:
    i32 %14 = add i32 %7, i32 2;
    i1 %15 = icmp neq i32 %14, i32 0;
    cbr i1 %15(prob = 0.5), ^b5, ^if.else;
  ^if.then1:
    call (i32) -> void @putint(i32 %12);
    call (i32) -> void @putch(i32 32);
    call (i32) -> void @putint(i32 %0);
    call (i32) -> void @putch(i32 10);
    ubr ^b1;
  ^b4:
    i32 %16 = phi [^if.then, i32 %11] [^if.else, i32 %0];
    i32 %17 = phi [^if.then, i32 %10] [^if.else, i32 %21];
    i32 %18 = add i32 %2, i32 -1;
    i1 %19 = icmp sgt i32 %18, i32 -1;
    cbr i1 %19(prob = 0.833333), ^while.body, ^b6;
  ^if.else:
    i32 %20 = phi [^b3, i32 %14] [^b5, i32 %23];
    i32 %21 = add i32 %20, i32 1;
    ubr ^b4;
  ^b5:
    i32 %22 = add i32 %7, i32 3;
    i32 %23 = add i32 %7, i32 4;
    i32 %24 = sub i32 %22, i32 %23;
    i32 %25 = add i32 %24, i32 1;
    i1 %26 = icmp neq i32 %25, i32 0;
    cbr i1 %26(prob = 0.5), ^if.then, ^if.else;
  ^b6:
    call (i32) -> void @putint(i32 %17);
    call (i32) -> void @putch(i32 32);
    call (i32) -> void @putint(i32 %16);
    call (i32) -> void @putch(i32 10);
    ret i32 %17;
}
