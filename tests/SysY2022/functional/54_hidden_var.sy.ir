internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry:
    [4 * i32]* %c = alloc [4 * i32];
    [7 * [1 * [5 * i32]]]* %c1 = alloc [7 * [1 * [5 * i32]]];
    [2 * [8 * i32]]* %c2 = alloc [2 * [8 * i32]];
    i32* %0 = getelementptr &([4 * i32]* %c)[i64 0][i64 0];
    store i32* %0 with i32 6;
    i32* %1 = getelementptr &([4 * i32]* %c)[i64 0][i64 1];
    store i32* %1 with i32 7;
    i32* %2 = getelementptr &([4 * i32]* %c)[i64 0][i64 2];
    i32* %3 = getelementptr &([4 * i32]* %c)[i64 0][i64 3];
    store i32* %3 with i32 9;
    i32* %4 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 0];
    i32* %5 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 1];
    i32* %6 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 2];
    i32* %7 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 3];
    i32* %8 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 4];
    i32* %9 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 5];
    i32* %10 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 6];
    i32* %11 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 0][i64 7];
    i32* %12 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 0];
    i32* %13 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 1];
    i32* %14 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 2];
    i32* %15 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 3];
    i32* %16 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 4];
    i32* %17 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 5];
    i32* %18 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 6];
    i32* %19 = getelementptr &([2 * [8 * i32]]* %c2)[i64 0][i64 1][i64 7];
    i32* %20 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 0][i64 0][i64 0];
    i32* %21 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 0][i64 0][i64 1];
    i32* %22 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 0][i64 0][i64 2];
    i32* %23 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 0][i64 0][i64 3];
    i32* %24 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 0][i64 0][i64 4];
    i32* %25 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 1][i64 0][i64 0];
    i32* %26 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 1][i64 0][i64 1];
    i32* %27 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 1][i64 0][i64 2];
    i32* %28 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 1][i64 0][i64 3];
    i32* %29 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 1][i64 0][i64 4];
    i32* %30 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 2][i64 0][i64 0];
    i32* %31 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 2][i64 0][i64 1];
    i32* %32 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 2][i64 0][i64 2];
    i32* %33 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 2][i64 0][i64 3];
    i32* %34 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 2][i64 0][i64 4];
    i32* %35 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 3][i64 0][i64 0];
    i32* %36 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 3][i64 0][i64 1];
    i32* %37 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 3][i64 0][i64 2];
    i32* %38 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 3][i64 0][i64 3];
    i32* %39 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 3][i64 0][i64 4];
    i32* %40 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 4][i64 0][i64 0];
    i32* %41 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 4][i64 0][i64 1];
    i32* %42 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 4][i64 0][i64 2];
    i32* %43 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 4][i64 0][i64 3];
    i32* %44 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 4][i64 0][i64 4];
    i32* %45 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 5][i64 0][i64 0];
    i32* %46 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 5][i64 0][i64 1];
    i32* %47 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 5][i64 0][i64 2];
    i32* %48 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 5][i64 0][i64 3];
    i32* %49 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 5][i64 0][i64 4];
    i32* %50 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 6][i64 0][i64 0];
    i32* %51 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 6][i64 0][i64 1];
    i32* %52 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 6][i64 0][i64 2];
    i32* %53 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 6][i64 0][i64 3];
    i32* %54 = getelementptr &([7 * [1 * [5 * i32]]]* %c1)[i64 0][i64 6][i64 0][i64 4];
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putint(i32 1);
    call (i32) -> void @putch(i32 10);
    call (i32) -> void @putint(i32 1);
    call (i32) -> void @putch(i32 10);
    store i32* %2 with i32 1;
    store i32* %4 with i32 0;
    store i32* %5 with i32 9;
    store i32* %6 with i32 0;
    store i32* %7 with i32 0;
    store i32* %8 with i32 0;
    store i32* %9 with i32 0;
    store i32* %10 with i32 0;
    store i32* %11 with i32 0;
    store i32* %12 with i32 8;
    store i32* %13 with i32 3;
    store i32* %14 with i32 0;
    store i32* %15 with i32 0;
    store i32* %16 with i32 0;
    store i32* %17 with i32 0;
    store i32* %18 with i32 0;
    store i32* %19 with i32 0;
    store i32* %20 with i32 0;
    store i32* %21 with i32 0;
    store i32* %22 with i32 0;
    store i32* %23 with i32 0;
    store i32* %24 with i32 0;
    store i32* %25 with i32 0;
    store i32* %26 with i32 0;
    store i32* %27 with i32 0;
    store i32* %28 with i32 0;
    store i32* %29 with i32 0;
    store i32* %30 with i32 2;
    store i32* %31 with i32 1;
    store i32* %32 with i32 8;
    store i32* %33 with i32 0;
    store i32* %34 with i32 0;
    store i32* %35 with i32 0;
    store i32* %36 with i32 0;
    store i32* %37 with i32 0;
    store i32* %38 with i32 0;
    store i32* %39 with i32 0;
    store i32* %40 with i32 0;
    store i32* %41 with i32 0;
    store i32* %42 with i32 0;
    store i32* %43 with i32 0;
    store i32* %44 with i32 0;
    store i32* %45 with i32 0;
    store i32* %46 with i32 0;
    store i32* %47 with i32 0;
    store i32* %48 with i32 0;
    store i32* %49 with i32 0;
    store i32* %50 with i32 0;
    store i32* %51 with i32 0;
    store i32* %52 with i32 0;
    store i32* %53 with i32 0;
    store i32* %54 with i32 0;
    call (i32) -> void @putint(i32 2);
    call (i32) -> void @putint(i32 1);
    call (i32) -> void @putint(i32 8);
    call (i32) -> void @putch(i32 10);
    call (i32) -> void @putint(i32 5);
    call (i32) -> void @putch(i32 10);
    call (i32) -> void @putint(i32 6);
    call (i32) -> void @putint(i32 7);
    call (i32) -> void @putint(i32 1);
    call (i32) -> void @putint(i32 9);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
}
