internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal i32* @a1 = 1;
internal i32* @a2 = 2;
internal i32* @a3 = 3;
internal i32* @a4 = 4;
internal i32* @a5 = 5;
internal i32* @a6 = 6;
internal i32* @a7 = 7;
internal i32* @a8 = 8;
internal i32* @a9 = 9;
internal i32* @a10 = 10;
internal i32* @a11 = 11;
internal i32* @a12 = 12;
internal i32* @a13 = 13;
internal i32* @a14 = 14;
internal i32* @a15 = 15;
internal i32* @a16 = 16;
internal i32* @a17 = 1;
internal i32* @a18 = 2;
internal i32* @a19 = 3;
internal i32* @a20 = 4;
internal i32* @a21 = 5;
internal i32* @a22 = 6;
internal i32* @a23 = 7;
internal i32* @a24 = 8;
internal i32* @a25 = 9;
internal i32* @a26 = 10;
internal i32* @a27 = 11;
internal i32* @a28 = 12;
internal i32* @a29 = 13;
internal i32* @a30 = 14;
internal i32* @a31 = 15;
internal i32* @a32 = 16;
internal func @func(i32 %a, i32 %b) -> i32 {
^entry:
    i32* %k4 = alloc i32;
    i32* %k3 = alloc i32;
    i32* %k2 = alloc i32;
    i32* %k1 = alloc i32;
    i32* %j4 = alloc i32;
    i32* %j3 = alloc i32;
    i32* %j2 = alloc i32;
    i32* %j1 = alloc i32;
    i32* %i4 = alloc i32;
    i32* %i3 = alloc i32;
    i32* %i2 = alloc i32;
    i32* %i1 = alloc i32;
    i32* %h4 = alloc i32;
    i32* %h3 = alloc i32;
    i32* %h2 = alloc i32;
    i32* %h1 = alloc i32;
    i32* %g4 = alloc i32;
    i32* %g3 = alloc i32;
    i32* %g2 = alloc i32;
    i32* %g1 = alloc i32;
    i32* %f4 = alloc i32;
    i32* %f3 = alloc i32;
    i32* %f2 = alloc i32;
    i32* %f1 = alloc i32;
    i32* %e4 = alloc i32;
    i32* %e3 = alloc i32;
    i32* %e2 = alloc i32;
    i32* %e1 = alloc i32;
    i32* %d4 = alloc i32;
    i32* %d3 = alloc i32;
    i32* %d2 = alloc i32;
    i32* %d1 = alloc i32;
    i32* %c4 = alloc i32;
    i32* %c3 = alloc i32;
    i32* %c2 = alloc i32;
    i32* %c1 = alloc i32;
    i32* %i = alloc i32;
    i32* %b1 = alloc i32;
    i32* %a1 = alloc i32;
    store i32* %a1 with i32 %a;
    store i32* %b1 with i32 %b;
    store i32* %i with i32 0;
    i32 %0 = load i32* %a1;
    i32 %1 = load i32* %b1;
    i32 %2 = add i32 %0, i32 %1;
    store i32* %i with i32 %2;
    store i32* %c1 with i32 0;
    store i32* %c2 with i32 0;
    store i32* %c3 with i32 0;
    store i32* %c4 with i32 0;
    store i32* %d1 with i32 0;
    store i32* %d2 with i32 0;
    store i32* %d3 with i32 0;
    store i32* %d4 with i32 0;
    store i32* %e1 with i32 0;
    store i32* %e2 with i32 0;
    store i32* %e3 with i32 0;
    store i32* %e4 with i32 0;
    store i32* %f1 with i32 0;
    store i32* %f2 with i32 0;
    store i32* %f3 with i32 0;
    store i32* %f4 with i32 0;
    store i32* %g1 with i32 0;
    store i32* %g2 with i32 0;
    store i32* %g3 with i32 0;
    store i32* %g4 with i32 0;
    store i32* %h1 with i32 0;
    store i32* %h2 with i32 0;
    store i32* %h3 with i32 0;
    store i32* %h4 with i32 0;
    store i32* %i1 with i32 0;
    store i32* %i2 with i32 0;
    store i32* %i3 with i32 0;
    store i32* %i4 with i32 0;
    store i32* %j1 with i32 0;
    store i32* %j2 with i32 0;
    store i32* %j3 with i32 0;
    store i32* %j4 with i32 0;
    store i32* %k1 with i32 0;
    store i32* %k2 with i32 0;
    store i32* %k3 with i32 0;
    store i32* %k4 with i32 0;
    i32 %3 = call () -> i32 @getint();
    store i32* %c1 with i32 %3;
    i32 %4 = call () -> i32 @getint();
    store i32* %c2 with i32 %4;
    i32 %5 = call () -> i32 @getint();
    store i32* %c3 with i32 %5;
    i32 %6 = call () -> i32 @getint();
    store i32* %c4 with i32 %6;
    i32 %7 = load i32* %c1;
    i32 %8 = add i32 1, i32 %7;
    i32 %9 = load i32* @a1;
    i32 %10 = add i32 %8, i32 %9;
    store i32* %d1 with i32 %10;
    i32 %11 = load i32* %c2;
    i32 %12 = add i32 2, i32 %11;
    i32 %13 = load i32* @a2;
    i32 %14 = add i32 %12, i32 %13;
    store i32* %d2 with i32 %14;
    i32 %15 = load i32* %c3;
    i32 %16 = add i32 3, i32 %15;
    i32 %17 = load i32* @a3;
    i32 %18 = add i32 %16, i32 %17;
    store i32* %d3 with i32 %18;
    i32 %19 = load i32* %c4;
    i32 %20 = add i32 4, i32 %19;
    i32 %21 = load i32* @a4;
    i32 %22 = add i32 %20, i32 %21;
    store i32* %d4 with i32 %22;
    i32 %23 = load i32* %d1;
    i32 %24 = add i32 1, i32 %23;
    i32 %25 = load i32* @a5;
    i32 %26 = add i32 %24, i32 %25;
    store i32* %e1 with i32 %26;
    i32 %27 = load i32* %d2;
    i32 %28 = add i32 2, i32 %27;
    i32 %29 = load i32* @a6;
    i32 %30 = add i32 %28, i32 %29;
    store i32* %e2 with i32 %30;
    i32 %31 = load i32* %d3;
    i32 %32 = add i32 3, i32 %31;
    i32 %33 = load i32* @a7;
    i32 %34 = add i32 %32, i32 %33;
    store i32* %e3 with i32 %34;
    i32 %35 = load i32* %d4;
    i32 %36 = add i32 4, i32 %35;
    i32 %37 = load i32* @a8;
    i32 %38 = add i32 %36, i32 %37;
    store i32* %e4 with i32 %38;
    i32 %39 = load i32* %e1;
    i32 %40 = add i32 1, i32 %39;
    i32 %41 = load i32* @a9;
    i32 %42 = add i32 %40, i32 %41;
    store i32* %f1 with i32 %42;
    i32 %43 = load i32* %e2;
    i32 %44 = add i32 2, i32 %43;
    i32 %45 = load i32* @a10;
    i32 %46 = add i32 %44, i32 %45;
    store i32* %f2 with i32 %46;
    i32 %47 = load i32* %e3;
    i32 %48 = add i32 3, i32 %47;
    i32 %49 = load i32* @a11;
    i32 %50 = add i32 %48, i32 %49;
    store i32* %f3 with i32 %50;
    i32 %51 = load i32* %e4;
    i32 %52 = add i32 4, i32 %51;
    i32 %53 = load i32* @a12;
    i32 %54 = add i32 %52, i32 %53;
    store i32* %f4 with i32 %54;
    i32 %55 = load i32* %f1;
    i32 %56 = add i32 1, i32 %55;
    i32 %57 = load i32* @a13;
    i32 %58 = add i32 %56, i32 %57;
    store i32* %g1 with i32 %58;
    i32 %59 = load i32* %f2;
    i32 %60 = add i32 2, i32 %59;
    i32 %61 = load i32* @a14;
    i32 %62 = add i32 %60, i32 %61;
    store i32* %g2 with i32 %62;
    i32 %63 = load i32* %f3;
    i32 %64 = add i32 3, i32 %63;
    i32 %65 = load i32* @a15;
    i32 %66 = add i32 %64, i32 %65;
    store i32* %g3 with i32 %66;
    i32 %67 = load i32* %f4;
    i32 %68 = add i32 4, i32 %67;
    i32 %69 = load i32* @a16;
    i32 %70 = add i32 %68, i32 %69;
    store i32* %g4 with i32 %70;
    i32 %71 = load i32* %g1;
    i32 %72 = add i32 1, i32 %71;
    i32 %73 = load i32* @a17;
    i32 %74 = add i32 %72, i32 %73;
    store i32* %h1 with i32 %74;
    i32 %75 = load i32* %g2;
    i32 %76 = add i32 2, i32 %75;
    i32 %77 = load i32* @a18;
    i32 %78 = add i32 %76, i32 %77;
    store i32* %h2 with i32 %78;
    i32 %79 = load i32* %g3;
    i32 %80 = add i32 3, i32 %79;
    i32 %81 = load i32* @a19;
    i32 %82 = add i32 %80, i32 %81;
    store i32* %h3 with i32 %82;
    i32 %83 = load i32* %g4;
    i32 %84 = add i32 4, i32 %83;
    i32 %85 = load i32* @a20;
    i32 %86 = add i32 %84, i32 %85;
    store i32* %h4 with i32 %86;
    i32 %87 = load i32* %h1;
    i32 %88 = add i32 1, i32 %87;
    i32 %89 = load i32* @a21;
    i32 %90 = add i32 %88, i32 %89;
    store i32* %i1 with i32 %90;
    i32 %91 = load i32* %h2;
    i32 %92 = add i32 2, i32 %91;
    i32 %93 = load i32* @a22;
    i32 %94 = add i32 %92, i32 %93;
    store i32* %i2 with i32 %94;
    i32 %95 = load i32* %h3;
    i32 %96 = add i32 3, i32 %95;
    i32 %97 = load i32* @a23;
    i32 %98 = add i32 %96, i32 %97;
    store i32* %i3 with i32 %98;
    i32 %99 = load i32* %h4;
    i32 %100 = add i32 4, i32 %99;
    i32 %101 = load i32* @a24;
    i32 %102 = add i32 %100, i32 %101;
    store i32* %i4 with i32 %102;
    i32 %103 = load i32* %i1;
    i32 %104 = add i32 1, i32 %103;
    i32 %105 = load i32* @a25;
    i32 %106 = add i32 %104, i32 %105;
    store i32* %j1 with i32 %106;
    i32 %107 = load i32* %i2;
    i32 %108 = add i32 2, i32 %107;
    i32 %109 = load i32* @a26;
    i32 %110 = add i32 %108, i32 %109;
    store i32* %j2 with i32 %110;
    i32 %111 = load i32* %i3;
    i32 %112 = add i32 3, i32 %111;
    i32 %113 = load i32* @a27;
    i32 %114 = add i32 %112, i32 %113;
    store i32* %j3 with i32 %114;
    i32 %115 = load i32* %i4;
    i32 %116 = add i32 4, i32 %115;
    i32 %117 = load i32* @a28;
    i32 %118 = add i32 %116, i32 %117;
    store i32* %j4 with i32 %118;
    i32 %119 = load i32* %j1;
    i32 %120 = add i32 1, i32 %119;
    i32 %121 = load i32* @a29;
    i32 %122 = add i32 %120, i32 %121;
    store i32* %k1 with i32 %122;
    i32 %123 = load i32* %j2;
    i32 %124 = add i32 2, i32 %123;
    i32 %125 = load i32* @a30;
    i32 %126 = add i32 %124, i32 %125;
    store i32* %k2 with i32 %126;
    i32 %127 = load i32* %j3;
    i32 %128 = add i32 3, i32 %127;
    i32 %129 = load i32* @a31;
    i32 %130 = add i32 %128, i32 %129;
    store i32* %k3 with i32 %130;
    i32 %131 = load i32* %j4;
    i32 %132 = add i32 4, i32 %131;
    i32 %133 = load i32* @a32;
    i32 %134 = add i32 %132, i32 %133;
    store i32* %k4 with i32 %134;
    i32 %135 = load i32* %a1;
    i32 %136 = load i32* %b1;
    i32 %137 = sub i32 %135, i32 %136;
    i32 %138 = add i32 %137, i32 10;
    store i32* %i with i32 %138;
    i32 %139 = load i32* %j1;
    i32 %140 = add i32 1, i32 %139;
    i32 %141 = load i32* @a29;
    i32 %142 = add i32 %140, i32 %141;
    store i32* %k1 with i32 %142;
    i32 %143 = load i32* %j2;
    i32 %144 = add i32 2, i32 %143;
    i32 %145 = load i32* @a30;
    i32 %146 = add i32 %144, i32 %145;
    store i32* %k2 with i32 %146;
    i32 %147 = load i32* %j3;
    i32 %148 = add i32 3, i32 %147;
    i32 %149 = load i32* @a31;
    i32 %150 = add i32 %148, i32 %149;
    store i32* %k3 with i32 %150;
    i32 %151 = load i32* %j4;
    i32 %152 = add i32 4, i32 %151;
    i32 %153 = load i32* @a32;
    i32 %154 = add i32 %152, i32 %153;
    store i32* %k4 with i32 %154;
    i32 %155 = load i32* %i1;
    i32 %156 = add i32 1, i32 %155;
    i32 %157 = load i32* @a25;
    i32 %158 = add i32 %156, i32 %157;
    store i32* %j1 with i32 %158;
    i32 %159 = load i32* %i2;
    i32 %160 = add i32 2, i32 %159;
    i32 %161 = load i32* @a26;
    i32 %162 = add i32 %160, i32 %161;
    store i32* %j2 with i32 %162;
    i32 %163 = load i32* %i3;
    i32 %164 = add i32 3, i32 %163;
    i32 %165 = load i32* @a27;
    i32 %166 = add i32 %164, i32 %165;
    store i32* %j3 with i32 %166;
    i32 %167 = load i32* %i4;
    i32 %168 = add i32 4, i32 %167;
    i32 %169 = load i32* @a28;
    i32 %170 = add i32 %168, i32 %169;
    store i32* %j4 with i32 %170;
    i32 %171 = load i32* %h1;
    i32 %172 = add i32 1, i32 %171;
    i32 %173 = load i32* @a21;
    i32 %174 = add i32 %172, i32 %173;
    store i32* %i1 with i32 %174;
    i32 %175 = load i32* %h2;
    i32 %176 = add i32 2, i32 %175;
    i32 %177 = load i32* @a22;
    i32 %178 = add i32 %176, i32 %177;
    store i32* %i2 with i32 %178;
    i32 %179 = load i32* %h3;
    i32 %180 = add i32 3, i32 %179;
    i32 %181 = load i32* @a23;
    i32 %182 = add i32 %180, i32 %181;
    store i32* %i3 with i32 %182;
    i32 %183 = load i32* %h4;
    i32 %184 = add i32 4, i32 %183;
    i32 %185 = load i32* @a24;
    i32 %186 = add i32 %184, i32 %185;
    store i32* %i4 with i32 %186;
    i32 %187 = load i32* %g1;
    i32 %188 = add i32 1, i32 %187;
    i32 %189 = load i32* @a17;
    i32 %190 = add i32 %188, i32 %189;
    store i32* %h1 with i32 %190;
    i32 %191 = load i32* %g2;
    i32 %192 = add i32 2, i32 %191;
    i32 %193 = load i32* @a18;
    i32 %194 = add i32 %192, i32 %193;
    store i32* %h2 with i32 %194;
    i32 %195 = load i32* %g3;
    i32 %196 = add i32 3, i32 %195;
    i32 %197 = load i32* @a19;
    i32 %198 = add i32 %196, i32 %197;
    store i32* %h3 with i32 %198;
    i32 %199 = load i32* %g4;
    i32 %200 = add i32 4, i32 %199;
    i32 %201 = load i32* @a20;
    i32 %202 = add i32 %200, i32 %201;
    store i32* %h4 with i32 %202;
    i32 %203 = load i32* %f1;
    i32 %204 = add i32 1, i32 %203;
    i32 %205 = load i32* @a13;
    i32 %206 = add i32 %204, i32 %205;
    store i32* %g1 with i32 %206;
    i32 %207 = load i32* %f2;
    i32 %208 = add i32 2, i32 %207;
    i32 %209 = load i32* @a14;
    i32 %210 = add i32 %208, i32 %209;
    store i32* %g2 with i32 %210;
    i32 %211 = load i32* %f3;
    i32 %212 = add i32 3, i32 %211;
    i32 %213 = load i32* @a15;
    i32 %214 = add i32 %212, i32 %213;
    store i32* %g3 with i32 %214;
    i32 %215 = load i32* %f4;
    i32 %216 = add i32 4, i32 %215;
    i32 %217 = load i32* @a16;
    i32 %218 = add i32 %216, i32 %217;
    store i32* %g4 with i32 %218;
    i32 %219 = load i32* %e1;
    i32 %220 = add i32 1, i32 %219;
    i32 %221 = load i32* @a9;
    i32 %222 = add i32 %220, i32 %221;
    store i32* %f1 with i32 %222;
    i32 %223 = load i32* %e2;
    i32 %224 = add i32 2, i32 %223;
    i32 %225 = load i32* @a10;
    i32 %226 = add i32 %224, i32 %225;
    store i32* %f2 with i32 %226;
    i32 %227 = load i32* %e3;
    i32 %228 = add i32 3, i32 %227;
    i32 %229 = load i32* @a11;
    i32 %230 = add i32 %228, i32 %229;
    store i32* %f3 with i32 %230;
    i32 %231 = load i32* %e4;
    i32 %232 = add i32 4, i32 %231;
    i32 %233 = load i32* @a12;
    i32 %234 = add i32 %232, i32 %233;
    store i32* %f4 with i32 %234;
    i32 %235 = load i32* %d1;
    i32 %236 = add i32 1, i32 %235;
    i32 %237 = load i32* @a5;
    i32 %238 = add i32 %236, i32 %237;
    store i32* %e1 with i32 %238;
    i32 %239 = load i32* %d2;
    i32 %240 = add i32 2, i32 %239;
    i32 %241 = load i32* @a6;
    i32 %242 = add i32 %240, i32 %241;
    store i32* %e2 with i32 %242;
    i32 %243 = load i32* %d3;
    i32 %244 = add i32 3, i32 %243;
    i32 %245 = load i32* @a7;
    i32 %246 = add i32 %244, i32 %245;
    store i32* %e3 with i32 %246;
    i32 %247 = load i32* %d4;
    i32 %248 = add i32 4, i32 %247;
    i32 %249 = load i32* @a8;
    i32 %250 = add i32 %248, i32 %249;
    store i32* %e4 with i32 %250;
    i32 %251 = load i32* %c1;
    i32 %252 = add i32 1, i32 %251;
    i32 %253 = load i32* @a1;
    i32 %254 = add i32 %252, i32 %253;
    store i32* %d1 with i32 %254;
    i32 %255 = load i32* %c2;
    i32 %256 = add i32 2, i32 %255;
    i32 %257 = load i32* @a2;
    i32 %258 = add i32 %256, i32 %257;
    store i32* %d2 with i32 %258;
    i32 %259 = load i32* %c3;
    i32 %260 = add i32 3, i32 %259;
    i32 %261 = load i32* @a3;
    i32 %262 = add i32 %260, i32 %261;
    store i32* %d3 with i32 %262;
    i32 %263 = load i32* %c4;
    i32 %264 = add i32 4, i32 %263;
    i32 %265 = load i32* @a4;
    i32 %266 = add i32 %264, i32 %265;
    store i32* %d4 with i32 %266;
    i32 %267 = load i32* %c1;
    i32 %268 = add i32 1, i32 %267;
    i32 %269 = load i32* @a1;
    i32 %270 = add i32 %268, i32 %269;
    store i32* %d1 with i32 %270;
    i32 %271 = load i32* %c2;
    i32 %272 = add i32 2, i32 %271;
    i32 %273 = load i32* @a2;
    i32 %274 = add i32 %272, i32 %273;
    store i32* %d2 with i32 %274;
    i32 %275 = load i32* %c3;
    i32 %276 = add i32 3, i32 %275;
    i32 %277 = load i32* @a3;
    i32 %278 = add i32 %276, i32 %277;
    store i32* %d3 with i32 %278;
    i32 %279 = load i32* %c4;
    i32 %280 = add i32 4, i32 %279;
    i32 %281 = load i32* @a4;
    i32 %282 = add i32 %280, i32 %281;
    store i32* %d4 with i32 %282;
    i32 %283 = load i32* %i;
    i32 %284 = load i32* %c1;
    i32 %285 = add i32 %283, i32 %284;
    i32 %286 = load i32* %c2;
    i32 %287 = add i32 %285, i32 %286;
    i32 %288 = load i32* %c3;
    i32 %289 = add i32 %287, i32 %288;
    i32 %290 = load i32* %c4;
    i32 %291 = add i32 %289, i32 %290;
    i32 %292 = load i32* %d1;
    i32 %293 = sub i32 %291, i32 %292;
    i32 %294 = load i32* %d2;
    i32 %295 = sub i32 %293, i32 %294;
    i32 %296 = load i32* %d3;
    i32 %297 = sub i32 %295, i32 %296;
    i32 %298 = load i32* %d4;
    i32 %299 = sub i32 %297, i32 %298;
    i32 %300 = load i32* %e1;
    i32 %301 = add i32 %299, i32 %300;
    i32 %302 = load i32* %e2;
    i32 %303 = add i32 %301, i32 %302;
    i32 %304 = load i32* %e3;
    i32 %305 = add i32 %303, i32 %304;
    i32 %306 = load i32* %e4;
    i32 %307 = add i32 %305, i32 %306;
    i32 %308 = load i32* %f1;
    i32 %309 = sub i32 %307, i32 %308;
    i32 %310 = load i32* %f2;
    i32 %311 = sub i32 %309, i32 %310;
    i32 %312 = load i32* %f3;
    i32 %313 = sub i32 %311, i32 %312;
    i32 %314 = load i32* %f4;
    i32 %315 = sub i32 %313, i32 %314;
    i32 %316 = load i32* %g1;
    i32 %317 = add i32 %315, i32 %316;
    i32 %318 = load i32* %g2;
    i32 %319 = add i32 %317, i32 %318;
    i32 %320 = load i32* %g3;
    i32 %321 = add i32 %319, i32 %320;
    i32 %322 = load i32* %g4;
    i32 %323 = add i32 %321, i32 %322;
    i32 %324 = load i32* %h1;
    i32 %325 = sub i32 %323, i32 %324;
    i32 %326 = load i32* %h2;
    i32 %327 = sub i32 %325, i32 %326;
    i32 %328 = load i32* %h3;
    i32 %329 = sub i32 %327, i32 %328;
    i32 %330 = load i32* %h4;
    i32 %331 = sub i32 %329, i32 %330;
    i32 %332 = load i32* %i1;
    i32 %333 = add i32 %331, i32 %332;
    i32 %334 = load i32* %i2;
    i32 %335 = add i32 %333, i32 %334;
    i32 %336 = load i32* %i3;
    i32 %337 = add i32 %335, i32 %336;
    i32 %338 = load i32* %i4;
    i32 %339 = add i32 %337, i32 %338;
    i32 %340 = load i32* %j1;
    i32 %341 = sub i32 %339, i32 %340;
    i32 %342 = load i32* %j2;
    i32 %343 = sub i32 %341, i32 %342;
    i32 %344 = load i32* %j3;
    i32 %345 = sub i32 %343, i32 %344;
    i32 %346 = load i32* %j4;
    i32 %347 = sub i32 %345, i32 %346;
    i32 %348 = load i32* %k1;
    i32 %349 = add i32 %347, i32 %348;
    i32 %350 = load i32* %k2;
    i32 %351 = add i32 %349, i32 %350;
    i32 %352 = load i32* %k3;
    i32 %353 = add i32 %351, i32 %352;
    i32 %354 = load i32* %k4;
    i32 %355 = add i32 %353, i32 %354;
    i32 %356 = load i32* @a1;
    i32 %357 = add i32 %355, i32 %356;
    i32 %358 = load i32* @a2;
    i32 %359 = sub i32 %357, i32 %358;
    i32 %360 = load i32* @a3;
    i32 %361 = add i32 %359, i32 %360;
    i32 %362 = load i32* @a4;
    i32 %363 = sub i32 %361, i32 %362;
    i32 %364 = load i32* @a5;
    i32 %365 = add i32 %363, i32 %364;
    i32 %366 = load i32* @a6;
    i32 %367 = sub i32 %365, i32 %366;
    i32 %368 = load i32* @a7;
    i32 %369 = add i32 %367, i32 %368;
    i32 %370 = load i32* @a8;
    i32 %371 = sub i32 %369, i32 %370;
    i32 %372 = load i32* @a9;
    i32 %373 = add i32 %371, i32 %372;
    i32 %374 = load i32* @a10;
    i32 %375 = sub i32 %373, i32 %374;
    i32 %376 = load i32* @a11;
    i32 %377 = add i32 %375, i32 %376;
    i32 %378 = load i32* @a12;
    i32 %379 = sub i32 %377, i32 %378;
    i32 %380 = load i32* @a13;
    i32 %381 = add i32 %379, i32 %380;
    i32 %382 = load i32* @a14;
    i32 %383 = sub i32 %381, i32 %382;
    i32 %384 = load i32* @a15;
    i32 %385 = add i32 %383, i32 %384;
    i32 %386 = load i32* @a16;
    i32 %387 = sub i32 %385, i32 %386;
    i32 %388 = load i32* @a17;
    i32 %389 = add i32 %387, i32 %388;
    i32 %390 = load i32* @a18;
    i32 %391 = sub i32 %389, i32 %390;
    i32 %392 = load i32* @a19;
    i32 %393 = add i32 %391, i32 %392;
    i32 %394 = load i32* @a20;
    i32 %395 = sub i32 %393, i32 %394;
    i32 %396 = load i32* @a21;
    i32 %397 = add i32 %395, i32 %396;
    i32 %398 = load i32* @a22;
    i32 %399 = sub i32 %397, i32 %398;
    i32 %400 = load i32* @a23;
    i32 %401 = add i32 %399, i32 %400;
    i32 %402 = load i32* @a24;
    i32 %403 = sub i32 %401, i32 %402;
    i32 %404 = load i32* @a25;
    i32 %405 = add i32 %403, i32 %404;
    i32 %406 = load i32* @a26;
    i32 %407 = sub i32 %405, i32 %406;
    i32 %408 = load i32* @a27;
    i32 %409 = add i32 %407, i32 %408;
    i32 %410 = load i32* @a28;
    i32 %411 = sub i32 %409, i32 %410;
    i32 %412 = load i32* @a29;
    i32 %413 = add i32 %411, i32 %412;
    i32 %414 = load i32* @a30;
    i32 %415 = sub i32 %413, i32 %414;
    i32 %416 = load i32* @a31;
    i32 %417 = add i32 %415, i32 %416;
    i32 %418 = load i32* @a32;
    i32 %419 = sub i32 %417, i32 %418;
    ret i32 %419;
}
func @main() -> i32 { Entry } {
^entry:
    i32* %b = alloc i32;
    i32* %a = alloc i32;
    store i32* %a with i32 0;
    store i32* %b with i32 0;
    i32 %0 = call () -> i32 @getint();
    store i32* %a with i32 %0;
    i32 %1 = load i32* %a;
    i32 %2 = add i32 %1, i32 18;
    store i32* %b with i32 %2;
    i32 %3 = load i32* %a;
    i32 %4 = load i32* %b;
    i32 %5 = call (i32, i32) -> i32 @func(i32 %3, i32 %4);
    store i32* %a with i32 %5;
    i32 %6 = load i32* %a;
    call (i32) -> void @putint(i32 %6);
    i32 %7 = load i32* %a;
    ret i32 %7;
}
