internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    [10 * i32]* %a = alloc [10 * i32], align 8;
    i32* %0 = getelementptr &([10 * i32]* %a)[i64 0][i64 0];
    store i32* %0 with i32 4;
    i32* %1 = getelementptr &([10 * i32]* %a)[i64 0][i64 1];
    store i32* %1 with i32 3;
    i32* %2 = getelementptr &([10 * i32]* %a)[i64 0][i64 2];
    store i32* %2 with i32 9;
    i32* %3 = getelementptr &([10 * i32]* %a)[i64 0][i64 3];
    store i32* %3 with i32 2;
    i32* %4 = getelementptr &([10 * i32]* %a)[i64 0][i64 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([10 * i32]* %a)[i64 0][i64 5];
    store i32* %5 with i32 1;
    i32* %6 = getelementptr &([10 * i32]* %a)[i64 0][i64 6];
    store i32* %6 with i32 6;
    i32* %7 = getelementptr &([10 * i32]* %a)[i64 0][i64 7];
    store i32* %7 with i32 5;
    i32* %8 = getelementptr &([10 * i32]* %a)[i64 0][i64 8];
    store i32* %8 with i32 7;
    i32* %9 = getelementptr &([10 * i32]* %a)[i64 0][i64 9];
    store i32* %9 with i32 8;
    ubr ^while.body;
  ^while.body:
    i32 %10 = phi [^entry, i32 1] [^b2, i32 %23];
    i32* %11 = getelementptr &(i32* %0)[i32 %10];
    i32 %12 = load i32* %11;
    i32 %13 = add i32 %10, i32 -1;
    ubr ^while.header;
  ^while.header:
    i32 %14 = phi [^while.body, i32 %13] [^while.body1, i32 %22];
    i32* %15 = getelementptr &(i32* %0)[i32 %14];
    i1 %16 = icmp sgt i32 %14, i32 -1;
    cbr i1 %16(prob = 0.5), ^b, ^b1;
  ^b:
    i32 %17 = load i32* %15;
    i1 %18 = icmp slt i32 %12, i32 %17;
    ubr ^b1;
  ^b1:
    i1 %19 = phi [^while.header, i1 false] [^b, i1 %18];
    i32* %20 = getelementptr &(i32* %15)[i64 1];
    cbr i1 %19(prob = 0.984615), ^while.body1, ^b2;
  ^while.body1:
    i32 %21 = load i32* %15;
    store i32* %20 with i32 %21;
    i32 %22 = add i32 %14, i32 -1;
    ubr ^while.header;
  ^b2:
    store i32* %20 with i32 %12;
    i32 %23 = add i32 %10, i32 1;
    i1 %24 = icmp slt i32 %23, i32 10;
    cbr i1 %24(prob = 0.888889), ^while.body, ^while.body2;
  ^while.body2:
    i32 %25 = phi [^b2, i32 0] [^while.body2, i32 %28];
    i32* %26 = getelementptr &([10 * i32]* %a)[i64 0][i32 %25];
    i32 %27 = load i32* %26;
    call (i32) -> void @putint(i32 %27);
    call (i32) -> void @putch(i32 10);
    i32 %28 = add i32 %25, i32 1;
    i1 %29 = icmp slt i32 %28, i32 10;
    cbr i1 %29(prob = 0.9), ^while.body2, ^b3;
  ^b3:
    ret i32 0;
}
