internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal func @relu_reg(i32 %a) -> i32 {
^entry:
    i32* %a1 = alloc i32;
    store i32* %a1 with i32 %a;
    i32 %0 = load i32* %a1;
    i1 %1 = scmp gt i32 %0, i32 127;
    i32 %2 = zext i1 %1 to i32;
    i1 %3 = scmp neq i32 %2, i32 0;
    cbr i1 %3(prob = 0.5), ^if.then, ^b;
^b:
    i32 %4 = load i32* %a1;
    i1 %5 = scmp lt i32 %4, i32 0;
    i32 %6 = zext i1 %5 to i32;
    i1 %7 = scmp neq i32 %6, i32 0;
    cbr i1 %7(prob = 0.5), ^if.then1, ^b1;
^if.then:
    ret i32 127;
^if.then1:
    ret i32 0;
^b1:
    i32 %8 = load i32* %a1;
    ret i32 %8;
}
internal func @model([5 * i32]* %a) -> i32 {
^entry:
    [5 * i32]** %a1 = alloc [5 * i32]*;
    store [5 * i32]** %a1 with [5 * i32]* %a;
    [5 * i32]* %0 = load [5 * i32]** %a1;
    [5 * i32]* %1 = getelementptr &([5 * i32]* %0)[i64 0];
    i32* %2 = getelementptr &([5 * i32]* %1)[i64 0][i64 0];
    i32 %3 = load i32* %2;
    i32 %4 = mul i32 %3, i32 85;
    [5 * i32]* %5 = load [5 * i32]** %a1;
    [5 * i32]* %6 = getelementptr &([5 * i32]* %5)[i64 0];
    i32* %7 = getelementptr &([5 * i32]* %6)[i64 0][i64 1];
    i32 %8 = load i32* %7;
    i32 %9 = mul i32 %8, i32 23;
    i32 %10 = add i32 %4, i32 %9;
    [5 * i32]* %11 = load [5 * i32]** %a1;
    [5 * i32]* %12 = getelementptr &([5 * i32]* %11)[i64 0];
    i32* %13 = getelementptr &([5 * i32]* %12)[i64 0][i64 2];
    i32 %14 = load i32* %13;
    i32 %15 = mul i32 %14, i32 -82;
    i32 %16 = add i32 %10, i32 %15;
    [5 * i32]* %17 = load [5 * i32]** %a1;
    [5 * i32]* %18 = getelementptr &([5 * i32]* %17)[i64 0];
    i32* %19 = getelementptr &([5 * i32]* %18)[i64 0][i64 3];
    i32 %20 = load i32* %19;
    i32 %21 = mul i32 %20, i32 -103;
    i32 %22 = add i32 %16, i32 %21;
    [5 * i32]* %23 = load [5 * i32]** %a1;
    [5 * i32]* %24 = getelementptr &([5 * i32]* %23)[i64 0];
    i32* %25 = getelementptr &([5 * i32]* %24)[i64 0][i64 4];
    i32 %26 = load i32* %25;
    i32 %27 = mul i32 %26, i32 -123;
    i32 %28 = add i32 %22, i32 %27;
    [5 * i32]* %29 = load [5 * i32]** %a1;
    [5 * i32]* %30 = getelementptr &([5 * i32]* %29)[i64 1];
    i32* %31 = getelementptr &([5 * i32]* %30)[i64 0][i64 0];
    i32 %32 = load i32* %31;
    i32 %33 = mul i32 %32, i32 64;
    i32 %34 = add i32 %28, i32 %33;
    [5 * i32]* %35 = load [5 * i32]** %a1;
    [5 * i32]* %36 = getelementptr &([5 * i32]* %35)[i64 1];
    i32* %37 = getelementptr &([5 * i32]* %36)[i64 0][i64 1];
    i32 %38 = load i32* %37;
    i32 %39 = mul i32 %38, i32 -120;
    i32 %40 = add i32 %34, i32 %39;
    [5 * i32]* %41 = load [5 * i32]** %a1;
    [5 * i32]* %42 = getelementptr &([5 * i32]* %41)[i64 1];
    i32* %43 = getelementptr &([5 * i32]* %42)[i64 0][i64 2];
    i32 %44 = load i32* %43;
    i32 %45 = mul i32 %44, i32 50;
    i32 %46 = add i32 %40, i32 %45;
    [5 * i32]* %47 = load [5 * i32]** %a1;
    [5 * i32]* %48 = getelementptr &([5 * i32]* %47)[i64 1];
    i32* %49 = getelementptr &([5 * i32]* %48)[i64 0][i64 3];
    i32 %50 = load i32* %49;
    i32 %51 = mul i32 %50, i32 -59;
    i32 %52 = add i32 %46, i32 %51;
    [5 * i32]* %53 = load [5 * i32]** %a1;
    [5 * i32]* %54 = getelementptr &([5 * i32]* %53)[i64 1];
    i32* %55 = getelementptr &([5 * i32]* %54)[i64 0][i64 4];
    i32 %56 = load i32* %55;
    i32 %57 = mul i32 %56, i32 47;
    i32 %58 = add i32 %52, i32 %57;
    [5 * i32]* %59 = load [5 * i32]** %a1;
    [5 * i32]* %60 = getelementptr &([5 * i32]* %59)[i64 2];
    i32* %61 = getelementptr &([5 * i32]* %60)[i64 0][i64 0];
    i32 %62 = load i32* %61;
    i32 %63 = mul i32 %62, i32 -111;
    i32 %64 = add i32 %58, i32 %63;
    [5 * i32]* %65 = load [5 * i32]** %a1;
    [5 * i32]* %66 = getelementptr &([5 * i32]* %65)[i64 2];
    i32* %67 = getelementptr &([5 * i32]* %66)[i64 0][i64 1];
    i32 %68 = load i32* %67;
    i32 %69 = mul i32 %68, i32 -67;
    i32 %70 = add i32 %64, i32 %69;
    [5 * i32]* %71 = load [5 * i32]** %a1;
    [5 * i32]* %72 = getelementptr &([5 * i32]* %71)[i64 2];
    i32* %73 = getelementptr &([5 * i32]* %72)[i64 0][i64 2];
    i32 %74 = load i32* %73;
    i32 %75 = mul i32 %74, i32 -106;
    i32 %76 = add i32 %70, i32 %75;
    [5 * i32]* %77 = load [5 * i32]** %a1;
    [5 * i32]* %78 = getelementptr &([5 * i32]* %77)[i64 2];
    i32* %79 = getelementptr &([5 * i32]* %78)[i64 0][i64 3];
    i32 %80 = load i32* %79;
    i32 %81 = mul i32 %80, i32 -75;
    i32 %82 = add i32 %76, i32 %81;
    [5 * i32]* %83 = load [5 * i32]** %a1;
    [5 * i32]* %84 = getelementptr &([5 * i32]* %83)[i64 2];
    i32* %85 = getelementptr &([5 * i32]* %84)[i64 0][i64 4];
    i32 %86 = load i32* %85;
    i32 %87 = mul i32 %86, i32 -102;
    i32 %88 = add i32 %82, i32 %87;
    [5 * i32]* %89 = load [5 * i32]** %a1;
    [5 * i32]* %90 = getelementptr &([5 * i32]* %89)[i64 3];
    i32* %91 = getelementptr &([5 * i32]* %90)[i64 0][i64 0];
    i32 %92 = load i32* %91;
    i32 %93 = mul i32 %92, i32 34;
    i32 %94 = add i32 %88, i32 %93;
    [5 * i32]* %95 = load [5 * i32]** %a1;
    [5 * i32]* %96 = getelementptr &([5 * i32]* %95)[i64 3];
    i32* %97 = getelementptr &([5 * i32]* %96)[i64 0][i64 1];
    i32 %98 = load i32* %97;
    i32 %99 = mul i32 %98, i32 -39;
    i32 %100 = add i32 %94, i32 %99;
    [5 * i32]* %101 = load [5 * i32]** %a1;
    [5 * i32]* %102 = getelementptr &([5 * i32]* %101)[i64 3];
    i32* %103 = getelementptr &([5 * i32]* %102)[i64 0][i64 2];
    i32 %104 = load i32* %103;
    i32 %105 = mul i32 %104, i32 65;
    i32 %106 = add i32 %100, i32 %105;
    [5 * i32]* %107 = load [5 * i32]** %a1;
    [5 * i32]* %108 = getelementptr &([5 * i32]* %107)[i64 3];
    i32* %109 = getelementptr &([5 * i32]* %108)[i64 0][i64 3];
    i32 %110 = load i32* %109;
    i32 %111 = mul i32 %110, i32 47;
    i32 %112 = add i32 %106, i32 %111;
    [5 * i32]* %113 = load [5 * i32]** %a1;
    [5 * i32]* %114 = getelementptr &([5 * i32]* %113)[i64 3];
    i32* %115 = getelementptr &([5 * i32]* %114)[i64 0][i64 4];
    i32 %116 = load i32* %115;
    i32 %117 = mul i32 %116, i32 113;
    i32 %118 = add i32 %112, i32 %117;
    [5 * i32]* %119 = load [5 * i32]** %a1;
    [5 * i32]* %120 = getelementptr &([5 * i32]* %119)[i64 4];
    i32* %121 = getelementptr &([5 * i32]* %120)[i64 0][i64 0];
    i32 %122 = load i32* %121;
    i32 %123 = mul i32 %122, i32 110;
    i32 %124 = add i32 %118, i32 %123;
    [5 * i32]* %125 = load [5 * i32]** %a1;
    [5 * i32]* %126 = getelementptr &([5 * i32]* %125)[i64 4];
    i32* %127 = getelementptr &([5 * i32]* %126)[i64 0][i64 1];
    i32 %128 = load i32* %127;
    i32 %129 = mul i32 %128, i32 47;
    i32 %130 = add i32 %124, i32 %129;
    [5 * i32]* %131 = load [5 * i32]** %a1;
    [5 * i32]* %132 = getelementptr &([5 * i32]* %131)[i64 4];
    i32* %133 = getelementptr &([5 * i32]* %132)[i64 0][i64 2];
    i32 %134 = load i32* %133;
    i32 %135 = mul i32 %134, i32 -4;
    i32 %136 = add i32 %130, i32 %135;
    [5 * i32]* %137 = load [5 * i32]** %a1;
    [5 * i32]* %138 = getelementptr &([5 * i32]* %137)[i64 4];
    i32* %139 = getelementptr &([5 * i32]* %138)[i64 0][i64 3];
    i32 %140 = load i32* %139;
    i32 %141 = mul i32 %140, i32 80;
    i32 %142 = add i32 %136, i32 %141;
    [5 * i32]* %143 = load [5 * i32]** %a1;
    [5 * i32]* %144 = getelementptr &([5 * i32]* %143)[i64 4];
    i32* %145 = getelementptr &([5 * i32]* %144)[i64 0][i64 4];
    i32 %146 = load i32* %145;
    i32 %147 = mul i32 %146, i32 46;
    i32 %148 = add i32 %142, i32 %147;
    i32 %149 = call (i32) -> i32 @relu_reg(i32 %148);
    i32 %150 = mul i32 %149, i32 39;
    [5 * i32]* %151 = load [5 * i32]** %a1;
    [5 * i32]* %152 = getelementptr &([5 * i32]* %151)[i64 0];
    i32* %153 = getelementptr &([5 * i32]* %152)[i64 0][i64 0];
    i32 %154 = load i32* %153;
    i32 %155 = mul i32 %154, i32 -106;
    [5 * i32]* %156 = load [5 * i32]** %a1;
    [5 * i32]* %157 = getelementptr &([5 * i32]* %156)[i64 0];
    i32* %158 = getelementptr &([5 * i32]* %157)[i64 0][i64 1];
    i32 %159 = load i32* %158;
    i32 %160 = mul i32 %159, i32 126;
    i32 %161 = add i32 %155, i32 %160;
    [5 * i32]* %162 = load [5 * i32]** %a1;
    [5 * i32]* %163 = getelementptr &([5 * i32]* %162)[i64 0];
    i32* %164 = getelementptr &([5 * i32]* %163)[i64 0][i64 2];
    i32 %165 = load i32* %164;
    i32 %166 = mul i32 %165, i32 -18;
    i32 %167 = add i32 %161, i32 %166;
    [5 * i32]* %168 = load [5 * i32]** %a1;
    [5 * i32]* %169 = getelementptr &([5 * i32]* %168)[i64 0];
    i32* %170 = getelementptr &([5 * i32]* %169)[i64 0][i64 3];
    i32 %171 = load i32* %170;
    i32 %172 = mul i32 %171, i32 -31;
    i32 %173 = add i32 %167, i32 %172;
    [5 * i32]* %174 = load [5 * i32]** %a1;
    [5 * i32]* %175 = getelementptr &([5 * i32]* %174)[i64 0];
    i32* %176 = getelementptr &([5 * i32]* %175)[i64 0][i64 4];
    i32 %177 = load i32* %176;
    i32 %178 = mul i32 %177, i32 -8;
    i32 %179 = add i32 %173, i32 %178;
    [5 * i32]* %180 = load [5 * i32]** %a1;
    [5 * i32]* %181 = getelementptr &([5 * i32]* %180)[i64 1];
    i32* %182 = getelementptr &([5 * i32]* %181)[i64 0][i64 0];
    i32 %183 = load i32* %182;
    i32 %184 = mul i32 %183, i32 47;
    i32 %185 = add i32 %179, i32 %184;
    [5 * i32]* %186 = load [5 * i32]** %a1;
    [5 * i32]* %187 = getelementptr &([5 * i32]* %186)[i64 1];
    i32* %188 = getelementptr &([5 * i32]* %187)[i64 0][i64 1];
    i32 %189 = load i32* %188;
    i32 %190 = mul i32 %189, i32 -4;
    i32 %191 = add i32 %185, i32 %190;
    [5 * i32]* %192 = load [5 * i32]** %a1;
    [5 * i32]* %193 = getelementptr &([5 * i32]* %192)[i64 1];
    i32* %194 = getelementptr &([5 * i32]* %193)[i64 0][i64 2];
    i32 %195 = load i32* %194;
    i32 %196 = mul i32 %195, i32 67;
    i32 %197 = add i32 %191, i32 %196;
    [5 * i32]* %198 = load [5 * i32]** %a1;
    [5 * i32]* %199 = getelementptr &([5 * i32]* %198)[i64 1];
    i32* %200 = getelementptr &([5 * i32]* %199)[i64 0][i64 3];
    i32 %201 = load i32* %200;
    i32 %202 = mul i32 %201, i32 -94;
    i32 %203 = add i32 %197, i32 %202;
    [5 * i32]* %204 = load [5 * i32]** %a1;
    [5 * i32]* %205 = getelementptr &([5 * i32]* %204)[i64 1];
    i32* %206 = getelementptr &([5 * i32]* %205)[i64 0][i64 4];
    i32 %207 = load i32* %206;
    i32 %208 = mul i32 %207, i32 -121;
    i32 %209 = add i32 %203, i32 %208;
    [5 * i32]* %210 = load [5 * i32]** %a1;
    [5 * i32]* %211 = getelementptr &([5 * i32]* %210)[i64 2];
    i32* %212 = getelementptr &([5 * i32]* %211)[i64 0][i64 0];
    i32 %213 = load i32* %212;
    i32 %214 = mul i32 %213, i32 7;
    i32 %215 = add i32 %209, i32 %214;
    [5 * i32]* %216 = load [5 * i32]** %a1;
    [5 * i32]* %217 = getelementptr &([5 * i32]* %216)[i64 2];
    i32* %218 = getelementptr &([5 * i32]* %217)[i64 0][i64 1];
    i32 %219 = load i32* %218;
    i32 %220 = mul i32 %219, i32 -21;
    i32 %221 = add i32 %215, i32 %220;
    [5 * i32]* %222 = load [5 * i32]** %a1;
    [5 * i32]* %223 = getelementptr &([5 * i32]* %222)[i64 2];
    i32* %224 = getelementptr &([5 * i32]* %223)[i64 0][i64 2];
    i32 %225 = load i32* %224;
    i32 %226 = mul i32 %225, i32 -60;
    i32 %227 = add i32 %221, i32 %226;
    [5 * i32]* %228 = load [5 * i32]** %a1;
    [5 * i32]* %229 = getelementptr &([5 * i32]* %228)[i64 2];
    i32* %230 = getelementptr &([5 * i32]* %229)[i64 0][i64 3];
    i32 %231 = load i32* %230;
    i32 %232 = mul i32 %231, i32 -43;
    i32 %233 = add i32 %227, i32 %232;
    [5 * i32]* %234 = load [5 * i32]** %a1;
    [5 * i32]* %235 = getelementptr &([5 * i32]* %234)[i64 2];
    i32* %236 = getelementptr &([5 * i32]* %235)[i64 0][i64 4];
    i32 %237 = load i32* %236;
    i32 %238 = mul i32 %237, i32 105;
    i32 %239 = add i32 %233, i32 %238;
    [5 * i32]* %240 = load [5 * i32]** %a1;
    [5 * i32]* %241 = getelementptr &([5 * i32]* %240)[i64 3];
    i32* %242 = getelementptr &([5 * i32]* %241)[i64 0][i64 0];
    i32 %243 = load i32* %242;
    i32 %244 = mul i32 %243, i32 -42;
    i32 %245 = add i32 %239, i32 %244;
    [5 * i32]* %246 = load [5 * i32]** %a1;
    [5 * i32]* %247 = getelementptr &([5 * i32]* %246)[i64 3];
    i32* %248 = getelementptr &([5 * i32]* %247)[i64 0][i64 1];
    i32 %249 = load i32* %248;
    i32 %250 = mul i32 %249, i32 87;
    i32 %251 = add i32 %245, i32 %250;
    [5 * i32]* %252 = load [5 * i32]** %a1;
    [5 * i32]* %253 = getelementptr &([5 * i32]* %252)[i64 3];
    i32* %254 = getelementptr &([5 * i32]* %253)[i64 0][i64 2];
    i32 %255 = load i32* %254;
    i32 %256 = mul i32 %255, i32 29;
    i32 %257 = add i32 %251, i32 %256;
    [5 * i32]* %258 = load [5 * i32]** %a1;
    [5 * i32]* %259 = getelementptr &([5 * i32]* %258)[i64 3];
    i32* %260 = getelementptr &([5 * i32]* %259)[i64 0][i64 3];
    i32 %261 = load i32* %260;
    i32 %262 = mul i32 %261, i32 -106;
    i32 %263 = add i32 %257, i32 %262;
    [5 * i32]* %264 = load [5 * i32]** %a1;
    [5 * i32]* %265 = getelementptr &([5 * i32]* %264)[i64 3];
    i32* %266 = getelementptr &([5 * i32]* %265)[i64 0][i64 4];
    i32 %267 = load i32* %266;
    i32 %268 = mul i32 %267, i32 -31;
    i32 %269 = add i32 %263, i32 %268;
    [5 * i32]* %270 = load [5 * i32]** %a1;
    [5 * i32]* %271 = getelementptr &([5 * i32]* %270)[i64 4];
    i32* %272 = getelementptr &([5 * i32]* %271)[i64 0][i64 0];
    i32 %273 = load i32* %272;
    i32 %274 = mul i32 %273, i32 -110;
    i32 %275 = add i32 %269, i32 %274;
    [5 * i32]* %276 = load [5 * i32]** %a1;
    [5 * i32]* %277 = getelementptr &([5 * i32]* %276)[i64 4];
    i32* %278 = getelementptr &([5 * i32]* %277)[i64 0][i64 1];
    i32 %279 = load i32* %278;
    i32 %280 = mul i32 %279, i32 -100;
    i32 %281 = add i32 %275, i32 %280;
    [5 * i32]* %282 = load [5 * i32]** %a1;
    [5 * i32]* %283 = getelementptr &([5 * i32]* %282)[i64 4];
    i32* %284 = getelementptr &([5 * i32]* %283)[i64 0][i64 2];
    i32 %285 = load i32* %284;
    i32 %286 = mul i32 %285, i32 -22;
    i32 %287 = add i32 %281, i32 %286;
    [5 * i32]* %288 = load [5 * i32]** %a1;
    [5 * i32]* %289 = getelementptr &([5 * i32]* %288)[i64 4];
    i32* %290 = getelementptr &([5 * i32]* %289)[i64 0][i64 3];
    i32 %291 = load i32* %290;
    i32 %292 = mul i32 %291, i32 -75;
    i32 %293 = add i32 %287, i32 %292;
    [5 * i32]* %294 = load [5 * i32]** %a1;
    [5 * i32]* %295 = getelementptr &([5 * i32]* %294)[i64 4];
    i32* %296 = getelementptr &([5 * i32]* %295)[i64 0][i64 4];
    i32 %297 = load i32* %296;
    i32 %298 = mul i32 %297, i32 -125;
    i32 %299 = add i32 %293, i32 %298;
    i32 %300 = call (i32) -> i32 @relu_reg(i32 %299);
    i32 %301 = mul i32 %300, i32 77;
    i32 %302 = add i32 %150, i32 %301;
    [5 * i32]* %303 = load [5 * i32]** %a1;
    [5 * i32]* %304 = getelementptr &([5 * i32]* %303)[i64 0];
    i32* %305 = getelementptr &([5 * i32]* %304)[i64 0][i64 0];
    i32 %306 = load i32* %305;
    i32 %307 = mul i32 %306, i32 26;
    [5 * i32]* %308 = load [5 * i32]** %a1;
    [5 * i32]* %309 = getelementptr &([5 * i32]* %308)[i64 0];
    i32* %310 = getelementptr &([5 * i32]* %309)[i64 0][i64 1];
    i32 %311 = load i32* %310;
    i32 %312 = mul i32 %311, i32 76;
    i32 %313 = add i32 %307, i32 %312;
    [5 * i32]* %314 = load [5 * i32]** %a1;
    [5 * i32]* %315 = getelementptr &([5 * i32]* %314)[i64 0];
    i32* %316 = getelementptr &([5 * i32]* %315)[i64 0][i64 2];
    i32 %317 = load i32* %316;
    i32 %318 = mul i32 %317, i32 -70;
    i32 %319 = add i32 %313, i32 %318;
    [5 * i32]* %320 = load [5 * i32]** %a1;
    [5 * i32]* %321 = getelementptr &([5 * i32]* %320)[i64 0];
    i32* %322 = getelementptr &([5 * i32]* %321)[i64 0][i64 3];
    i32 %323 = load i32* %322;
    i32 %324 = mul i32 %323, i32 29;
    i32 %325 = add i32 %319, i32 %324;
    [5 * i32]* %326 = load [5 * i32]** %a1;
    [5 * i32]* %327 = getelementptr &([5 * i32]* %326)[i64 0];
    i32* %328 = getelementptr &([5 * i32]* %327)[i64 0][i64 4];
    i32 %329 = load i32* %328;
    i32 %330 = mul i32 %329, i32 -95;
    i32 %331 = add i32 %325, i32 %330;
    [5 * i32]* %332 = load [5 * i32]** %a1;
    [5 * i32]* %333 = getelementptr &([5 * i32]* %332)[i64 1];
    i32* %334 = getelementptr &([5 * i32]* %333)[i64 0][i64 0];
    i32 %335 = load i32* %334;
    i32 %336 = mul i32 %335, i32 96;
    i32 %337 = add i32 %331, i32 %336;
    [5 * i32]* %338 = load [5 * i32]** %a1;
    [5 * i32]* %339 = getelementptr &([5 * i32]* %338)[i64 1];
    i32* %340 = getelementptr &([5 * i32]* %339)[i64 0][i64 1];
    i32 %341 = load i32* %340;
    i32 %342 = mul i32 %341, i32 52;
    i32 %343 = add i32 %337, i32 %342;
    [5 * i32]* %344 = load [5 * i32]** %a1;
    [5 * i32]* %345 = getelementptr &([5 * i32]* %344)[i64 1];
    i32* %346 = getelementptr &([5 * i32]* %345)[i64 0][i64 2];
    i32 %347 = load i32* %346;
    i32 %348 = mul i32 %347, i32 -68;
    i32 %349 = add i32 %343, i32 %348;
    [5 * i32]* %350 = load [5 * i32]** %a1;
    [5 * i32]* %351 = getelementptr &([5 * i32]* %350)[i64 1];
    i32* %352 = getelementptr &([5 * i32]* %351)[i64 0][i64 3];
    i32 %353 = load i32* %352;
    i32 %354 = mul i32 %353, i32 -5;
    i32 %355 = add i32 %349, i32 %354;
    [5 * i32]* %356 = load [5 * i32]** %a1;
    [5 * i32]* %357 = getelementptr &([5 * i32]* %356)[i64 1];
    i32* %358 = getelementptr &([5 * i32]* %357)[i64 0][i64 4];
    i32 %359 = load i32* %358;
    i32 %360 = mul i32 %359, i32 34;
    i32 %361 = add i32 %355, i32 %360;
    [5 * i32]* %362 = load [5 * i32]** %a1;
    [5 * i32]* %363 = getelementptr &([5 * i32]* %362)[i64 2];
    i32* %364 = getelementptr &([5 * i32]* %363)[i64 0][i64 0];
    i32 %365 = load i32* %364;
    i32 %366 = mul i32 %365, i32 -34;
    i32 %367 = add i32 %361, i32 %366;
    [5 * i32]* %368 = load [5 * i32]** %a1;
    [5 * i32]* %369 = getelementptr &([5 * i32]* %368)[i64 2];
    i32* %370 = getelementptr &([5 * i32]* %369)[i64 0][i64 1];
    i32 %371 = load i32* %370;
    i32 %372 = mul i32 %371, i32 102;
    i32 %373 = add i32 %367, i32 %372;
    [5 * i32]* %374 = load [5 * i32]** %a1;
    [5 * i32]* %375 = getelementptr &([5 * i32]* %374)[i64 2];
    i32* %376 = getelementptr &([5 * i32]* %375)[i64 0][i64 2];
    i32 %377 = load i32* %376;
    i32 %378 = mul i32 %377, i32 6;
    i32 %379 = add i32 %373, i32 %378;
    [5 * i32]* %380 = load [5 * i32]** %a1;
    [5 * i32]* %381 = getelementptr &([5 * i32]* %380)[i64 2];
    i32* %382 = getelementptr &([5 * i32]* %381)[i64 0][i64 3];
    i32 %383 = load i32* %382;
    i32 %384 = mul i32 %383, i32 -38;
    i32 %385 = add i32 %379, i32 %384;
    [5 * i32]* %386 = load [5 * i32]** %a1;
    [5 * i32]* %387 = getelementptr &([5 * i32]* %386)[i64 2];
    i32* %388 = getelementptr &([5 * i32]* %387)[i64 0][i64 4];
    i32 %389 = load i32* %388;
    i32 %390 = mul i32 %389, i32 27;
    i32 %391 = add i32 %385, i32 %390;
    [5 * i32]* %392 = load [5 * i32]** %a1;
    [5 * i32]* %393 = getelementptr &([5 * i32]* %392)[i64 3];
    i32* %394 = getelementptr &([5 * i32]* %393)[i64 0][i64 0];
    i32 %395 = load i32* %394;
    i32 %396 = mul i32 %395, i32 110;
    i32 %397 = add i32 %391, i32 %396;
    [5 * i32]* %398 = load [5 * i32]** %a1;
    [5 * i32]* %399 = getelementptr &([5 * i32]* %398)[i64 3];
    i32* %400 = getelementptr &([5 * i32]* %399)[i64 0][i64 1];
    i32 %401 = load i32* %400;
    i32 %402 = mul i32 %401, i32 116;
    i32 %403 = add i32 %397, i32 %402;
    [5 * i32]* %404 = load [5 * i32]** %a1;
    [5 * i32]* %405 = getelementptr &([5 * i32]* %404)[i64 3];
    i32* %406 = getelementptr &([5 * i32]* %405)[i64 0][i64 2];
    i32 %407 = load i32* %406;
    i32 %408 = mul i32 %407, i32 39;
    i32 %409 = add i32 %403, i32 %408;
    [5 * i32]* %410 = load [5 * i32]** %a1;
    [5 * i32]* %411 = getelementptr &([5 * i32]* %410)[i64 3];
    i32* %412 = getelementptr &([5 * i32]* %411)[i64 0][i64 3];
    i32 %413 = load i32* %412;
    i32 %414 = mul i32 %413, i32 -63;
    i32 %415 = add i32 %409, i32 %414;
    [5 * i32]* %416 = load [5 * i32]** %a1;
    [5 * i32]* %417 = getelementptr &([5 * i32]* %416)[i64 3];
    i32* %418 = getelementptr &([5 * i32]* %417)[i64 0][i64 4];
    i32 %419 = load i32* %418;
    i32 %420 = mul i32 %419, i32 -99;
    i32 %421 = add i32 %415, i32 %420;
    [5 * i32]* %422 = load [5 * i32]** %a1;
    [5 * i32]* %423 = getelementptr &([5 * i32]* %422)[i64 4];
    i32* %424 = getelementptr &([5 * i32]* %423)[i64 0][i64 0];
    i32 %425 = load i32* %424;
    i32 %426 = mul i32 %425, i32 65;
    i32 %427 = add i32 %421, i32 %426;
    [5 * i32]* %428 = load [5 * i32]** %a1;
    [5 * i32]* %429 = getelementptr &([5 * i32]* %428)[i64 4];
    i32* %430 = getelementptr &([5 * i32]* %429)[i64 0][i64 1];
    i32 %431 = load i32* %430;
    i32 %432 = mul i32 %431, i32 120;
    i32 %433 = add i32 %427, i32 %432;
    [5 * i32]* %434 = load [5 * i32]** %a1;
    [5 * i32]* %435 = getelementptr &([5 * i32]* %434)[i64 4];
    i32* %436 = getelementptr &([5 * i32]* %435)[i64 0][i64 2];
    i32 %437 = load i32* %436;
    i32 %438 = mul i32 %437, i32 -39;
    i32 %439 = add i32 %433, i32 %438;
    [5 * i32]* %440 = load [5 * i32]** %a1;
    [5 * i32]* %441 = getelementptr &([5 * i32]* %440)[i64 4];
    i32* %442 = getelementptr &([5 * i32]* %441)[i64 0][i64 3];
    i32 %443 = load i32* %442;
    i32 %444 = mul i32 %443, i32 -6;
    i32 %445 = add i32 %439, i32 %444;
    [5 * i32]* %446 = load [5 * i32]** %a1;
    [5 * i32]* %447 = getelementptr &([5 * i32]* %446)[i64 4];
    i32* %448 = getelementptr &([5 * i32]* %447)[i64 0][i64 4];
    i32 %449 = load i32* %448;
    i32 %450 = mul i32 %449, i32 94;
    i32 %451 = add i32 %445, i32 %450;
    i32 %452 = call (i32) -> i32 @relu_reg(i32 %451);
    i32 %453 = mul i32 %452, i32 127;
    i32 %454 = add i32 %302, i32 %453;
    [5 * i32]* %455 = load [5 * i32]** %a1;
    [5 * i32]* %456 = getelementptr &([5 * i32]* %455)[i64 0];
    i32* %457 = getelementptr &([5 * i32]* %456)[i64 0][i64 0];
    i32 %458 = load i32* %457;
    i32 %459 = mul i32 %458, i32 -23;
    [5 * i32]* %460 = load [5 * i32]** %a1;
    [5 * i32]* %461 = getelementptr &([5 * i32]* %460)[i64 0];
    i32* %462 = getelementptr &([5 * i32]* %461)[i64 0][i64 1];
    i32 %463 = load i32* %462;
    i32 %464 = mul i32 %463, i32 -63;
    i32 %465 = add i32 %459, i32 %464;
    [5 * i32]* %466 = load [5 * i32]** %a1;
    [5 * i32]* %467 = getelementptr &([5 * i32]* %466)[i64 0];
    i32* %468 = getelementptr &([5 * i32]* %467)[i64 0][i64 2];
    i32 %469 = load i32* %468;
    i32 %470 = mul i32 %469, i32 49;
    i32 %471 = add i32 %465, i32 %470;
    [5 * i32]* %472 = load [5 * i32]** %a1;
    [5 * i32]* %473 = getelementptr &([5 * i32]* %472)[i64 0];
    i32* %474 = getelementptr &([5 * i32]* %473)[i64 0][i64 3];
    i32 %475 = load i32* %474;
    i32 %476 = mul i32 %475, i32 50;
    i32 %477 = add i32 %471, i32 %476;
    [5 * i32]* %478 = load [5 * i32]** %a1;
    [5 * i32]* %479 = getelementptr &([5 * i32]* %478)[i64 0];
    i32* %480 = getelementptr &([5 * i32]* %479)[i64 0][i64 4];
    i32 %481 = load i32* %480;
    i32 %482 = mul i32 %481, i32 72;
    i32 %483 = add i32 %477, i32 %482;
    [5 * i32]* %484 = load [5 * i32]** %a1;
    [5 * i32]* %485 = getelementptr &([5 * i32]* %484)[i64 1];
    i32* %486 = getelementptr &([5 * i32]* %485)[i64 0][i64 0];
    i32 %487 = load i32* %486;
    i32 %488 = mul i32 %487, i32 85;
    i32 %489 = add i32 %483, i32 %488;
    [5 * i32]* %490 = load [5 * i32]** %a1;
    [5 * i32]* %491 = getelementptr &([5 * i32]* %490)[i64 1];
    i32* %492 = getelementptr &([5 * i32]* %491)[i64 0][i64 1];
    i32 %493 = load i32* %492;
    i32 %494 = mul i32 %493, i32 -30;
    i32 %495 = add i32 %489, i32 %494;
    [5 * i32]* %496 = load [5 * i32]** %a1;
    [5 * i32]* %497 = getelementptr &([5 * i32]* %496)[i64 1];
    i32* %498 = getelementptr &([5 * i32]* %497)[i64 0][i64 2];
    i32 %499 = load i32* %498;
    i32 %500 = mul i32 %499, i32 12;
    i32 %501 = add i32 %495, i32 %500;
    [5 * i32]* %502 = load [5 * i32]** %a1;
    [5 * i32]* %503 = getelementptr &([5 * i32]* %502)[i64 1];
    i32* %504 = getelementptr &([5 * i32]* %503)[i64 0][i64 3];
    i32 %505 = load i32* %504;
    i32 %506 = mul i32 %505, i32 125;
    i32 %507 = add i32 %501, i32 %506;
    [5 * i32]* %508 = load [5 * i32]** %a1;
    [5 * i32]* %509 = getelementptr &([5 * i32]* %508)[i64 1];
    i32* %510 = getelementptr &([5 * i32]* %509)[i64 0][i64 4];
    i32 %511 = load i32* %510;
    i32 %512 = mul i32 %511, i32 -117;
    i32 %513 = add i32 %507, i32 %512;
    [5 * i32]* %514 = load [5 * i32]** %a1;
    [5 * i32]* %515 = getelementptr &([5 * i32]* %514)[i64 2];
    i32* %516 = getelementptr &([5 * i32]* %515)[i64 0][i64 0];
    i32 %517 = load i32* %516;
    i32 %518 = mul i32 %517, i32 -65;
    i32 %519 = add i32 %513, i32 %518;
    [5 * i32]* %520 = load [5 * i32]** %a1;
    [5 * i32]* %521 = getelementptr &([5 * i32]* %520)[i64 2];
    i32* %522 = getelementptr &([5 * i32]* %521)[i64 0][i64 1];
    i32 %523 = load i32* %522;
    i32 %524 = mul i32 %523, i32 -67;
    i32 %525 = add i32 %519, i32 %524;
    [5 * i32]* %526 = load [5 * i32]** %a1;
    [5 * i32]* %527 = getelementptr &([5 * i32]* %526)[i64 2];
    i32* %528 = getelementptr &([5 * i32]* %527)[i64 0][i64 2];
    i32 %529 = load i32* %528;
    i32 %530 = mul i32 %529, i32 125;
    i32 %531 = add i32 %525, i32 %530;
    [5 * i32]* %532 = load [5 * i32]** %a1;
    [5 * i32]* %533 = getelementptr &([5 * i32]* %532)[i64 2];
    i32* %534 = getelementptr &([5 * i32]* %533)[i64 0][i64 3];
    i32 %535 = load i32* %534;
    i32 %536 = mul i32 %535, i32 110;
    i32 %537 = add i32 %531, i32 %536;
    [5 * i32]* %538 = load [5 * i32]** %a1;
    [5 * i32]* %539 = getelementptr &([5 * i32]* %538)[i64 2];
    i32* %540 = getelementptr &([5 * i32]* %539)[i64 0][i64 4];
    i32 %541 = load i32* %540;
    i32 %542 = mul i32 %541, i32 -31;
    i32 %543 = add i32 %537, i32 %542;
    [5 * i32]* %544 = load [5 * i32]** %a1;
    [5 * i32]* %545 = getelementptr &([5 * i32]* %544)[i64 3];
    i32* %546 = getelementptr &([5 * i32]* %545)[i64 0][i64 0];
    i32 %547 = load i32* %546;
    i32 %548 = mul i32 %547, i32 -123;
    i32 %549 = add i32 %543, i32 %548;
    [5 * i32]* %550 = load [5 * i32]** %a1;
    [5 * i32]* %551 = getelementptr &([5 * i32]* %550)[i64 3];
    i32* %552 = getelementptr &([5 * i32]* %551)[i64 0][i64 1];
    i32 %553 = load i32* %552;
    i32 %554 = mul i32 %553, i32 83;
    i32 %555 = add i32 %549, i32 %554;
    [5 * i32]* %556 = load [5 * i32]** %a1;
    [5 * i32]* %557 = getelementptr &([5 * i32]* %556)[i64 3];
    i32* %558 = getelementptr &([5 * i32]* %557)[i64 0][i64 2];
    i32 %559 = load i32* %558;
    i32 %560 = mul i32 %559, i32 122;
    i32 %561 = add i32 %555, i32 %560;
    [5 * i32]* %562 = load [5 * i32]** %a1;
    [5 * i32]* %563 = getelementptr &([5 * i32]* %562)[i64 3];
    i32* %564 = getelementptr &([5 * i32]* %563)[i64 0][i64 3];
    i32 %565 = load i32* %564;
    i32 %566 = mul i32 %565, i32 11;
    i32 %567 = add i32 %561, i32 %566;
    [5 * i32]* %568 = load [5 * i32]** %a1;
    [5 * i32]* %569 = getelementptr &([5 * i32]* %568)[i64 3];
    i32* %570 = getelementptr &([5 * i32]* %569)[i64 0][i64 4];
    i32 %571 = load i32* %570;
    i32 %572 = mul i32 %571, i32 -23;
    i32 %573 = add i32 %567, i32 %572;
    [5 * i32]* %574 = load [5 * i32]** %a1;
    [5 * i32]* %575 = getelementptr &([5 * i32]* %574)[i64 4];
    i32* %576 = getelementptr &([5 * i32]* %575)[i64 0][i64 0];
    i32 %577 = load i32* %576;
    i32 %578 = mul i32 %577, i32 -47;
    i32 %579 = add i32 %573, i32 %578;
    [5 * i32]* %580 = load [5 * i32]** %a1;
    [5 * i32]* %581 = getelementptr &([5 * i32]* %580)[i64 4];
    i32* %582 = getelementptr &([5 * i32]* %581)[i64 0][i64 1];
    i32 %583 = load i32* %582;
    i32 %584 = mul i32 %583, i32 -32;
    i32 %585 = add i32 %579, i32 %584;
    [5 * i32]* %586 = load [5 * i32]** %a1;
    [5 * i32]* %587 = getelementptr &([5 * i32]* %586)[i64 4];
    i32* %588 = getelementptr &([5 * i32]* %587)[i64 0][i64 2];
    i32 %589 = load i32* %588;
    i32 %590 = mul i32 %589, i32 -117;
    i32 %591 = add i32 %585, i32 %590;
    [5 * i32]* %592 = load [5 * i32]** %a1;
    [5 * i32]* %593 = getelementptr &([5 * i32]* %592)[i64 4];
    i32* %594 = getelementptr &([5 * i32]* %593)[i64 0][i64 3];
    i32 %595 = load i32* %594;
    i32 %596 = mul i32 %595, i32 95;
    i32 %597 = add i32 %591, i32 %596;
    [5 * i32]* %598 = load [5 * i32]** %a1;
    [5 * i32]* %599 = getelementptr &([5 * i32]* %598)[i64 4];
    i32* %600 = getelementptr &([5 * i32]* %599)[i64 0][i64 4];
    i32 %601 = load i32* %600;
    i32 %602 = mul i32 %601, i32 118;
    i32 %603 = add i32 %597, i32 %602;
    i32 %604 = call (i32) -> i32 @relu_reg(i32 %603);
    i32 %605 = mul i32 %604, i32 -106;
    i32 %606 = add i32 %454, i32 %605;
    [5 * i32]* %607 = load [5 * i32]** %a1;
    [5 * i32]* %608 = getelementptr &([5 * i32]* %607)[i64 0];
    i32* %609 = getelementptr &([5 * i32]* %608)[i64 0][i64 0];
    i32 %610 = load i32* %609;
    i32 %611 = mul i32 %610, i32 8;
    [5 * i32]* %612 = load [5 * i32]** %a1;
    [5 * i32]* %613 = getelementptr &([5 * i32]* %612)[i64 0];
    i32* %614 = getelementptr &([5 * i32]* %613)[i64 0][i64 1];
    i32 %615 = load i32* %614;
    i32 %616 = mul i32 %615, i32 82;
    i32 %617 = add i32 %611, i32 %616;
    [5 * i32]* %618 = load [5 * i32]** %a1;
    [5 * i32]* %619 = getelementptr &([5 * i32]* %618)[i64 0];
    i32* %620 = getelementptr &([5 * i32]* %619)[i64 0][i64 2];
    i32 %621 = load i32* %620;
    i32 %622 = mul i32 %621, i32 -104;
    i32 %623 = add i32 %617, i32 %622;
    [5 * i32]* %624 = load [5 * i32]** %a1;
    [5 * i32]* %625 = getelementptr &([5 * i32]* %624)[i64 0];
    i32* %626 = getelementptr &([5 * i32]* %625)[i64 0][i64 3];
    i32 %627 = load i32* %626;
    i32 %628 = mul i32 %627, i32 101;
    i32 %629 = add i32 %623, i32 %628;
    [5 * i32]* %630 = load [5 * i32]** %a1;
    [5 * i32]* %631 = getelementptr &([5 * i32]* %630)[i64 0];
    i32* %632 = getelementptr &([5 * i32]* %631)[i64 0][i64 4];
    i32 %633 = load i32* %632;
    i32 %634 = mul i32 %633, i32 -116;
    i32 %635 = add i32 %629, i32 %634;
    [5 * i32]* %636 = load [5 * i32]** %a1;
    [5 * i32]* %637 = getelementptr &([5 * i32]* %636)[i64 1];
    i32* %638 = getelementptr &([5 * i32]* %637)[i64 0][i64 0];
    i32 %639 = load i32* %638;
    i32 %640 = mul i32 %639, i32 -63;
    i32 %641 = add i32 %635, i32 %640;
    [5 * i32]* %642 = load [5 * i32]** %a1;
    [5 * i32]* %643 = getelementptr &([5 * i32]* %642)[i64 1];
    i32* %644 = getelementptr &([5 * i32]* %643)[i64 0][i64 1];
    i32 %645 = load i32* %644;
    i32 %646 = mul i32 %645, i32 -16;
    i32 %647 = add i32 %641, i32 %646;
    [5 * i32]* %648 = load [5 * i32]** %a1;
    [5 * i32]* %649 = getelementptr &([5 * i32]* %648)[i64 1];
    i32* %650 = getelementptr &([5 * i32]* %649)[i64 0][i64 2];
    i32 %651 = load i32* %650;
    i32 %652 = mul i32 %651, i32 -70;
    i32 %653 = add i32 %647, i32 %652;
    [5 * i32]* %654 = load [5 * i32]** %a1;
    [5 * i32]* %655 = getelementptr &([5 * i32]* %654)[i64 1];
    i32* %656 = getelementptr &([5 * i32]* %655)[i64 0][i64 3];
    i32 %657 = load i32* %656;
    i32 %658 = mul i32 %657, i32 125;
    i32 %659 = add i32 %653, i32 %658;
    [5 * i32]* %660 = load [5 * i32]** %a1;
    [5 * i32]* %661 = getelementptr &([5 * i32]* %660)[i64 1];
    i32* %662 = getelementptr &([5 * i32]* %661)[i64 0][i64 4];
    i32 %663 = load i32* %662;
    i32 %664 = mul i32 %663, i32 75;
    i32 %665 = add i32 %659, i32 %664;
    [5 * i32]* %666 = load [5 * i32]** %a1;
    [5 * i32]* %667 = getelementptr &([5 * i32]* %666)[i64 2];
    i32* %668 = getelementptr &([5 * i32]* %667)[i64 0][i64 0];
    i32 %669 = load i32* %668;
    i32 %670 = mul i32 %669, i32 66;
    i32 %671 = add i32 %665, i32 %670;
    [5 * i32]* %672 = load [5 * i32]** %a1;
    [5 * i32]* %673 = getelementptr &([5 * i32]* %672)[i64 2];
    i32* %674 = getelementptr &([5 * i32]* %673)[i64 0][i64 1];
    i32 %675 = load i32* %674;
    i32 %676 = mul i32 %675, i32 -96;
    i32 %677 = add i32 %671, i32 %676;
    [5 * i32]* %678 = load [5 * i32]** %a1;
    [5 * i32]* %679 = getelementptr &([5 * i32]* %678)[i64 2];
    i32* %680 = getelementptr &([5 * i32]* %679)[i64 0][i64 2];
    i32 %681 = load i32* %680;
    i32 %682 = mul i32 %681, i32 -101;
    i32 %683 = add i32 %677, i32 %682;
    [5 * i32]* %684 = load [5 * i32]** %a1;
    [5 * i32]* %685 = getelementptr &([5 * i32]* %684)[i64 2];
    i32* %686 = getelementptr &([5 * i32]* %685)[i64 0][i64 3];
    i32 %687 = load i32* %686;
    i32 %688 = mul i32 %687, i32 -114;
    i32 %689 = add i32 %683, i32 %688;
    [5 * i32]* %690 = load [5 * i32]** %a1;
    [5 * i32]* %691 = getelementptr &([5 * i32]* %690)[i64 2];
    i32* %692 = getelementptr &([5 * i32]* %691)[i64 0][i64 4];
    i32 %693 = load i32* %692;
    i32 %694 = mul i32 %693, i32 59;
    i32 %695 = add i32 %689, i32 %694;
    [5 * i32]* %696 = load [5 * i32]** %a1;
    [5 * i32]* %697 = getelementptr &([5 * i32]* %696)[i64 3];
    i32* %698 = getelementptr &([5 * i32]* %697)[i64 0][i64 0];
    i32 %699 = load i32* %698;
    i32 %700 = mul i32 %699, i32 12;
    i32 %701 = add i32 %695, i32 %700;
    [5 * i32]* %702 = load [5 * i32]** %a1;
    [5 * i32]* %703 = getelementptr &([5 * i32]* %702)[i64 3];
    i32* %704 = getelementptr &([5 * i32]* %703)[i64 0][i64 1];
    i32 %705 = load i32* %704;
    i32 %706 = mul i32 %705, i32 5;
    i32 %707 = add i32 %701, i32 %706;
    [5 * i32]* %708 = load [5 * i32]** %a1;
    [5 * i32]* %709 = getelementptr &([5 * i32]* %708)[i64 3];
    i32* %710 = getelementptr &([5 * i32]* %709)[i64 0][i64 2];
    i32 %711 = load i32* %710;
    i32 %712 = mul i32 %711, i32 -95;
    i32 %713 = add i32 %707, i32 %712;
    [5 * i32]* %714 = load [5 * i32]** %a1;
    [5 * i32]* %715 = getelementptr &([5 * i32]* %714)[i64 3];
    i32* %716 = getelementptr &([5 * i32]* %715)[i64 0][i64 3];
    i32 %717 = load i32* %716;
    i32 %718 = mul i32 %717, i32 116;
    i32 %719 = add i32 %713, i32 %718;
    [5 * i32]* %720 = load [5 * i32]** %a1;
    [5 * i32]* %721 = getelementptr &([5 * i32]* %720)[i64 3];
    i32* %722 = getelementptr &([5 * i32]* %721)[i64 0][i64 4];
    i32 %723 = load i32* %722;
    i32 %724 = mul i32 %723, i32 -93;
    i32 %725 = add i32 %719, i32 %724;
    [5 * i32]* %726 = load [5 * i32]** %a1;
    [5 * i32]* %727 = getelementptr &([5 * i32]* %726)[i64 4];
    i32* %728 = getelementptr &([5 * i32]* %727)[i64 0][i64 0];
    i32 %729 = load i32* %728;
    i32 %730 = mul i32 %729, i32 15;
    i32 %731 = add i32 %725, i32 %730;
    [5 * i32]* %732 = load [5 * i32]** %a1;
    [5 * i32]* %733 = getelementptr &([5 * i32]* %732)[i64 4];
    i32* %734 = getelementptr &([5 * i32]* %733)[i64 0][i64 1];
    i32 %735 = load i32* %734;
    i32 %736 = mul i32 %735, i32 79;
    i32 %737 = add i32 %731, i32 %736;
    [5 * i32]* %738 = load [5 * i32]** %a1;
    [5 * i32]* %739 = getelementptr &([5 * i32]* %738)[i64 4];
    i32* %740 = getelementptr &([5 * i32]* %739)[i64 0][i64 2];
    i32 %741 = load i32* %740;
    i32 %742 = mul i32 %741, i32 3;
    i32 %743 = add i32 %737, i32 %742;
    [5 * i32]* %744 = load [5 * i32]** %a1;
    [5 * i32]* %745 = getelementptr &([5 * i32]* %744)[i64 4];
    i32* %746 = getelementptr &([5 * i32]* %745)[i64 0][i64 3];
    i32 %747 = load i32* %746;
    i32 %748 = mul i32 %747, i32 49;
    i32 %749 = add i32 %743, i32 %748;
    [5 * i32]* %750 = load [5 * i32]** %a1;
    [5 * i32]* %751 = getelementptr &([5 * i32]* %750)[i64 4];
    i32* %752 = getelementptr &([5 * i32]* %751)[i64 0][i64 4];
    i32 %753 = load i32* %752;
    i32 %754 = mul i32 %753, i32 -124;
    i32 %755 = add i32 %749, i32 %754;
    i32 %756 = call (i32) -> i32 @relu_reg(i32 %755);
    i32 %757 = mul i32 %756, i32 -3;
    i32 %758 = add i32 %606, i32 %757;
    [5 * i32]* %759 = load [5 * i32]** %a1;
    [5 * i32]* %760 = getelementptr &([5 * i32]* %759)[i64 0];
    i32* %761 = getelementptr &([5 * i32]* %760)[i64 0][i64 0];
    i32 %762 = load i32* %761;
    i32 %763 = mul i32 %762, i32 81;
    [5 * i32]* %764 = load [5 * i32]** %a1;
    [5 * i32]* %765 = getelementptr &([5 * i32]* %764)[i64 0];
    i32* %766 = getelementptr &([5 * i32]* %765)[i64 0][i64 1];
    i32 %767 = load i32* %766;
    i32 %768 = mul i32 %767, i32 68;
    i32 %769 = add i32 %763, i32 %768;
    [5 * i32]* %770 = load [5 * i32]** %a1;
    [5 * i32]* %771 = getelementptr &([5 * i32]* %770)[i64 0];
    i32* %772 = getelementptr &([5 * i32]* %771)[i64 0][i64 2];
    i32 %773 = load i32* %772;
    i32 %774 = mul i32 %773, i32 -102;
    i32 %775 = add i32 %769, i32 %774;
    [5 * i32]* %776 = load [5 * i32]** %a1;
    [5 * i32]* %777 = getelementptr &([5 * i32]* %776)[i64 0];
    i32* %778 = getelementptr &([5 * i32]* %777)[i64 0][i64 3];
    i32 %779 = load i32* %778;
    i32 %780 = mul i32 %779, i32 -74;
    i32 %781 = add i32 %775, i32 %780;
    [5 * i32]* %782 = load [5 * i32]** %a1;
    [5 * i32]* %783 = getelementptr &([5 * i32]* %782)[i64 0];
    i32* %784 = getelementptr &([5 * i32]* %783)[i64 0][i64 4];
    i32 %785 = load i32* %784;
    i32 %786 = mul i32 %785, i32 121;
    i32 %787 = add i32 %781, i32 %786;
    [5 * i32]* %788 = load [5 * i32]** %a1;
    [5 * i32]* %789 = getelementptr &([5 * i32]* %788)[i64 1];
    i32* %790 = getelementptr &([5 * i32]* %789)[i64 0][i64 0];
    i32 %791 = load i32* %790;
    i32 %792 = mul i32 %791, i32 -15;
    i32 %793 = add i32 %787, i32 %792;
    [5 * i32]* %794 = load [5 * i32]** %a1;
    [5 * i32]* %795 = getelementptr &([5 * i32]* %794)[i64 1];
    i32* %796 = getelementptr &([5 * i32]* %795)[i64 0][i64 1];
    i32 %797 = load i32* %796;
    i32 %798 = mul i32 %797, i32 55;
    i32 %799 = add i32 %793, i32 %798;
    [5 * i32]* %800 = load [5 * i32]** %a1;
    [5 * i32]* %801 = getelementptr &([5 * i32]* %800)[i64 1];
    i32* %802 = getelementptr &([5 * i32]* %801)[i64 0][i64 2];
    i32 %803 = load i32* %802;
    i32 %804 = mul i32 %803, i32 101;
    i32 %805 = add i32 %799, i32 %804;
    [5 * i32]* %806 = load [5 * i32]** %a1;
    [5 * i32]* %807 = getelementptr &([5 * i32]* %806)[i64 1];
    i32* %808 = getelementptr &([5 * i32]* %807)[i64 0][i64 3];
    i32 %809 = load i32* %808;
    i32 %810 = mul i32 %809, i32 -13;
    i32 %811 = add i32 %805, i32 %810;
    [5 * i32]* %812 = load [5 * i32]** %a1;
    [5 * i32]* %813 = getelementptr &([5 * i32]* %812)[i64 1];
    i32* %814 = getelementptr &([5 * i32]* %813)[i64 0][i64 4];
    i32 %815 = load i32* %814;
    i32 %816 = mul i32 %815, i32 -62;
    i32 %817 = add i32 %811, i32 %816;
    [5 * i32]* %818 = load [5 * i32]** %a1;
    [5 * i32]* %819 = getelementptr &([5 * i32]* %818)[i64 2];
    i32* %820 = getelementptr &([5 * i32]* %819)[i64 0][i64 0];
    i32 %821 = load i32* %820;
    i32 %822 = mul i32 %821, i32 64;
    i32 %823 = add i32 %817, i32 %822;
    [5 * i32]* %824 = load [5 * i32]** %a1;
    [5 * i32]* %825 = getelementptr &([5 * i32]* %824)[i64 2];
    i32* %826 = getelementptr &([5 * i32]* %825)[i64 0][i64 1];
    i32 %827 = load i32* %826;
    i32 %828 = mul i32 %827, i32 114;
    i32 %829 = add i32 %823, i32 %828;
    [5 * i32]* %830 = load [5 * i32]** %a1;
    [5 * i32]* %831 = getelementptr &([5 * i32]* %830)[i64 2];
    i32* %832 = getelementptr &([5 * i32]* %831)[i64 0][i64 2];
    i32 %833 = load i32* %832;
    i32 %834 = mul i32 %833, i32 38;
    i32 %835 = add i32 %829, i32 %834;
    [5 * i32]* %836 = load [5 * i32]** %a1;
    [5 * i32]* %837 = getelementptr &([5 * i32]* %836)[i64 2];
    i32* %838 = getelementptr &([5 * i32]* %837)[i64 0][i64 3];
    i32 %839 = load i32* %838;
    i32 %840 = mul i32 %839, i32 -21;
    i32 %841 = add i32 %835, i32 %840;
    [5 * i32]* %842 = load [5 * i32]** %a1;
    [5 * i32]* %843 = getelementptr &([5 * i32]* %842)[i64 2];
    i32* %844 = getelementptr &([5 * i32]* %843)[i64 0][i64 4];
    i32 %845 = load i32* %844;
    i32 %846 = mul i32 %845, i32 112;
    i32 %847 = add i32 %841, i32 %846;
    [5 * i32]* %848 = load [5 * i32]** %a1;
    [5 * i32]* %849 = getelementptr &([5 * i32]* %848)[i64 3];
    i32* %850 = getelementptr &([5 * i32]* %849)[i64 0][i64 0];
    i32 %851 = load i32* %850;
    i32 %852 = mul i32 %851, i32 114;
    i32 %853 = add i32 %847, i32 %852;
    [5 * i32]* %854 = load [5 * i32]** %a1;
    [5 * i32]* %855 = getelementptr &([5 * i32]* %854)[i64 3];
    i32* %856 = getelementptr &([5 * i32]* %855)[i64 0][i64 1];
    i32 %857 = load i32* %856;
    i32 %858 = mul i32 %857, i32 112;
    i32 %859 = add i32 %853, i32 %858;
    [5 * i32]* %860 = load [5 * i32]** %a1;
    [5 * i32]* %861 = getelementptr &([5 * i32]* %860)[i64 3];
    i32* %862 = getelementptr &([5 * i32]* %861)[i64 0][i64 2];
    i32 %863 = load i32* %862;
    i32 %864 = mul i32 %863, i32 -10;
    i32 %865 = add i32 %859, i32 %864;
    [5 * i32]* %866 = load [5 * i32]** %a1;
    [5 * i32]* %867 = getelementptr &([5 * i32]* %866)[i64 3];
    i32* %868 = getelementptr &([5 * i32]* %867)[i64 0][i64 3];
    i32 %869 = load i32* %868;
    i32 %870 = mul i32 %869, i32 -16;
    i32 %871 = add i32 %865, i32 %870;
    [5 * i32]* %872 = load [5 * i32]** %a1;
    [5 * i32]* %873 = getelementptr &([5 * i32]* %872)[i64 3];
    i32* %874 = getelementptr &([5 * i32]* %873)[i64 0][i64 4];
    i32 %875 = load i32* %874;
    i32 %876 = mul i32 %875, i32 -50;
    i32 %877 = add i32 %871, i32 %876;
    [5 * i32]* %878 = load [5 * i32]** %a1;
    [5 * i32]* %879 = getelementptr &([5 * i32]* %878)[i64 4];
    i32* %880 = getelementptr &([5 * i32]* %879)[i64 0][i64 0];
    i32 %881 = load i32* %880;
    i32 %882 = mul i32 %881, i32 -112;
    i32 %883 = add i32 %877, i32 %882;
    [5 * i32]* %884 = load [5 * i32]** %a1;
    [5 * i32]* %885 = getelementptr &([5 * i32]* %884)[i64 4];
    i32* %886 = getelementptr &([5 * i32]* %885)[i64 0][i64 1];
    i32 %887 = load i32* %886;
    i32 %888 = mul i32 %887, i32 -116;
    i32 %889 = add i32 %883, i32 %888;
    [5 * i32]* %890 = load [5 * i32]** %a1;
    [5 * i32]* %891 = getelementptr &([5 * i32]* %890)[i64 4];
    i32* %892 = getelementptr &([5 * i32]* %891)[i64 0][i64 2];
    i32 %893 = load i32* %892;
    i32 %894 = mul i32 %893, i32 -54;
    i32 %895 = add i32 %889, i32 %894;
    [5 * i32]* %896 = load [5 * i32]** %a1;
    [5 * i32]* %897 = getelementptr &([5 * i32]* %896)[i64 4];
    i32* %898 = getelementptr &([5 * i32]* %897)[i64 0][i64 3];
    i32 %899 = load i32* %898;
    i32 %900 = mul i32 %899, i32 82;
    i32 %901 = add i32 %895, i32 %900;
    [5 * i32]* %902 = load [5 * i32]** %a1;
    [5 * i32]* %903 = getelementptr &([5 * i32]* %902)[i64 4];
    i32* %904 = getelementptr &([5 * i32]* %903)[i64 0][i64 4];
    i32 %905 = load i32* %904;
    i32 %906 = mul i32 %905, i32 -72;
    i32 %907 = add i32 %901, i32 %906;
    i32 %908 = call (i32) -> i32 @relu_reg(i32 %907);
    i32 %909 = mul i32 %908, i32 32;
    i32 %910 = add i32 %758, i32 %909;
    [5 * i32]* %911 = load [5 * i32]** %a1;
    [5 * i32]* %912 = getelementptr &([5 * i32]* %911)[i64 0];
    i32* %913 = getelementptr &([5 * i32]* %912)[i64 0][i64 0];
    i32 %914 = load i32* %913;
    i32 %915 = mul i32 %914, i32 15;
    [5 * i32]* %916 = load [5 * i32]** %a1;
    [5 * i32]* %917 = getelementptr &([5 * i32]* %916)[i64 0];
    i32* %918 = getelementptr &([5 * i32]* %917)[i64 0][i64 1];
    i32 %919 = load i32* %918;
    i32 %920 = mul i32 %919, i32 -77;
    i32 %921 = add i32 %915, i32 %920;
    [5 * i32]* %922 = load [5 * i32]** %a1;
    [5 * i32]* %923 = getelementptr &([5 * i32]* %922)[i64 0];
    i32* %924 = getelementptr &([5 * i32]* %923)[i64 0][i64 2];
    i32 %925 = load i32* %924;
    i32 %926 = mul i32 %925, i32 66;
    i32 %927 = add i32 %921, i32 %926;
    [5 * i32]* %928 = load [5 * i32]** %a1;
    [5 * i32]* %929 = getelementptr &([5 * i32]* %928)[i64 0];
    i32* %930 = getelementptr &([5 * i32]* %929)[i64 0][i64 3];
    i32 %931 = load i32* %930;
    i32 %932 = mul i32 %931, i32 -90;
    i32 %933 = add i32 %927, i32 %932;
    [5 * i32]* %934 = load [5 * i32]** %a1;
    [5 * i32]* %935 = getelementptr &([5 * i32]* %934)[i64 0];
    i32* %936 = getelementptr &([5 * i32]* %935)[i64 0][i64 4];
    i32 %937 = load i32* %936;
    i32 %938 = mul i32 %937, i32 -6;
    i32 %939 = add i32 %933, i32 %938;
    [5 * i32]* %940 = load [5 * i32]** %a1;
    [5 * i32]* %941 = getelementptr &([5 * i32]* %940)[i64 1];
    i32* %942 = getelementptr &([5 * i32]* %941)[i64 0][i64 0];
    i32 %943 = load i32* %942;
    i32 %944 = mul i32 %943, i32 -30;
    i32 %945 = add i32 %939, i32 %944;
    [5 * i32]* %946 = load [5 * i32]** %a1;
    [5 * i32]* %947 = getelementptr &([5 * i32]* %946)[i64 1];
    i32* %948 = getelementptr &([5 * i32]* %947)[i64 0][i64 1];
    i32 %949 = load i32* %948;
    i32 %950 = mul i32 %949, i32 -8;
    i32 %951 = add i32 %945, i32 %950;
    [5 * i32]* %952 = load [5 * i32]** %a1;
    [5 * i32]* %953 = getelementptr &([5 * i32]* %952)[i64 1];
    i32* %954 = getelementptr &([5 * i32]* %953)[i64 0][i64 2];
    i32 %955 = load i32* %954;
    i32 %956 = mul i32 %955, i32 81;
    i32 %957 = add i32 %951, i32 %956;
    [5 * i32]* %958 = load [5 * i32]** %a1;
    [5 * i32]* %959 = getelementptr &([5 * i32]* %958)[i64 1];
    i32* %960 = getelementptr &([5 * i32]* %959)[i64 0][i64 3];
    i32 %961 = load i32* %960;
    i32 %962 = mul i32 %961, i32 2;
    i32 %963 = add i32 %957, i32 %962;
    [5 * i32]* %964 = load [5 * i32]** %a1;
    [5 * i32]* %965 = getelementptr &([5 * i32]* %964)[i64 1];
    i32* %966 = getelementptr &([5 * i32]* %965)[i64 0][i64 4];
    i32 %967 = load i32* %966;
    i32 %968 = mul i32 %967, i32 -110;
    i32 %969 = add i32 %963, i32 %968;
    [5 * i32]* %970 = load [5 * i32]** %a1;
    [5 * i32]* %971 = getelementptr &([5 * i32]* %970)[i64 2];
    i32* %972 = getelementptr &([5 * i32]* %971)[i64 0][i64 0];
    i32 %973 = load i32* %972;
    i32 %974 = mul i32 %973, i32 -95;
    i32 %975 = add i32 %969, i32 %974;
    [5 * i32]* %976 = load [5 * i32]** %a1;
    [5 * i32]* %977 = getelementptr &([5 * i32]* %976)[i64 2];
    i32* %978 = getelementptr &([5 * i32]* %977)[i64 0][i64 1];
    i32 %979 = load i32* %978;
    i32 %980 = mul i32 %979, i32 59;
    i32 %981 = add i32 %975, i32 %980;
    [5 * i32]* %982 = load [5 * i32]** %a1;
    [5 * i32]* %983 = getelementptr &([5 * i32]* %982)[i64 2];
    i32* %984 = getelementptr &([5 * i32]* %983)[i64 0][i64 2];
    i32 %985 = load i32* %984;
    i32 %986 = mul i32 %985, i32 52;
    i32 %987 = add i32 %981, i32 %986;
    [5 * i32]* %988 = load [5 * i32]** %a1;
    [5 * i32]* %989 = getelementptr &([5 * i32]* %988)[i64 2];
    i32* %990 = getelementptr &([5 * i32]* %989)[i64 0][i64 3];
    i32 %991 = load i32* %990;
    i32 %992 = mul i32 %991, i32 15;
    i32 %993 = add i32 %987, i32 %992;
    [5 * i32]* %994 = load [5 * i32]** %a1;
    [5 * i32]* %995 = getelementptr &([5 * i32]* %994)[i64 2];
    i32* %996 = getelementptr &([5 * i32]* %995)[i64 0][i64 4];
    i32 %997 = load i32* %996;
    i32 %998 = mul i32 %997, i32 55;
    i32 %999 = add i32 %993, i32 %998;
    [5 * i32]* %1000 = load [5 * i32]** %a1;
    [5 * i32]* %1001 = getelementptr &([5 * i32]* %1000)[i64 3];
    i32* %1002 = getelementptr &([5 * i32]* %1001)[i64 0][i64 0];
    i32 %1003 = load i32* %1002;
    i32 %1004 = mul i32 %1003, i32 -33;
    i32 %1005 = add i32 %999, i32 %1004;
    [5 * i32]* %1006 = load [5 * i32]** %a1;
    [5 * i32]* %1007 = getelementptr &([5 * i32]* %1006)[i64 3];
    i32* %1008 = getelementptr &([5 * i32]* %1007)[i64 0][i64 1];
    i32 %1009 = load i32* %1008;
    i32 %1010 = mul i32 %1009, i32 14;
    i32 %1011 = add i32 %1005, i32 %1010;
    [5 * i32]* %1012 = load [5 * i32]** %a1;
    [5 * i32]* %1013 = getelementptr &([5 * i32]* %1012)[i64 3];
    i32* %1014 = getelementptr &([5 * i32]* %1013)[i64 0][i64 2];
    i32 %1015 = load i32* %1014;
    i32 %1016 = mul i32 %1015, i32 58;
    i32 %1017 = add i32 %1011, i32 %1016;
    [5 * i32]* %1018 = load [5 * i32]** %a1;
    [5 * i32]* %1019 = getelementptr &([5 * i32]* %1018)[i64 3];
    i32* %1020 = getelementptr &([5 * i32]* %1019)[i64 0][i64 3];
    i32 %1021 = load i32* %1020;
    i32 %1022 = mul i32 %1021, i32 67;
    i32 %1023 = add i32 %1017, i32 %1022;
    [5 * i32]* %1024 = load [5 * i32]** %a1;
    [5 * i32]* %1025 = getelementptr &([5 * i32]* %1024)[i64 3];
    i32* %1026 = getelementptr &([5 * i32]* %1025)[i64 0][i64 4];
    i32 %1027 = load i32* %1026;
    i32 %1028 = mul i32 %1027, i32 86;
    i32 %1029 = add i32 %1023, i32 %1028;
    [5 * i32]* %1030 = load [5 * i32]** %a1;
    [5 * i32]* %1031 = getelementptr &([5 * i32]* %1030)[i64 4];
    i32* %1032 = getelementptr &([5 * i32]* %1031)[i64 0][i64 0];
    i32 %1033 = load i32* %1032;
    i32 %1034 = mul i32 %1033, i32 -79;
    i32 %1035 = add i32 %1029, i32 %1034;
    [5 * i32]* %1036 = load [5 * i32]** %a1;
    [5 * i32]* %1037 = getelementptr &([5 * i32]* %1036)[i64 4];
    i32* %1038 = getelementptr &([5 * i32]* %1037)[i64 0][i64 1];
    i32 %1039 = load i32* %1038;
    i32 %1040 = mul i32 %1039, i32 48;
    i32 %1041 = add i32 %1035, i32 %1040;
    [5 * i32]* %1042 = load [5 * i32]** %a1;
    [5 * i32]* %1043 = getelementptr &([5 * i32]* %1042)[i64 4];
    i32* %1044 = getelementptr &([5 * i32]* %1043)[i64 0][i64 2];
    i32 %1045 = load i32* %1044;
    i32 %1046 = mul i32 %1045, i32 -13;
    i32 %1047 = add i32 %1041, i32 %1046;
    [5 * i32]* %1048 = load [5 * i32]** %a1;
    [5 * i32]* %1049 = getelementptr &([5 * i32]* %1048)[i64 4];
    i32* %1050 = getelementptr &([5 * i32]* %1049)[i64 0][i64 3];
    i32 %1051 = load i32* %1050;
    i32 %1052 = mul i32 %1051, i32 -15;
    i32 %1053 = add i32 %1047, i32 %1052;
    [5 * i32]* %1054 = load [5 * i32]** %a1;
    [5 * i32]* %1055 = getelementptr &([5 * i32]* %1054)[i64 4];
    i32* %1056 = getelementptr &([5 * i32]* %1055)[i64 0][i64 4];
    i32 %1057 = load i32* %1056;
    i32 %1058 = mul i32 %1057, i32 66;
    i32 %1059 = add i32 %1053, i32 %1058;
    i32 %1060 = call (i32) -> i32 @relu_reg(i32 %1059);
    i32 %1061 = mul i32 %1060, i32 -95;
    i32 %1062 = add i32 %910, i32 %1061;
    [5 * i32]* %1063 = load [5 * i32]** %a1;
    [5 * i32]* %1064 = getelementptr &([5 * i32]* %1063)[i64 0];
    i32* %1065 = getelementptr &([5 * i32]* %1064)[i64 0][i64 0];
    i32 %1066 = load i32* %1065;
    i32 %1067 = mul i32 %1066, i32 33;
    [5 * i32]* %1068 = load [5 * i32]** %a1;
    [5 * i32]* %1069 = getelementptr &([5 * i32]* %1068)[i64 0];
    i32* %1070 = getelementptr &([5 * i32]* %1069)[i64 0][i64 1];
    i32 %1071 = load i32* %1070;
    i32 %1072 = mul i32 %1071, i32 82;
    i32 %1073 = add i32 %1067, i32 %1072;
    [5 * i32]* %1074 = load [5 * i32]** %a1;
    [5 * i32]* %1075 = getelementptr &([5 * i32]* %1074)[i64 0];
    i32* %1076 = getelementptr &([5 * i32]* %1075)[i64 0][i64 2];
    i32 %1077 = load i32* %1076;
    i32 %1078 = mul i32 %1077, i32 67;
    i32 %1079 = add i32 %1073, i32 %1078;
    [5 * i32]* %1080 = load [5 * i32]** %a1;
    [5 * i32]* %1081 = getelementptr &([5 * i32]* %1080)[i64 0];
    i32* %1082 = getelementptr &([5 * i32]* %1081)[i64 0][i64 3];
    i32 %1083 = load i32* %1082;
    i32 %1084 = mul i32 %1083, i32 30;
    i32 %1085 = add i32 %1079, i32 %1084;
    [5 * i32]* %1086 = load [5 * i32]** %a1;
    [5 * i32]* %1087 = getelementptr &([5 * i32]* %1086)[i64 0];
    i32* %1088 = getelementptr &([5 * i32]* %1087)[i64 0][i64 4];
    i32 %1089 = load i32* %1088;
    i32 %1090 = mul i32 %1089, i32 -2;
    i32 %1091 = add i32 %1085, i32 %1090;
    [5 * i32]* %1092 = load [5 * i32]** %a1;
    [5 * i32]* %1093 = getelementptr &([5 * i32]* %1092)[i64 1];
    i32* %1094 = getelementptr &([5 * i32]* %1093)[i64 0][i64 0];
    i32 %1095 = load i32* %1094;
    i32 %1096 = mul i32 %1095, i32 65;
    i32 %1097 = add i32 %1091, i32 %1096;
    [5 * i32]* %1098 = load [5 * i32]** %a1;
    [5 * i32]* %1099 = getelementptr &([5 * i32]* %1098)[i64 1];
    i32* %1100 = getelementptr &([5 * i32]* %1099)[i64 0][i64 1];
    i32 %1101 = load i32* %1100;
    i32 %1102 = mul i32 %1101, i32 120;
    i32 %1103 = add i32 %1097, i32 %1102;
    [5 * i32]* %1104 = load [5 * i32]** %a1;
    [5 * i32]* %1105 = getelementptr &([5 * i32]* %1104)[i64 1];
    i32* %1106 = getelementptr &([5 * i32]* %1105)[i64 0][i64 2];
    i32 %1107 = load i32* %1106;
    i32 %1108 = mul i32 %1107, i32 -13;
    i32 %1109 = add i32 %1103, i32 %1108;
    [5 * i32]* %1110 = load [5 * i32]** %a1;
    [5 * i32]* %1111 = getelementptr &([5 * i32]* %1110)[i64 1];
    i32* %1112 = getelementptr &([5 * i32]* %1111)[i64 0][i64 3];
    i32 %1113 = load i32* %1112;
    i32 %1114 = mul i32 %1113, i32 18;
    i32 %1115 = add i32 %1109, i32 %1114;
    [5 * i32]* %1116 = load [5 * i32]** %a1;
    [5 * i32]* %1117 = getelementptr &([5 * i32]* %1116)[i64 1];
    i32* %1118 = getelementptr &([5 * i32]* %1117)[i64 0][i64 4];
    i32 %1119 = load i32* %1118;
    i32 %1120 = mul i32 %1119, i32 5;
    i32 %1121 = add i32 %1115, i32 %1120;
    [5 * i32]* %1122 = load [5 * i32]** %a1;
    [5 * i32]* %1123 = getelementptr &([5 * i32]* %1122)[i64 2];
    i32* %1124 = getelementptr &([5 * i32]* %1123)[i64 0][i64 0];
    i32 %1125 = load i32* %1124;
    i32 %1126 = mul i32 %1125, i32 104;
    i32 %1127 = add i32 %1121, i32 %1126;
    [5 * i32]* %1128 = load [5 * i32]** %a1;
    [5 * i32]* %1129 = getelementptr &([5 * i32]* %1128)[i64 2];
    i32* %1130 = getelementptr &([5 * i32]* %1129)[i64 0][i64 1];
    i32 %1131 = load i32* %1130;
    i32 %1132 = mul i32 %1131, i32 -119;
    i32 %1133 = add i32 %1127, i32 %1132;
    [5 * i32]* %1134 = load [5 * i32]** %a1;
    [5 * i32]* %1135 = getelementptr &([5 * i32]* %1134)[i64 2];
    i32* %1136 = getelementptr &([5 * i32]* %1135)[i64 0][i64 2];
    i32 %1137 = load i32* %1136;
    i32 %1138 = mul i32 %1137, i32 -7;
    i32 %1139 = add i32 %1133, i32 %1138;
    [5 * i32]* %1140 = load [5 * i32]** %a1;
    [5 * i32]* %1141 = getelementptr &([5 * i32]* %1140)[i64 2];
    i32* %1142 = getelementptr &([5 * i32]* %1141)[i64 0][i64 3];
    i32 %1143 = load i32* %1142;
    i32 %1144 = mul i32 %1143, i32 71;
    i32 %1145 = add i32 %1139, i32 %1144;
    [5 * i32]* %1146 = load [5 * i32]** %a1;
    [5 * i32]* %1147 = getelementptr &([5 * i32]* %1146)[i64 2];
    i32* %1148 = getelementptr &([5 * i32]* %1147)[i64 0][i64 4];
    i32 %1149 = load i32* %1148;
    i32 %1150 = mul i32 %1149, i32 107;
    i32 %1151 = add i32 %1145, i32 %1150;
    [5 * i32]* %1152 = load [5 * i32]** %a1;
    [5 * i32]* %1153 = getelementptr &([5 * i32]* %1152)[i64 3];
    i32* %1154 = getelementptr &([5 * i32]* %1153)[i64 0][i64 0];
    i32 %1155 = load i32* %1154;
    i32 %1156 = mul i32 %1155, i32 24;
    i32 %1157 = add i32 %1151, i32 %1156;
    [5 * i32]* %1158 = load [5 * i32]** %a1;
    [5 * i32]* %1159 = getelementptr &([5 * i32]* %1158)[i64 3];
    i32* %1160 = getelementptr &([5 * i32]* %1159)[i64 0][i64 1];
    i32 %1161 = load i32* %1160;
    i32 %1162 = mul i32 %1161, i32 82;
    i32 %1163 = add i32 %1157, i32 %1162;
    [5 * i32]* %1164 = load [5 * i32]** %a1;
    [5 * i32]* %1165 = getelementptr &([5 * i32]* %1164)[i64 3];
    i32* %1166 = getelementptr &([5 * i32]* %1165)[i64 0][i64 2];
    i32 %1167 = load i32* %1166;
    i32 %1168 = mul i32 %1167, i32 -96;
    i32 %1169 = add i32 %1163, i32 %1168;
    [5 * i32]* %1170 = load [5 * i32]** %a1;
    [5 * i32]* %1171 = getelementptr &([5 * i32]* %1170)[i64 3];
    i32* %1172 = getelementptr &([5 * i32]* %1171)[i64 0][i64 3];
    i32 %1173 = load i32* %1172;
    i32 %1174 = mul i32 %1173, i32 -104;
    i32 %1175 = add i32 %1169, i32 %1174;
    [5 * i32]* %1176 = load [5 * i32]** %a1;
    [5 * i32]* %1177 = getelementptr &([5 * i32]* %1176)[i64 3];
    i32* %1178 = getelementptr &([5 * i32]* %1177)[i64 0][i64 4];
    i32 %1179 = load i32* %1178;
    i32 %1180 = mul i32 %1179, i32 -121;
    i32 %1181 = add i32 %1175, i32 %1180;
    [5 * i32]* %1182 = load [5 * i32]** %a1;
    [5 * i32]* %1183 = getelementptr &([5 * i32]* %1182)[i64 4];
    i32* %1184 = getelementptr &([5 * i32]* %1183)[i64 0][i64 0];
    i32 %1185 = load i32* %1184;
    i32 %1186 = mul i32 %1185, i32 65;
    i32 %1187 = add i32 %1181, i32 %1186;
    [5 * i32]* %1188 = load [5 * i32]** %a1;
    [5 * i32]* %1189 = getelementptr &([5 * i32]* %1188)[i64 4];
    i32* %1190 = getelementptr &([5 * i32]* %1189)[i64 0][i64 1];
    i32 %1191 = load i32* %1190;
    i32 %1192 = mul i32 %1191, i32 97;
    i32 %1193 = add i32 %1187, i32 %1192;
    [5 * i32]* %1194 = load [5 * i32]** %a1;
    [5 * i32]* %1195 = getelementptr &([5 * i32]* %1194)[i64 4];
    i32* %1196 = getelementptr &([5 * i32]* %1195)[i64 0][i64 2];
    i32 %1197 = load i32* %1196;
    i32 %1198 = mul i32 %1197, i32 83;
    i32 %1199 = add i32 %1193, i32 %1198;
    [5 * i32]* %1200 = load [5 * i32]** %a1;
    [5 * i32]* %1201 = getelementptr &([5 * i32]* %1200)[i64 4];
    i32* %1202 = getelementptr &([5 * i32]* %1201)[i64 0][i64 3];
    i32 %1203 = load i32* %1202;
    i32 %1204 = mul i32 %1203, i32 46;
    i32 %1205 = add i32 %1199, i32 %1204;
    [5 * i32]* %1206 = load [5 * i32]** %a1;
    [5 * i32]* %1207 = getelementptr &([5 * i32]* %1206)[i64 4];
    i32* %1208 = getelementptr &([5 * i32]* %1207)[i64 0][i64 4];
    i32 %1209 = load i32* %1208;
    i32 %1210 = mul i32 %1209, i32 -84;
    i32 %1211 = add i32 %1205, i32 %1210;
    i32 %1212 = call (i32) -> i32 @relu_reg(i32 %1211);
    i32 %1213 = mul i32 %1212, i32 -50;
    i32 %1214 = add i32 %1062, i32 %1213;
    [5 * i32]* %1215 = load [5 * i32]** %a1;
    [5 * i32]* %1216 = getelementptr &([5 * i32]* %1215)[i64 0];
    i32* %1217 = getelementptr &([5 * i32]* %1216)[i64 0][i64 0];
    i32 %1218 = load i32* %1217;
    i32 %1219 = mul i32 %1218, i32 -29;
    [5 * i32]* %1220 = load [5 * i32]** %a1;
    [5 * i32]* %1221 = getelementptr &([5 * i32]* %1220)[i64 0];
    i32* %1222 = getelementptr &([5 * i32]* %1221)[i64 0][i64 1];
    i32 %1223 = load i32* %1222;
    i32 %1224 = mul i32 %1223, i32 7;
    i32 %1225 = add i32 %1219, i32 %1224;
    [5 * i32]* %1226 = load [5 * i32]** %a1;
    [5 * i32]* %1227 = getelementptr &([5 * i32]* %1226)[i64 0];
    i32* %1228 = getelementptr &([5 * i32]* %1227)[i64 0][i64 2];
    i32 %1229 = load i32* %1228;
    i32 %1230 = mul i32 %1229, i32 -70;
    i32 %1231 = add i32 %1225, i32 %1230;
    [5 * i32]* %1232 = load [5 * i32]** %a1;
    [5 * i32]* %1233 = getelementptr &([5 * i32]* %1232)[i64 0];
    i32* %1234 = getelementptr &([5 * i32]* %1233)[i64 0][i64 3];
    i32 %1235 = load i32* %1234;
    i32 %1236 = mul i32 %1235, i32 38;
    i32 %1237 = add i32 %1231, i32 %1236;
    [5 * i32]* %1238 = load [5 * i32]** %a1;
    [5 * i32]* %1239 = getelementptr &([5 * i32]* %1238)[i64 0];
    i32* %1240 = getelementptr &([5 * i32]* %1239)[i64 0][i64 4];
    i32 %1241 = load i32* %1240;
    i32 %1242 = mul i32 %1241, i32 -90;
    i32 %1243 = add i32 %1237, i32 %1242;
    [5 * i32]* %1244 = load [5 * i32]** %a1;
    [5 * i32]* %1245 = getelementptr &([5 * i32]* %1244)[i64 1];
    i32* %1246 = getelementptr &([5 * i32]* %1245)[i64 0][i64 0];
    i32 %1247 = load i32* %1246;
    i32 %1248 = mul i32 %1247, i32 -15;
    i32 %1249 = add i32 %1243, i32 %1248;
    [5 * i32]* %1250 = load [5 * i32]** %a1;
    [5 * i32]* %1251 = getelementptr &([5 * i32]* %1250)[i64 1];
    i32* %1252 = getelementptr &([5 * i32]* %1251)[i64 0][i64 1];
    i32 %1253 = load i32* %1252;
    i32 %1254 = mul i32 %1253, i32 -32;
    i32 %1255 = add i32 %1249, i32 %1254;
    [5 * i32]* %1256 = load [5 * i32]** %a1;
    [5 * i32]* %1257 = getelementptr &([5 * i32]* %1256)[i64 1];
    i32* %1258 = getelementptr &([5 * i32]* %1257)[i64 0][i64 2];
    i32 %1259 = load i32* %1258;
    i32 %1260 = mul i32 %1259, i32 37;
    i32 %1261 = add i32 %1255, i32 %1260;
    [5 * i32]* %1262 = load [5 * i32]** %a1;
    [5 * i32]* %1263 = getelementptr &([5 * i32]* %1262)[i64 1];
    i32* %1264 = getelementptr &([5 * i32]* %1263)[i64 0][i64 3];
    i32 %1265 = load i32* %1264;
    i32 %1266 = mul i32 %1265, i32 36;
    i32 %1267 = add i32 %1261, i32 %1266;
    [5 * i32]* %1268 = load [5 * i32]** %a1;
    [5 * i32]* %1269 = getelementptr &([5 * i32]* %1268)[i64 1];
    i32* %1270 = getelementptr &([5 * i32]* %1269)[i64 0][i64 4];
    i32 %1271 = load i32* %1270;
    i32 %1272 = mul i32 %1271, i32 -62;
    i32 %1273 = add i32 %1267, i32 %1272;
    [5 * i32]* %1274 = load [5 * i32]** %a1;
    [5 * i32]* %1275 = getelementptr &([5 * i32]* %1274)[i64 2];
    i32* %1276 = getelementptr &([5 * i32]* %1275)[i64 0][i64 0];
    i32 %1277 = load i32* %1276;
    i32 %1278 = mul i32 %1277, i32 -125;
    i32 %1279 = add i32 %1273, i32 %1278;
    [5 * i32]* %1280 = load [5 * i32]** %a1;
    [5 * i32]* %1281 = getelementptr &([5 * i32]* %1280)[i64 2];
    i32* %1282 = getelementptr &([5 * i32]* %1281)[i64 0][i64 1];
    i32 %1283 = load i32* %1282;
    i32 %1284 = mul i32 %1283, i32 -46;
    i32 %1285 = add i32 %1279, i32 %1284;
    [5 * i32]* %1286 = load [5 * i32]** %a1;
    [5 * i32]* %1287 = getelementptr &([5 * i32]* %1286)[i64 2];
    i32* %1288 = getelementptr &([5 * i32]* %1287)[i64 0][i64 2];
    i32 %1289 = load i32* %1288;
    i32 %1290 = mul i32 %1289, i32 -70;
    i32 %1291 = add i32 %1285, i32 %1290;
    [5 * i32]* %1292 = load [5 * i32]** %a1;
    [5 * i32]* %1293 = getelementptr &([5 * i32]* %1292)[i64 2];
    i32* %1294 = getelementptr &([5 * i32]* %1293)[i64 0][i64 3];
    i32 %1295 = load i32* %1294;
    i32 %1296 = mul i32 %1295, i32 37;
    i32 %1297 = add i32 %1291, i32 %1296;
    [5 * i32]* %1298 = load [5 * i32]** %a1;
    [5 * i32]* %1299 = getelementptr &([5 * i32]* %1298)[i64 2];
    i32* %1300 = getelementptr &([5 * i32]* %1299)[i64 0][i64 4];
    i32 %1301 = load i32* %1300;
    i32 %1302 = mul i32 %1301, i32 -73;
    i32 %1303 = add i32 %1297, i32 %1302;
    [5 * i32]* %1304 = load [5 * i32]** %a1;
    [5 * i32]* %1305 = getelementptr &([5 * i32]* %1304)[i64 3];
    i32* %1306 = getelementptr &([5 * i32]* %1305)[i64 0][i64 0];
    i32 %1307 = load i32* %1306;
    i32 %1308 = mul i32 %1307, i32 -34;
    i32 %1309 = add i32 %1303, i32 %1308;
    [5 * i32]* %1310 = load [5 * i32]** %a1;
    [5 * i32]* %1311 = getelementptr &([5 * i32]* %1310)[i64 3];
    i32* %1312 = getelementptr &([5 * i32]* %1311)[i64 0][i64 1];
    i32 %1313 = load i32* %1312;
    i32 %1314 = mul i32 %1313, i32 -87;
    i32 %1315 = add i32 %1309, i32 %1314;
    [5 * i32]* %1316 = load [5 * i32]** %a1;
    [5 * i32]* %1317 = getelementptr &([5 * i32]* %1316)[i64 3];
    i32* %1318 = getelementptr &([5 * i32]* %1317)[i64 0][i64 2];
    i32 %1319 = load i32* %1318;
    i32 %1320 = mul i32 %1319, i32 -75;
    i32 %1321 = add i32 %1315, i32 %1320;
    [5 * i32]* %1322 = load [5 * i32]** %a1;
    [5 * i32]* %1323 = getelementptr &([5 * i32]* %1322)[i64 3];
    i32* %1324 = getelementptr &([5 * i32]* %1323)[i64 0][i64 3];
    i32 %1325 = load i32* %1324;
    i32 %1326 = mul i32 %1325, i32 71;
    i32 %1327 = add i32 %1321, i32 %1326;
    [5 * i32]* %1328 = load [5 * i32]** %a1;
    [5 * i32]* %1329 = getelementptr &([5 * i32]* %1328)[i64 3];
    i32* %1330 = getelementptr &([5 * i32]* %1329)[i64 0][i64 4];
    i32 %1331 = load i32* %1330;
    i32 %1332 = mul i32 %1331, i32 -77;
    i32 %1333 = add i32 %1327, i32 %1332;
    [5 * i32]* %1334 = load [5 * i32]** %a1;
    [5 * i32]* %1335 = getelementptr &([5 * i32]* %1334)[i64 4];
    i32* %1336 = getelementptr &([5 * i32]* %1335)[i64 0][i64 0];
    i32 %1337 = load i32* %1336;
    i32 %1338 = mul i32 %1337, i32 53;
    i32 %1339 = add i32 %1333, i32 %1338;
    [5 * i32]* %1340 = load [5 * i32]** %a1;
    [5 * i32]* %1341 = getelementptr &([5 * i32]* %1340)[i64 4];
    i32* %1342 = getelementptr &([5 * i32]* %1341)[i64 0][i64 1];
    i32 %1343 = load i32* %1342;
    i32 %1344 = mul i32 %1343, i32 37;
    i32 %1345 = add i32 %1339, i32 %1344;
    [5 * i32]* %1346 = load [5 * i32]** %a1;
    [5 * i32]* %1347 = getelementptr &([5 * i32]* %1346)[i64 4];
    i32* %1348 = getelementptr &([5 * i32]* %1347)[i64 0][i64 2];
    i32 %1349 = load i32* %1348;
    i32 %1350 = mul i32 %1349, i32 -103;
    i32 %1351 = add i32 %1345, i32 %1350;
    [5 * i32]* %1352 = load [5 * i32]** %a1;
    [5 * i32]* %1353 = getelementptr &([5 * i32]* %1352)[i64 4];
    i32* %1354 = getelementptr &([5 * i32]* %1353)[i64 0][i64 3];
    i32 %1355 = load i32* %1354;
    i32 %1356 = mul i32 %1355, i32 -13;
    i32 %1357 = add i32 %1351, i32 %1356;
    [5 * i32]* %1358 = load [5 * i32]** %a1;
    [5 * i32]* %1359 = getelementptr &([5 * i32]* %1358)[i64 4];
    i32* %1360 = getelementptr &([5 * i32]* %1359)[i64 0][i64 4];
    i32 %1361 = load i32* %1360;
    i32 %1362 = mul i32 %1361, i32 -114;
    i32 %1363 = add i32 %1357, i32 %1362;
    i32 %1364 = call (i32) -> i32 @relu_reg(i32 %1363);
    i32 %1365 = mul i32 %1364, i32 -23;
    i32 %1366 = add i32 %1214, i32 %1365;
    [5 * i32]* %1367 = load [5 * i32]** %a1;
    [5 * i32]* %1368 = getelementptr &([5 * i32]* %1367)[i64 0];
    i32* %1369 = getelementptr &([5 * i32]* %1368)[i64 0][i64 0];
    i32 %1370 = load i32* %1369;
    i32 %1371 = mul i32 %1370, i32 67;
    [5 * i32]* %1372 = load [5 * i32]** %a1;
    [5 * i32]* %1373 = getelementptr &([5 * i32]* %1372)[i64 0];
    i32* %1374 = getelementptr &([5 * i32]* %1373)[i64 0][i64 1];
    i32 %1375 = load i32* %1374;
    i32 %1376 = mul i32 %1375, i32 42;
    i32 %1377 = add i32 %1371, i32 %1376;
    [5 * i32]* %1378 = load [5 * i32]** %a1;
    [5 * i32]* %1379 = getelementptr &([5 * i32]* %1378)[i64 0];
    i32* %1380 = getelementptr &([5 * i32]* %1379)[i64 0][i64 2];
    i32 %1381 = load i32* %1380;
    i32 %1382 = mul i32 %1381, i32 41;
    i32 %1383 = add i32 %1377, i32 %1382;
    [5 * i32]* %1384 = load [5 * i32]** %a1;
    [5 * i32]* %1385 = getelementptr &([5 * i32]* %1384)[i64 0];
    i32* %1386 = getelementptr &([5 * i32]* %1385)[i64 0][i64 3];
    i32 %1387 = load i32* %1386;
    i32 %1388 = mul i32 %1387, i32 -123;
    i32 %1389 = add i32 %1383, i32 %1388;
    [5 * i32]* %1390 = load [5 * i32]** %a1;
    [5 * i32]* %1391 = getelementptr &([5 * i32]* %1390)[i64 0];
    i32* %1392 = getelementptr &([5 * i32]* %1391)[i64 0][i64 4];
    i32 %1393 = load i32* %1392;
    i32 %1394 = mul i32 %1393, i32 -92;
    i32 %1395 = add i32 %1389, i32 %1394;
    [5 * i32]* %1396 = load [5 * i32]** %a1;
    [5 * i32]* %1397 = getelementptr &([5 * i32]* %1396)[i64 1];
    i32* %1398 = getelementptr &([5 * i32]* %1397)[i64 0][i64 0];
    i32 %1399 = load i32* %1398;
    i32 %1400 = mul i32 %1399, i32 10;
    i32 %1401 = add i32 %1395, i32 %1400;
    [5 * i32]* %1402 = load [5 * i32]** %a1;
    [5 * i32]* %1403 = getelementptr &([5 * i32]* %1402)[i64 1];
    i32* %1404 = getelementptr &([5 * i32]* %1403)[i64 0][i64 1];
    i32 %1405 = load i32* %1404;
    i32 %1406 = mul i32 %1405, i32 -77;
    i32 %1407 = add i32 %1401, i32 %1406;
    [5 * i32]* %1408 = load [5 * i32]** %a1;
    [5 * i32]* %1409 = getelementptr &([5 * i32]* %1408)[i64 1];
    i32* %1410 = getelementptr &([5 * i32]* %1409)[i64 0][i64 2];
    i32 %1411 = load i32* %1410;
    i32 %1412 = mul i32 %1411, i32 75;
    i32 %1413 = add i32 %1407, i32 %1412;
    [5 * i32]* %1414 = load [5 * i32]** %a1;
    [5 * i32]* %1415 = getelementptr &([5 * i32]* %1414)[i64 1];
    i32* %1416 = getelementptr &([5 * i32]* %1415)[i64 0][i64 3];
    i32 %1417 = load i32* %1416;
    i32 %1418 = mul i32 %1417, i32 96;
    i32 %1419 = add i32 %1413, i32 %1418;
    [5 * i32]* %1420 = load [5 * i32]** %a1;
    [5 * i32]* %1421 = getelementptr &([5 * i32]* %1420)[i64 1];
    i32* %1422 = getelementptr &([5 * i32]* %1421)[i64 0][i64 4];
    i32 %1423 = load i32* %1422;
    i32 %1424 = mul i32 %1423, i32 -51;
    i32 %1425 = add i32 %1419, i32 %1424;
    [5 * i32]* %1426 = load [5 * i32]** %a1;
    [5 * i32]* %1427 = getelementptr &([5 * i32]* %1426)[i64 2];
    i32* %1428 = getelementptr &([5 * i32]* %1427)[i64 0][i64 0];
    i32 %1429 = load i32* %1428;
    i32 %1430 = mul i32 %1429, i32 109;
    i32 %1431 = add i32 %1425, i32 %1430;
    [5 * i32]* %1432 = load [5 * i32]** %a1;
    [5 * i32]* %1433 = getelementptr &([5 * i32]* %1432)[i64 2];
    i32* %1434 = getelementptr &([5 * i32]* %1433)[i64 0][i64 1];
    i32 %1435 = load i32* %1434;
    i32 %1436 = mul i32 %1435, i32 -74;
    i32 %1437 = add i32 %1431, i32 %1436;
    [5 * i32]* %1438 = load [5 * i32]** %a1;
    [5 * i32]* %1439 = getelementptr &([5 * i32]* %1438)[i64 2];
    i32* %1440 = getelementptr &([5 * i32]* %1439)[i64 0][i64 2];
    i32 %1441 = load i32* %1440;
    i32 %1442 = mul i32 %1441, i32 -7;
    i32 %1443 = add i32 %1437, i32 %1442;
    [5 * i32]* %1444 = load [5 * i32]** %a1;
    [5 * i32]* %1445 = getelementptr &([5 * i32]* %1444)[i64 2];
    i32* %1446 = getelementptr &([5 * i32]* %1445)[i64 0][i64 3];
    i32 %1447 = load i32* %1446;
    i32 %1448 = mul i32 %1447, i32 -122;
    i32 %1449 = add i32 %1443, i32 %1448;
    [5 * i32]* %1450 = load [5 * i32]** %a1;
    [5 * i32]* %1451 = getelementptr &([5 * i32]* %1450)[i64 2];
    i32* %1452 = getelementptr &([5 * i32]* %1451)[i64 0][i64 4];
    i32 %1453 = load i32* %1452;
    i32 %1454 = mul i32 %1453, i32 67;
    i32 %1455 = add i32 %1449, i32 %1454;
    [5 * i32]* %1456 = load [5 * i32]** %a1;
    [5 * i32]* %1457 = getelementptr &([5 * i32]* %1456)[i64 3];
    i32* %1458 = getelementptr &([5 * i32]* %1457)[i64 0][i64 0];
    i32 %1459 = load i32* %1458;
    i32 %1460 = mul i32 %1459, i32 47;
    i32 %1461 = add i32 %1455, i32 %1460;
    [5 * i32]* %1462 = load [5 * i32]** %a1;
    [5 * i32]* %1463 = getelementptr &([5 * i32]* %1462)[i64 3];
    i32* %1464 = getelementptr &([5 * i32]* %1463)[i64 0][i64 1];
    i32 %1465 = load i32* %1464;
    i32 %1466 = mul i32 %1465, i32 22;
    i32 %1467 = add i32 %1461, i32 %1466;
    [5 * i32]* %1468 = load [5 * i32]** %a1;
    [5 * i32]* %1469 = getelementptr &([5 * i32]* %1468)[i64 3];
    i32* %1470 = getelementptr &([5 * i32]* %1469)[i64 0][i64 2];
    i32 %1471 = load i32* %1470;
    i32 %1472 = mul i32 %1471, i32 -68;
    i32 %1473 = add i32 %1467, i32 %1472;
    [5 * i32]* %1474 = load [5 * i32]** %a1;
    [5 * i32]* %1475 = getelementptr &([5 * i32]* %1474)[i64 3];
    i32* %1476 = getelementptr &([5 * i32]* %1475)[i64 0][i64 3];
    i32 %1477 = load i32* %1476;
    i32 %1478 = mul i32 %1477, i32 38;
    i32 %1479 = add i32 %1473, i32 %1478;
    [5 * i32]* %1480 = load [5 * i32]** %a1;
    [5 * i32]* %1481 = getelementptr &([5 * i32]* %1480)[i64 3];
    i32* %1482 = getelementptr &([5 * i32]* %1481)[i64 0][i64 4];
    i32 %1483 = load i32* %1482;
    i32 %1484 = mul i32 %1483, i32 29;
    i32 %1485 = add i32 %1479, i32 %1484;
    [5 * i32]* %1486 = load [5 * i32]** %a1;
    [5 * i32]* %1487 = getelementptr &([5 * i32]* %1486)[i64 4];
    i32* %1488 = getelementptr &([5 * i32]* %1487)[i64 0][i64 0];
    i32 %1489 = load i32* %1488;
    i32 %1490 = mul i32 %1489, i32 115;
    i32 %1491 = add i32 %1485, i32 %1490;
    [5 * i32]* %1492 = load [5 * i32]** %a1;
    [5 * i32]* %1493 = getelementptr &([5 * i32]* %1492)[i64 4];
    i32* %1494 = getelementptr &([5 * i32]* %1493)[i64 0][i64 1];
    i32 %1495 = load i32* %1494;
    i32 %1496 = mul i32 %1495, i32 -121;
    i32 %1497 = add i32 %1491, i32 %1496;
    [5 * i32]* %1498 = load [5 * i32]** %a1;
    [5 * i32]* %1499 = getelementptr &([5 * i32]* %1498)[i64 4];
    i32* %1500 = getelementptr &([5 * i32]* %1499)[i64 0][i64 2];
    i32 %1501 = load i32* %1500;
    i32 %1502 = mul i32 %1501, i32 36;
    i32 %1503 = add i32 %1497, i32 %1502;
    [5 * i32]* %1504 = load [5 * i32]** %a1;
    [5 * i32]* %1505 = getelementptr &([5 * i32]* %1504)[i64 4];
    i32* %1506 = getelementptr &([5 * i32]* %1505)[i64 0][i64 3];
    i32 %1507 = load i32* %1506;
    i32 %1508 = mul i32 %1507, i32 -49;
    i32 %1509 = add i32 %1503, i32 %1508;
    [5 * i32]* %1510 = load [5 * i32]** %a1;
    [5 * i32]* %1511 = getelementptr &([5 * i32]* %1510)[i64 4];
    i32* %1512 = getelementptr &([5 * i32]* %1511)[i64 0][i64 4];
    i32 %1513 = load i32* %1512;
    i32 %1514 = mul i32 %1513, i32 85;
    i32 %1515 = add i32 %1509, i32 %1514;
    i32 %1516 = call (i32) -> i32 @relu_reg(i32 %1515);
    i32 %1517 = mul i32 %1516, i32 46;
    i32 %1518 = add i32 %1366, i32 %1517;
    i1 %1519 = scmp gt i32 %1518, i32 0;
    i32 %1520 = zext i1 %1519 to i32;
    i1 %1521 = scmp neq i32 %1520, i32 0;
    cbr i1 %1521(prob = 0.5), ^if.then, ^b;
^if.then:
    ret i32 1;
^b:
    ret i32 0;
}
func @main() -> i32 { Entry } {
^entry:
    i32* %j = alloc i32;
    i32* %i = alloc i32;
    [5 * [5 * i32]]* %a = alloc [5 * [5 * i32]];
    i32* %N = alloc i32;
    i32 %0 = call () -> i32 @getint();
    store i32* %N with i32 %0;
    ubr ^while.header;
^while.header:
    i32 %1 = load i32* %N;
    i1 %2 = scmp gt i32 %1, i32 0;
    i32 %3 = zext i1 %2 to i32;
    i1 %4 = scmp neq i32 %3, i32 0;
    cbr i1 %4(prob = 0.97), ^while.body, ^b;
^while.body:
    store i32* %i with i32 0;
    ubr ^while.header1;
^b:
    ret i32 0;
^while.header1:
    i32 %5 = load i32* %i;
    i1 %6 = scmp lt i32 %5, i32 5;
    i32 %7 = zext i1 %6 to i32;
    i1 %8 = scmp neq i32 %7, i32 0;
    cbr i1 %8(prob = 0.97), ^while.body1, ^b1;
^while.body1:
    store i32* %j with i32 0;
    ubr ^while.header2;
^b1:
    [5 * i32]* %9 = getelementptr &([5 * [5 * i32]]* %a)[i64 0][i64 0];
    i32 %10 = call ([5 * i32]*) -> i32 @model([5 * i32]* %9);
    i1 %11 = scmp neq i32 %10, i32 0;
    cbr i1 %11(prob = 0.5), ^if.then, ^if.else;
^if.then:
    call (i32) -> void @putch(i32 99);
    call (i32) -> void @putch(i32 97);
    call (i32) -> void @putch(i32 116);
    call (i32) -> void @putch(i32 10);
    ubr ^b3;
^while.header2:
    i32 %12 = load i32* %j;
    i1 %13 = scmp lt i32 %12, i32 5;
    i32 %14 = zext i1 %13 to i32;
    i1 %15 = scmp neq i32 %14, i32 0;
    cbr i1 %15(prob = 0.97), ^while.body2, ^b2;
^if.else:
    call (i32) -> void @putch(i32 100);
    call (i32) -> void @putch(i32 111);
    call (i32) -> void @putch(i32 103);
    call (i32) -> void @putch(i32 10);
    ubr ^b3;
^while.body2:
    i32 %16 = load i32* %i;
    i64 %17 = sext i32 %16 to i64;
    [5 * i32]* %18 = getelementptr &([5 * [5 * i32]]* %a)[i64 0][i64 %17];
    i32 %19 = load i32* %j;
    i64 %20 = sext i32 %19 to i64;
    i32* %21 = getelementptr &([5 * i32]* %18)[i64 0][i64 %20];
    i32 %22 = call () -> i32 @getint();
    store i32* %21 with i32 %22;
    i32 %23 = load i32* %j;
    i32 %24 = add i32 %23, i32 1;
    store i32* %j with i32 %24;
    ubr ^while.header2;
^b2:
    i32 %25 = load i32* %i;
    i32 %26 = add i32 %25, i32 1;
    store i32* %i with i32 %26;
    ubr ^while.header1;
^b3:
    i32 %27 = load i32* %N;
    i32 %28 = sub i32 %27, i32 1;
    store i32* %N with i32 %28;
    ubr ^while.header;
}
