internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    [10 * i32]* %a = alloc [10 * i32];
    i32* %0 = getelementptr &([10 * i32]* %a)[i64 0][i64 0];
    store i32* %0 with i32 4;
    i32* %1 = getelementptr &([10 * i32]* %a)[i64 0][i64 1];
    store i32* %1 with i32 3;
    i32* %2 = getelementptr &([10 * i32]* %a)[i64 0][i64 2];
    store i32* %2 with i32 9;
    i32* %3 = getelementptr &([10 * i32]* %a)[i64 0][i64 3];
    store i32* %3 with i32 2;
    i32* %4 = getelementptr &([10 * i32]* %a)[i64 0][i64 4];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([10 * i32]* %a)[i64 0][i64 5];
    store i32* %5 with i32 1;
    i32* %6 = getelementptr &([10 * i32]* %a)[i64 0][i64 6];
    store i32* %6 with i32 6;
    i32* %7 = getelementptr &([10 * i32]* %a)[i64 0][i64 7];
    store i32* %7 with i32 5;
    i32* %8 = getelementptr &([10 * i32]* %a)[i64 0][i64 8];
    store i32* %8 with i32 7;
    i32* %9 = getelementptr &([10 * i32]* %a)[i64 0][i64 9];
    store i32* %9 with i32 8;
    ubr ^while.header;
  ^while.header:
    i32 %10 = phi [^entry, i32 0] [^b, i32 %12] [^if.then, i32 %12];
    i1 %11 = scmp lt i32 %10, i32 9;
    cbr i1 %11(prob = 0.97), ^while.body, ^while.body1;
  ^while.body:
    i32 %12 = add i32 %10, i32 1;
    i1 %13 = scmp lt i32 %12, i32 10;
    cbr i1 %13(prob = 0.97), ^super.header, ^b;
  ^while.body1:
    i32 %14 = phi [^while.header, i32 0] [^while.body1, i32 %17];
    i32* %15 = getelementptr &([10 * i32]* %a)[i64 0][i32 %14];
    i32 %16 = load i32* %15;
    call (i32) -> void @putint(i32 %16);
    call (i32) -> void @putch(i32 10);
    i32 %17 = add i32 %14, i32 1;
    i1 %18 = scmp lt i32 %17, i32 10;
    cbr i1 %18(prob = 0.9), ^while.body1, ^b1;
  ^super.header:
    i32 %19 = phi [^while.body, i32 %10] [^while.body2, i32 %135];
    i32 %20 = phi [^while.body, i32 %12] [^while.body2, i32 %21];
    i32 %21 = add i32 %20, i32 16;
    i1 %22 = scmp lt i32 %21, i32 10;
    cbr i1 %22(prob = 0.67), ^while.body2, ^super.header1;
  ^b:
    i32 %23 = phi [^while.body, i32 %10] [^while.body5, i32 %377];
    i1 %24 = scmp neq i32 %23, i32 %10;
    cbr i1 %24(prob = 0.5), ^if.then, ^while.header;
  ^b1:
    ret i32 0;
  ^while.body2:
    i32* %25 = getelementptr &(i32* %0)[i32 %19];
    i32 %26 = load i32* %25;
    i32* %27 = getelementptr &(i32* %0)[i32 %20];
    i32 %28 = load i32* %27;
    i1 %29 = scmp gt i32 %26, i32 %28;
    i32 %30 = select i1 %29 ? i32 %20 : i32 %19;
    i32* %31 = getelementptr &(i32* %0)[i32 %30];
    i32 %32 = load i32* %31;
    i32 %33 = add i32 %20, i32 1;
    i32* %34 = getelementptr &(i32* %0)[i32 %33];
    i32 %35 = load i32* %34;
    i1 %36 = scmp gt i32 %32, i32 %35;
    i32 %37 = select i1 %36 ? i32 %33 : i32 %30;
    i32* %38 = getelementptr &(i32* %0)[i32 %37];
    i32 %39 = load i32* %38;
    i32 %40 = add i32 %20, i32 2;
    i32* %41 = getelementptr &(i32* %0)[i32 %40];
    i32 %42 = load i32* %41;
    i1 %43 = scmp gt i32 %39, i32 %42;
    i32 %44 = select i1 %43 ? i32 %40 : i32 %37;
    i32* %45 = getelementptr &(i32* %0)[i32 %44];
    i32 %46 = load i32* %45;
    i32 %47 = add i32 %20, i32 3;
    i32* %48 = getelementptr &(i32* %0)[i32 %47];
    i32 %49 = load i32* %48;
    i1 %50 = scmp gt i32 %46, i32 %49;
    i32 %51 = select i1 %50 ? i32 %47 : i32 %44;
    i32* %52 = getelementptr &(i32* %0)[i32 %51];
    i32 %53 = load i32* %52;
    i32 %54 = add i32 %20, i32 4;
    i32* %55 = getelementptr &(i32* %0)[i32 %54];
    i32 %56 = load i32* %55;
    i1 %57 = scmp gt i32 %53, i32 %56;
    i32 %58 = select i1 %57 ? i32 %54 : i32 %51;
    i32* %59 = getelementptr &(i32* %0)[i32 %58];
    i32 %60 = load i32* %59;
    i32 %61 = add i32 %20, i32 5;
    i32* %62 = getelementptr &(i32* %0)[i32 %61];
    i32 %63 = load i32* %62;
    i1 %64 = scmp gt i32 %60, i32 %63;
    i32 %65 = select i1 %64 ? i32 %61 : i32 %58;
    i32* %66 = getelementptr &(i32* %0)[i32 %65];
    i32 %67 = load i32* %66;
    i32 %68 = add i32 %20, i32 6;
    i32* %69 = getelementptr &(i32* %0)[i32 %68];
    i32 %70 = load i32* %69;
    i1 %71 = scmp gt i32 %67, i32 %70;
    i32 %72 = select i1 %71 ? i32 %68 : i32 %65;
    i32* %73 = getelementptr &(i32* %0)[i32 %72];
    i32 %74 = load i32* %73;
    i32 %75 = add i32 %20, i32 7;
    i32* %76 = getelementptr &(i32* %0)[i32 %75];
    i32 %77 = load i32* %76;
    i1 %78 = scmp gt i32 %74, i32 %77;
    i32 %79 = select i1 %78 ? i32 %75 : i32 %72;
    i32* %80 = getelementptr &(i32* %0)[i32 %79];
    i32 %81 = load i32* %80;
    i32 %82 = add i32 %20, i32 8;
    i32* %83 = getelementptr &(i32* %0)[i32 %82];
    i32 %84 = load i32* %83;
    i1 %85 = scmp gt i32 %81, i32 %84;
    i32 %86 = select i1 %85 ? i32 %82 : i32 %79;
    i32* %87 = getelementptr &(i32* %0)[i32 %86];
    i32 %88 = load i32* %87;
    i32 %89 = add i32 %20, i32 9;
    i32* %90 = getelementptr &(i32* %0)[i32 %89];
    i32 %91 = load i32* %90;
    i1 %92 = scmp gt i32 %88, i32 %91;
    i32 %93 = select i1 %92 ? i32 %89 : i32 %86;
    i32* %94 = getelementptr &(i32* %0)[i32 %93];
    i32 %95 = load i32* %94;
    i32 %96 = add i32 %20, i32 10;
    i32* %97 = getelementptr &(i32* %0)[i32 %96];
    i32 %98 = load i32* %97;
    i1 %99 = scmp gt i32 %95, i32 %98;
    i32 %100 = select i1 %99 ? i32 %96 : i32 %93;
    i32* %101 = getelementptr &(i32* %0)[i32 %100];
    i32 %102 = load i32* %101;
    i32 %103 = add i32 %20, i32 11;
    i32* %104 = getelementptr &(i32* %0)[i32 %103];
    i32 %105 = load i32* %104;
    i1 %106 = scmp gt i32 %102, i32 %105;
    i32 %107 = select i1 %106 ? i32 %103 : i32 %100;
    i32* %108 = getelementptr &(i32* %0)[i32 %107];
    i32 %109 = load i32* %108;
    i32 %110 = add i32 %20, i32 12;
    i32* %111 = getelementptr &(i32* %0)[i32 %110];
    i32 %112 = load i32* %111;
    i1 %113 = scmp gt i32 %109, i32 %112;
    i32 %114 = select i1 %113 ? i32 %110 : i32 %107;
    i32* %115 = getelementptr &(i32* %0)[i32 %114];
    i32 %116 = load i32* %115;
    i32 %117 = add i32 %20, i32 13;
    i32* %118 = getelementptr &(i32* %0)[i32 %117];
    i32 %119 = load i32* %118;
    i1 %120 = scmp gt i32 %116, i32 %119;
    i32 %121 = select i1 %120 ? i32 %117 : i32 %114;
    i32* %122 = getelementptr &(i32* %0)[i32 %121];
    i32 %123 = load i32* %122;
    i32 %124 = add i32 %20, i32 14;
    i32* %125 = getelementptr &(i32* %0)[i32 %124];
    i32 %126 = load i32* %125;
    i1 %127 = scmp gt i32 %123, i32 %126;
    i32 %128 = select i1 %127 ? i32 %124 : i32 %121;
    i32* %129 = getelementptr &(i32* %0)[i32 %128];
    i32 %130 = load i32* %129;
    i32 %131 = add i32 %20, i32 15;
    i32* %132 = getelementptr &(i32* %0)[i32 %131];
    i32 %133 = load i32* %132;
    i1 %134 = scmp gt i32 %130, i32 %133;
    i32 %135 = select i1 %134 ? i32 %131 : i32 %128;
    ubr ^super.header;
  ^if.then:
    i32* %136 = getelementptr &(i32* %0)[i32 %23];
    i32 %137 = load i32* %136;
    i32* %138 = getelementptr &(i32* %0)[i32 %10];
    i32 %139 = load i32* %138;
    store i32* %136 with i32 %139;
    store i32* %138 with i32 %137;
    ubr ^while.header;
  ^super.header1:
    i32 %140 = phi [^super.header, i32 %19] [^while.body3, i32 %254];
    i32 %141 = phi [^super.header, i32 %20] [^while.body3, i32 %142];
    i32 %142 = add i32 %141, i32 16;
    i1 %143 = scmp lt i32 %142, i32 10;
    cbr i1 %143(prob = 0.67), ^while.body3, ^super.header2;
  ^while.body3:
    i32* %144 = getelementptr &(i32* %0)[i32 %140];
    i32 %145 = load i32* %144;
    i32* %146 = getelementptr &(i32* %0)[i32 %141];
    i32 %147 = load i32* %146;
    i1 %148 = scmp gt i32 %145, i32 %147;
    i32 %149 = select i1 %148 ? i32 %141 : i32 %140;
    i32* %150 = getelementptr &(i32* %0)[i32 %149];
    i32 %151 = load i32* %150;
    i32 %152 = add i32 %141, i32 1;
    i32* %153 = getelementptr &(i32* %0)[i32 %152];
    i32 %154 = load i32* %153;
    i1 %155 = scmp gt i32 %151, i32 %154;
    i32 %156 = select i1 %155 ? i32 %152 : i32 %149;
    i32* %157 = getelementptr &(i32* %0)[i32 %156];
    i32 %158 = load i32* %157;
    i32 %159 = add i32 %141, i32 2;
    i32* %160 = getelementptr &(i32* %0)[i32 %159];
    i32 %161 = load i32* %160;
    i1 %162 = scmp gt i32 %158, i32 %161;
    i32 %163 = select i1 %162 ? i32 %159 : i32 %156;
    i32* %164 = getelementptr &(i32* %0)[i32 %163];
    i32 %165 = load i32* %164;
    i32 %166 = add i32 %141, i32 3;
    i32* %167 = getelementptr &(i32* %0)[i32 %166];
    i32 %168 = load i32* %167;
    i1 %169 = scmp gt i32 %165, i32 %168;
    i32 %170 = select i1 %169 ? i32 %166 : i32 %163;
    i32* %171 = getelementptr &(i32* %0)[i32 %170];
    i32 %172 = load i32* %171;
    i32 %173 = add i32 %141, i32 4;
    i32* %174 = getelementptr &(i32* %0)[i32 %173];
    i32 %175 = load i32* %174;
    i1 %176 = scmp gt i32 %172, i32 %175;
    i32 %177 = select i1 %176 ? i32 %173 : i32 %170;
    i32* %178 = getelementptr &(i32* %0)[i32 %177];
    i32 %179 = load i32* %178;
    i32 %180 = add i32 %141, i32 5;
    i32* %181 = getelementptr &(i32* %0)[i32 %180];
    i32 %182 = load i32* %181;
    i1 %183 = scmp gt i32 %179, i32 %182;
    i32 %184 = select i1 %183 ? i32 %180 : i32 %177;
    i32* %185 = getelementptr &(i32* %0)[i32 %184];
    i32 %186 = load i32* %185;
    i32 %187 = add i32 %141, i32 6;
    i32* %188 = getelementptr &(i32* %0)[i32 %187];
    i32 %189 = load i32* %188;
    i1 %190 = scmp gt i32 %186, i32 %189;
    i32 %191 = select i1 %190 ? i32 %187 : i32 %184;
    i32* %192 = getelementptr &(i32* %0)[i32 %191];
    i32 %193 = load i32* %192;
    i32 %194 = add i32 %141, i32 7;
    i32* %195 = getelementptr &(i32* %0)[i32 %194];
    i32 %196 = load i32* %195;
    i1 %197 = scmp gt i32 %193, i32 %196;
    i32 %198 = select i1 %197 ? i32 %194 : i32 %191;
    i32* %199 = getelementptr &(i32* %0)[i32 %198];
    i32 %200 = load i32* %199;
    i32 %201 = add i32 %141, i32 8;
    i32* %202 = getelementptr &(i32* %0)[i32 %201];
    i32 %203 = load i32* %202;
    i1 %204 = scmp gt i32 %200, i32 %203;
    i32 %205 = select i1 %204 ? i32 %201 : i32 %198;
    i32* %206 = getelementptr &(i32* %0)[i32 %205];
    i32 %207 = load i32* %206;
    i32 %208 = add i32 %141, i32 9;
    i32* %209 = getelementptr &(i32* %0)[i32 %208];
    i32 %210 = load i32* %209;
    i1 %211 = scmp gt i32 %207, i32 %210;
    i32 %212 = select i1 %211 ? i32 %208 : i32 %205;
    i32* %213 = getelementptr &(i32* %0)[i32 %212];
    i32 %214 = load i32* %213;
    i32 %215 = add i32 %141, i32 10;
    i32* %216 = getelementptr &(i32* %0)[i32 %215];
    i32 %217 = load i32* %216;
    i1 %218 = scmp gt i32 %214, i32 %217;
    i32 %219 = select i1 %218 ? i32 %215 : i32 %212;
    i32* %220 = getelementptr &(i32* %0)[i32 %219];
    i32 %221 = load i32* %220;
    i32 %222 = add i32 %141, i32 11;
    i32* %223 = getelementptr &(i32* %0)[i32 %222];
    i32 %224 = load i32* %223;
    i1 %225 = scmp gt i32 %221, i32 %224;
    i32 %226 = select i1 %225 ? i32 %222 : i32 %219;
    i32* %227 = getelementptr &(i32* %0)[i32 %226];
    i32 %228 = load i32* %227;
    i32 %229 = add i32 %141, i32 12;
    i32* %230 = getelementptr &(i32* %0)[i32 %229];
    i32 %231 = load i32* %230;
    i1 %232 = scmp gt i32 %228, i32 %231;
    i32 %233 = select i1 %232 ? i32 %229 : i32 %226;
    i32* %234 = getelementptr &(i32* %0)[i32 %233];
    i32 %235 = load i32* %234;
    i32 %236 = add i32 %141, i32 13;
    i32* %237 = getelementptr &(i32* %0)[i32 %236];
    i32 %238 = load i32* %237;
    i1 %239 = scmp gt i32 %235, i32 %238;
    i32 %240 = select i1 %239 ? i32 %236 : i32 %233;
    i32* %241 = getelementptr &(i32* %0)[i32 %240];
    i32 %242 = load i32* %241;
    i32 %243 = add i32 %141, i32 14;
    i32* %244 = getelementptr &(i32* %0)[i32 %243];
    i32 %245 = load i32* %244;
    i1 %246 = scmp gt i32 %242, i32 %245;
    i32 %247 = select i1 %246 ? i32 %243 : i32 %240;
    i32* %248 = getelementptr &(i32* %0)[i32 %247];
    i32 %249 = load i32* %248;
    i32 %250 = add i32 %141, i32 15;
    i32* %251 = getelementptr &(i32* %0)[i32 %250];
    i32 %252 = load i32* %251;
    i1 %253 = scmp gt i32 %249, i32 %252;
    i32 %254 = select i1 %253 ? i32 %250 : i32 %247;
    ubr ^super.header1;
  ^super.header2:
    i32 %255 = phi [^super.header1, i32 %140] [^while.body4, i32 %369];
    i32 %256 = phi [^super.header1, i32 %141] [^while.body4, i32 %257];
    i32 %257 = add i32 %256, i32 16;
    i1 %258 = scmp lt i32 %257, i32 10;
    cbr i1 %258(prob = 0.67), ^while.body4, ^while.body5;
  ^while.body4:
    i32* %259 = getelementptr &(i32* %0)[i32 %255];
    i32 %260 = load i32* %259;
    i32* %261 = getelementptr &(i32* %0)[i32 %256];
    i32 %262 = load i32* %261;
    i1 %263 = scmp gt i32 %260, i32 %262;
    i32 %264 = select i1 %263 ? i32 %256 : i32 %255;
    i32* %265 = getelementptr &(i32* %0)[i32 %264];
    i32 %266 = load i32* %265;
    i32 %267 = add i32 %256, i32 1;
    i32* %268 = getelementptr &(i32* %0)[i32 %267];
    i32 %269 = load i32* %268;
    i1 %270 = scmp gt i32 %266, i32 %269;
    i32 %271 = select i1 %270 ? i32 %267 : i32 %264;
    i32* %272 = getelementptr &(i32* %0)[i32 %271];
    i32 %273 = load i32* %272;
    i32 %274 = add i32 %256, i32 2;
    i32* %275 = getelementptr &(i32* %0)[i32 %274];
    i32 %276 = load i32* %275;
    i1 %277 = scmp gt i32 %273, i32 %276;
    i32 %278 = select i1 %277 ? i32 %274 : i32 %271;
    i32* %279 = getelementptr &(i32* %0)[i32 %278];
    i32 %280 = load i32* %279;
    i32 %281 = add i32 %256, i32 3;
    i32* %282 = getelementptr &(i32* %0)[i32 %281];
    i32 %283 = load i32* %282;
    i1 %284 = scmp gt i32 %280, i32 %283;
    i32 %285 = select i1 %284 ? i32 %281 : i32 %278;
    i32* %286 = getelementptr &(i32* %0)[i32 %285];
    i32 %287 = load i32* %286;
    i32 %288 = add i32 %256, i32 4;
    i32* %289 = getelementptr &(i32* %0)[i32 %288];
    i32 %290 = load i32* %289;
    i1 %291 = scmp gt i32 %287, i32 %290;
    i32 %292 = select i1 %291 ? i32 %288 : i32 %285;
    i32* %293 = getelementptr &(i32* %0)[i32 %292];
    i32 %294 = load i32* %293;
    i32 %295 = add i32 %256, i32 5;
    i32* %296 = getelementptr &(i32* %0)[i32 %295];
    i32 %297 = load i32* %296;
    i1 %298 = scmp gt i32 %294, i32 %297;
    i32 %299 = select i1 %298 ? i32 %295 : i32 %292;
    i32* %300 = getelementptr &(i32* %0)[i32 %299];
    i32 %301 = load i32* %300;
    i32 %302 = add i32 %256, i32 6;
    i32* %303 = getelementptr &(i32* %0)[i32 %302];
    i32 %304 = load i32* %303;
    i1 %305 = scmp gt i32 %301, i32 %304;
    i32 %306 = select i1 %305 ? i32 %302 : i32 %299;
    i32* %307 = getelementptr &(i32* %0)[i32 %306];
    i32 %308 = load i32* %307;
    i32 %309 = add i32 %256, i32 7;
    i32* %310 = getelementptr &(i32* %0)[i32 %309];
    i32 %311 = load i32* %310;
    i1 %312 = scmp gt i32 %308, i32 %311;
    i32 %313 = select i1 %312 ? i32 %309 : i32 %306;
    i32* %314 = getelementptr &(i32* %0)[i32 %313];
    i32 %315 = load i32* %314;
    i32 %316 = add i32 %256, i32 8;
    i32* %317 = getelementptr &(i32* %0)[i32 %316];
    i32 %318 = load i32* %317;
    i1 %319 = scmp gt i32 %315, i32 %318;
    i32 %320 = select i1 %319 ? i32 %316 : i32 %313;
    i32* %321 = getelementptr &(i32* %0)[i32 %320];
    i32 %322 = load i32* %321;
    i32 %323 = add i32 %256, i32 9;
    i32* %324 = getelementptr &(i32* %0)[i32 %323];
    i32 %325 = load i32* %324;
    i1 %326 = scmp gt i32 %322, i32 %325;
    i32 %327 = select i1 %326 ? i32 %323 : i32 %320;
    i32* %328 = getelementptr &(i32* %0)[i32 %327];
    i32 %329 = load i32* %328;
    i32 %330 = add i32 %256, i32 10;
    i32* %331 = getelementptr &(i32* %0)[i32 %330];
    i32 %332 = load i32* %331;
    i1 %333 = scmp gt i32 %329, i32 %332;
    i32 %334 = select i1 %333 ? i32 %330 : i32 %327;
    i32* %335 = getelementptr &(i32* %0)[i32 %334];
    i32 %336 = load i32* %335;
    i32 %337 = add i32 %256, i32 11;
    i32* %338 = getelementptr &(i32* %0)[i32 %337];
    i32 %339 = load i32* %338;
    i1 %340 = scmp gt i32 %336, i32 %339;
    i32 %341 = select i1 %340 ? i32 %337 : i32 %334;
    i32* %342 = getelementptr &(i32* %0)[i32 %341];
    i32 %343 = load i32* %342;
    i32 %344 = add i32 %256, i32 12;
    i32* %345 = getelementptr &(i32* %0)[i32 %344];
    i32 %346 = load i32* %345;
    i1 %347 = scmp gt i32 %343, i32 %346;
    i32 %348 = select i1 %347 ? i32 %344 : i32 %341;
    i32* %349 = getelementptr &(i32* %0)[i32 %348];
    i32 %350 = load i32* %349;
    i32 %351 = add i32 %256, i32 13;
    i32* %352 = getelementptr &(i32* %0)[i32 %351];
    i32 %353 = load i32* %352;
    i1 %354 = scmp gt i32 %350, i32 %353;
    i32 %355 = select i1 %354 ? i32 %351 : i32 %348;
    i32* %356 = getelementptr &(i32* %0)[i32 %355];
    i32 %357 = load i32* %356;
    i32 %358 = add i32 %256, i32 14;
    i32* %359 = getelementptr &(i32* %0)[i32 %358];
    i32 %360 = load i32* %359;
    i1 %361 = scmp gt i32 %357, i32 %360;
    i32 %362 = select i1 %361 ? i32 %358 : i32 %355;
    i32* %363 = getelementptr &(i32* %0)[i32 %362];
    i32 %364 = load i32* %363;
    i32 %365 = add i32 %256, i32 15;
    i32* %366 = getelementptr &(i32* %0)[i32 %365];
    i32 %367 = load i32* %366;
    i1 %368 = scmp gt i32 %364, i32 %367;
    i32 %369 = select i1 %368 ? i32 %365 : i32 %362;
    ubr ^super.header2;
  ^while.body5:
    i32 %370 = phi [^super.header2, i32 %255] [^while.body5, i32 %377];
    i32 %371 = phi [^super.header2, i32 %256] [^while.body5, i32 %378];
    i32* %372 = getelementptr &(i32* %0)[i32 %370];
    i32 %373 = load i32* %372;
    i32* %374 = getelementptr &(i32* %0)[i32 %371];
    i32 %375 = load i32* %374;
    i1 %376 = scmp gt i32 %373, i32 %375;
    i32 %377 = select i1 %376 ? i32 %371 : i32 %370;
    i32 %378 = add i32 %371, i32 1;
    i1 %379 = scmp lt i32 %378, i32 10;
    cbr i1 %379(prob = 0.97), ^while.body5, ^b;
}
