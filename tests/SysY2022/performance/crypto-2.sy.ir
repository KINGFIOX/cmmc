internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putarray(i32, i32*) -> void { NoMemoryWrite };
internal func @starttime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal [32768 * i32]* @buffer, align 8 { Flexible };
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [80 * i32]* %words = alloc [80 * i32], align 8;
    [5 * i32]* %output_b = alloc [5 * i32], align 8;
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    call (i32) -> void @starttime(i32 161);
    i1 %2 = icmp sgt i32 %1, i32 0;
    i32* %3 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 0];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 1];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 2];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 3];
    store i32* %6 with i32 0;
    i32* %7 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 4];
    store i32* %7 with i32 0;
    [32768 * i32]* %8 = ptrcast [32768 * i32]* @buffer to [32768 * i32]*;
    i32* %9 = getelementptr &([32768 * i32]* %8)[i64 0][i64 0];
    i32* %10 = getelementptr &([80 * i32]* %words)[i64 0][i64 0];
    i32* %11 = getelementptr &([80 * i32]* %words)[i64 0][i64 1];
    i32* %12 = getelementptr &([80 * i32]* %words)[i64 0][i64 2];
    i32* %13 = getelementptr &([80 * i32]* %words)[i64 0][i64 3];
    i32* %14 = getelementptr &([80 * i32]* %words)[i64 0][i64 4];
    i32* %15 = getelementptr &([80 * i32]* %words)[i64 0][i64 5];
    i32* %16 = getelementptr &([80 * i32]* %words)[i64 0][i64 6];
    i32* %17 = getelementptr &([80 * i32]* %words)[i64 0][i64 7];
    i32* %18 = getelementptr &([80 * i32]* %words)[i64 0][i64 8];
    i32* %19 = getelementptr &([80 * i32]* %words)[i64 0][i64 9];
    i32* %20 = getelementptr &([80 * i32]* %words)[i64 0][i64 10];
    i32* %21 = getelementptr &([80 * i32]* %words)[i64 0][i64 11];
    i32* %22 = getelementptr &([80 * i32]* %words)[i64 0][i64 12];
    i32* %23 = getelementptr &([80 * i32]* %words)[i64 0][i64 13];
    i32* %24 = getelementptr &([80 * i32]* %words)[i64 0][i64 14];
    i32* %25 = getelementptr &([80 * i32]* %words)[i64 0][i64 15];
    i32* %26 = getelementptr &([80 * i32]* %words)[i64 0][i64 16];
    i32* %27 = getelementptr &([80 * i32]* %words)[i64 0][i64 17];
    i32* %28 = getelementptr &([80 * i32]* %words)[i64 0][i64 18];
    i32* %29 = getelementptr &([80 * i32]* %words)[i64 0][i64 19];
    i32* %30 = getelementptr &([80 * i32]* %words)[i64 0][i64 20];
    i32* %31 = getelementptr &([80 * i32]* %words)[i64 0][i64 21];
    i32* %32 = getelementptr &([80 * i32]* %words)[i64 0][i64 22];
    i32* %33 = getelementptr &([80 * i32]* %words)[i64 0][i64 23];
    i32* %34 = getelementptr &([80 * i32]* %words)[i64 0][i64 24];
    i32* %35 = getelementptr &([80 * i32]* %words)[i64 0][i64 25];
    i32* %36 = getelementptr &([80 * i32]* %words)[i64 0][i64 26];
    i32* %37 = getelementptr &([80 * i32]* %words)[i64 0][i64 27];
    i32* %38 = getelementptr &([80 * i32]* %words)[i64 0][i64 28];
    i32* %39 = getelementptr &([80 * i32]* %words)[i64 0][i64 29];
    i32* %40 = getelementptr &([80 * i32]* %words)[i64 0][i64 30];
    i32* %41 = getelementptr &([80 * i32]* %words)[i64 0][i64 31];
    i32* %42 = getelementptr &([80 * i32]* %words)[i64 0][i64 32];
    i32* %43 = getelementptr &([80 * i32]* %words)[i64 0][i64 33];
    i32* %44 = getelementptr &([80 * i32]* %words)[i64 0][i64 34];
    i32* %45 = getelementptr &([80 * i32]* %words)[i64 0][i64 35];
    i32* %46 = getelementptr &([80 * i32]* %words)[i64 0][i64 36];
    i32* %47 = getelementptr &([80 * i32]* %words)[i64 0][i64 37];
    i32* %48 = getelementptr &([80 * i32]* %words)[i64 0][i64 38];
    i32* %49 = getelementptr &([80 * i32]* %words)[i64 0][i64 39];
    i32* %50 = getelementptr &([80 * i32]* %words)[i64 0][i64 40];
    i32* %51 = getelementptr &([80 * i32]* %words)[i64 0][i64 41];
    i32* %52 = getelementptr &([80 * i32]* %words)[i64 0][i64 42];
    i32* %53 = getelementptr &([80 * i32]* %words)[i64 0][i64 43];
    i32* %54 = getelementptr &([80 * i32]* %words)[i64 0][i64 44];
    i32* %55 = getelementptr &([80 * i32]* %words)[i64 0][i64 45];
    i32* %56 = getelementptr &([80 * i32]* %words)[i64 0][i64 46];
    i32* %57 = getelementptr &([80 * i32]* %words)[i64 0][i64 47];
    i32* %58 = getelementptr &([80 * i32]* %words)[i64 0][i64 48];
    i32* %59 = getelementptr &([80 * i32]* %words)[i64 0][i64 49];
    i32* %60 = getelementptr &([80 * i32]* %words)[i64 0][i64 50];
    i32* %61 = getelementptr &([80 * i32]* %words)[i64 0][i64 51];
    i32* %62 = getelementptr &([80 * i32]* %words)[i64 0][i64 52];
    i32* %63 = getelementptr &([80 * i32]* %words)[i64 0][i64 53];
    i32* %64 = getelementptr &([80 * i32]* %words)[i64 0][i64 54];
    i32* %65 = getelementptr &([80 * i32]* %words)[i64 0][i64 55];
    i32* %66 = getelementptr &([80 * i32]* %words)[i64 0][i64 56];
    i32* %67 = getelementptr &([80 * i32]* %words)[i64 0][i64 57];
    i32* %68 = getelementptr &([80 * i32]* %words)[i64 0][i64 58];
    i32* %69 = getelementptr &([80 * i32]* %words)[i64 0][i64 59];
    i32* %70 = getelementptr &([80 * i32]* %words)[i64 0][i64 60];
    i32* %71 = getelementptr &([80 * i32]* %words)[i64 0][i64 61];
    i32* %72 = getelementptr &([80 * i32]* %words)[i64 0][i64 62];
    i32* %73 = getelementptr &([80 * i32]* %words)[i64 0][i64 63];
    i32* %74 = getelementptr &([80 * i32]* %words)[i64 0][i64 64];
    i32* %75 = getelementptr &([80 * i32]* %words)[i64 0][i64 65];
    i32* %76 = getelementptr &([80 * i32]* %words)[i64 0][i64 66];
    i32* %77 = getelementptr &([80 * i32]* %words)[i64 0][i64 67];
    i32* %78 = getelementptr &([80 * i32]* %words)[i64 0][i64 68];
    i32* %79 = getelementptr &([80 * i32]* %words)[i64 0][i64 69];
    i32* %80 = getelementptr &([80 * i32]* %words)[i64 0][i64 70];
    i32* %81 = getelementptr &([80 * i32]* %words)[i64 0][i64 71];
    i32* %82 = getelementptr &([80 * i32]* %words)[i64 0][i64 72];
    i32* %83 = getelementptr &([80 * i32]* %words)[i64 0][i64 73];
    i32* %84 = getelementptr &([80 * i32]* %words)[i64 0][i64 74];
    i32* %85 = getelementptr &([80 * i32]* %words)[i64 0][i64 75];
    i32* %86 = getelementptr &([80 * i32]* %words)[i64 0][i64 76];
    i32* %87 = getelementptr &([80 * i32]* %words)[i64 0][i64 77];
    i32* %88 = getelementptr &([80 * i32]* %words)[i64 0][i64 78];
    i32* %89 = getelementptr &([80 * i32]* %words)[i64 0][i64 79];
    i32* %90 = getelementptr &([32768 * i32]* %8)[i64 0][i64 32000];
    i32* %91 = getelementptr &([32768 * i32]* %8)[i64 0][i64 32001];
    cbr i1 %2(prob = 0.984615), ^while.body, ^b;
  ^while.body:
    i32 %92 = phi [^entry, i32 %0] [^b4, i32 %120];
    i32 %93 = phi [^entry, i32 %1] [^b4, i32 %343];
    ubr ^while.body1;
  ^b:
    call (i32) -> void @stoptime(i32 184);
    call (i32, i32*) -> void @putarray(i32 5, i32* %3);
    ret i32 0;
  ^while.body1:
    i32 %94 = phi [^while.body, i32 %92] [^while.body1, i32 %120];
    i32 %95 = phi [^while.body, i32 0] [^while.body1, i32 %144];
    i32 %96 = mul i32 %94, i32 8193;
    i32 %97 = sdiv i32 %96, i32 131072;
    i32 %98 = add i32 %96, i32 %97;
    i32 %99 = mul i32 %98, i32 270369;
    i32 %100 = sdiv i32 %99, i32 131072;
    i32 %101 = add i32 %99, i32 %100;
    i32 %102 = mul i32 %101, i32 270369;
    i32 %103 = sdiv i32 %102, i32 131072;
    i32 %104 = add i32 %102, i32 %103;
    i32 %105 = mul i32 %104, i32 270369;
    i32 %106 = sdiv i32 %105, i32 131072;
    i32 %107 = add i32 %105, i32 %106;
    i32 %108 = mul i32 %107, i32 270369;
    i32 %109 = sdiv i32 %108, i32 131072;
    i32 %110 = add i32 %108, i32 %109;
    i32 %111 = mul i32 %110, i32 270369;
    i32 %112 = sdiv i32 %111, i32 131072;
    i32 %113 = add i32 %111, i32 %112;
    i32 %114 = mul i32 %113, i32 270369;
    i32 %115 = sdiv i32 %114, i32 131072;
    i32 %116 = add i32 %114, i32 %115;
    i32 %117 = mul i32 %116, i32 270369;
    i32 %118 = sdiv i32 %117, i32 131072;
    i32 %119 = add i32 %117, i32 %118;
    i32 %120 = mul i32 %119, i32 33;
    i32 %121 = srem i32 %120, i32 256;
    i32 %122 = mul i32 %116, i32 33;
    i32 %123 = srem i32 %122, i32 256;
    i32 %124 = mul i32 %113, i32 33;
    i32 %125 = srem i32 %124, i32 256;
    i32 %126 = mul i32 %110, i32 33;
    i32 %127 = srem i32 %126, i32 256;
    i32 %128 = mul i32 %107, i32 33;
    i32 %129 = srem i32 %128, i32 256;
    i32 %130 = mul i32 %104, i32 33;
    i32 %131 = srem i32 %130, i32 256;
    i32 %132 = mul i32 %101, i32 33;
    i32 %133 = srem i32 %132, i32 256;
    i32 %134 = mul i32 %98, i32 33;
    i32 %135 = srem i32 %134, i32 256;
    i32* %136 = getelementptr &([32768 * i32]* %8)[i64 0][i32 %95];
    store i32* %136 with i32 %135;
    i32* %137 = getelementptr &(i32* %136)[i64 1];
    store i32* %137 with i32 %133;
    i32* %138 = getelementptr &(i32* %136)[i64 2];
    store i32* %138 with i32 %131;
    i32* %139 = getelementptr &(i32* %136)[i64 3];
    store i32* %139 with i32 %129;
    i32* %140 = getelementptr &(i32* %136)[i64 4];
    store i32* %140 with i32 %127;
    i32* %141 = getelementptr &(i32* %136)[i64 5];
    store i32* %141 with i32 %125;
    i32* %142 = getelementptr &(i32* %136)[i64 6];
    store i32* %142 with i32 %123;
    i32* %143 = getelementptr &(i32* %136)[i64 7];
    store i32* %143 with i32 %121;
    i32 %144 = add i32 %95, i32 8;
    i1 %145 = icmp slt i32 %144, i32 32000;
    cbr i1 %145(prob = 0.99975), ^while.body1, ^postbody;
  ^postbody:
    store i32* %90 with i32 128;
    ubr ^while.body2;
  ^while.body2:
    i32 %146 = phi [^postbody, i32 32002] [^while.body2, i32 %151];
    i32* %147 = phi [^postbody, i32* %91] [^while.body2, i32* %150];
    i32 %148 = and i32 %146, i32 63;
    i1 %149 = icmp neq i32 %148, i32 60;
    i32* %150 = getelementptr &(i32* %9)[i32 %146];
    store i32* %147 with i32 0;
    i32 %151 = add i32 %146, i32 1;
    cbr i1 %149(prob = 0.984615), ^while.body2, ^b1;
  ^b1:
    store i32* %150 with i32 0;
    i32* %152 = getelementptr &(i32* %150)[i64 1];
    store i32* %152 with i32 0;
    i32* %153 = getelementptr &(i32* %150)[i64 2];
    store i32* %153 with i32 125;
    i32* %154 = getelementptr &(i32* %150)[i64 3];
    store i32* %154 with i32 0;
    i32 %155 = add i32 %146, i32 4;
    store i32* %10 with i32 0;
    store i32* %11 with i32 0;
    store i32* %12 with i32 0;
    store i32* %13 with i32 0;
    store i32* %14 with i32 0;
    store i32* %15 with i32 0;
    store i32* %16 with i32 0;
    store i32* %17 with i32 0;
    store i32* %18 with i32 0;
    store i32* %19 with i32 0;
    store i32* %20 with i32 0;
    store i32* %21 with i32 0;
    store i32* %22 with i32 0;
    store i32* %23 with i32 0;
    store i32* %24 with i32 0;
    store i32* %25 with i32 0;
    store i32* %26 with i32 0;
    store i32* %27 with i32 0;
    store i32* %28 with i32 0;
    store i32* %29 with i32 0;
    store i32* %30 with i32 0;
    store i32* %31 with i32 0;
    store i32* %32 with i32 0;
    store i32* %33 with i32 0;
    store i32* %34 with i32 0;
    store i32* %35 with i32 0;
    store i32* %36 with i32 0;
    store i32* %37 with i32 0;
    store i32* %38 with i32 0;
    store i32* %39 with i32 0;
    store i32* %40 with i32 0;
    store i32* %41 with i32 0;
    store i32* %42 with i32 0;
    store i32* %43 with i32 0;
    store i32* %44 with i32 0;
    store i32* %45 with i32 0;
    store i32* %46 with i32 0;
    store i32* %47 with i32 0;
    store i32* %48 with i32 0;
    store i32* %49 with i32 0;
    store i32* %50 with i32 0;
    store i32* %51 with i32 0;
    store i32* %52 with i32 0;
    store i32* %53 with i32 0;
    store i32* %54 with i32 0;
    store i32* %55 with i32 0;
    store i32* %56 with i32 0;
    store i32* %57 with i32 0;
    store i32* %58 with i32 0;
    store i32* %59 with i32 0;
    store i32* %60 with i32 0;
    store i32* %61 with i32 0;
    store i32* %62 with i32 0;
    store i32* %63 with i32 0;
    store i32* %64 with i32 0;
    store i32* %65 with i32 0;
    store i32* %66 with i32 0;
    store i32* %67 with i32 0;
    store i32* %68 with i32 0;
    store i32* %69 with i32 0;
    store i32* %70 with i32 0;
    store i32* %71 with i32 0;
    store i32* %72 with i32 0;
    store i32* %73 with i32 0;
    store i32* %74 with i32 0;
    store i32* %75 with i32 0;
    store i32* %76 with i32 0;
    store i32* %77 with i32 0;
    store i32* %78 with i32 0;
    store i32* %79 with i32 0;
    store i32* %80 with i32 0;
    store i32* %81 with i32 0;
    store i32* %82 with i32 0;
    store i32* %83 with i32 0;
    store i32* %84 with i32 0;
    store i32* %85 with i32 0;
    store i32* %86 with i32 0;
    store i32* %87 with i32 0;
    store i32* %88 with i32 0;
    store i32* %89 with i32 0;
    ubr ^while.body3;
  ^while.body3:
    i32 %156 = phi [^b1, i32 0] [^b3, i32 %321];
    i32 %157 = phi [^b1, i32 1732584193] [^b3, i32 %323];
    i32 %158 = phi [^b1, i32 -271733879] [^b3, i32 %324];
    i32 %159 = phi [^b1, i32 -1732584194] [^b3, i32 %325];
    i32 %160 = phi [^b1, i32 271733878] [^b3, i32 %326];
    i32 %161 = phi [^b1, i32 -1009589776] [^b3, i32 %327];
    i32* %162 = getelementptr &(i32* %9)[i32 %156];
    ubr ^while.body4;
  ^while.body4:
    i32 %163 = phi [^while.body3, i32 0] [^while.body4, i32 %231];
    i32 %164 = mul i32 %163, i32 4;
    i32* %165 = getelementptr &(i32* %162)[i32 %164];
    i32 %166 = load i32* %165;
    i32* %167 = getelementptr &(i32* %165)[i64 1];
    i32 %168 = load i32* %167;
    i32 %169 = mul i32 %168, i32 65536;
    i32 %170 = mul i32 %166, i32 16777216;
    i32 %171 = add i32 %169, i32 %170;
    i32* %172 = getelementptr &(i32* %165)[i64 2];
    i32 %173 = load i32* %172;
    i32 %174 = mul i32 %173, i32 256;
    i32 %175 = add i32 %171, i32 %174;
    i32* %176 = getelementptr &(i32* %165)[i64 3];
    i32 %177 = load i32* %176;
    i32 %178 = add i32 %175, i32 %177;
    i32* %179 = getelementptr &([80 * i32]* %words)[i64 0][i32 %163];
    store i32* %179 with i32 %178;
    i32 %180 = add i32 %163, i32 1;
    i32 %181 = mul i32 %180, i32 4;
    i32* %182 = getelementptr &(i32* %162)[i32 %181];
    i32 %183 = load i32* %182;
    i32* %184 = getelementptr &(i32* %182)[i64 1];
    i32 %185 = load i32* %184;
    i32 %186 = mul i32 %185, i32 65536;
    i32 %187 = mul i32 %183, i32 16777216;
    i32 %188 = add i32 %186, i32 %187;
    i32* %189 = getelementptr &(i32* %182)[i64 2];
    i32 %190 = load i32* %189;
    i32 %191 = mul i32 %190, i32 256;
    i32 %192 = add i32 %188, i32 %191;
    i32* %193 = getelementptr &(i32* %182)[i64 3];
    i32 %194 = load i32* %193;
    i32 %195 = add i32 %192, i32 %194;
    i32* %196 = getelementptr &(i32* %179)[i64 1];
    store i32* %196 with i32 %195;
    i32 %197 = add i32 %163, i32 2;
    i32 %198 = mul i32 %197, i32 4;
    i32* %199 = getelementptr &(i32* %162)[i32 %198];
    i32 %200 = load i32* %199;
    i32* %201 = getelementptr &(i32* %199)[i64 1];
    i32 %202 = load i32* %201;
    i32 %203 = mul i32 %202, i32 65536;
    i32 %204 = mul i32 %200, i32 16777216;
    i32 %205 = add i32 %203, i32 %204;
    i32* %206 = getelementptr &(i32* %199)[i64 2];
    i32 %207 = load i32* %206;
    i32 %208 = mul i32 %207, i32 256;
    i32 %209 = add i32 %205, i32 %208;
    i32* %210 = getelementptr &(i32* %199)[i64 3];
    i32 %211 = load i32* %210;
    i32 %212 = add i32 %209, i32 %211;
    i32* %213 = getelementptr &(i32* %179)[i64 2];
    store i32* %213 with i32 %212;
    i32 %214 = add i32 %163, i32 3;
    i32 %215 = mul i32 %214, i32 4;
    i32* %216 = getelementptr &(i32* %162)[i32 %215];
    i32 %217 = load i32* %216;
    i32* %218 = getelementptr &(i32* %216)[i64 1];
    i32 %219 = load i32* %218;
    i32 %220 = mul i32 %219, i32 65536;
    i32 %221 = mul i32 %217, i32 16777216;
    i32 %222 = add i32 %220, i32 %221;
    i32* %223 = getelementptr &(i32* %216)[i64 2];
    i32 %224 = load i32* %223;
    i32 %225 = mul i32 %224, i32 256;
    i32 %226 = add i32 %222, i32 %225;
    i32* %227 = getelementptr &(i32* %216)[i64 3];
    i32 %228 = load i32* %227;
    i32 %229 = add i32 %226, i32 %228;
    i32* %230 = getelementptr &(i32* %179)[i64 3];
    store i32* %230 with i32 %229;
    i32 %231 = add i32 %163, i32 4;
    i1 %232 = icmp slt i32 %231, i32 16;
    cbr i1 %232(prob = 0.75), ^while.body4, ^while.body5;
  ^while.body5:
    i32 %233 = phi [^while.body4, i32 16] [^while.body5, i32 %288];
    i32* %234 = getelementptr &([80 * i32]* %words)[i64 0][i32 %233];
    i32* %235 = getelementptr &(i32* %234)[i64 -3];
    i32 %236 = load i32* %235;
    i32* %237 = getelementptr &(i32* %234)[i64 -8];
    i32 %238 = load i32* %237;
    i32 %239 = add i32 %236, i32 %238;
    i32* %240 = getelementptr &(i32* %234)[i64 -14];
    i32 %241 = load i32* %240;
    i32* %242 = getelementptr &(i32* %234)[i64 -16];
    i32 %243 = load i32* %242;
    i32 %244 = add i32 %239, i32 %243;
    i32 %245 = sub i32 %241, i32 %244;
    i32 %246 = mul i32 %245, i32 2;
    i32 %247 = srem i32 %245, i32 2;
    i32 %248 = add i32 %246, i32 %247;
    store i32* %234 with i32 %248;
    i32* %249 = getelementptr &(i32* %234)[i64 -2];
    i32 %250 = load i32* %249;
    i32* %251 = getelementptr &(i32* %234)[i64 -7];
    i32 %252 = load i32* %251;
    i32* %253 = getelementptr &(i32* %234)[i64 -13];
    i32 %254 = load i32* %253;
    i32 %255 = add i32 %248, i32 %254;
    i32 %256 = add i32 %250, i32 %252;
    i32* %257 = getelementptr &(i32* %234)[i64 -15];
    i32 %258 = load i32* %257;
    i32 %259 = add i32 %256, i32 %258;
    i32 %260 = sub i32 %254, i32 %259;
    i32 %261 = mul i32 %260, i32 2;
    i32 %262 = srem i32 %260, i32 2;
    i32 %263 = add i32 %261, i32 %262;
    i32* %264 = getelementptr &(i32* %234)[i64 1];
    store i32* %264 with i32 %263;
    i32* %265 = getelementptr &(i32* %234)[i64 -1];
    i32 %266 = load i32* %265;
    i32 %267 = add i32 %241, i32 %266;
    i32* %268 = getelementptr &(i32* %234)[i64 -6];
    i32 %269 = load i32* %268;
    i32 %270 = add i32 %267, i32 %269;
    i32* %271 = getelementptr &(i32* %234)[i64 -12];
    i32 %272 = load i32* %271;
    i32 %273 = sub i32 %272, i32 %270;
    i32 %274 = mul i32 %273, i32 2;
    i32 %275 = srem i32 %273, i32 2;
    i32 %276 = add i32 %274, i32 %275;
    i32* %277 = getelementptr &(i32* %234)[i64 2];
    store i32* %277 with i32 %276;
    i32* %278 = getelementptr &(i32* %234)[i64 -5];
    i32 %279 = load i32* %278;
    i32 %280 = add i32 %255, i32 %279;
    i32* %281 = getelementptr &(i32* %234)[i64 -11];
    i32 %282 = load i32* %281;
    i32 %283 = sub i32 %282, i32 %280;
    i32 %284 = mul i32 %283, i32 2;
    i32 %285 = srem i32 %283, i32 2;
    i32 %286 = add i32 %284, i32 %285;
    i32* %287 = getelementptr &(i32* %234)[i64 3];
    store i32* %287 with i32 %286;
    i32 %288 = add i32 %233, i32 4;
    i1 %289 = icmp slt i32 %288, i32 80;
    cbr i1 %289(prob = 0.9375), ^while.body5, ^while.body6;
  ^while.body6:
    i32 %290 = phi [^while.body5, i32 0] [^b2, i32 %319];
    i32 %291 = phi [^while.body5, i32 %157] [^b2, i32 %315];
    i32 %292 = phi [^while.body5, i32 %158] [^b2, i32 %291];
    i32 %293 = phi [^while.body5, i32 %159] [^b2, i32 %318];
    i32 %294 = phi [^while.body5, i32 %160] [^b2, i32 %293];
    i32 %295 = phi [^while.body5, i32 %161] [^b2, i32 %294];
    i1 %296 = icmp slt i32 %290, i32 20;
    cbr i1 %296(prob = 0.5), ^b2, ^if.else;
  ^if.else:
    i32 %297 = add i32 %292, i32 %293;
    i32 %298 = sub i32 %297, i32 %294;
    i1 %299 = icmp slt i32 %290, i32 60;
    i32 %300 = select i1 %299 ? i32 0 : i32 %298;
    i1 %301 = icmp slt i32 %290, i32 40;
    i32 %302 = select i1 %301 ? i32 %298 : i32 %300;
    i32 %303 = select i1 %299 ? i32 -1894007588 : i32 -899497722;
    i32 %304 = select i1 %301 ? i32 1859775361 : i32 %303;
    ubr ^b2;
  ^b2:
    i32 %305 = phi [^while.body6, i32 1518500249] [^if.else, i32 %304];
    i32 %306 = phi [^while.body6, i32 0] [^if.else, i32 %302];
    i32 %307 = mul i32 %291, i32 32;
    i32 %308 = add i32 %295, i32 %307;
    i32 %309 = add i32 %305, i32 %308;
    i32 %310 = add i32 %306, i32 %309;
    i32 %311 = srem i32 %291, i32 32;
    i32 %312 = add i32 %310, i32 %311;
    i32* %313 = getelementptr &([80 * i32]* %words)[i64 0][i32 %290];
    i32 %314 = load i32* %313;
    i32 %315 = add i32 %312, i32 %314;
    i32 %316 = mul i32 %292, i32 1073741824;
    i32 %317 = srem i32 %292, i32 1073741824;
    i32 %318 = add i32 %316, i32 %317;
    i32 %319 = add i32 %290, i32 1;
    i1 %320 = icmp slt i32 %319, i32 80;
    cbr i1 %320(prob = 0.9875), ^while.body6, ^b3;
  ^b3:
    i32 %321 = add i32 %156, i32 64;
    i1 %322 = icmp sgt i32 %155, i32 %321;
    i32 %323 = add i32 %157, i32 %315;
    i32 %324 = add i32 %158, i32 %291;
    i32 %325 = add i32 %159, i32 %318;
    i32 %326 = add i32 %160, i32 %293;
    i32 %327 = add i32 %161, i32 %294;
    cbr i1 %322(prob = 0.984615), ^while.body3, ^b4;
  ^b4:
    i32 %328 = load i32* %3;
    i32 %329 = add i32 %323, i32 %328;
    i32 %330 = neg i32 %329;
    store i32* %3 with i32 %330;
    i32 %331 = load i32* %4;
    i32 %332 = add i32 %324, i32 %331;
    i32 %333 = neg i32 %332;
    store i32* %4 with i32 %333;
    i32 %334 = load i32* %5;
    i32 %335 = add i32 %325, i32 %334;
    i32 %336 = neg i32 %335;
    store i32* %5 with i32 %336;
    i32 %337 = load i32* %6;
    i32 %338 = add i32 %326, i32 %337;
    i32 %339 = neg i32 %338;
    store i32* %6 with i32 %339;
    i32 %340 = load i32* %7;
    i32 %341 = add i32 %327, i32 %340;
    i32 %342 = neg i32 %341;
    store i32* %7 with i32 %342;
    i32 %343 = add i32 %93, i32 -1;
    i1 %344 = icmp sgt i32 %343, i32 0;
    cbr i1 %344(prob = 0.984615), ^while.body, ^b;
}
