internal func @getarray(i32*) -> i32 { NoMemoryRead };
internal func @putarray(i32, i32*) -> void { NoMemoryWrite };
internal func @starttime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal [524288 * i32]* @image_in;
internal [524288 * i32]* @image_out;
func @main() -> i32 { NoRecurse Entry } {
^entry():
    i32* %0 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 0];
    i32 %1 = call (i32*) -> i32 @getarray(i32* %0);
    call (i32) -> void @starttime(i32 23);
    ubr [ ^while.body i32 1, i32 1, i32 %1 ];
^while.body(i32 %arg, i32 %arg1, i32 %arg2):
    i32 %0 = sub i32 %arg, i32 1;
    i32 %1 = mul i32 %0, i32 512;
    i32 %2 = add i32 %arg1, i32 %1;
    i32 %3 = sub i32 %2, i32 1;
    i32 %4 = add i32 %arg1, i32 1;
    i32 %5 = add i32 %4, i32 %1;
    i32 %6 = mul i32 %arg, i32 512;
    i32 %7 = add i32 %arg1, i32 %6;
    i32 %8 = sub i32 %7, i32 1;
    i32 %9 = add i32 %4, i32 %6;
    i32 %10 = add i32 %arg, i32 1;
    i32 %11 = mul i32 %10, i32 512;
    i32 %12 = add i32 %arg1, i32 %11;
    i32 %13 = sub i32 %12, i32 1;
    i32 %14 = add i32 %4, i32 %11;
    i32* %15 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %7];
    i32 %16 = load i32* %15;
    i32 %17 = mul i32 %16, i32 8;
    i32* %18 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %3];
    i32 %19 = load i32* %18;
    i32 %20 = sub i32 %17, i32 %19;
    i32* %21 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %2];
    i32 %22 = load i32* %21;
    i32 %23 = sub i32 %20, i32 %22;
    i32* %24 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %5];
    i32 %25 = load i32* %24;
    i32 %26 = sub i32 %23, i32 %25;
    i32* %27 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %8];
    i32 %28 = load i32* %27;
    i32 %29 = sub i32 %26, i32 %28;
    i32* %30 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %9];
    i32 %31 = load i32* %30;
    i32 %32 = sub i32 %29, i32 %31;
    i32* %33 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %13];
    i32 %34 = load i32* %33;
    i32 %35 = sub i32 %32, i32 %34;
    i32* %36 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %12];
    i32 %37 = load i32* %36;
    i32 %38 = sub i32 %35, i32 %37;
    i32* %39 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %14];
    i32 %40 = load i32* %39;
    i32 %41 = sub i32 %38, i32 %40;
    i32* %42 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %7];
    i1 %43 = scmp lt i32 %41, i32 0;
    cbr i1 %43, [ ^while.body1 i32 0, i32 %10, i32* %42, i32 %arg1, i32 %arg2 ], [ ^indirect i32 %41, i32 %10, i32* %42, i32 %arg1, i32 %arg2, i32 %41 ];
^while.body1(i32 %arg, i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4):
    store i32* %arg2 with i32 %arg;
    i1 %0 = scmp lt i32 %arg1, i32 1023;
    cbr i1 %0, [ ^while.body i32 %arg1, i32 %arg3, i32 %arg4 ], [ ^b i32 %arg3, i32 %arg4 ];
^indirect(i32 %arg, i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5):
    i1 %0 = scmp gt i32 %arg, i32 255;
    cbr i1 %0, [ ^while.body1 i32 255, i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4 ], [ ^indirect1 i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5 ];
^b(i32 %arg, i32 %arg1):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp lt i32 %0, i32 511;
    cbr i1 %1, [ ^while.body i32 1, i32 %0, i32 %arg1 ], [ ^while.body2 i32 0, i32 %arg1 ];
^indirect1(i32 %arg, i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4):
    store i32* %arg1 with i32 %arg4;
    i1 %0 = scmp lt i32 %arg, i32 1023;
    cbr i1 %0, [ ^while.body i32 %arg, i32 %arg2, i32 %arg3 ], [ ^b i32 %arg2, i32 %arg3 ];
^while.body2(i32 %arg, i32 %arg1):
    i32 %0 = mul i32 %arg, i32 512;
    i32* %1 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %0];
    i32* %2 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %0];
    i32 %3 = load i32* %2;
    store i32* %1 with i32 %3;
    i32 %4 = add i32 %arg, i32 1;
    i32 %5 = mul i32 %4, i32 512;
    i32 %6 = sub i32 %5, i32 1;
    i32* %7 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %6];
    i32* %8 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %6];
    i32 %9 = load i32* %8;
    store i32* %7 with i32 %9;
    i32* %10 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %5];
    i32* %11 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %5];
    i32 %12 = load i32* %11;
    store i32* %10 with i32 %12;
    i32 %13 = add i32 %arg, i32 2;
    i32 %14 = mul i32 %13, i32 512;
    i32 %15 = sub i32 %14, i32 1;
    i32* %16 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %15];
    i32* %17 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %15];
    i32 %18 = load i32* %17;
    store i32* %16 with i32 %18;
    i32* %19 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %14];
    i32* %20 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %14];
    i32 %21 = load i32* %20;
    store i32* %19 with i32 %21;
    i32 %22 = add i32 %arg, i32 3;
    i32 %23 = mul i32 %22, i32 512;
    i32 %24 = sub i32 %23, i32 1;
    i32* %25 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %24];
    i32* %26 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %24];
    i32 %27 = load i32* %26;
    store i32* %25 with i32 %27;
    i32* %28 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %23];
    i32* %29 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %23];
    i32 %30 = load i32* %29;
    store i32* %28 with i32 %30;
    i32 %31 = add i32 %arg, i32 4;
    i32 %32 = mul i32 %31, i32 512;
    i32 %33 = sub i32 %32, i32 1;
    i32* %34 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %33];
    i32* %35 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %33];
    i32 %36 = load i32* %35;
    store i32* %34 with i32 %36;
    i32* %37 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %32];
    i32* %38 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %32];
    i32 %39 = load i32* %38;
    store i32* %37 with i32 %39;
    i32 %40 = add i32 %arg, i32 5;
    i32 %41 = mul i32 %40, i32 512;
    i32 %42 = sub i32 %41, i32 1;
    i32* %43 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %42];
    i32* %44 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %42];
    i32 %45 = load i32* %44;
    store i32* %43 with i32 %45;
    i32* %46 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %41];
    i32* %47 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %41];
    i32 %48 = load i32* %47;
    store i32* %46 with i32 %48;
    i32 %49 = add i32 %arg, i32 6;
    i32 %50 = mul i32 %49, i32 512;
    i32 %51 = sub i32 %50, i32 1;
    i32* %52 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %51];
    i32* %53 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %51];
    i32 %54 = load i32* %53;
    store i32* %52 with i32 %54;
    i32* %55 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %50];
    i32* %56 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %50];
    i32 %57 = load i32* %56;
    store i32* %55 with i32 %57;
    i32 %58 = add i32 %arg, i32 7;
    i32 %59 = mul i32 %58, i32 512;
    i32 %60 = sub i32 %59, i32 1;
    i32* %61 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %60];
    i32* %62 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %60];
    i32 %63 = load i32* %62;
    store i32* %61 with i32 %63;
    i32* %64 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %59];
    i32* %65 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %59];
    i32 %66 = load i32* %65;
    store i32* %64 with i32 %66;
    i32 %67 = add i32 %arg, i32 8;
    i32 %68 = mul i32 %67, i32 512;
    i32 %69 = sub i32 %68, i32 1;
    i32* %70 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %69];
    i32* %71 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %69];
    i32 %72 = load i32* %71;
    store i32* %70 with i32 %72;
    i32* %73 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %68];
    i32* %74 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %68];
    i32 %75 = load i32* %74;
    store i32* %73 with i32 %75;
    i32 %76 = add i32 %arg, i32 9;
    i32 %77 = mul i32 %76, i32 512;
    i32 %78 = sub i32 %77, i32 1;
    i32* %79 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %78];
    i32* %80 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %78];
    i32 %81 = load i32* %80;
    store i32* %79 with i32 %81;
    i32* %82 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %77];
    i32* %83 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %77];
    i32 %84 = load i32* %83;
    store i32* %82 with i32 %84;
    i32 %85 = add i32 %arg, i32 10;
    i32 %86 = mul i32 %85, i32 512;
    i32 %87 = sub i32 %86, i32 1;
    i32* %88 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %87];
    i32* %89 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %87];
    i32 %90 = load i32* %89;
    store i32* %88 with i32 %90;
    i32* %91 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %86];
    i32* %92 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %86];
    i32 %93 = load i32* %92;
    store i32* %91 with i32 %93;
    i32 %94 = add i32 %arg, i32 11;
    i32 %95 = mul i32 %94, i32 512;
    i32 %96 = sub i32 %95, i32 1;
    i32* %97 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %96];
    i32* %98 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %96];
    i32 %99 = load i32* %98;
    store i32* %97 with i32 %99;
    i32* %100 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %95];
    i32* %101 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %95];
    i32 %102 = load i32* %101;
    store i32* %100 with i32 %102;
    i32 %103 = add i32 %arg, i32 12;
    i32 %104 = mul i32 %103, i32 512;
    i32 %105 = sub i32 %104, i32 1;
    i32* %106 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %105];
    i32* %107 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %105];
    i32 %108 = load i32* %107;
    store i32* %106 with i32 %108;
    i32* %109 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %104];
    i32* %110 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %104];
    i32 %111 = load i32* %110;
    store i32* %109 with i32 %111;
    i32 %112 = add i32 %arg, i32 13;
    i32 %113 = mul i32 %112, i32 512;
    i32 %114 = sub i32 %113, i32 1;
    i32* %115 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %114];
    i32* %116 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %114];
    i32 %117 = load i32* %116;
    store i32* %115 with i32 %117;
    i32* %118 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %113];
    i32* %119 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %113];
    i32 %120 = load i32* %119;
    store i32* %118 with i32 %120;
    i32 %121 = add i32 %arg, i32 14;
    i32 %122 = mul i32 %121, i32 512;
    i32 %123 = sub i32 %122, i32 1;
    i32* %124 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %123];
    i32* %125 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %123];
    i32 %126 = load i32* %125;
    store i32* %124 with i32 %126;
    i32* %127 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %122];
    i32* %128 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %122];
    i32 %129 = load i32* %128;
    store i32* %127 with i32 %129;
    i32 %130 = add i32 %arg, i32 15;
    i32 %131 = mul i32 %130, i32 512;
    i32 %132 = sub i32 %131, i32 1;
    i32* %133 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %132];
    i32* %134 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %132];
    i32 %135 = load i32* %134;
    store i32* %133 with i32 %135;
    i32* %136 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %131];
    i32* %137 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %131];
    i32 %138 = load i32* %137;
    store i32* %136 with i32 %138;
    i32 %139 = add i32 %arg, i32 16;
    i32 %140 = mul i32 %139, i32 512;
    i32 %141 = sub i32 %140, i32 1;
    i32* %142 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %141];
    i32* %143 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %141];
    i32 %144 = load i32* %143;
    store i32* %142 with i32 %144;
    i1 %145 = scmp lt i32 %139, i32 1024;
    cbr i1 %145, [ ^while.body2 i32 %139, i32 %arg1 ], [ ^while.body3 i32 0, i32 %arg1 ];
^while.body3(i32 %arg, i32 %arg1):
    i32* %0 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %arg];
    i32* %1 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %arg];
    i32 %2 = load i32* %1;
    store i32* %0 with i32 %2;
    i32 %3 = add i32 %arg, i32 523776;
    i32* %4 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %3];
    i32* %5 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %3];
    i32 %6 = load i32* %5;
    store i32* %4 with i32 %6;
    i32 %7 = add i32 %arg, i32 1;
    i32* %8 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %7];
    i32* %9 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %7];
    i32 %10 = load i32* %9;
    store i32* %8 with i32 %10;
    i32 %11 = add i32 %arg, i32 523777;
    i32* %12 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %11];
    i32* %13 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %11];
    i32 %14 = load i32* %13;
    store i32* %12 with i32 %14;
    i32 %15 = add i32 %arg, i32 2;
    i32* %16 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %15];
    i32* %17 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %15];
    i32 %18 = load i32* %17;
    store i32* %16 with i32 %18;
    i32 %19 = add i32 %arg, i32 523778;
    i32* %20 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %19];
    i32* %21 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %19];
    i32 %22 = load i32* %21;
    store i32* %20 with i32 %22;
    i32 %23 = add i32 %arg, i32 3;
    i32* %24 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %23];
    i32* %25 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %23];
    i32 %26 = load i32* %25;
    store i32* %24 with i32 %26;
    i32 %27 = add i32 %arg, i32 523779;
    i32* %28 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %27];
    i32* %29 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %27];
    i32 %30 = load i32* %29;
    store i32* %28 with i32 %30;
    i32 %31 = add i32 %arg, i32 4;
    i32* %32 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %31];
    i32* %33 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %31];
    i32 %34 = load i32* %33;
    store i32* %32 with i32 %34;
    i32 %35 = add i32 %arg, i32 523780;
    i32* %36 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %35];
    i32* %37 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %35];
    i32 %38 = load i32* %37;
    store i32* %36 with i32 %38;
    i32 %39 = add i32 %arg, i32 5;
    i32* %40 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %39];
    i32* %41 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %39];
    i32 %42 = load i32* %41;
    store i32* %40 with i32 %42;
    i32 %43 = add i32 %arg, i32 523781;
    i32* %44 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %43];
    i32* %45 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %43];
    i32 %46 = load i32* %45;
    store i32* %44 with i32 %46;
    i32 %47 = add i32 %arg, i32 6;
    i32* %48 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %47];
    i32* %49 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %47];
    i32 %50 = load i32* %49;
    store i32* %48 with i32 %50;
    i32 %51 = add i32 %arg, i32 523782;
    i32* %52 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %51];
    i32* %53 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %51];
    i32 %54 = load i32* %53;
    store i32* %52 with i32 %54;
    i32 %55 = add i32 %arg, i32 7;
    i32* %56 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %55];
    i32* %57 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %55];
    i32 %58 = load i32* %57;
    store i32* %56 with i32 %58;
    i32 %59 = add i32 %arg, i32 523783;
    i32* %60 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %59];
    i32* %61 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %59];
    i32 %62 = load i32* %61;
    store i32* %60 with i32 %62;
    i32 %63 = add i32 %arg, i32 8;
    i32* %64 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %63];
    i32* %65 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %63];
    i32 %66 = load i32* %65;
    store i32* %64 with i32 %66;
    i32 %67 = add i32 %arg, i32 523784;
    i32* %68 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %67];
    i32* %69 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %67];
    i32 %70 = load i32* %69;
    store i32* %68 with i32 %70;
    i32 %71 = add i32 %arg, i32 9;
    i32* %72 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %71];
    i32* %73 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %71];
    i32 %74 = load i32* %73;
    store i32* %72 with i32 %74;
    i32 %75 = add i32 %arg, i32 523785;
    i32* %76 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %75];
    i32* %77 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %75];
    i32 %78 = load i32* %77;
    store i32* %76 with i32 %78;
    i32 %79 = add i32 %arg, i32 10;
    i32* %80 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %79];
    i32* %81 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %79];
    i32 %82 = load i32* %81;
    store i32* %80 with i32 %82;
    i32 %83 = add i32 %arg, i32 523786;
    i32* %84 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %83];
    i32* %85 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %83];
    i32 %86 = load i32* %85;
    store i32* %84 with i32 %86;
    i32 %87 = add i32 %arg, i32 11;
    i32* %88 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %87];
    i32* %89 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %87];
    i32 %90 = load i32* %89;
    store i32* %88 with i32 %90;
    i32 %91 = add i32 %arg, i32 523787;
    i32* %92 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %91];
    i32* %93 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %91];
    i32 %94 = load i32* %93;
    store i32* %92 with i32 %94;
    i32 %95 = add i32 %arg, i32 12;
    i32* %96 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %95];
    i32* %97 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %95];
    i32 %98 = load i32* %97;
    store i32* %96 with i32 %98;
    i32 %99 = add i32 %arg, i32 523788;
    i32* %100 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %99];
    i32* %101 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %99];
    i32 %102 = load i32* %101;
    store i32* %100 with i32 %102;
    i32 %103 = add i32 %arg, i32 13;
    i32* %104 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %103];
    i32* %105 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %103];
    i32 %106 = load i32* %105;
    store i32* %104 with i32 %106;
    i32 %107 = add i32 %arg, i32 523789;
    i32* %108 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %107];
    i32* %109 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %107];
    i32 %110 = load i32* %109;
    store i32* %108 with i32 %110;
    i32 %111 = add i32 %arg, i32 14;
    i32* %112 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %111];
    i32* %113 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %111];
    i32 %114 = load i32* %113;
    store i32* %112 with i32 %114;
    i32 %115 = add i32 %arg, i32 523790;
    i32* %116 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %115];
    i32* %117 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %115];
    i32 %118 = load i32* %117;
    store i32* %116 with i32 %118;
    i32 %119 = add i32 %arg, i32 15;
    i32* %120 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %119];
    i32* %121 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %119];
    i32 %122 = load i32* %121;
    store i32* %120 with i32 %122;
    i32 %123 = add i32 %arg, i32 523791;
    i32* %124 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 %123];
    i32* %125 = getelementptr &([524288 * i32]* @image_in)[i32 0][i32 %123];
    i32 %126 = load i32* %125;
    store i32* %124 with i32 %126;
    i32 %127 = add i32 %arg, i32 16;
    i1 %128 = scmp lt i32 %127, i32 512;
    cbr i1 %128, [ ^while.body3 i32 %127, i32 %arg1 ], [ ^b1 i32 %arg1 ];
^b1(i32 %arg):
    call (i32) -> void @stoptime(i32 59);
    i32* %0 = getelementptr &([524288 * i32]* @image_out)[i32 0][i32 0];
    call (i32, i32*) -> void @putarray(i32 524288, i32* %0);
    ret i32 %arg;
}
