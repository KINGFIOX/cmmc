internal func @getarray() -> i32 { NoMemoryRead };
internal func @putarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [524288 * i32]* @image_in, align 8;
internal [524288 * i32]* @image_out, align 8;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [524288 * i32]* %0 = ptrcast [524288 * i32]* @image_in to [524288 * i32]*;
    i32* %1 = getelementptr &([524288 * i32]* %0)[i64 0][i64 0];
    i32 %2 = call (i32*) -> i32 @getarray(i32* %1);
    call (i32) -> void @starttime(i32 23);
    [524288 * i32]* %3 = ptrcast [524288 * i32]* @image_out to [524288 * i32]*;
    ubr ^while.header;
  ^while.header:
    i32 %4 = phi [^entry, i32 1] [^b, i32 %173];
    i1 %5 = icmp slt i32 %4, i32 511;
    cbr i1 %5(prob = 0.992248), ^prebody, ^while.body;
  ^prebody:
    i32 %6 = add i32 %4, i32 -1;
    ubr ^while.body1;
  ^while.body:
    i32 %7 = phi [^while.header, i32 512] [^while.body, i32 %76];
    i32 %8 = phi [^while.header, i32 0] [^while.body, i32 %75];
    i32 %9 = phi [^while.header, i32 0] [^while.body, i32 %73];
    i32* %10 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %8];
    i32 %11 = load i32* %10;
    i32* %12 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %8];
    store i32* %12 with i32 %11;
    i32 %13 = add i32 %7, i32 -1;
    i32* %14 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %13];
    i32 %15 = load i32* %14;
    i32* %16 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %13];
    store i32* %16 with i32 %15;
    i32 %17 = add i32 %8, i32 512;
    i32* %18 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %17];
    i32 %19 = load i32* %18;
    i32* %20 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %17];
    store i32* %20 with i32 %19;
    i32 %21 = add i32 %7, i32 511;
    i32* %22 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %21];
    i32 %23 = load i32* %22;
    i32* %24 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %21];
    store i32* %24 with i32 %23;
    i32 %25 = add i32 %8, i32 1024;
    i32* %26 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %25];
    i32 %27 = load i32* %26;
    i32* %28 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %25];
    store i32* %28 with i32 %27;
    i32 %29 = add i32 %7, i32 1023;
    i32* %30 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %29];
    i32 %31 = load i32* %30;
    i32* %32 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %29];
    store i32* %32 with i32 %31;
    i32 %33 = add i32 %8, i32 1536;
    i32* %34 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %33];
    i32 %35 = load i32* %34;
    i32* %36 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %33];
    store i32* %36 with i32 %35;
    i32 %37 = add i32 %7, i32 1535;
    i32* %38 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %37];
    i32 %39 = load i32* %38;
    i32* %40 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %37];
    store i32* %40 with i32 %39;
    i32 %41 = add i32 %8, i32 2048;
    i32* %42 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %41];
    i32 %43 = load i32* %42;
    i32* %44 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %41];
    store i32* %44 with i32 %43;
    i32 %45 = add i32 %7, i32 2047;
    i32* %46 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %45];
    i32 %47 = load i32* %46;
    i32* %48 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %45];
    store i32* %48 with i32 %47;
    i32 %49 = add i32 %8, i32 2560;
    i32* %50 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %49];
    i32 %51 = load i32* %50;
    i32* %52 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %49];
    store i32* %52 with i32 %51;
    i32 %53 = add i32 %7, i32 2559;
    i32* %54 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %53];
    i32 %55 = load i32* %54;
    i32* %56 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %53];
    store i32* %56 with i32 %55;
    i32 %57 = add i32 %8, i32 3072;
    i32* %58 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %57];
    i32 %59 = load i32* %58;
    i32* %60 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %57];
    store i32* %60 with i32 %59;
    i32 %61 = add i32 %7, i32 3071;
    i32* %62 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %61];
    i32 %63 = load i32* %62;
    i32* %64 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %61];
    store i32* %64 with i32 %63;
    i32 %65 = add i32 %8, i32 3584;
    i32* %66 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %65];
    i32 %67 = load i32* %66;
    i32* %68 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %65];
    store i32* %68 with i32 %67;
    i32 %69 = add i32 %7, i32 3583;
    i32* %70 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %69];
    i32 %71 = load i32* %70;
    i32* %72 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %69];
    store i32* %72 with i32 %71;
    i32 %73 = add i32 %9, i32 8;
    i1 %74 = icmp slt i32 %73, i32 1024;
    i32 %75 = add i32 %8, i32 4096;
    i32 %76 = add i32 %7, i32 4096;
    cbr i1 %74(prob = 0.992188), ^while.body, ^while.body2;
  ^while.body1:
    i32 %77 = phi [^prebody, i32 1024] [^while.body1, i32 %121];
    i32 %78 = phi [^prebody, i32 512] [^while.body1, i32 %120];
    i32 %79 = phi [^prebody, i32 0] [^while.body1, i32 %119];
    i32 %80 = phi [^prebody, i32 1] [^while.body1, i32 %117];
    i32 %81 = add i32 %4, i32 %78;
    i32* %82 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %81];
    i32 %83 = load i32* %82;
    i32 %84 = mul i32 %83, i32 8;
    i32 %85 = add i32 %6, i32 %79;
    i32* %86 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %85];
    i32 %87 = load i32* %86;
    i32 %88 = sub i32 %84, i32 %87;
    i32 %89 = add i32 %4, i32 %79;
    i32* %90 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %89];
    i32 %91 = load i32* %90;
    i32 %92 = sub i32 %88, i32 %91;
    i32* %93 = getelementptr &(i32* %90)[i64 1];
    i32 %94 = load i32* %93;
    i32 %95 = sub i32 %92, i32 %94;
    i32 %96 = add i32 %6, i32 %78;
    i32* %97 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %96];
    i32 %98 = load i32* %97;
    i32 %99 = sub i32 %95, i32 %98;
    i32* %100 = getelementptr &(i32* %97)[i64 2];
    i32 %101 = load i32* %100;
    i32 %102 = sub i32 %99, i32 %101;
    i32 %103 = add i32 %6, i32 %77;
    i32* %104 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %103];
    i32 %105 = load i32* %104;
    i32 %106 = sub i32 %102, i32 %105;
    i32 %107 = add i32 %4, i32 %77;
    i32* %108 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %107];
    i32 %109 = load i32* %108;
    i32 %110 = sub i32 %106, i32 %109;
    i32* %111 = getelementptr &(i32* %108)[i64 1];
    i32 %112 = load i32* %111;
    i32 %113 = sub i32 %110, i32 %112;
    i32 %114 = smin i32 %113, i32 255;
    i32 %115 = smax i32 %114, i32 0;
    i32* %116 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %81];
    store i32* %116 with i32 %115;
    i32 %117 = add i32 %80, i32 1;
    i1 %118 = icmp slt i32 %117, i32 1023;
    i32 %119 = add i32 %79, i32 512;
    i32 %120 = add i32 %78, i32 512;
    i32 %121 = add i32 %77, i32 512;
    cbr i1 %118(prob = 0.999022), ^while.body1, ^b;
  ^while.body2:
    i32 %122 = phi [^while.body, i32 0] [^while.body2, i32 %171];
    i32* %123 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %122];
    i32 %124 = load i32* %123;
    i32* %125 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %122];
    store i32* %125 with i32 %124;
    i32* %126 = getelementptr &(i32* %123)[i64 523776];
    i32 %127 = load i32* %126;
    i32* %128 = getelementptr &(i32* %125)[i64 523776];
    store i32* %128 with i32 %127;
    i32* %129 = getelementptr &(i32* %123)[i64 1];
    i32 %130 = load i32* %129;
    i32* %131 = getelementptr &(i32* %125)[i64 1];
    store i32* %131 with i32 %130;
    i32* %132 = getelementptr &(i32* %123)[i64 523777];
    i32 %133 = load i32* %132;
    i32* %134 = getelementptr &(i32* %125)[i64 523777];
    store i32* %134 with i32 %133;
    i32* %135 = getelementptr &(i32* %123)[i64 2];
    i32 %136 = load i32* %135;
    i32* %137 = getelementptr &(i32* %125)[i64 2];
    store i32* %137 with i32 %136;
    i32* %138 = getelementptr &(i32* %123)[i64 523778];
    i32 %139 = load i32* %138;
    i32* %140 = getelementptr &(i32* %125)[i64 523778];
    store i32* %140 with i32 %139;
    i32* %141 = getelementptr &(i32* %123)[i64 3];
    i32 %142 = load i32* %141;
    i32* %143 = getelementptr &(i32* %125)[i64 3];
    store i32* %143 with i32 %142;
    i32* %144 = getelementptr &(i32* %123)[i64 523779];
    i32 %145 = load i32* %144;
    i32* %146 = getelementptr &(i32* %125)[i64 523779];
    store i32* %146 with i32 %145;
    i32* %147 = getelementptr &(i32* %123)[i64 4];
    i32 %148 = load i32* %147;
    i32* %149 = getelementptr &(i32* %125)[i64 4];
    store i32* %149 with i32 %148;
    i32* %150 = getelementptr &(i32* %123)[i64 523780];
    i32 %151 = load i32* %150;
    i32* %152 = getelementptr &(i32* %125)[i64 523780];
    store i32* %152 with i32 %151;
    i32* %153 = getelementptr &(i32* %123)[i64 5];
    i32 %154 = load i32* %153;
    i32* %155 = getelementptr &(i32* %125)[i64 5];
    store i32* %155 with i32 %154;
    i32* %156 = getelementptr &(i32* %123)[i64 523781];
    i32 %157 = load i32* %156;
    i32* %158 = getelementptr &(i32* %125)[i64 523781];
    store i32* %158 with i32 %157;
    i32* %159 = getelementptr &(i32* %123)[i64 6];
    i32 %160 = load i32* %159;
    i32* %161 = getelementptr &(i32* %125)[i64 6];
    store i32* %161 with i32 %160;
    i32* %162 = getelementptr &(i32* %123)[i64 523782];
    i32 %163 = load i32* %162;
    i32* %164 = getelementptr &(i32* %125)[i64 523782];
    store i32* %164 with i32 %163;
    i32* %165 = getelementptr &(i32* %123)[i64 7];
    i32 %166 = load i32* %165;
    i32* %167 = getelementptr &(i32* %125)[i64 7];
    store i32* %167 with i32 %166;
    i32* %168 = getelementptr &(i32* %123)[i64 523783];
    i32 %169 = load i32* %168;
    i32* %170 = getelementptr &(i32* %125)[i64 523783];
    store i32* %170 with i32 %169;
    i32 %171 = add i32 %122, i32 8;
    i1 %172 = icmp slt i32 %171, i32 512;
    cbr i1 %172(prob = 0.984375), ^while.body2, ^b1;
  ^b:
    i32 %173 = add i32 %4, i32 1;
    ubr ^while.header;
  ^b1:
    call (i32) -> void @stoptime(i32 59);
    i32* %174 = getelementptr &([524288 * i32]* %3)[i64 0][i64 0];
    call (i32, i32*) -> void @putarray(i32 524288, i32* %174);
    ret i32 %2;
}
