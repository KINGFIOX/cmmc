internal func @getarray() -> i32 { NoMemoryRead };
internal func @putarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [524288 * i32]* @image_in;
internal [524288 * i32]* @image_out;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    i32* %0 = getelementptr &([524288 * i32]* @image_in)[i64 0][i64 0];
    i32 %1 = call (i32*) -> i32 @getarray(i32* %0);
    call (i32) -> void @starttime(i32 23);
    ubr ^while.header;
^while.header:
    i32 %2 = phi [^entry, i32 1] [^b1, i32 %278];
    i1 %3 = scmp lt i32 %2, i32 511;
    i32 %4 = add i32 %2, i32 -1;
    cbr i1 %3(prob = 0.97), ^while.body, ^while.body1;
^while.body:
    i32 %5 = phi [^while.header, i32 1] [^b, i32 %13];
    i32 %6 = add i32 %5, i32 -1;
    i32 %7 = shl i32 %6, i32 9;
    i32 %8 = add i32 %2, i32 %7;
    i32 %9 = add i32 %4, i32 %7;
    i32 %10 = shl i32 %5, i32 9;
    i32 %11 = add i32 %2, i32 %10;
    i32 %12 = add i32 %4, i32 %10;
    i32 %13 = add i32 %5, i32 1;
    i32 %14 = shl i32 %13, i32 9;
    i32 %15 = add i32 %2, i32 %14;
    i32 %16 = add i32 %4, i32 %14;
    i32* %17 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %11];
    i32 %18 = load i32* %17;
    i32 %19 = shl i32 %18, i32 3;
    i32* %20 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %9];
    i32 %21 = load i32* %20;
    i32 %22 = sub i32 %19, i32 %21;
    i32* %23 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %8];
    i32 %24 = load i32* %23;
    i32 %25 = sub i32 %22, i32 %24;
    i32* %26 = getelementptr &(i32* %23)[i64 1];
    i32 %27 = load i32* %26;
    i32 %28 = sub i32 %25, i32 %27;
    i32* %29 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %12];
    i32 %30 = load i32* %29;
    i32 %31 = sub i32 %28, i32 %30;
    i32* %32 = getelementptr &(i32* %29)[i64 2];
    i32 %33 = load i32* %32;
    i32 %34 = sub i32 %31, i32 %33;
    i32* %35 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %16];
    i32 %36 = load i32* %35;
    i32 %37 = sub i32 %34, i32 %36;
    i32* %38 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %15];
    i32 %39 = load i32* %38;
    i32 %40 = sub i32 %37, i32 %39;
    i32* %41 = getelementptr &(i32* %38)[i64 1];
    i32 %42 = load i32* %41;
    i32 %43 = sub i32 %40, i32 %42;
    i32* %44 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %11];
    i1 %45 = scmp lt i32 %43, i32 0;
    cbr i1 %45(prob = 0.5), ^b, ^if.else;
^while.body1:
    i32 %46 = phi [^while.header, i32 0] [^while.body1, i32 %174];
    i32 %47 = shl i32 %46, i32 9;
    i32* %48 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %47];
    i32* %49 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %47];
    i32 %50 = load i32* %49;
    store i32* %48 with i32 %50;
    i32* %51 = getelementptr &(i32* %48)[i64 511];
    i32* %52 = getelementptr &(i32* %49)[i64 511];
    i32 %53 = load i32* %52;
    store i32* %51 with i32 %53;
    i32 %54 = add i32 %46, i32 1;
    i32 %55 = shl i32 %54, i32 9;
    i32* %56 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %55];
    i32* %57 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %55];
    i32 %58 = load i32* %57;
    store i32* %56 with i32 %58;
    i32* %59 = getelementptr &(i32* %56)[i64 511];
    i32* %60 = getelementptr &(i32* %57)[i64 511];
    i32 %61 = load i32* %60;
    store i32* %59 with i32 %61;
    i32 %62 = add i32 %46, i32 2;
    i32 %63 = shl i32 %62, i32 9;
    i32* %64 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %63];
    i32* %65 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %63];
    i32 %66 = load i32* %65;
    store i32* %64 with i32 %66;
    i32* %67 = getelementptr &(i32* %64)[i64 511];
    i32* %68 = getelementptr &(i32* %65)[i64 511];
    i32 %69 = load i32* %68;
    store i32* %67 with i32 %69;
    i32 %70 = add i32 %46, i32 3;
    i32 %71 = shl i32 %70, i32 9;
    i32* %72 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %71];
    i32* %73 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %71];
    i32 %74 = load i32* %73;
    store i32* %72 with i32 %74;
    i32* %75 = getelementptr &(i32* %72)[i64 511];
    i32* %76 = getelementptr &(i32* %73)[i64 511];
    i32 %77 = load i32* %76;
    store i32* %75 with i32 %77;
    i32 %78 = add i32 %46, i32 4;
    i32 %79 = shl i32 %78, i32 9;
    i32* %80 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %79];
    i32* %81 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %79];
    i32 %82 = load i32* %81;
    store i32* %80 with i32 %82;
    i32* %83 = getelementptr &(i32* %80)[i64 511];
    i32* %84 = getelementptr &(i32* %81)[i64 511];
    i32 %85 = load i32* %84;
    store i32* %83 with i32 %85;
    i32 %86 = add i32 %46, i32 5;
    i32 %87 = shl i32 %86, i32 9;
    i32* %88 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %87];
    i32* %89 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %87];
    i32 %90 = load i32* %89;
    store i32* %88 with i32 %90;
    i32* %91 = getelementptr &(i32* %88)[i64 511];
    i32* %92 = getelementptr &(i32* %89)[i64 511];
    i32 %93 = load i32* %92;
    store i32* %91 with i32 %93;
    i32 %94 = add i32 %46, i32 6;
    i32 %95 = shl i32 %94, i32 9;
    i32* %96 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %95];
    i32* %97 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %95];
    i32 %98 = load i32* %97;
    store i32* %96 with i32 %98;
    i32* %99 = getelementptr &(i32* %96)[i64 511];
    i32* %100 = getelementptr &(i32* %97)[i64 511];
    i32 %101 = load i32* %100;
    store i32* %99 with i32 %101;
    i32 %102 = add i32 %46, i32 7;
    i32 %103 = shl i32 %102, i32 9;
    i32* %104 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %103];
    i32* %105 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %103];
    i32 %106 = load i32* %105;
    store i32* %104 with i32 %106;
    i32* %107 = getelementptr &(i32* %104)[i64 511];
    i32* %108 = getelementptr &(i32* %105)[i64 511];
    i32 %109 = load i32* %108;
    store i32* %107 with i32 %109;
    i32 %110 = add i32 %46, i32 8;
    i32 %111 = shl i32 %110, i32 9;
    i32* %112 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %111];
    i32* %113 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %111];
    i32 %114 = load i32* %113;
    store i32* %112 with i32 %114;
    i32* %115 = getelementptr &(i32* %112)[i64 511];
    i32* %116 = getelementptr &(i32* %113)[i64 511];
    i32 %117 = load i32* %116;
    store i32* %115 with i32 %117;
    i32 %118 = add i32 %46, i32 9;
    i32 %119 = shl i32 %118, i32 9;
    i32* %120 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %119];
    i32* %121 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %119];
    i32 %122 = load i32* %121;
    store i32* %120 with i32 %122;
    i32* %123 = getelementptr &(i32* %120)[i64 511];
    i32* %124 = getelementptr &(i32* %121)[i64 511];
    i32 %125 = load i32* %124;
    store i32* %123 with i32 %125;
    i32 %126 = add i32 %46, i32 10;
    i32 %127 = shl i32 %126, i32 9;
    i32* %128 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %127];
    i32* %129 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %127];
    i32 %130 = load i32* %129;
    store i32* %128 with i32 %130;
    i32* %131 = getelementptr &(i32* %128)[i64 511];
    i32* %132 = getelementptr &(i32* %129)[i64 511];
    i32 %133 = load i32* %132;
    store i32* %131 with i32 %133;
    i32 %134 = add i32 %46, i32 11;
    i32 %135 = shl i32 %134, i32 9;
    i32* %136 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %135];
    i32* %137 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %135];
    i32 %138 = load i32* %137;
    store i32* %136 with i32 %138;
    i32* %139 = getelementptr &(i32* %136)[i64 511];
    i32* %140 = getelementptr &(i32* %137)[i64 511];
    i32 %141 = load i32* %140;
    store i32* %139 with i32 %141;
    i32 %142 = add i32 %46, i32 12;
    i32 %143 = shl i32 %142, i32 9;
    i32* %144 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %143];
    i32* %145 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %143];
    i32 %146 = load i32* %145;
    store i32* %144 with i32 %146;
    i32* %147 = getelementptr &(i32* %144)[i64 511];
    i32* %148 = getelementptr &(i32* %145)[i64 511];
    i32 %149 = load i32* %148;
    store i32* %147 with i32 %149;
    i32 %150 = add i32 %46, i32 13;
    i32 %151 = shl i32 %150, i32 9;
    i32* %152 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %151];
    i32* %153 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %151];
    i32 %154 = load i32* %153;
    store i32* %152 with i32 %154;
    i32* %155 = getelementptr &(i32* %152)[i64 511];
    i32* %156 = getelementptr &(i32* %153)[i64 511];
    i32 %157 = load i32* %156;
    store i32* %155 with i32 %157;
    i32 %158 = add i32 %46, i32 14;
    i32 %159 = shl i32 %158, i32 9;
    i32* %160 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %159];
    i32* %161 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %159];
    i32 %162 = load i32* %161;
    store i32* %160 with i32 %162;
    i32* %163 = getelementptr &(i32* %160)[i64 511];
    i32* %164 = getelementptr &(i32* %161)[i64 511];
    i32 %165 = load i32* %164;
    store i32* %163 with i32 %165;
    i32 %166 = add i32 %46, i32 15;
    i32 %167 = shl i32 %166, i32 9;
    i32* %168 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %167];
    i32* %169 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %167];
    i32 %170 = load i32* %169;
    store i32* %168 with i32 %170;
    i32* %171 = getelementptr &(i32* %168)[i64 511];
    i32* %172 = getelementptr &(i32* %169)[i64 511];
    i32 %173 = load i32* %172;
    store i32* %171 with i32 %173;
    i32 %174 = add i32 %46, i32 16;
    i1 %175 = scmp lt i32 %174, i32 1024;
    cbr i1 %175(prob = 0.98), ^while.body1, ^while.body2;
^b:
    i32 %176 = phi [^while.body, i32 0] [^if.else, i32 255] [^indirect, i32 %43];
    store i32* %44 with i32 %176;
    i1 %177 = scmp lt i32 %13, i32 1023;
    cbr i1 %177(prob = 1), ^while.body, ^b1;
^if.else:
    i1 %178 = scmp gt i32 %43, i32 255;
    cbr i1 %178(prob = 0.5), ^b, ^indirect;
^while.body2:
    i32 %179 = phi [^while.body1, i32 0] [^while.body2, i32 %276];
    i32* %180 = getelementptr &([524288 * i32]* @image_out)[i64 0][i32 %179];
    i32* %181 = getelementptr &([524288 * i32]* @image_in)[i64 0][i32 %179];
    i32 %182 = load i32* %181;
    store i32* %180 with i32 %182;
    i32* %183 = getelementptr &(i32* %180)[i64 523776];
    i32* %184 = getelementptr &(i32* %181)[i64 523776];
    i32 %185 = load i32* %184;
    store i32* %183 with i32 %185;
    i32* %186 = getelementptr &(i32* %180)[i64 1];
    i32* %187 = getelementptr &(i32* %181)[i64 1];
    i32 %188 = load i32* %187;
    store i32* %186 with i32 %188;
    i32* %189 = getelementptr &(i32* %180)[i64 523777];
    i32* %190 = getelementptr &(i32* %181)[i64 523777];
    i32 %191 = load i32* %190;
    store i32* %189 with i32 %191;
    i32* %192 = getelementptr &(i32* %180)[i64 2];
    i32* %193 = getelementptr &(i32* %181)[i64 2];
    i32 %194 = load i32* %193;
    store i32* %192 with i32 %194;
    i32* %195 = getelementptr &(i32* %180)[i64 523778];
    i32* %196 = getelementptr &(i32* %181)[i64 523778];
    i32 %197 = load i32* %196;
    store i32* %195 with i32 %197;
    i32* %198 = getelementptr &(i32* %180)[i64 3];
    i32* %199 = getelementptr &(i32* %181)[i64 3];
    i32 %200 = load i32* %199;
    store i32* %198 with i32 %200;
    i32* %201 = getelementptr &(i32* %180)[i64 523779];
    i32* %202 = getelementptr &(i32* %181)[i64 523779];
    i32 %203 = load i32* %202;
    store i32* %201 with i32 %203;
    i32* %204 = getelementptr &(i32* %180)[i64 4];
    i32* %205 = getelementptr &(i32* %181)[i64 4];
    i32 %206 = load i32* %205;
    store i32* %204 with i32 %206;
    i32* %207 = getelementptr &(i32* %180)[i64 523780];
    i32* %208 = getelementptr &(i32* %181)[i64 523780];
    i32 %209 = load i32* %208;
    store i32* %207 with i32 %209;
    i32* %210 = getelementptr &(i32* %180)[i64 5];
    i32* %211 = getelementptr &(i32* %181)[i64 5];
    i32 %212 = load i32* %211;
    store i32* %210 with i32 %212;
    i32* %213 = getelementptr &(i32* %180)[i64 523781];
    i32* %214 = getelementptr &(i32* %181)[i64 523781];
    i32 %215 = load i32* %214;
    store i32* %213 with i32 %215;
    i32* %216 = getelementptr &(i32* %180)[i64 6];
    i32* %217 = getelementptr &(i32* %181)[i64 6];
    i32 %218 = load i32* %217;
    store i32* %216 with i32 %218;
    i32* %219 = getelementptr &(i32* %180)[i64 523782];
    i32* %220 = getelementptr &(i32* %181)[i64 523782];
    i32 %221 = load i32* %220;
    store i32* %219 with i32 %221;
    i32* %222 = getelementptr &(i32* %180)[i64 7];
    i32* %223 = getelementptr &(i32* %181)[i64 7];
    i32 %224 = load i32* %223;
    store i32* %222 with i32 %224;
    i32* %225 = getelementptr &(i32* %180)[i64 523783];
    i32* %226 = getelementptr &(i32* %181)[i64 523783];
    i32 %227 = load i32* %226;
    store i32* %225 with i32 %227;
    i32* %228 = getelementptr &(i32* %180)[i64 8];
    i32* %229 = getelementptr &(i32* %181)[i64 8];
    i32 %230 = load i32* %229;
    store i32* %228 with i32 %230;
    i32* %231 = getelementptr &(i32* %180)[i64 523784];
    i32* %232 = getelementptr &(i32* %181)[i64 523784];
    i32 %233 = load i32* %232;
    store i32* %231 with i32 %233;
    i32* %234 = getelementptr &(i32* %180)[i64 9];
    i32* %235 = getelementptr &(i32* %181)[i64 9];
    i32 %236 = load i32* %235;
    store i32* %234 with i32 %236;
    i32* %237 = getelementptr &(i32* %180)[i64 523785];
    i32* %238 = getelementptr &(i32* %181)[i64 523785];
    i32 %239 = load i32* %238;
    store i32* %237 with i32 %239;
    i32* %240 = getelementptr &(i32* %180)[i64 10];
    i32* %241 = getelementptr &(i32* %181)[i64 10];
    i32 %242 = load i32* %241;
    store i32* %240 with i32 %242;
    i32* %243 = getelementptr &(i32* %180)[i64 523786];
    i32* %244 = getelementptr &(i32* %181)[i64 523786];
    i32 %245 = load i32* %244;
    store i32* %243 with i32 %245;
    i32* %246 = getelementptr &(i32* %180)[i64 11];
    i32* %247 = getelementptr &(i32* %181)[i64 11];
    i32 %248 = load i32* %247;
    store i32* %246 with i32 %248;
    i32* %249 = getelementptr &(i32* %180)[i64 523787];
    i32* %250 = getelementptr &(i32* %181)[i64 523787];
    i32 %251 = load i32* %250;
    store i32* %249 with i32 %251;
    i32* %252 = getelementptr &(i32* %180)[i64 12];
    i32* %253 = getelementptr &(i32* %181)[i64 12];
    i32 %254 = load i32* %253;
    store i32* %252 with i32 %254;
    i32* %255 = getelementptr &(i32* %180)[i64 523788];
    i32* %256 = getelementptr &(i32* %181)[i64 523788];
    i32 %257 = load i32* %256;
    store i32* %255 with i32 %257;
    i32* %258 = getelementptr &(i32* %180)[i64 13];
    i32* %259 = getelementptr &(i32* %181)[i64 13];
    i32 %260 = load i32* %259;
    store i32* %258 with i32 %260;
    i32* %261 = getelementptr &(i32* %180)[i64 523789];
    i32* %262 = getelementptr &(i32* %181)[i64 523789];
    i32 %263 = load i32* %262;
    store i32* %261 with i32 %263;
    i32* %264 = getelementptr &(i32* %180)[i64 14];
    i32* %265 = getelementptr &(i32* %181)[i64 14];
    i32 %266 = load i32* %265;
    store i32* %264 with i32 %266;
    i32* %267 = getelementptr &(i32* %180)[i64 523790];
    i32* %268 = getelementptr &(i32* %181)[i64 523790];
    i32 %269 = load i32* %268;
    store i32* %267 with i32 %269;
    i32* %270 = getelementptr &(i32* %180)[i64 15];
    i32* %271 = getelementptr &(i32* %181)[i64 15];
    i32 %272 = load i32* %271;
    store i32* %270 with i32 %272;
    i32* %273 = getelementptr &(i32* %180)[i64 523791];
    i32* %274 = getelementptr &(i32* %181)[i64 523791];
    i32 %275 = load i32* %274;
    store i32* %273 with i32 %275;
    i32 %276 = add i32 %179, i32 16;
    i1 %277 = scmp lt i32 %276, i32 512;
    cbr i1 %277(prob = 0.97), ^while.body2, ^b2;
^b1:
    i32 %278 = add i32 %2, i32 1;
    ubr ^while.header;
^indirect:
    ubr ^b;
^b2:
    call (i32) -> void @stoptime(i32 59);
    i32* %279 = getelementptr &([524288 * i32]* @image_out)[i64 0][i64 0];
    call (i32, i32*) -> void @putarray(i32 524288, i32* %279);
    ret i32 %1;
}
