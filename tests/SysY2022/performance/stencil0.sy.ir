internal func @getarray() -> i32 { NoMemoryRead };
internal func @putarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [524288 * i32]* @image_in;
internal [524288 * i32]* @image_out;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [524288 * i32]* %0 = ptrcast [524288 * i32]* @image_in to [524288 * i32]*;
    i32* %1 = getelementptr &([524288 * i32]* %0)[i64 0][i64 0];
    i32 %2 = call (i32*) -> i32 @getarray(i32* %1);
    call (i32) -> void @starttime(i32 23);
    [524288 * i32]* %3 = ptrcast [524288 * i32]* @image_out to [524288 * i32]*;
    ubr ^while.header;
  ^while.header:
    i32 %4 = phi [^entry, i32 1] [^b1, i32 %297];
    i1 %5 = scmp lt i32 %4, i32 511;
    i32 %6 = add i32 %4, i32 -1;
    cbr i1 %5(prob = 0.97), ^while.body, ^while.body1;
  ^while.body:
    i32 %7 = phi [^while.header, i32 1] [^b, i32 %33];
    i32 %8 = mul i32 %7, i32 512;
    i32 %9 = add i32 %4, i32 %8;
    i32* %10 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %9];
    i32 %11 = load i32* %10;
    i32 %12 = mul i32 %11, i32 8;
    i32 %13 = add i32 %7, i32 -1;
    i32 %14 = mul i32 %13, i32 512;
    i32 %15 = add i32 %6, i32 %14;
    i32* %16 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %15];
    i32 %17 = load i32* %16;
    i32 %18 = sub i32 %12, i32 %17;
    i32 %19 = add i32 %4, i32 %14;
    i32* %20 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %19];
    i32 %21 = load i32* %20;
    i32 %22 = sub i32 %18, i32 %21;
    i32* %23 = getelementptr &(i32* %20)[i64 1];
    i32 %24 = load i32* %23;
    i32 %25 = sub i32 %22, i32 %24;
    i32 %26 = add i32 %6, i32 %8;
    i32* %27 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %26];
    i32 %28 = load i32* %27;
    i32 %29 = sub i32 %25, i32 %28;
    i32* %30 = getelementptr &(i32* %27)[i64 2];
    i32 %31 = load i32* %30;
    i32 %32 = sub i32 %29, i32 %31;
    i32 %33 = add i32 %7, i32 1;
    i32 %34 = mul i32 %33, i32 512;
    i32 %35 = add i32 %6, i32 %34;
    i32* %36 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %35];
    i32 %37 = load i32* %36;
    i32 %38 = sub i32 %32, i32 %37;
    i32 %39 = add i32 %4, i32 %34;
    i32* %40 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %39];
    i32 %41 = load i32* %40;
    i32 %42 = sub i32 %38, i32 %41;
    i32* %43 = getelementptr &(i32* %40)[i64 1];
    i32 %44 = load i32* %43;
    i32 %45 = sub i32 %42, i32 %44;
    i1 %46 = scmp lt i32 %45, i32 0;
    i32* %47 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %9];
    cbr i1 %46(prob = 0.5), ^b, ^if.else;
  ^while.body1:
    i32 %48 = phi [^while.header, i32 0] [^while.body1, i32 %188];
    i32 %49 = mul i32 %48, i32 512;
    i32* %50 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %49];
    i32 %51 = load i32* %50;
    i32* %52 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %49];
    store i32* %52 with i32 %51;
    i32 %53 = add i32 %48, i32 1;
    i32 %54 = mul i32 %53, i32 512;
    i32 %55 = add i32 %54, i32 -1;
    i32* %56 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %55];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %55];
    store i32* %58 with i32 %57;
    i32* %59 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %54];
    i32 %60 = load i32* %59;
    i32* %61 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %54];
    store i32* %61 with i32 %60;
    i32 %62 = add i32 %48, i32 2;
    i32 %63 = mul i32 %62, i32 512;
    i32 %64 = add i32 %63, i32 -1;
    i32* %65 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %64];
    i32 %66 = load i32* %65;
    i32* %67 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %64];
    store i32* %67 with i32 %66;
    i32* %68 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %63];
    i32 %69 = load i32* %68;
    i32* %70 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %63];
    store i32* %70 with i32 %69;
    i32 %71 = add i32 %48, i32 3;
    i32 %72 = mul i32 %71, i32 512;
    i32 %73 = add i32 %72, i32 -1;
    i32* %74 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %73];
    i32 %75 = load i32* %74;
    i32* %76 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %73];
    store i32* %76 with i32 %75;
    i32* %77 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %72];
    i32 %78 = load i32* %77;
    i32* %79 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %72];
    store i32* %79 with i32 %78;
    i32 %80 = add i32 %48, i32 4;
    i32 %81 = mul i32 %80, i32 512;
    i32 %82 = add i32 %81, i32 -1;
    i32* %83 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %82];
    i32 %84 = load i32* %83;
    i32* %85 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %82];
    store i32* %85 with i32 %84;
    i32* %86 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %81];
    i32 %87 = load i32* %86;
    i32* %88 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %81];
    store i32* %88 with i32 %87;
    i32 %89 = add i32 %48, i32 5;
    i32 %90 = mul i32 %89, i32 512;
    i32 %91 = add i32 %90, i32 -1;
    i32* %92 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %91];
    i32 %93 = load i32* %92;
    i32* %94 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %91];
    store i32* %94 with i32 %93;
    i32* %95 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %90];
    i32 %96 = load i32* %95;
    i32* %97 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %90];
    store i32* %97 with i32 %96;
    i32 %98 = add i32 %48, i32 6;
    i32 %99 = mul i32 %98, i32 512;
    i32 %100 = add i32 %99, i32 -1;
    i32* %101 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %100];
    i32 %102 = load i32* %101;
    i32* %103 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %100];
    store i32* %103 with i32 %102;
    i32* %104 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %99];
    i32 %105 = load i32* %104;
    i32* %106 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %99];
    store i32* %106 with i32 %105;
    i32 %107 = add i32 %48, i32 7;
    i32 %108 = mul i32 %107, i32 512;
    i32 %109 = add i32 %108, i32 -1;
    i32* %110 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %109];
    i32 %111 = load i32* %110;
    i32* %112 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %109];
    store i32* %112 with i32 %111;
    i32* %113 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %108];
    i32 %114 = load i32* %113;
    i32* %115 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %108];
    store i32* %115 with i32 %114;
    i32 %116 = add i32 %48, i32 8;
    i32 %117 = mul i32 %116, i32 512;
    i32 %118 = add i32 %117, i32 -1;
    i32* %119 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %118];
    i32 %120 = load i32* %119;
    i32* %121 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %118];
    store i32* %121 with i32 %120;
    i32* %122 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %117];
    i32 %123 = load i32* %122;
    i32* %124 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %117];
    store i32* %124 with i32 %123;
    i32 %125 = add i32 %48, i32 9;
    i32 %126 = mul i32 %125, i32 512;
    i32 %127 = add i32 %126, i32 -1;
    i32* %128 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %127];
    i32 %129 = load i32* %128;
    i32* %130 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %127];
    store i32* %130 with i32 %129;
    i32* %131 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %126];
    i32 %132 = load i32* %131;
    i32* %133 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %126];
    store i32* %133 with i32 %132;
    i32 %134 = add i32 %48, i32 10;
    i32 %135 = mul i32 %134, i32 512;
    i32 %136 = add i32 %135, i32 -1;
    i32* %137 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %136];
    i32 %138 = load i32* %137;
    i32* %139 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %136];
    store i32* %139 with i32 %138;
    i32* %140 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %135];
    i32 %141 = load i32* %140;
    i32* %142 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %135];
    store i32* %142 with i32 %141;
    i32 %143 = add i32 %48, i32 11;
    i32 %144 = mul i32 %143, i32 512;
    i32 %145 = add i32 %144, i32 -1;
    i32* %146 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %145];
    i32 %147 = load i32* %146;
    i32* %148 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %145];
    store i32* %148 with i32 %147;
    i32* %149 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %144];
    i32 %150 = load i32* %149;
    i32* %151 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %144];
    store i32* %151 with i32 %150;
    i32 %152 = add i32 %48, i32 12;
    i32 %153 = mul i32 %152, i32 512;
    i32 %154 = add i32 %153, i32 -1;
    i32* %155 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %154];
    i32 %156 = load i32* %155;
    i32* %157 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %154];
    store i32* %157 with i32 %156;
    i32* %158 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %153];
    i32 %159 = load i32* %158;
    i32* %160 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %153];
    store i32* %160 with i32 %159;
    i32 %161 = add i32 %48, i32 13;
    i32 %162 = mul i32 %161, i32 512;
    i32 %163 = add i32 %162, i32 -1;
    i32* %164 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %163];
    i32 %165 = load i32* %164;
    i32* %166 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %163];
    store i32* %166 with i32 %165;
    i32* %167 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %162];
    i32 %168 = load i32* %167;
    i32* %169 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %162];
    store i32* %169 with i32 %168;
    i32 %170 = add i32 %48, i32 14;
    i32 %171 = mul i32 %170, i32 512;
    i32 %172 = add i32 %171, i32 -1;
    i32* %173 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %172];
    i32 %174 = load i32* %173;
    i32* %175 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %172];
    store i32* %175 with i32 %174;
    i32* %176 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %171];
    i32 %177 = load i32* %176;
    i32* %178 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %171];
    store i32* %178 with i32 %177;
    i32 %179 = add i32 %48, i32 15;
    i32 %180 = mul i32 %179, i32 512;
    i32 %181 = add i32 %180, i32 -1;
    i32* %182 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %181];
    i32 %183 = load i32* %182;
    i32* %184 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %181];
    store i32* %184 with i32 %183;
    i32* %185 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %180];
    i32 %186 = load i32* %185;
    i32* %187 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %180];
    store i32* %187 with i32 %186;
    i32 %188 = add i32 %48, i32 16;
    i32 %189 = mul i32 %188, i32 512;
    i32 %190 = add i32 %189, i32 -1;
    i32* %191 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %190];
    i32 %192 = load i32* %191;
    i32* %193 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %190];
    store i32* %193 with i32 %192;
    i1 %194 = scmp lt i32 %188, i32 1024;
    cbr i1 %194(prob = 0.98), ^while.body1, ^while.body2;
  ^b:
    i32 %195 = phi [^while.body, i32 0] [^if.else, i32 255] [^indirect, i32 %45];
    store i32* %47 with i32 %195;
    i1 %196 = scmp lt i32 %33, i32 1023;
    cbr i1 %196(prob = 1), ^while.body, ^b1;
  ^if.else:
    i1 %197 = scmp gt i32 %45, i32 255;
    cbr i1 %197(prob = 0.5), ^b, ^indirect;
  ^while.body2:
    i32 %198 = phi [^while.body1, i32 0] [^while.body2, i32 %295];
    i32* %199 = getelementptr &([524288 * i32]* %0)[i64 0][i32 %198];
    i32 %200 = load i32* %199;
    i32* %201 = getelementptr &([524288 * i32]* %3)[i64 0][i32 %198];
    store i32* %201 with i32 %200;
    i32* %202 = getelementptr &(i32* %199)[i64 523776];
    i32 %203 = load i32* %202;
    i32* %204 = getelementptr &(i32* %201)[i64 523776];
    store i32* %204 with i32 %203;
    i32* %205 = getelementptr &(i32* %199)[i64 1];
    i32 %206 = load i32* %205;
    i32* %207 = getelementptr &(i32* %201)[i64 1];
    store i32* %207 with i32 %206;
    i32* %208 = getelementptr &(i32* %199)[i64 523777];
    i32 %209 = load i32* %208;
    i32* %210 = getelementptr &(i32* %201)[i64 523777];
    store i32* %210 with i32 %209;
    i32* %211 = getelementptr &(i32* %199)[i64 2];
    i32 %212 = load i32* %211;
    i32* %213 = getelementptr &(i32* %201)[i64 2];
    store i32* %213 with i32 %212;
    i32* %214 = getelementptr &(i32* %199)[i64 523778];
    i32 %215 = load i32* %214;
    i32* %216 = getelementptr &(i32* %201)[i64 523778];
    store i32* %216 with i32 %215;
    i32* %217 = getelementptr &(i32* %199)[i64 3];
    i32 %218 = load i32* %217;
    i32* %219 = getelementptr &(i32* %201)[i64 3];
    store i32* %219 with i32 %218;
    i32* %220 = getelementptr &(i32* %199)[i64 523779];
    i32 %221 = load i32* %220;
    i32* %222 = getelementptr &(i32* %201)[i64 523779];
    store i32* %222 with i32 %221;
    i32* %223 = getelementptr &(i32* %199)[i64 4];
    i32 %224 = load i32* %223;
    i32* %225 = getelementptr &(i32* %201)[i64 4];
    store i32* %225 with i32 %224;
    i32* %226 = getelementptr &(i32* %199)[i64 523780];
    i32 %227 = load i32* %226;
    i32* %228 = getelementptr &(i32* %201)[i64 523780];
    store i32* %228 with i32 %227;
    i32* %229 = getelementptr &(i32* %199)[i64 5];
    i32 %230 = load i32* %229;
    i32* %231 = getelementptr &(i32* %201)[i64 5];
    store i32* %231 with i32 %230;
    i32* %232 = getelementptr &(i32* %199)[i64 523781];
    i32 %233 = load i32* %232;
    i32* %234 = getelementptr &(i32* %201)[i64 523781];
    store i32* %234 with i32 %233;
    i32* %235 = getelementptr &(i32* %199)[i64 6];
    i32 %236 = load i32* %235;
    i32* %237 = getelementptr &(i32* %201)[i64 6];
    store i32* %237 with i32 %236;
    i32* %238 = getelementptr &(i32* %199)[i64 523782];
    i32 %239 = load i32* %238;
    i32* %240 = getelementptr &(i32* %201)[i64 523782];
    store i32* %240 with i32 %239;
    i32* %241 = getelementptr &(i32* %199)[i64 7];
    i32 %242 = load i32* %241;
    i32* %243 = getelementptr &(i32* %201)[i64 7];
    store i32* %243 with i32 %242;
    i32* %244 = getelementptr &(i32* %199)[i64 523783];
    i32 %245 = load i32* %244;
    i32* %246 = getelementptr &(i32* %201)[i64 523783];
    store i32* %246 with i32 %245;
    i32* %247 = getelementptr &(i32* %199)[i64 8];
    i32 %248 = load i32* %247;
    i32* %249 = getelementptr &(i32* %201)[i64 8];
    store i32* %249 with i32 %248;
    i32* %250 = getelementptr &(i32* %199)[i64 523784];
    i32 %251 = load i32* %250;
    i32* %252 = getelementptr &(i32* %201)[i64 523784];
    store i32* %252 with i32 %251;
    i32* %253 = getelementptr &(i32* %199)[i64 9];
    i32 %254 = load i32* %253;
    i32* %255 = getelementptr &(i32* %201)[i64 9];
    store i32* %255 with i32 %254;
    i32* %256 = getelementptr &(i32* %199)[i64 523785];
    i32 %257 = load i32* %256;
    i32* %258 = getelementptr &(i32* %201)[i64 523785];
    store i32* %258 with i32 %257;
    i32* %259 = getelementptr &(i32* %199)[i64 10];
    i32 %260 = load i32* %259;
    i32* %261 = getelementptr &(i32* %201)[i64 10];
    store i32* %261 with i32 %260;
    i32* %262 = getelementptr &(i32* %199)[i64 523786];
    i32 %263 = load i32* %262;
    i32* %264 = getelementptr &(i32* %201)[i64 523786];
    store i32* %264 with i32 %263;
    i32* %265 = getelementptr &(i32* %199)[i64 11];
    i32 %266 = load i32* %265;
    i32* %267 = getelementptr &(i32* %201)[i64 11];
    store i32* %267 with i32 %266;
    i32* %268 = getelementptr &(i32* %199)[i64 523787];
    i32 %269 = load i32* %268;
    i32* %270 = getelementptr &(i32* %201)[i64 523787];
    store i32* %270 with i32 %269;
    i32* %271 = getelementptr &(i32* %199)[i64 12];
    i32 %272 = load i32* %271;
    i32* %273 = getelementptr &(i32* %201)[i64 12];
    store i32* %273 with i32 %272;
    i32* %274 = getelementptr &(i32* %199)[i64 523788];
    i32 %275 = load i32* %274;
    i32* %276 = getelementptr &(i32* %201)[i64 523788];
    store i32* %276 with i32 %275;
    i32* %277 = getelementptr &(i32* %199)[i64 13];
    i32 %278 = load i32* %277;
    i32* %279 = getelementptr &(i32* %201)[i64 13];
    store i32* %279 with i32 %278;
    i32* %280 = getelementptr &(i32* %199)[i64 523789];
    i32 %281 = load i32* %280;
    i32* %282 = getelementptr &(i32* %201)[i64 523789];
    store i32* %282 with i32 %281;
    i32* %283 = getelementptr &(i32* %199)[i64 14];
    i32 %284 = load i32* %283;
    i32* %285 = getelementptr &(i32* %201)[i64 14];
    store i32* %285 with i32 %284;
    i32* %286 = getelementptr &(i32* %199)[i64 523790];
    i32 %287 = load i32* %286;
    i32* %288 = getelementptr &(i32* %201)[i64 523790];
    store i32* %288 with i32 %287;
    i32* %289 = getelementptr &(i32* %199)[i64 15];
    i32 %290 = load i32* %289;
    i32* %291 = getelementptr &(i32* %201)[i64 15];
    store i32* %291 with i32 %290;
    i32* %292 = getelementptr &(i32* %199)[i64 523791];
    i32 %293 = load i32* %292;
    i32* %294 = getelementptr &(i32* %201)[i64 523791];
    store i32* %294 with i32 %293;
    i32 %295 = add i32 %198, i32 16;
    i1 %296 = scmp lt i32 %295, i32 512;
    cbr i1 %296(prob = 0.97), ^while.body2, ^b2;
  ^b1:
    i32 %297 = add i32 %4, i32 1;
    ubr ^while.header;
  ^indirect:
    ubr ^b;
  ^b2:
    call (i32) -> void @stoptime(i32 59);
    i32* %298 = getelementptr &([524288 * i32]* %3)[i64 0][i64 0];
    call (i32, i32*) -> void @putarray(i32 524288, i32* %298);
    ret i32 %2;
}
