internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = scmp gt i32 %0, i32 0;
    call (i32) -> void @starttime(i32 1016);
    cbr i1 %1(prob = 0.97), ^super.header, ^b;
  ^super.header:
    i32 %2 = phi [^entry, i32 0] [^indirect, i32 %4];
    i32 %3 = phi [^entry, i32 0] [^indirect, i32 %149];
    i32 %4 = add i32 %2, i32 16;
    i1 %5 = scmp lt i32 %4, i32 %0;
    cbr i1 %5(prob = 0.67), ^indirect, ^super.header1;
  ^b:
    i32 %6 = phi [^entry, i32 0] [^indirect2, i32 %306];
    call (i32) -> void @stoptime(i32 1031);
    call (i32) -> void @putint(i32 %6);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
  ^indirect:
    i32 %7 = mul i32 %2, i32 2;
    i32 %8 = sdiv i32 %7, i32 2;
    i32 %9 = mul i32 %8, i32 1000;
    i32 %10 = sdiv i32 %9, i32 1000;
    i32 %11 = mul i32 %10, i32 300;
    i32 %12 = sdiv i32 %11, i32 300;
    i32 %13 = add i32 %3, i32 %12;
    i32 %14 = srem i32 %13, i32 2147385347;
    i32 %15 = add i32 %2, i32 1;
    i32 %16 = mul i32 %15, i32 2;
    i32 %17 = sdiv i32 %16, i32 2;
    i32 %18 = mul i32 %17, i32 1000;
    i32 %19 = sdiv i32 %18, i32 1000;
    i32 %20 = mul i32 %19, i32 300;
    i32 %21 = sdiv i32 %20, i32 300;
    i32 %22 = add i32 %14, i32 %21;
    i32 %23 = srem i32 %22, i32 2147385347;
    i32 %24 = add i32 %2, i32 2;
    i32 %25 = mul i32 %24, i32 2;
    i32 %26 = sdiv i32 %25, i32 2;
    i32 %27 = mul i32 %26, i32 1000;
    i32 %28 = sdiv i32 %27, i32 1000;
    i32 %29 = mul i32 %28, i32 300;
    i32 %30 = sdiv i32 %29, i32 300;
    i32 %31 = add i32 %23, i32 %30;
    i32 %32 = srem i32 %31, i32 2147385347;
    i32 %33 = add i32 %2, i32 3;
    i32 %34 = mul i32 %33, i32 2;
    i32 %35 = sdiv i32 %34, i32 2;
    i32 %36 = mul i32 %35, i32 1000;
    i32 %37 = sdiv i32 %36, i32 1000;
    i32 %38 = mul i32 %37, i32 300;
    i32 %39 = sdiv i32 %38, i32 300;
    i32 %40 = add i32 %32, i32 %39;
    i32 %41 = srem i32 %40, i32 2147385347;
    i32 %42 = add i32 %2, i32 4;
    i32 %43 = mul i32 %42, i32 2;
    i32 %44 = sdiv i32 %43, i32 2;
    i32 %45 = mul i32 %44, i32 1000;
    i32 %46 = sdiv i32 %45, i32 1000;
    i32 %47 = mul i32 %46, i32 300;
    i32 %48 = sdiv i32 %47, i32 300;
    i32 %49 = add i32 %41, i32 %48;
    i32 %50 = srem i32 %49, i32 2147385347;
    i32 %51 = add i32 %2, i32 5;
    i32 %52 = mul i32 %51, i32 2;
    i32 %53 = sdiv i32 %52, i32 2;
    i32 %54 = mul i32 %53, i32 1000;
    i32 %55 = sdiv i32 %54, i32 1000;
    i32 %56 = mul i32 %55, i32 300;
    i32 %57 = sdiv i32 %56, i32 300;
    i32 %58 = add i32 %50, i32 %57;
    i32 %59 = srem i32 %58, i32 2147385347;
    i32 %60 = add i32 %2, i32 6;
    i32 %61 = mul i32 %60, i32 2;
    i32 %62 = sdiv i32 %61, i32 2;
    i32 %63 = mul i32 %62, i32 1000;
    i32 %64 = sdiv i32 %63, i32 1000;
    i32 %65 = mul i32 %64, i32 300;
    i32 %66 = sdiv i32 %65, i32 300;
    i32 %67 = add i32 %59, i32 %66;
    i32 %68 = srem i32 %67, i32 2147385347;
    i32 %69 = add i32 %2, i32 7;
    i32 %70 = mul i32 %69, i32 2;
    i32 %71 = sdiv i32 %70, i32 2;
    i32 %72 = mul i32 %71, i32 1000;
    i32 %73 = sdiv i32 %72, i32 1000;
    i32 %74 = mul i32 %73, i32 300;
    i32 %75 = sdiv i32 %74, i32 300;
    i32 %76 = add i32 %68, i32 %75;
    i32 %77 = srem i32 %76, i32 2147385347;
    i32 %78 = add i32 %2, i32 8;
    i32 %79 = mul i32 %78, i32 2;
    i32 %80 = sdiv i32 %79, i32 2;
    i32 %81 = mul i32 %80, i32 1000;
    i32 %82 = sdiv i32 %81, i32 1000;
    i32 %83 = mul i32 %82, i32 300;
    i32 %84 = sdiv i32 %83, i32 300;
    i32 %85 = add i32 %77, i32 %84;
    i32 %86 = srem i32 %85, i32 2147385347;
    i32 %87 = add i32 %2, i32 9;
    i32 %88 = mul i32 %87, i32 2;
    i32 %89 = sdiv i32 %88, i32 2;
    i32 %90 = mul i32 %89, i32 1000;
    i32 %91 = sdiv i32 %90, i32 1000;
    i32 %92 = mul i32 %91, i32 300;
    i32 %93 = sdiv i32 %92, i32 300;
    i32 %94 = add i32 %86, i32 %93;
    i32 %95 = srem i32 %94, i32 2147385347;
    i32 %96 = add i32 %2, i32 10;
    i32 %97 = mul i32 %96, i32 2;
    i32 %98 = sdiv i32 %97, i32 2;
    i32 %99 = mul i32 %98, i32 1000;
    i32 %100 = sdiv i32 %99, i32 1000;
    i32 %101 = mul i32 %100, i32 300;
    i32 %102 = sdiv i32 %101, i32 300;
    i32 %103 = add i32 %95, i32 %102;
    i32 %104 = srem i32 %103, i32 2147385347;
    i32 %105 = add i32 %2, i32 11;
    i32 %106 = mul i32 %105, i32 2;
    i32 %107 = sdiv i32 %106, i32 2;
    i32 %108 = mul i32 %107, i32 1000;
    i32 %109 = sdiv i32 %108, i32 1000;
    i32 %110 = mul i32 %109, i32 300;
    i32 %111 = sdiv i32 %110, i32 300;
    i32 %112 = add i32 %104, i32 %111;
    i32 %113 = srem i32 %112, i32 2147385347;
    i32 %114 = add i32 %2, i32 12;
    i32 %115 = mul i32 %114, i32 2;
    i32 %116 = sdiv i32 %115, i32 2;
    i32 %117 = mul i32 %116, i32 1000;
    i32 %118 = sdiv i32 %117, i32 1000;
    i32 %119 = mul i32 %118, i32 300;
    i32 %120 = sdiv i32 %119, i32 300;
    i32 %121 = add i32 %113, i32 %120;
    i32 %122 = srem i32 %121, i32 2147385347;
    i32 %123 = add i32 %2, i32 13;
    i32 %124 = mul i32 %123, i32 2;
    i32 %125 = sdiv i32 %124, i32 2;
    i32 %126 = mul i32 %125, i32 1000;
    i32 %127 = sdiv i32 %126, i32 1000;
    i32 %128 = mul i32 %127, i32 300;
    i32 %129 = sdiv i32 %128, i32 300;
    i32 %130 = add i32 %122, i32 %129;
    i32 %131 = srem i32 %130, i32 2147385347;
    i32 %132 = add i32 %2, i32 14;
    i32 %133 = mul i32 %132, i32 2;
    i32 %134 = sdiv i32 %133, i32 2;
    i32 %135 = mul i32 %134, i32 1000;
    i32 %136 = sdiv i32 %135, i32 1000;
    i32 %137 = mul i32 %136, i32 300;
    i32 %138 = sdiv i32 %137, i32 300;
    i32 %139 = add i32 %131, i32 %138;
    i32 %140 = srem i32 %139, i32 2147385347;
    i32 %141 = add i32 %2, i32 15;
    i32 %142 = mul i32 %141, i32 2;
    i32 %143 = sdiv i32 %142, i32 2;
    i32 %144 = mul i32 %143, i32 1000;
    i32 %145 = sdiv i32 %144, i32 1000;
    i32 %146 = mul i32 %145, i32 300;
    i32 %147 = sdiv i32 %146, i32 300;
    i32 %148 = add i32 %140, i32 %147;
    i32 %149 = srem i32 %148, i32 2147385347;
    ubr ^super.header;
  ^super.header1:
    i32 %150 = phi [^super.header, i32 %2] [^indirect1, i32 %152];
    i32 %151 = phi [^super.header, i32 %3] [^indirect1, i32 %296];
    i32 %152 = add i32 %150, i32 16;
    i1 %153 = scmp lt i32 %152, i32 %0;
    cbr i1 %153(prob = 0.67), ^indirect1, ^indirect2;
  ^indirect1:
    i32 %154 = mul i32 %150, i32 2;
    i32 %155 = sdiv i32 %154, i32 2;
    i32 %156 = mul i32 %155, i32 1000;
    i32 %157 = sdiv i32 %156, i32 1000;
    i32 %158 = mul i32 %157, i32 300;
    i32 %159 = sdiv i32 %158, i32 300;
    i32 %160 = add i32 %151, i32 %159;
    i32 %161 = srem i32 %160, i32 2147385347;
    i32 %162 = add i32 %150, i32 1;
    i32 %163 = mul i32 %162, i32 2;
    i32 %164 = sdiv i32 %163, i32 2;
    i32 %165 = mul i32 %164, i32 1000;
    i32 %166 = sdiv i32 %165, i32 1000;
    i32 %167 = mul i32 %166, i32 300;
    i32 %168 = sdiv i32 %167, i32 300;
    i32 %169 = add i32 %161, i32 %168;
    i32 %170 = srem i32 %169, i32 2147385347;
    i32 %171 = add i32 %150, i32 2;
    i32 %172 = mul i32 %171, i32 2;
    i32 %173 = sdiv i32 %172, i32 2;
    i32 %174 = mul i32 %173, i32 1000;
    i32 %175 = sdiv i32 %174, i32 1000;
    i32 %176 = mul i32 %175, i32 300;
    i32 %177 = sdiv i32 %176, i32 300;
    i32 %178 = add i32 %170, i32 %177;
    i32 %179 = srem i32 %178, i32 2147385347;
    i32 %180 = add i32 %150, i32 3;
    i32 %181 = mul i32 %180, i32 2;
    i32 %182 = sdiv i32 %181, i32 2;
    i32 %183 = mul i32 %182, i32 1000;
    i32 %184 = sdiv i32 %183, i32 1000;
    i32 %185 = mul i32 %184, i32 300;
    i32 %186 = sdiv i32 %185, i32 300;
    i32 %187 = add i32 %179, i32 %186;
    i32 %188 = srem i32 %187, i32 2147385347;
    i32 %189 = add i32 %150, i32 4;
    i32 %190 = mul i32 %189, i32 2;
    i32 %191 = sdiv i32 %190, i32 2;
    i32 %192 = mul i32 %191, i32 1000;
    i32 %193 = sdiv i32 %192, i32 1000;
    i32 %194 = mul i32 %193, i32 300;
    i32 %195 = sdiv i32 %194, i32 300;
    i32 %196 = add i32 %188, i32 %195;
    i32 %197 = srem i32 %196, i32 2147385347;
    i32 %198 = add i32 %150, i32 5;
    i32 %199 = mul i32 %198, i32 2;
    i32 %200 = sdiv i32 %199, i32 2;
    i32 %201 = mul i32 %200, i32 1000;
    i32 %202 = sdiv i32 %201, i32 1000;
    i32 %203 = mul i32 %202, i32 300;
    i32 %204 = sdiv i32 %203, i32 300;
    i32 %205 = add i32 %197, i32 %204;
    i32 %206 = srem i32 %205, i32 2147385347;
    i32 %207 = add i32 %150, i32 6;
    i32 %208 = mul i32 %207, i32 2;
    i32 %209 = sdiv i32 %208, i32 2;
    i32 %210 = mul i32 %209, i32 1000;
    i32 %211 = sdiv i32 %210, i32 1000;
    i32 %212 = mul i32 %211, i32 300;
    i32 %213 = sdiv i32 %212, i32 300;
    i32 %214 = add i32 %206, i32 %213;
    i32 %215 = srem i32 %214, i32 2147385347;
    i32 %216 = add i32 %150, i32 7;
    i32 %217 = mul i32 %216, i32 2;
    i32 %218 = sdiv i32 %217, i32 2;
    i32 %219 = mul i32 %218, i32 1000;
    i32 %220 = sdiv i32 %219, i32 1000;
    i32 %221 = mul i32 %220, i32 300;
    i32 %222 = sdiv i32 %221, i32 300;
    i32 %223 = add i32 %215, i32 %222;
    i32 %224 = srem i32 %223, i32 2147385347;
    i32 %225 = add i32 %150, i32 8;
    i32 %226 = mul i32 %225, i32 2;
    i32 %227 = sdiv i32 %226, i32 2;
    i32 %228 = mul i32 %227, i32 1000;
    i32 %229 = sdiv i32 %228, i32 1000;
    i32 %230 = mul i32 %229, i32 300;
    i32 %231 = sdiv i32 %230, i32 300;
    i32 %232 = add i32 %224, i32 %231;
    i32 %233 = srem i32 %232, i32 2147385347;
    i32 %234 = add i32 %150, i32 9;
    i32 %235 = mul i32 %234, i32 2;
    i32 %236 = sdiv i32 %235, i32 2;
    i32 %237 = mul i32 %236, i32 1000;
    i32 %238 = sdiv i32 %237, i32 1000;
    i32 %239 = mul i32 %238, i32 300;
    i32 %240 = sdiv i32 %239, i32 300;
    i32 %241 = add i32 %233, i32 %240;
    i32 %242 = srem i32 %241, i32 2147385347;
    i32 %243 = add i32 %150, i32 10;
    i32 %244 = mul i32 %243, i32 2;
    i32 %245 = sdiv i32 %244, i32 2;
    i32 %246 = mul i32 %245, i32 1000;
    i32 %247 = sdiv i32 %246, i32 1000;
    i32 %248 = mul i32 %247, i32 300;
    i32 %249 = sdiv i32 %248, i32 300;
    i32 %250 = add i32 %242, i32 %249;
    i32 %251 = srem i32 %250, i32 2147385347;
    i32 %252 = add i32 %150, i32 11;
    i32 %253 = mul i32 %252, i32 2;
    i32 %254 = sdiv i32 %253, i32 2;
    i32 %255 = mul i32 %254, i32 1000;
    i32 %256 = sdiv i32 %255, i32 1000;
    i32 %257 = mul i32 %256, i32 300;
    i32 %258 = sdiv i32 %257, i32 300;
    i32 %259 = add i32 %251, i32 %258;
    i32 %260 = srem i32 %259, i32 2147385347;
    i32 %261 = add i32 %150, i32 12;
    i32 %262 = mul i32 %261, i32 2;
    i32 %263 = sdiv i32 %262, i32 2;
    i32 %264 = mul i32 %263, i32 1000;
    i32 %265 = sdiv i32 %264, i32 1000;
    i32 %266 = mul i32 %265, i32 300;
    i32 %267 = sdiv i32 %266, i32 300;
    i32 %268 = add i32 %260, i32 %267;
    i32 %269 = srem i32 %268, i32 2147385347;
    i32 %270 = add i32 %150, i32 13;
    i32 %271 = mul i32 %270, i32 2;
    i32 %272 = sdiv i32 %271, i32 2;
    i32 %273 = mul i32 %272, i32 1000;
    i32 %274 = sdiv i32 %273, i32 1000;
    i32 %275 = mul i32 %274, i32 300;
    i32 %276 = sdiv i32 %275, i32 300;
    i32 %277 = add i32 %269, i32 %276;
    i32 %278 = srem i32 %277, i32 2147385347;
    i32 %279 = add i32 %150, i32 14;
    i32 %280 = mul i32 %279, i32 2;
    i32 %281 = sdiv i32 %280, i32 2;
    i32 %282 = mul i32 %281, i32 1000;
    i32 %283 = sdiv i32 %282, i32 1000;
    i32 %284 = mul i32 %283, i32 300;
    i32 %285 = sdiv i32 %284, i32 300;
    i32 %286 = add i32 %278, i32 %285;
    i32 %287 = srem i32 %286, i32 2147385347;
    i32 %288 = add i32 %150, i32 15;
    i32 %289 = mul i32 %288, i32 2;
    i32 %290 = sdiv i32 %289, i32 2;
    i32 %291 = mul i32 %290, i32 1000;
    i32 %292 = sdiv i32 %291, i32 1000;
    i32 %293 = mul i32 %292, i32 300;
    i32 %294 = sdiv i32 %293, i32 300;
    i32 %295 = add i32 %287, i32 %294;
    i32 %296 = srem i32 %295, i32 2147385347;
    ubr ^super.header1;
  ^indirect2:
    i32 %297 = phi [^super.header1, i32 %150] [^indirect2, i32 %307];
    i32 %298 = phi [^super.header1, i32 %151] [^indirect2, i32 %306];
    i32 %299 = mul i32 %297, i32 2;
    i32 %300 = sdiv i32 %299, i32 2;
    i32 %301 = mul i32 %300, i32 1000;
    i32 %302 = sdiv i32 %301, i32 1000;
    i32 %303 = mul i32 %302, i32 300;
    i32 %304 = sdiv i32 %303, i32 300;
    i32 %305 = add i32 %298, i32 %304;
    i32 %306 = srem i32 %305, i32 2147385347;
    i32 %307 = add i32 %297, i32 1;
    i1 %308 = scmp lt i32 %307, i32 %0;
    cbr i1 %308(prob = 0.97), ^indirect2, ^b;
}
