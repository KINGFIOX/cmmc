internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp sgt i32 %0, i32 0;
    call (i32) -> void @starttime(i32 1016);
    cbr i1 %1(prob = 0.97), ^super.header, ^b;
  ^super.header:
    i32 %2 = phi [^entry, i32 0] [^prebody, i32 %4];
    i32 %3 = phi [^entry, i32 0] [^prebody, i32 %37];
    i32 %4 = add i32 %2, i32 4;
    i1 %5 = icmp sgt i32 %0, i32 %4;
    cbr i1 %5(prob = 0.89), ^prebody, ^prebody1;
  ^b:
    i32 %6 = phi [^entry, i32 0] [^prebody1, i32 %46];
    call (i32) -> void @stoptime(i32 1031);
    call (i32) -> void @putint(i32 %6);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
  ^prebody:
    i32 %7 = mul i32 %2, i32 128;
    i32 %8 = mul i32 %7, i32 2;
    i32 %9 = mul i32 %2, i32 44;
    i32 %10 = add i32 %8, i32 %9;
    i32 %11 = sdiv i32 %10, i32 300;
    i32 %12 = add i32 %3, i32 %11;
    i32 %13 = srem i32 %12, i32 2147385347;
    i32 %14 = add i32 %2, i32 1;
    i32 %15 = mul i32 %14, i32 128;
    i32 %16 = mul i32 %15, i32 2;
    i32 %17 = mul i32 %14, i32 44;
    i32 %18 = add i32 %16, i32 %17;
    i32 %19 = sdiv i32 %18, i32 300;
    i32 %20 = add i32 %13, i32 %19;
    i32 %21 = srem i32 %20, i32 2147385347;
    i32 %22 = add i32 %2, i32 2;
    i32 %23 = mul i32 %22, i32 128;
    i32 %24 = mul i32 %23, i32 2;
    i32 %25 = mul i32 %22, i32 44;
    i32 %26 = add i32 %24, i32 %25;
    i32 %27 = sdiv i32 %26, i32 300;
    i32 %28 = add i32 %21, i32 %27;
    i32 %29 = srem i32 %28, i32 2147385347;
    i32 %30 = add i32 %2, i32 3;
    i32 %31 = mul i32 %30, i32 128;
    i32 %32 = mul i32 %31, i32 2;
    i32 %33 = mul i32 %30, i32 44;
    i32 %34 = add i32 %32, i32 %33;
    i32 %35 = sdiv i32 %34, i32 300;
    i32 %36 = add i32 %29, i32 %35;
    i32 %37 = srem i32 %36, i32 2147385347;
    ubr ^super.header;
  ^prebody1:
    i32 %38 = phi [^super.header, i32 %2] [^prebody1, i32 %47];
    i32 %39 = phi [^super.header, i32 %3] [^prebody1, i32 %46];
    i32 %40 = mul i32 %38, i32 128;
    i32 %41 = mul i32 %40, i32 2;
    i32 %42 = mul i32 %38, i32 44;
    i32 %43 = add i32 %41, i32 %42;
    i32 %44 = sdiv i32 %43, i32 300;
    i32 %45 = add i32 %39, i32 %44;
    i32 %46 = srem i32 %45, i32 2147385347;
    i32 %47 = add i32 %38, i32 1;
    i1 %48 = icmp sgt i32 %0, i32 %47;
    cbr i1 %48(prob = 0.75), ^prebody1, ^b;
}
