internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [32768 * i32]* @buffer, align 8 { Flexible };
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [80 * i32]* %words = alloc [80 * i32], align 8;
    [5 * i32]* %output_b = alloc [5 * i32], align 8;
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    call (i32) -> void @starttime(i32 161);
    i32* %2 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 0];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 1];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 2];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 3];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 4];
    store i32* %6 with i32 0;
    [32768 * i32]* %7 = ptrcast [32768 * i32]* @buffer to [32768 * i32]*;
    i32* %8 = getelementptr &([32768 * i32]* %7)[i64 0][i64 0];
    i32* %9 = getelementptr &([32768 * i32]* %7)[i64 0][i64 32000];
    i32* %10 = getelementptr &([80 * i32]* %words)[i64 0][i64 0];
    i32* %11 = getelementptr &([80 * i32]* %words)[i64 0][i64 1];
    i32* %12 = getelementptr &([80 * i32]* %words)[i64 0][i64 2];
    i32* %13 = getelementptr &([80 * i32]* %words)[i64 0][i64 3];
    i32* %14 = getelementptr &([80 * i32]* %words)[i64 0][i64 4];
    i32* %15 = getelementptr &([80 * i32]* %words)[i64 0][i64 5];
    i32* %16 = getelementptr &([80 * i32]* %words)[i64 0][i64 6];
    i32* %17 = getelementptr &([80 * i32]* %words)[i64 0][i64 7];
    i32* %18 = getelementptr &([80 * i32]* %words)[i64 0][i64 8];
    i32* %19 = getelementptr &([80 * i32]* %words)[i64 0][i64 9];
    i32* %20 = getelementptr &([80 * i32]* %words)[i64 0][i64 10];
    i32* %21 = getelementptr &([80 * i32]* %words)[i64 0][i64 11];
    i32* %22 = getelementptr &([80 * i32]* %words)[i64 0][i64 12];
    i32* %23 = getelementptr &([80 * i32]* %words)[i64 0][i64 13];
    i32* %24 = getelementptr &([80 * i32]* %words)[i64 0][i64 14];
    i32* %25 = getelementptr &([80 * i32]* %words)[i64 0][i64 15];
    i32* %26 = getelementptr &([80 * i32]* %words)[i64 0][i64 16];
    i32* %27 = getelementptr &([80 * i32]* %words)[i64 0][i64 17];
    i32* %28 = getelementptr &([80 * i32]* %words)[i64 0][i64 18];
    i32* %29 = getelementptr &([80 * i32]* %words)[i64 0][i64 19];
    i32* %30 = getelementptr &([80 * i32]* %words)[i64 0][i64 20];
    i32* %31 = getelementptr &([80 * i32]* %words)[i64 0][i64 21];
    i32* %32 = getelementptr &([80 * i32]* %words)[i64 0][i64 22];
    i32* %33 = getelementptr &([80 * i32]* %words)[i64 0][i64 23];
    i32* %34 = getelementptr &([80 * i32]* %words)[i64 0][i64 24];
    i32* %35 = getelementptr &([80 * i32]* %words)[i64 0][i64 25];
    i32* %36 = getelementptr &([80 * i32]* %words)[i64 0][i64 26];
    i32* %37 = getelementptr &([80 * i32]* %words)[i64 0][i64 27];
    i32* %38 = getelementptr &([80 * i32]* %words)[i64 0][i64 28];
    i32* %39 = getelementptr &([80 * i32]* %words)[i64 0][i64 29];
    i32* %40 = getelementptr &([80 * i32]* %words)[i64 0][i64 30];
    i32* %41 = getelementptr &([80 * i32]* %words)[i64 0][i64 31];
    i32* %42 = getelementptr &([80 * i32]* %words)[i64 0][i64 32];
    i32* %43 = getelementptr &([80 * i32]* %words)[i64 0][i64 33];
    i32* %44 = getelementptr &([80 * i32]* %words)[i64 0][i64 34];
    i32* %45 = getelementptr &([80 * i32]* %words)[i64 0][i64 35];
    i32* %46 = getelementptr &([80 * i32]* %words)[i64 0][i64 36];
    i32* %47 = getelementptr &([80 * i32]* %words)[i64 0][i64 37];
    i32* %48 = getelementptr &([80 * i32]* %words)[i64 0][i64 38];
    i32* %49 = getelementptr &([80 * i32]* %words)[i64 0][i64 39];
    i32* %50 = getelementptr &([80 * i32]* %words)[i64 0][i64 40];
    i32* %51 = getelementptr &([80 * i32]* %words)[i64 0][i64 41];
    i32* %52 = getelementptr &([80 * i32]* %words)[i64 0][i64 42];
    i32* %53 = getelementptr &([80 * i32]* %words)[i64 0][i64 43];
    i32* %54 = getelementptr &([80 * i32]* %words)[i64 0][i64 44];
    i32* %55 = getelementptr &([80 * i32]* %words)[i64 0][i64 45];
    i32* %56 = getelementptr &([80 * i32]* %words)[i64 0][i64 46];
    i32* %57 = getelementptr &([80 * i32]* %words)[i64 0][i64 47];
    i32* %58 = getelementptr &([80 * i32]* %words)[i64 0][i64 48];
    i32* %59 = getelementptr &([80 * i32]* %words)[i64 0][i64 49];
    i32* %60 = getelementptr &([80 * i32]* %words)[i64 0][i64 50];
    i32* %61 = getelementptr &([80 * i32]* %words)[i64 0][i64 51];
    i32* %62 = getelementptr &([80 * i32]* %words)[i64 0][i64 52];
    i32* %63 = getelementptr &([80 * i32]* %words)[i64 0][i64 53];
    i32* %64 = getelementptr &([80 * i32]* %words)[i64 0][i64 54];
    i32* %65 = getelementptr &([80 * i32]* %words)[i64 0][i64 55];
    i32* %66 = getelementptr &([80 * i32]* %words)[i64 0][i64 56];
    i32* %67 = getelementptr &([80 * i32]* %words)[i64 0][i64 57];
    i32* %68 = getelementptr &([80 * i32]* %words)[i64 0][i64 58];
    i32* %69 = getelementptr &([80 * i32]* %words)[i64 0][i64 59];
    i32* %70 = getelementptr &([80 * i32]* %words)[i64 0][i64 60];
    i32* %71 = getelementptr &([80 * i32]* %words)[i64 0][i64 61];
    i32* %72 = getelementptr &([80 * i32]* %words)[i64 0][i64 62];
    i32* %73 = getelementptr &([80 * i32]* %words)[i64 0][i64 63];
    i32* %74 = getelementptr &([80 * i32]* %words)[i64 0][i64 64];
    i32* %75 = getelementptr &([80 * i32]* %words)[i64 0][i64 65];
    i32* %76 = getelementptr &([80 * i32]* %words)[i64 0][i64 66];
    i32* %77 = getelementptr &([80 * i32]* %words)[i64 0][i64 67];
    i32* %78 = getelementptr &([80 * i32]* %words)[i64 0][i64 68];
    i32* %79 = getelementptr &([80 * i32]* %words)[i64 0][i64 69];
    i32* %80 = getelementptr &([80 * i32]* %words)[i64 0][i64 70];
    i32* %81 = getelementptr &([80 * i32]* %words)[i64 0][i64 71];
    i32* %82 = getelementptr &([80 * i32]* %words)[i64 0][i64 72];
    i32* %83 = getelementptr &([80 * i32]* %words)[i64 0][i64 73];
    i32* %84 = getelementptr &([80 * i32]* %words)[i64 0][i64 74];
    i32* %85 = getelementptr &([80 * i32]* %words)[i64 0][i64 75];
    i32* %86 = getelementptr &([80 * i32]* %words)[i64 0][i64 76];
    i32* %87 = getelementptr &([80 * i32]* %words)[i64 0][i64 77];
    i32* %88 = getelementptr &([80 * i32]* %words)[i64 0][i64 78];
    i32* %89 = getelementptr &([80 * i32]* %words)[i64 0][i64 79];
    ubr ^while.header;
  ^while.header:
    i32 %90 = phi [^entry, i32 %0] [^b2, i32 %119];
    i32 %91 = phi [^entry, i32 %1] [^b2, i32 %184];
    i1 %92 = icmp sgt i32 %91, i32 0;
    cbr i1 %92(prob = 0.992248), ^while.body, ^b;
  ^while.body:
    i32 %93 = phi [^while.header, i32 %90] [^while.body, i32 %119];
    i32 %94 = phi [^while.header, i32 0] [^while.body, i32 %143];
    i32 %95 = mul i32 %93, i32 8193;
    i32 %96 = sdiv i32 %95, i32 131072;
    i32 %97 = add i32 %95, i32 %96;
    i32 %98 = mul i32 %97, i32 270369;
    i32 %99 = sdiv i32 %98, i32 131072;
    i32 %100 = add i32 %98, i32 %99;
    i32 %101 = mul i32 %100, i32 270369;
    i32 %102 = sdiv i32 %101, i32 131072;
    i32 %103 = add i32 %101, i32 %102;
    i32 %104 = mul i32 %103, i32 270369;
    i32 %105 = sdiv i32 %104, i32 131072;
    i32 %106 = add i32 %104, i32 %105;
    i32 %107 = mul i32 %106, i32 270369;
    i32 %108 = sdiv i32 %107, i32 131072;
    i32 %109 = add i32 %107, i32 %108;
    i32 %110 = mul i32 %109, i32 270369;
    i32 %111 = sdiv i32 %110, i32 131072;
    i32 %112 = add i32 %110, i32 %111;
    i32 %113 = mul i32 %112, i32 270369;
    i32 %114 = sdiv i32 %113, i32 131072;
    i32 %115 = add i32 %113, i32 %114;
    i32 %116 = mul i32 %115, i32 270369;
    i32 %117 = sdiv i32 %116, i32 131072;
    i32 %118 = add i32 %116, i32 %117;
    i32 %119 = mul i32 %118, i32 33;
    i32 %120 = srem i32 %119, i32 256;
    i32 %121 = mul i32 %115, i32 33;
    i32 %122 = srem i32 %121, i32 256;
    i32 %123 = mul i32 %112, i32 33;
    i32 %124 = srem i32 %123, i32 256;
    i32 %125 = mul i32 %109, i32 33;
    i32 %126 = srem i32 %125, i32 256;
    i32 %127 = mul i32 %106, i32 33;
    i32 %128 = srem i32 %127, i32 256;
    i32 %129 = mul i32 %103, i32 33;
    i32 %130 = srem i32 %129, i32 256;
    i32 %131 = mul i32 %100, i32 33;
    i32 %132 = srem i32 %131, i32 256;
    i32 %133 = mul i32 %97, i32 33;
    i32 %134 = srem i32 %133, i32 256;
    i32* %135 = getelementptr &([32768 * i32]* %7)[i64 0][i32 %94];
    store i32* %135 with i32 %134;
    i32* %136 = getelementptr &(i32* %135)[i64 1];
    store i32* %136 with i32 %132;
    i32* %137 = getelementptr &(i32* %135)[i64 2];
    store i32* %137 with i32 %130;
    i32* %138 = getelementptr &(i32* %135)[i64 3];
    store i32* %138 with i32 %128;
    i32* %139 = getelementptr &(i32* %135)[i64 4];
    store i32* %139 with i32 %126;
    i32* %140 = getelementptr &(i32* %135)[i64 5];
    store i32* %140 with i32 %124;
    i32* %141 = getelementptr &(i32* %135)[i64 6];
    store i32* %141 with i32 %122;
    i32* %142 = getelementptr &(i32* %135)[i64 7];
    store i32* %142 with i32 %120;
    i32 %143 = add i32 %94, i32 8;
    i1 %144 = icmp slt i32 %143, i32 32000;
    cbr i1 %144(prob = 0.99975), ^while.body, ^postbody;
  ^b:
    call (i32) -> void @stoptime(i32 184);
    call (i32, i32*) -> void @putarray(i32 5, i32* %2);
    ret i32 0;
  ^postbody:
    store i32* %9 with i32 128;
    ubr ^while.body1;
  ^while.body1:
    i32 %145 = phi [^postbody, i32 32001] [^while.body1, i32 %147];
    i32* %146 = getelementptr &(i32* %8)[i32 %145];
    store i32* %146 with i32 0;
    i32 %147 = add i32 %145, i32 1;
    i32 %148 = and i32 %147, i32 63;
    i1 %149 = icmp neq i32 %148, i32 60;
    cbr i1 %149(prob = 0.992248), ^while.body1, ^b1;
  ^b1:
    i32* %150 = getelementptr &(i32* %8)[i32 %147];
    store i32* %150 with i32 0;
    i32* %151 = getelementptr &(i32* %150)[i64 1];
    store i32* %151 with i32 0;
    i32* %152 = getelementptr &(i32* %150)[i64 2];
    store i32* %152 with i32 125;
    i32* %153 = getelementptr &(i32* %150)[i64 3];
    store i32* %153 with i32 0;
    i32 %154 = add i32 %145, i32 5;
    store i32* %10 with i32 0;
    store i32* %11 with i32 0;
    store i32* %12 with i32 0;
    store i32* %13 with i32 0;
    store i32* %14 with i32 0;
    store i32* %15 with i32 0;
    store i32* %16 with i32 0;
    store i32* %17 with i32 0;
    store i32* %18 with i32 0;
    store i32* %19 with i32 0;
    store i32* %20 with i32 0;
    store i32* %21 with i32 0;
    store i32* %22 with i32 0;
    store i32* %23 with i32 0;
    store i32* %24 with i32 0;
    store i32* %25 with i32 0;
    store i32* %26 with i32 0;
    store i32* %27 with i32 0;
    store i32* %28 with i32 0;
    store i32* %29 with i32 0;
    store i32* %30 with i32 0;
    store i32* %31 with i32 0;
    store i32* %32 with i32 0;
    store i32* %33 with i32 0;
    store i32* %34 with i32 0;
    store i32* %35 with i32 0;
    store i32* %36 with i32 0;
    store i32* %37 with i32 0;
    store i32* %38 with i32 0;
    store i32* %39 with i32 0;
    store i32* %40 with i32 0;
    store i32* %41 with i32 0;
    store i32* %42 with i32 0;
    store i32* %43 with i32 0;
    store i32* %44 with i32 0;
    store i32* %45 with i32 0;
    store i32* %46 with i32 0;
    store i32* %47 with i32 0;
    store i32* %48 with i32 0;
    store i32* %49 with i32 0;
    store i32* %50 with i32 0;
    store i32* %51 with i32 0;
    store i32* %52 with i32 0;
    store i32* %53 with i32 0;
    store i32* %54 with i32 0;
    store i32* %55 with i32 0;
    store i32* %56 with i32 0;
    store i32* %57 with i32 0;
    store i32* %58 with i32 0;
    store i32* %59 with i32 0;
    store i32* %60 with i32 0;
    store i32* %61 with i32 0;
    store i32* %62 with i32 0;
    store i32* %63 with i32 0;
    store i32* %64 with i32 0;
    store i32* %65 with i32 0;
    store i32* %66 with i32 0;
    store i32* %67 with i32 0;
    store i32* %68 with i32 0;
    store i32* %69 with i32 0;
    store i32* %70 with i32 0;
    store i32* %71 with i32 0;
    store i32* %72 with i32 0;
    store i32* %73 with i32 0;
    store i32* %74 with i32 0;
    store i32* %75 with i32 0;
    store i32* %76 with i32 0;
    store i32* %77 with i32 0;
    store i32* %78 with i32 0;
    store i32* %79 with i32 0;
    store i32* %80 with i32 0;
    store i32* %81 with i32 0;
    store i32* %82 with i32 0;
    store i32* %83 with i32 0;
    store i32* %84 with i32 0;
    store i32* %85 with i32 0;
    store i32* %86 with i32 0;
    store i32* %87 with i32 0;
    store i32* %88 with i32 0;
    store i32* %89 with i32 0;
    ubr ^while.header1;
  ^while.header1:
    i32 %155 = phi [^b1, i32 -1009589776] [^b3, i32 %423];
    i32 %156 = phi [^b1, i32 271733878] [^b3, i32 %422];
    i32 %157 = phi [^b1, i32 -1732584194] [^b3, i32 %421];
    i32 %158 = phi [^b1, i32 -271733879] [^b3, i32 %420];
    i32 %159 = phi [^b1, i32 1732584193] [^b3, i32 %419];
    i32 %160 = phi [^b1, i32 0] [^b3, i32 %424];
    i1 %161 = icmp sgt i32 %154, i32 %160;
    cbr i1 %161(prob = 0.992248), ^prebody, ^b2;
  ^prebody:
    i32 %162 = add i32 %160, i32 4;
    i32 %163 = add i32 %160, i32 8;
    i32 %164 = add i32 %160, i32 12;
    i32 %165 = add i32 %160, i32 16;
    i32 %166 = add i32 %160, i32 20;
    i32 %167 = add i32 %160, i32 24;
    i32 %168 = add i32 %160, i32 28;
    ubr ^while.body2;
  ^b2:
    i32 %169 = load i32* %2;
    i32 %170 = add i32 %159, i32 %169;
    i32 %171 = neg i32 %170;
    store i32* %2 with i32 %171;
    i32 %172 = load i32* %3;
    i32 %173 = add i32 %158, i32 %172;
    i32 %174 = neg i32 %173;
    store i32* %3 with i32 %174;
    i32 %175 = load i32* %4;
    i32 %176 = add i32 %157, i32 %175;
    i32 %177 = neg i32 %176;
    store i32* %4 with i32 %177;
    i32 %178 = load i32* %5;
    i32 %179 = add i32 %156, i32 %178;
    i32 %180 = neg i32 %179;
    store i32* %5 with i32 %180;
    i32 %181 = load i32* %6;
    i32 %182 = add i32 %155, i32 %181;
    i32 %183 = neg i32 %182;
    store i32* %6 with i32 %183;
    i32 %184 = add i32 %91, i32 -1;
    ubr ^while.header;
  ^while.body2:
    i32 %185 = phi [^prebody, i32 0] [^while.body2, i32 %317];
    i32 %186 = phi [^prebody, i32 0] [^while.body2, i32 %315];
    i32 %187 = add i32 %160, i32 %185;
    i32* %188 = getelementptr &(i32* %8)[i32 %187];
    i32 %189 = load i32* %188;
    i32* %190 = getelementptr &(i32* %188)[i64 1];
    i32 %191 = load i32* %190;
    i32 %192 = mul i32 %191, i32 65536;
    i32 %193 = mul i32 %189, i32 16777216;
    i32 %194 = add i32 %192, i32 %193;
    i32* %195 = getelementptr &(i32* %188)[i64 2];
    i32 %196 = load i32* %195;
    i32 %197 = mul i32 %196, i32 256;
    i32 %198 = add i32 %194, i32 %197;
    i32* %199 = getelementptr &(i32* %188)[i64 3];
    i32 %200 = load i32* %199;
    i32 %201 = add i32 %198, i32 %200;
    i32* %202 = getelementptr &([80 * i32]* %words)[i64 0][i32 %186];
    store i32* %202 with i32 %201;
    i32 %203 = add i32 %162, i32 %185;
    i32* %204 = getelementptr &(i32* %8)[i32 %203];
    i32 %205 = load i32* %204;
    i32* %206 = getelementptr &(i32* %204)[i64 1];
    i32 %207 = load i32* %206;
    i32 %208 = mul i32 %207, i32 65536;
    i32 %209 = mul i32 %205, i32 16777216;
    i32 %210 = add i32 %208, i32 %209;
    i32* %211 = getelementptr &(i32* %204)[i64 2];
    i32 %212 = load i32* %211;
    i32 %213 = mul i32 %212, i32 256;
    i32 %214 = add i32 %210, i32 %213;
    i32* %215 = getelementptr &(i32* %204)[i64 3];
    i32 %216 = load i32* %215;
    i32 %217 = add i32 %214, i32 %216;
    i32* %218 = getelementptr &(i32* %202)[i64 1];
    store i32* %218 with i32 %217;
    i32 %219 = add i32 %163, i32 %185;
    i32* %220 = getelementptr &(i32* %8)[i32 %219];
    i32 %221 = load i32* %220;
    i32* %222 = getelementptr &(i32* %220)[i64 1];
    i32 %223 = load i32* %222;
    i32 %224 = mul i32 %223, i32 65536;
    i32 %225 = mul i32 %221, i32 16777216;
    i32 %226 = add i32 %224, i32 %225;
    i32* %227 = getelementptr &(i32* %220)[i64 2];
    i32 %228 = load i32* %227;
    i32 %229 = mul i32 %228, i32 256;
    i32 %230 = add i32 %226, i32 %229;
    i32* %231 = getelementptr &(i32* %220)[i64 3];
    i32 %232 = load i32* %231;
    i32 %233 = add i32 %230, i32 %232;
    i32* %234 = getelementptr &(i32* %202)[i64 2];
    store i32* %234 with i32 %233;
    i32 %235 = add i32 %164, i32 %185;
    i32* %236 = getelementptr &(i32* %8)[i32 %235];
    i32 %237 = load i32* %236;
    i32* %238 = getelementptr &(i32* %236)[i64 1];
    i32 %239 = load i32* %238;
    i32 %240 = mul i32 %239, i32 65536;
    i32 %241 = mul i32 %237, i32 16777216;
    i32 %242 = add i32 %240, i32 %241;
    i32* %243 = getelementptr &(i32* %236)[i64 2];
    i32 %244 = load i32* %243;
    i32 %245 = mul i32 %244, i32 256;
    i32 %246 = add i32 %242, i32 %245;
    i32* %247 = getelementptr &(i32* %236)[i64 3];
    i32 %248 = load i32* %247;
    i32 %249 = add i32 %246, i32 %248;
    i32* %250 = getelementptr &(i32* %202)[i64 3];
    store i32* %250 with i32 %249;
    i32 %251 = add i32 %165, i32 %185;
    i32* %252 = getelementptr &(i32* %8)[i32 %251];
    i32 %253 = load i32* %252;
    i32* %254 = getelementptr &(i32* %252)[i64 1];
    i32 %255 = load i32* %254;
    i32 %256 = mul i32 %255, i32 65536;
    i32 %257 = mul i32 %253, i32 16777216;
    i32 %258 = add i32 %256, i32 %257;
    i32* %259 = getelementptr &(i32* %252)[i64 2];
    i32 %260 = load i32* %259;
    i32 %261 = mul i32 %260, i32 256;
    i32 %262 = add i32 %258, i32 %261;
    i32* %263 = getelementptr &(i32* %252)[i64 3];
    i32 %264 = load i32* %263;
    i32 %265 = add i32 %262, i32 %264;
    i32* %266 = getelementptr &(i32* %202)[i64 4];
    store i32* %266 with i32 %265;
    i32 %267 = add i32 %166, i32 %185;
    i32* %268 = getelementptr &(i32* %8)[i32 %267];
    i32 %269 = load i32* %268;
    i32* %270 = getelementptr &(i32* %268)[i64 1];
    i32 %271 = load i32* %270;
    i32 %272 = mul i32 %271, i32 65536;
    i32 %273 = mul i32 %269, i32 16777216;
    i32 %274 = add i32 %272, i32 %273;
    i32* %275 = getelementptr &(i32* %268)[i64 2];
    i32 %276 = load i32* %275;
    i32 %277 = mul i32 %276, i32 256;
    i32 %278 = add i32 %274, i32 %277;
    i32* %279 = getelementptr &(i32* %268)[i64 3];
    i32 %280 = load i32* %279;
    i32 %281 = add i32 %278, i32 %280;
    i32* %282 = getelementptr &(i32* %202)[i64 5];
    store i32* %282 with i32 %281;
    i32 %283 = add i32 %167, i32 %185;
    i32* %284 = getelementptr &(i32* %8)[i32 %283];
    i32 %285 = load i32* %284;
    i32* %286 = getelementptr &(i32* %284)[i64 1];
    i32 %287 = load i32* %286;
    i32 %288 = mul i32 %287, i32 65536;
    i32 %289 = mul i32 %285, i32 16777216;
    i32 %290 = add i32 %288, i32 %289;
    i32* %291 = getelementptr &(i32* %284)[i64 2];
    i32 %292 = load i32* %291;
    i32 %293 = mul i32 %292, i32 256;
    i32 %294 = add i32 %290, i32 %293;
    i32* %295 = getelementptr &(i32* %284)[i64 3];
    i32 %296 = load i32* %295;
    i32 %297 = add i32 %294, i32 %296;
    i32* %298 = getelementptr &(i32* %202)[i64 6];
    store i32* %298 with i32 %297;
    i32 %299 = add i32 %168, i32 %185;
    i32* %300 = getelementptr &(i32* %8)[i32 %299];
    i32 %301 = load i32* %300;
    i32* %302 = getelementptr &(i32* %300)[i64 1];
    i32 %303 = load i32* %302;
    i32 %304 = mul i32 %303, i32 65536;
    i32 %305 = mul i32 %301, i32 16777216;
    i32 %306 = add i32 %304, i32 %305;
    i32* %307 = getelementptr &(i32* %300)[i64 2];
    i32 %308 = load i32* %307;
    i32 %309 = mul i32 %308, i32 256;
    i32 %310 = add i32 %306, i32 %309;
    i32* %311 = getelementptr &(i32* %300)[i64 3];
    i32 %312 = load i32* %311;
    i32 %313 = add i32 %310, i32 %312;
    i32* %314 = getelementptr &(i32* %202)[i64 7];
    store i32* %314 with i32 %313;
    i32 %315 = add i32 %186, i32 8;
    i1 %316 = icmp slt i32 %315, i32 16;
    i32 %317 = add i32 %185, i32 32;
    cbr i1 %316(prob = 0.5), ^while.body2, ^while.body3;
  ^while.body3:
    i32 %318 = phi [^while.body2, i32 16] [^while.body3, i32 %410];
    i32* %319 = getelementptr &([80 * i32]* %words)[i64 0][i32 %318];
    i32* %320 = getelementptr &(i32* %319)[i64 -3];
    i32 %321 = load i32* %320;
    i32* %322 = getelementptr &(i32* %319)[i64 -8];
    i32 %323 = load i32* %322;
    i32 %324 = add i32 %321, i32 %323;
    i32* %325 = getelementptr &(i32* %319)[i64 -14];
    i32 %326 = load i32* %325;
    i32* %327 = getelementptr &(i32* %319)[i64 -16];
    i32 %328 = load i32* %327;
    i32 %329 = add i32 %324, i32 %328;
    i32 %330 = sub i32 %326, i32 %329;
    i32 %331 = mul i32 %330, i32 2;
    i32 %332 = srem i32 %330, i32 2;
    i32 %333 = add i32 %331, i32 %332;
    store i32* %319 with i32 %333;
    i32* %334 = getelementptr &(i32* %319)[i64 -2];
    i32 %335 = load i32* %334;
    i32* %336 = getelementptr &(i32* %319)[i64 -7];
    i32 %337 = load i32* %336;
    i32* %338 = getelementptr &(i32* %319)[i64 -13];
    i32 %339 = load i32* %338;
    i32 %340 = add i32 %333, i32 %339;
    i32 %341 = add i32 %335, i32 %337;
    i32* %342 = getelementptr &(i32* %319)[i64 -15];
    i32 %343 = load i32* %342;
    i32 %344 = add i32 %341, i32 %343;
    i32 %345 = sub i32 %339, i32 %344;
    i32 %346 = mul i32 %345, i32 2;
    i32 %347 = srem i32 %345, i32 2;
    i32 %348 = add i32 %346, i32 %347;
    i32* %349 = getelementptr &(i32* %319)[i64 1];
    store i32* %349 with i32 %348;
    i32* %350 = getelementptr &(i32* %319)[i64 -1];
    i32 %351 = load i32* %350;
    i32 %352 = add i32 %326, i32 %351;
    i32* %353 = getelementptr &(i32* %319)[i64 -6];
    i32 %354 = load i32* %353;
    i32 %355 = add i32 %352, i32 %354;
    i32* %356 = getelementptr &(i32* %319)[i64 -12];
    i32 %357 = load i32* %356;
    i32 %358 = sub i32 %357, i32 %355;
    i32 %359 = mul i32 %358, i32 2;
    i32 %360 = srem i32 %358, i32 2;
    i32 %361 = add i32 %359, i32 %360;
    i32* %362 = getelementptr &(i32* %319)[i64 2];
    store i32* %362 with i32 %361;
    i32* %363 = getelementptr &(i32* %319)[i64 -5];
    i32 %364 = load i32* %363;
    i32 %365 = add i32 %340, i32 %364;
    i32* %366 = getelementptr &(i32* %319)[i64 -11];
    i32 %367 = load i32* %366;
    i32 %368 = sub i32 %367, i32 %365;
    i32 %369 = mul i32 %368, i32 2;
    i32 %370 = add i32 %335, i32 %369;
    i32 %371 = srem i32 %368, i32 2;
    i32 %372 = add i32 %370, i32 %371;
    i32 %373 = add i32 %369, i32 %371;
    i32* %374 = getelementptr &(i32* %319)[i64 3];
    store i32* %374 with i32 %373;
    i32* %375 = getelementptr &(i32* %319)[i64 -4];
    i32 %376 = load i32* %375;
    i32* %377 = getelementptr &(i32* %319)[i64 -10];
    i32 %378 = load i32* %377;
    i32 %379 = add i32 %372, i32 %378;
    i32 %380 = sub i32 %323, i32 %379;
    i32 %381 = mul i32 %380, i32 2;
    i32 %382 = srem i32 %380, i32 2;
    i32 %383 = add i32 %381, i32 %382;
    i32 %384 = add i32 %348, i32 %357;
    i32 %385 = add i32 %376, i32 %384;
    i32 %386 = sub i32 %378, i32 %385;
    i32 %387 = mul i32 %386, i32 2;
    i32 %388 = srem i32 %386, i32 2;
    i32 %389 = add i32 %387, i32 %388;
    i32* %390 = getelementptr &(i32* %319)[i64 4];
    store i32* %390 with i32 %389;
    i32 %391 = add i32 %321, i32 %359;
    i32 %392 = add i32 %360, i32 %391;
    i32 %393 = add i32 %367, i32 %392;
    i32* %394 = getelementptr &(i32* %319)[i64 -9];
    i32 %395 = load i32* %394;
    i32 %396 = sub i32 %395, i32 %393;
    i32 %397 = mul i32 %396, i32 2;
    i32 %398 = srem i32 %396, i32 2;
    i32 %399 = add i32 %397, i32 %398;
    i32* %400 = getelementptr &(i32* %319)[i64 5];
    store i32* %400 with i32 %399;
    i32* %401 = getelementptr &(i32* %319)[i64 6];
    store i32* %401 with i32 %383;
    i32 %402 = add i32 %351, i32 %387;
    i32 %403 = add i32 %388, i32 %402;
    i32 %404 = add i32 %395, i32 %403;
    i32 %405 = sub i32 %337, i32 %404;
    i32 %406 = mul i32 %405, i32 2;
    i32 %407 = srem i32 %405, i32 2;
    i32 %408 = add i32 %406, i32 %407;
    i32* %409 = getelementptr &(i32* %319)[i64 7];
    store i32* %409 with i32 %408;
    i32 %410 = add i32 %318, i32 8;
    i1 %411 = icmp slt i32 %410, i32 80;
    cbr i1 %411(prob = 0.875), ^while.body3, ^while.header2;
  ^while.header2:
    i32 %412 = phi [^while.body3, i32 %155] [^b4, i32 %413];
    i32 %413 = phi [^while.body3, i32 %156] [^b4, i32 %414];
    i32 %414 = phi [^while.body3, i32 %157] [^b4, i32 %439];
    i32 %415 = phi [^while.body3, i32 %158] [^b4, i32 %416];
    i32 %416 = phi [^while.body3, i32 %159] [^b4, i32 %436];
    i32 %417 = phi [^while.body3, i32 0] [^b4, i32 %440];
    i1 %418 = icmp slt i32 %417, i32 80;
    cbr i1 %418(prob = 0.992248), ^while.body4, ^b3;
  ^b3:
    i32 %419 = add i32 %159, i32 %416;
    i32 %420 = add i32 %158, i32 %415;
    i32 %421 = add i32 %157, i32 %414;
    i32 %422 = add i32 %156, i32 %413;
    i32 %423 = add i32 %155, i32 %412;
    i32 %424 = add i32 %160, i32 64;
    ubr ^while.header1;
  ^while.body4:
    i1 %425 = icmp slt i32 %417, i32 20;
    cbr i1 %425(prob = 0.5), ^b4, ^if.else;
  ^b4:
    i32 %426 = phi [^while.body4, i32 1518500249] [^if.else, i32 %448];
    i32 %427 = phi [^while.body4, i32 0] [^if.else, i32 %446];
    i32 %428 = mul i32 %416, i32 32;
    i32 %429 = add i32 %412, i32 %428;
    i32 %430 = add i32 %426, i32 %429;
    i32 %431 = add i32 %427, i32 %430;
    i32 %432 = srem i32 %416, i32 32;
    i32 %433 = add i32 %431, i32 %432;
    i32* %434 = getelementptr &([80 * i32]* %words)[i64 0][i32 %417];
    i32 %435 = load i32* %434;
    i32 %436 = add i32 %433, i32 %435;
    i32 %437 = mul i32 %415, i32 1073741824;
    i32 %438 = srem i32 %415, i32 1073741824;
    i32 %439 = add i32 %437, i32 %438;
    i32 %440 = add i32 %417, i32 1;
    ubr ^while.header2;
  ^if.else:
    i32 %441 = add i32 %414, i32 %415;
    i32 %442 = sub i32 %441, i32 %413;
    i1 %443 = icmp slt i32 %417, i32 60;
    i32 %444 = select i1 %443 ? i32 0 : i32 %442;
    i1 %445 = icmp slt i32 %417, i32 40;
    i32 %446 = select i1 %445 ? i32 %442 : i32 %444;
    i32 %447 = select i1 %443 ? i32 -1894007588 : i32 -899497722;
    i32 %448 = select i1 %445 ? i32 1859775361 : i32 %447;
    ubr ^b4;
}
