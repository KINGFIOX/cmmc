internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    i32* %sum = alloc i32;
    i32* %i = alloc i32;
    store i32* %sum with i32 0;
    store i32* %i with i32 0;
    ubr ^while.body;
^while.body:
    i32 %0 = phi [^entry, i32 0] [^b, i32 %7];
    [1000 * i32]* %1 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %0];
    i32* %2 = getelementptr &([1000 * i32]* %1)[i64 0][i64 0];
    i32 %3 = call (i32*) -> i32 @getarray(i32* %2);
    i32 %4 = load i32* %i;
    i32 %5 = load i32* %sum;
    i1 %6 = scmp neq i32 %3, i32 1000;
    cbr i1 %6(prob = 0.5), ^b1, ^b;
^b:
    i32 %7 = add i32 %4, i32 1;
    store i32* %i with i32 %7;
    i1 %8 = scmp lt i32 %7, i32 1000;
    cbr i1 %8(prob = 0.97), ^while.body, ^b2;
^b1:
    i32 %9 = phi [^while.body, i32 %3] [^b7, i32 0];
    ret i32 %9;
^b2:
    call (i32) -> void @starttime(i32 23);
    store i32* %i with i32 0;
    ubr ^while.body1;
^while.body1:
    i32 %10 = phi [^b2, i32 0] [^while.body3, i32 %79];
    [1000 * i32]* %11 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %10];
    ubr ^while.body2;
^while.body2:
    i32 %12 = phi [^while.body1, i32 0] [^while.body2, i32 %13];
    i32 %13 = add i32 %12, i32 16;
    i1 %14 = scmp lt i32 %13, i32 992;
    i32* %15 = getelementptr &([1000 * i32]* %11)[i64 0][i32 %12];
    i32* %16 = getelementptr &(i32* %15)[i64 1];
    i32* %17 = getelementptr &(i32* %15)[i64 2];
    i32* %18 = getelementptr &(i32* %15)[i64 3];
    i32* %19 = getelementptr &(i32* %15)[i64 4];
    i32* %20 = getelementptr &(i32* %15)[i64 5];
    i32* %21 = getelementptr &(i32* %15)[i64 6];
    i32* %22 = getelementptr &(i32* %15)[i64 7];
    i32* %23 = getelementptr &(i32* %15)[i64 8];
    i32* %24 = getelementptr &(i32* %15)[i64 9];
    i32* %25 = getelementptr &(i32* %15)[i64 10];
    i32* %26 = getelementptr &(i32* %15)[i64 11];
    i32* %27 = getelementptr &(i32* %15)[i64 12];
    i32* %28 = getelementptr &(i32* %15)[i64 13];
    i32* %29 = getelementptr &(i32* %15)[i64 14];
    i32* %30 = getelementptr &(i32* %15)[i64 15];
    [1000 * i32]* %31 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %12];
    i32* %32 = getelementptr &([1000 * i32]* %31)[i64 0][i32 %10];
    i32 %33 = load i32* %32;
    store i32* %15 with i32 %33;
    [1000 * i32]* %34 = getelementptr &([1000 * i32]* %31)[i64 1];
    i32* %35 = getelementptr &([1000 * i32]* %34)[i64 0][i32 %10];
    i32 %36 = load i32* %35;
    store i32* %16 with i32 %36;
    [1000 * i32]* %37 = getelementptr &([1000 * i32]* %31)[i64 2];
    i32* %38 = getelementptr &([1000 * i32]* %37)[i64 0][i32 %10];
    i32 %39 = load i32* %38;
    store i32* %17 with i32 %39;
    [1000 * i32]* %40 = getelementptr &([1000 * i32]* %31)[i64 3];
    i32* %41 = getelementptr &([1000 * i32]* %40)[i64 0][i32 %10];
    i32 %42 = load i32* %41;
    store i32* %18 with i32 %42;
    [1000 * i32]* %43 = getelementptr &([1000 * i32]* %31)[i64 4];
    i32* %44 = getelementptr &([1000 * i32]* %43)[i64 0][i32 %10];
    i32 %45 = load i32* %44;
    store i32* %19 with i32 %45;
    [1000 * i32]* %46 = getelementptr &([1000 * i32]* %31)[i64 5];
    i32* %47 = getelementptr &([1000 * i32]* %46)[i64 0][i32 %10];
    i32 %48 = load i32* %47;
    store i32* %20 with i32 %48;
    [1000 * i32]* %49 = getelementptr &([1000 * i32]* %31)[i64 6];
    i32* %50 = getelementptr &([1000 * i32]* %49)[i64 0][i32 %10];
    i32 %51 = load i32* %50;
    store i32* %21 with i32 %51;
    [1000 * i32]* %52 = getelementptr &([1000 * i32]* %31)[i64 7];
    i32* %53 = getelementptr &([1000 * i32]* %52)[i64 0][i32 %10];
    i32 %54 = load i32* %53;
    store i32* %22 with i32 %54;
    [1000 * i32]* %55 = getelementptr &([1000 * i32]* %31)[i64 8];
    i32* %56 = getelementptr &([1000 * i32]* %55)[i64 0][i32 %10];
    i32 %57 = load i32* %56;
    store i32* %23 with i32 %57;
    [1000 * i32]* %58 = getelementptr &([1000 * i32]* %31)[i64 9];
    i32* %59 = getelementptr &([1000 * i32]* %58)[i64 0][i32 %10];
    i32 %60 = load i32* %59;
    store i32* %24 with i32 %60;
    [1000 * i32]* %61 = getelementptr &([1000 * i32]* %31)[i64 10];
    i32* %62 = getelementptr &([1000 * i32]* %61)[i64 0][i32 %10];
    i32 %63 = load i32* %62;
    store i32* %25 with i32 %63;
    [1000 * i32]* %64 = getelementptr &([1000 * i32]* %31)[i64 11];
    i32* %65 = getelementptr &([1000 * i32]* %64)[i64 0][i32 %10];
    i32 %66 = load i32* %65;
    store i32* %26 with i32 %66;
    [1000 * i32]* %67 = getelementptr &([1000 * i32]* %31)[i64 12];
    i32* %68 = getelementptr &([1000 * i32]* %67)[i64 0][i32 %10];
    i32 %69 = load i32* %68;
    store i32* %27 with i32 %69;
    [1000 * i32]* %70 = getelementptr &([1000 * i32]* %31)[i64 13];
    i32* %71 = getelementptr &([1000 * i32]* %70)[i64 0][i32 %10];
    i32 %72 = load i32* %71;
    store i32* %28 with i32 %72;
    [1000 * i32]* %73 = getelementptr &([1000 * i32]* %31)[i64 14];
    i32* %74 = getelementptr &([1000 * i32]* %73)[i64 0][i32 %10];
    i32 %75 = load i32* %74;
    store i32* %29 with i32 %75;
    [1000 * i32]* %76 = getelementptr &([1000 * i32]* %31)[i64 15];
    i32* %77 = getelementptr &([1000 * i32]* %76)[i64 0][i32 %10];
    i32 %78 = load i32* %77;
    store i32* %30 with i32 %78;
    cbr i1 %14(prob = 0.98), ^while.body2, ^while.body3;
^while.body3:
    i32 %79 = add i32 %10, i32 1;
    i1 %80 = scmp lt i32 %79, i32 1000;
    i32* %81 = getelementptr &([1000 * i32]* %11)[i64 0][i32 %13];
    i32* %82 = getelementptr &(i32* %81)[i64 1];
    i32* %83 = getelementptr &(i32* %81)[i64 2];
    i32* %84 = getelementptr &(i32* %81)[i64 3];
    i32* %85 = getelementptr &(i32* %81)[i64 4];
    i32* %86 = getelementptr &(i32* %81)[i64 5];
    i32* %87 = getelementptr &(i32* %81)[i64 6];
    i32* %88 = getelementptr &(i32* %81)[i64 7];
    [1000 * i32]* %89 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %13];
    i32* %90 = getelementptr &([1000 * i32]* %89)[i64 0][i32 %10];
    i32 %91 = load i32* %90;
    store i32* %81 with i32 %91;
    [1000 * i32]* %92 = getelementptr &([1000 * i32]* %89)[i64 1];
    i32* %93 = getelementptr &([1000 * i32]* %92)[i64 0][i32 %10];
    i32 %94 = load i32* %93;
    store i32* %82 with i32 %94;
    [1000 * i32]* %95 = getelementptr &([1000 * i32]* %89)[i64 2];
    i32* %96 = getelementptr &([1000 * i32]* %95)[i64 0][i32 %10];
    i32 %97 = load i32* %96;
    store i32* %83 with i32 %97;
    [1000 * i32]* %98 = getelementptr &([1000 * i32]* %89)[i64 3];
    i32* %99 = getelementptr &([1000 * i32]* %98)[i64 0][i32 %10];
    i32 %100 = load i32* %99;
    store i32* %84 with i32 %100;
    [1000 * i32]* %101 = getelementptr &([1000 * i32]* %89)[i64 4];
    i32* %102 = getelementptr &([1000 * i32]* %101)[i64 0][i32 %10];
    i32 %103 = load i32* %102;
    store i32* %85 with i32 %103;
    [1000 * i32]* %104 = getelementptr &([1000 * i32]* %89)[i64 5];
    i32* %105 = getelementptr &([1000 * i32]* %104)[i64 0][i32 %10];
    i32 %106 = load i32* %105;
    store i32* %86 with i32 %106;
    [1000 * i32]* %107 = getelementptr &([1000 * i32]* %89)[i64 6];
    i32* %108 = getelementptr &([1000 * i32]* %107)[i64 0][i32 %10];
    i32 %109 = load i32* %108;
    store i32* %87 with i32 %109;
    [1000 * i32]* %110 = getelementptr &([1000 * i32]* %89)[i64 7];
    i32* %111 = getelementptr &([1000 * i32]* %110)[i64 0][i32 %10];
    i32 %112 = load i32* %111;
    store i32* %88 with i32 %112;
    store i32* %i with i32 %79;
    cbr i1 %80(prob = 1), ^while.body1, ^b3;
^b3:
    store i32* %i with i32 0;
    ubr ^while.body4;
^while.body4:
    i32 %113 = phi [^b3, i32 0] [^b4, i32 %292];
    [1000 * i32]* %114 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %113];
    [1000 * i32]* %115 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %113];
    ubr ^while.body5;
^while.body5:
    i32 %116 = phi [^while.body4, i32 0] [^while.body7, i32 %233];
    ubr ^while.body6;
^while.body6:
    i32 %117 = phi [^while.body5, i32 0] [^while.body6, i32 %119];
    i32 %118 = phi [^while.body5, i32 0] [^while.body6, i32 %232];
    i32 %119 = add i32 %117, i32 16;
    i1 %120 = scmp lt i32 %119, i32 992;
    i32* %121 = getelementptr &([1000 * i32]* %115)[i64 0][i32 %117];
    i32 %122 = load i32* %121;
    i32* %123 = getelementptr &(i32* %121)[i64 1];
    i32* %124 = getelementptr &(i32* %121)[i64 2];
    i32* %125 = getelementptr &(i32* %121)[i64 3];
    i32* %126 = getelementptr &(i32* %121)[i64 4];
    i32* %127 = getelementptr &(i32* %121)[i64 5];
    i32* %128 = getelementptr &(i32* %121)[i64 6];
    i32* %129 = getelementptr &(i32* %121)[i64 7];
    i32* %130 = getelementptr &(i32* %121)[i64 8];
    i32* %131 = getelementptr &(i32* %121)[i64 9];
    i32* %132 = getelementptr &(i32* %121)[i64 10];
    i32* %133 = getelementptr &(i32* %121)[i64 11];
    i32* %134 = getelementptr &(i32* %121)[i64 12];
    i32* %135 = getelementptr &(i32* %121)[i64 13];
    i32* %136 = getelementptr &(i32* %121)[i64 14];
    i32* %137 = getelementptr &(i32* %121)[i64 15];
    [1000 * i32]* %138 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %117];
    i32* %139 = getelementptr &([1000 * i32]* %138)[i64 0][i32 %116];
    i32 %140 = load i32* %139;
    i32 %141 = load i32* %123;
    i32 %142 = mul i32 %122, i32 %140;
    i32 %143 = add i32 %118, i32 %142;
    [1000 * i32]* %144 = getelementptr &([1000 * i32]* %138)[i64 1];
    i32* %145 = getelementptr &([1000 * i32]* %144)[i64 0][i32 %116];
    i32 %146 = load i32* %145;
    i32 %147 = load i32* %124;
    i32 %148 = mul i32 %141, i32 %146;
    i32 %149 = add i32 %143, i32 %148;
    [1000 * i32]* %150 = getelementptr &([1000 * i32]* %138)[i64 2];
    i32* %151 = getelementptr &([1000 * i32]* %150)[i64 0][i32 %116];
    i32 %152 = load i32* %151;
    i32 %153 = load i32* %125;
    i32 %154 = mul i32 %147, i32 %152;
    i32 %155 = add i32 %149, i32 %154;
    [1000 * i32]* %156 = getelementptr &([1000 * i32]* %138)[i64 3];
    i32* %157 = getelementptr &([1000 * i32]* %156)[i64 0][i32 %116];
    i32 %158 = load i32* %157;
    i32 %159 = load i32* %126;
    i32 %160 = mul i32 %153, i32 %158;
    i32 %161 = add i32 %155, i32 %160;
    [1000 * i32]* %162 = getelementptr &([1000 * i32]* %138)[i64 4];
    i32* %163 = getelementptr &([1000 * i32]* %162)[i64 0][i32 %116];
    i32 %164 = load i32* %163;
    i32 %165 = load i32* %127;
    i32 %166 = mul i32 %159, i32 %164;
    i32 %167 = add i32 %161, i32 %166;
    [1000 * i32]* %168 = getelementptr &([1000 * i32]* %138)[i64 5];
    i32* %169 = getelementptr &([1000 * i32]* %168)[i64 0][i32 %116];
    i32 %170 = load i32* %169;
    i32 %171 = load i32* %128;
    i32 %172 = mul i32 %165, i32 %170;
    i32 %173 = add i32 %167, i32 %172;
    [1000 * i32]* %174 = getelementptr &([1000 * i32]* %138)[i64 6];
    i32* %175 = getelementptr &([1000 * i32]* %174)[i64 0][i32 %116];
    i32 %176 = load i32* %175;
    i32 %177 = load i32* %129;
    i32 %178 = mul i32 %171, i32 %176;
    i32 %179 = add i32 %173, i32 %178;
    [1000 * i32]* %180 = getelementptr &([1000 * i32]* %138)[i64 7];
    i32* %181 = getelementptr &([1000 * i32]* %180)[i64 0][i32 %116];
    i32 %182 = load i32* %181;
    i32 %183 = load i32* %130;
    i32 %184 = mul i32 %177, i32 %182;
    i32 %185 = add i32 %179, i32 %184;
    [1000 * i32]* %186 = getelementptr &([1000 * i32]* %138)[i64 8];
    i32* %187 = getelementptr &([1000 * i32]* %186)[i64 0][i32 %116];
    i32 %188 = load i32* %187;
    i32 %189 = load i32* %131;
    i32 %190 = mul i32 %183, i32 %188;
    i32 %191 = add i32 %185, i32 %190;
    [1000 * i32]* %192 = getelementptr &([1000 * i32]* %138)[i64 9];
    i32* %193 = getelementptr &([1000 * i32]* %192)[i64 0][i32 %116];
    i32 %194 = load i32* %193;
    i32 %195 = load i32* %132;
    i32 %196 = mul i32 %189, i32 %194;
    i32 %197 = add i32 %191, i32 %196;
    [1000 * i32]* %198 = getelementptr &([1000 * i32]* %138)[i64 10];
    i32* %199 = getelementptr &([1000 * i32]* %198)[i64 0][i32 %116];
    i32 %200 = load i32* %199;
    i32 %201 = load i32* %133;
    i32 %202 = mul i32 %195, i32 %200;
    i32 %203 = add i32 %197, i32 %202;
    [1000 * i32]* %204 = getelementptr &([1000 * i32]* %138)[i64 11];
    i32* %205 = getelementptr &([1000 * i32]* %204)[i64 0][i32 %116];
    i32 %206 = load i32* %205;
    i32 %207 = load i32* %134;
    i32 %208 = mul i32 %201, i32 %206;
    i32 %209 = add i32 %203, i32 %208;
    [1000 * i32]* %210 = getelementptr &([1000 * i32]* %138)[i64 12];
    i32* %211 = getelementptr &([1000 * i32]* %210)[i64 0][i32 %116];
    i32 %212 = load i32* %211;
    i32 %213 = load i32* %135;
    i32 %214 = mul i32 %207, i32 %212;
    i32 %215 = add i32 %209, i32 %214;
    [1000 * i32]* %216 = getelementptr &([1000 * i32]* %138)[i64 13];
    i32* %217 = getelementptr &([1000 * i32]* %216)[i64 0][i32 %116];
    i32 %218 = load i32* %217;
    i32 %219 = load i32* %136;
    i32 %220 = mul i32 %213, i32 %218;
    i32 %221 = add i32 %215, i32 %220;
    [1000 * i32]* %222 = getelementptr &([1000 * i32]* %138)[i64 14];
    i32* %223 = getelementptr &([1000 * i32]* %222)[i64 0][i32 %116];
    i32 %224 = load i32* %223;
    i32 %225 = load i32* %137;
    i32 %226 = mul i32 %219, i32 %224;
    i32 %227 = add i32 %221, i32 %226;
    [1000 * i32]* %228 = getelementptr &([1000 * i32]* %138)[i64 15];
    i32* %229 = getelementptr &([1000 * i32]* %228)[i64 0][i32 %116];
    i32 %230 = load i32* %229;
    i32 %231 = mul i32 %225, i32 %230;
    i32 %232 = add i32 %227, i32 %231;
    cbr i1 %120(prob = 0.98), ^while.body6, ^while.body7;
^while.body7:
    i32 %233 = add i32 %116, i32 1;
    i1 %234 = scmp lt i32 %233, i32 1000;
    i32* %235 = getelementptr &([1000 * i32]* %114)[i64 0][i32 %116];
    i32* %236 = getelementptr &([1000 * i32]* %115)[i64 0][i32 %119];
    i32 %237 = load i32* %236;
    i32* %238 = getelementptr &(i32* %236)[i64 1];
    i32* %239 = getelementptr &(i32* %236)[i64 2];
    i32* %240 = getelementptr &(i32* %236)[i64 3];
    i32* %241 = getelementptr &(i32* %236)[i64 4];
    i32* %242 = getelementptr &(i32* %236)[i64 5];
    i32* %243 = getelementptr &(i32* %236)[i64 6];
    i32* %244 = getelementptr &(i32* %236)[i64 7];
    [1000 * i32]* %245 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %119];
    i32* %246 = getelementptr &([1000 * i32]* %245)[i64 0][i32 %116];
    i32 %247 = load i32* %246;
    i32 %248 = load i32* %238;
    i32 %249 = mul i32 %237, i32 %247;
    [1000 * i32]* %250 = getelementptr &([1000 * i32]* %245)[i64 1];
    i32* %251 = getelementptr &([1000 * i32]* %250)[i64 0][i32 %116];
    i32 %252 = load i32* %251;
    i32 %253 = load i32* %239;
    i32 %254 = mul i32 %248, i32 %252;
    i32 %255 = add i32 %249, i32 %254;
    [1000 * i32]* %256 = getelementptr &([1000 * i32]* %245)[i64 2];
    i32* %257 = getelementptr &([1000 * i32]* %256)[i64 0][i32 %116];
    i32 %258 = load i32* %257;
    i32 %259 = load i32* %240;
    i32 %260 = mul i32 %253, i32 %258;
    i32 %261 = add i32 %255, i32 %260;
    [1000 * i32]* %262 = getelementptr &([1000 * i32]* %245)[i64 3];
    i32* %263 = getelementptr &([1000 * i32]* %262)[i64 0][i32 %116];
    i32 %264 = load i32* %263;
    i32 %265 = load i32* %241;
    i32 %266 = mul i32 %259, i32 %264;
    i32 %267 = add i32 %261, i32 %266;
    [1000 * i32]* %268 = getelementptr &([1000 * i32]* %245)[i64 4];
    i32* %269 = getelementptr &([1000 * i32]* %268)[i64 0][i32 %116];
    i32 %270 = load i32* %269;
    i32 %271 = load i32* %242;
    i32 %272 = mul i32 %265, i32 %270;
    i32 %273 = add i32 %267, i32 %272;
    [1000 * i32]* %274 = getelementptr &([1000 * i32]* %245)[i64 5];
    i32* %275 = getelementptr &([1000 * i32]* %274)[i64 0][i32 %116];
    i32 %276 = load i32* %275;
    i32 %277 = load i32* %243;
    i32 %278 = mul i32 %271, i32 %276;
    i32 %279 = add i32 %273, i32 %278;
    [1000 * i32]* %280 = getelementptr &([1000 * i32]* %245)[i64 6];
    i32* %281 = getelementptr &([1000 * i32]* %280)[i64 0][i32 %116];
    i32 %282 = load i32* %281;
    i32 %283 = load i32* %244;
    i32 %284 = mul i32 %277, i32 %282;
    i32 %285 = add i32 %279, i32 %284;
    [1000 * i32]* %286 = getelementptr &([1000 * i32]* %245)[i64 7];
    i32* %287 = getelementptr &([1000 * i32]* %286)[i64 0][i32 %116];
    i32 %288 = load i32* %287;
    i32 %289 = mul i32 %283, i32 %288;
    i32 %290 = add i32 %285, i32 %289;
    i32 %291 = add i32 %290, i32 %232;
    store i32* %235 with i32 %291;
    cbr i1 %234(prob = 1), ^while.body5, ^b4;
^b4:
    i32 %292 = add i32 %113, i32 1;
    store i32* %i with i32 %292;
    i1 %293 = scmp lt i32 %292, i32 1000;
    cbr i1 %293(prob = 1), ^while.body4, ^while.body8;
^while.body8:
    i32 %294 = phi [^b4, i32 0] [^while.body11, i32 %323];
    [1000 * i32]* %295 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %294];
    ubr ^while.body9;
^while.body9:
    i32 %296 = phi [^while.body8, i32 0] [^b5, i32 %302];
    i32 %297 = phi [^while.body8, i32 2147483647] [^b5, i32 %301];
    i32* %298 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %296];
    i32 %299 = load i32* %298;
    i1 %300 = scmp lt i32 %299, i32 %297;
    cbr i1 %300(prob = 0.5), ^if.then, ^b5;
^if.then:
    ubr ^b5;
^b5:
    i32 %301 = phi [^while.body9, i32 %297] [^if.then, i32 %299];
    i32 %302 = add i32 %296, i32 1;
    i1 %303 = scmp lt i32 %302, i32 1000;
    cbr i1 %303(prob = 1), ^while.body9, ^while.body10;
^while.body10:
    i32 %304 = phi [^b5, i32 0] [^while.body10, i32 %305];
    i32 %305 = add i32 %304, i32 16;
    i1 %306 = scmp lt i32 %305, i32 992;
    i32* %307 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %304];
    store i32* %307 with i32 %301;
    i32* %308 = getelementptr &(i32* %307)[i64 1];
    store i32* %308 with i32 %301;
    i32* %309 = getelementptr &(i32* %307)[i64 2];
    store i32* %309 with i32 %301;
    i32* %310 = getelementptr &(i32* %307)[i64 3];
    store i32* %310 with i32 %301;
    i32* %311 = getelementptr &(i32* %307)[i64 4];
    store i32* %311 with i32 %301;
    i32* %312 = getelementptr &(i32* %307)[i64 5];
    store i32* %312 with i32 %301;
    i32* %313 = getelementptr &(i32* %307)[i64 6];
    store i32* %313 with i32 %301;
    i32* %314 = getelementptr &(i32* %307)[i64 7];
    store i32* %314 with i32 %301;
    i32* %315 = getelementptr &(i32* %307)[i64 8];
    store i32* %315 with i32 %301;
    i32* %316 = getelementptr &(i32* %307)[i64 9];
    store i32* %316 with i32 %301;
    i32* %317 = getelementptr &(i32* %307)[i64 10];
    store i32* %317 with i32 %301;
    i32* %318 = getelementptr &(i32* %307)[i64 11];
    store i32* %318 with i32 %301;
    i32* %319 = getelementptr &(i32* %307)[i64 12];
    store i32* %319 with i32 %301;
    i32* %320 = getelementptr &(i32* %307)[i64 13];
    store i32* %320 with i32 %301;
    i32* %321 = getelementptr &(i32* %307)[i64 14];
    store i32* %321 with i32 %301;
    i32* %322 = getelementptr &(i32* %307)[i64 15];
    store i32* %322 with i32 %301;
    cbr i1 %306(prob = 0.98), ^while.body10, ^while.body11;
^while.body11:
    i32 %323 = add i32 %294, i32 1;
    i1 %324 = scmp lt i32 %323, i32 1000;
    i32* %325 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %305];
    store i32* %325 with i32 %301;
    i32* %326 = getelementptr &(i32* %325)[i64 1];
    store i32* %326 with i32 %301;
    i32* %327 = getelementptr &(i32* %325)[i64 2];
    store i32* %327 with i32 %301;
    i32* %328 = getelementptr &(i32* %325)[i64 3];
    store i32* %328 with i32 %301;
    i32* %329 = getelementptr &(i32* %325)[i64 4];
    store i32* %329 with i32 %301;
    i32* %330 = getelementptr &(i32* %325)[i64 5];
    store i32* %330 with i32 %301;
    i32* %331 = getelementptr &(i32* %325)[i64 6];
    store i32* %331 with i32 %301;
    i32* %332 = getelementptr &(i32* %325)[i64 7];
    store i32* %332 with i32 %301;
    cbr i1 %324(prob = 1), ^while.body8, ^b6;
^b6:
    store i32* %i with i32 0;
    ubr ^while.body12;
^while.body12:
    i32 %333 = phi [^b6, i32 0] [^while.body14, i32 %418];
    [1000 * i32]* %334 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %333];
    ubr ^while.body13;
^while.body13:
    i32 %335 = phi [^while.body12, i32 0] [^while.body13, i32 %336];
    i32 %336 = add i32 %335, i32 16;
    i1 %337 = scmp lt i32 %336, i32 992;
    i32* %338 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %335];
    i32* %339 = getelementptr &(i32* %338)[i64 1];
    i32* %340 = getelementptr &(i32* %338)[i64 2];
    i32* %341 = getelementptr &(i32* %338)[i64 3];
    i32* %342 = getelementptr &(i32* %338)[i64 4];
    i32* %343 = getelementptr &(i32* %338)[i64 5];
    i32* %344 = getelementptr &(i32* %338)[i64 6];
    i32* %345 = getelementptr &(i32* %338)[i64 7];
    i32* %346 = getelementptr &(i32* %338)[i64 8];
    i32* %347 = getelementptr &(i32* %338)[i64 9];
    i32* %348 = getelementptr &(i32* %338)[i64 10];
    i32* %349 = getelementptr &(i32* %338)[i64 11];
    i32* %350 = getelementptr &(i32* %338)[i64 12];
    i32* %351 = getelementptr &(i32* %338)[i64 13];
    i32* %352 = getelementptr &(i32* %338)[i64 14];
    i32* %353 = getelementptr &(i32* %338)[i64 15];
    [1000 * i32]* %354 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %335];
    i32* %355 = getelementptr &([1000 * i32]* %354)[i64 0][i32 %333];
    i32 %356 = load i32* %355;
    i32 %357 = neg i32 %356;
    store i32* %338 with i32 %357;
    [1000 * i32]* %358 = getelementptr &([1000 * i32]* %354)[i64 1];
    i32* %359 = getelementptr &([1000 * i32]* %358)[i64 0][i32 %333];
    i32 %360 = load i32* %359;
    i32 %361 = neg i32 %360;
    store i32* %339 with i32 %361;
    [1000 * i32]* %362 = getelementptr &([1000 * i32]* %354)[i64 2];
    i32* %363 = getelementptr &([1000 * i32]* %362)[i64 0][i32 %333];
    i32 %364 = load i32* %363;
    i32 %365 = neg i32 %364;
    store i32* %340 with i32 %365;
    [1000 * i32]* %366 = getelementptr &([1000 * i32]* %354)[i64 3];
    i32* %367 = getelementptr &([1000 * i32]* %366)[i64 0][i32 %333];
    i32 %368 = load i32* %367;
    i32 %369 = neg i32 %368;
    store i32* %341 with i32 %369;
    [1000 * i32]* %370 = getelementptr &([1000 * i32]* %354)[i64 4];
    i32* %371 = getelementptr &([1000 * i32]* %370)[i64 0][i32 %333];
    i32 %372 = load i32* %371;
    i32 %373 = neg i32 %372;
    store i32* %342 with i32 %373;
    [1000 * i32]* %374 = getelementptr &([1000 * i32]* %354)[i64 5];
    i32* %375 = getelementptr &([1000 * i32]* %374)[i64 0][i32 %333];
    i32 %376 = load i32* %375;
    i32 %377 = neg i32 %376;
    store i32* %343 with i32 %377;
    [1000 * i32]* %378 = getelementptr &([1000 * i32]* %354)[i64 6];
    i32* %379 = getelementptr &([1000 * i32]* %378)[i64 0][i32 %333];
    i32 %380 = load i32* %379;
    i32 %381 = neg i32 %380;
    store i32* %344 with i32 %381;
    [1000 * i32]* %382 = getelementptr &([1000 * i32]* %354)[i64 7];
    i32* %383 = getelementptr &([1000 * i32]* %382)[i64 0][i32 %333];
    i32 %384 = load i32* %383;
    i32 %385 = neg i32 %384;
    store i32* %345 with i32 %385;
    [1000 * i32]* %386 = getelementptr &([1000 * i32]* %354)[i64 8];
    i32* %387 = getelementptr &([1000 * i32]* %386)[i64 0][i32 %333];
    i32 %388 = load i32* %387;
    i32 %389 = neg i32 %388;
    store i32* %346 with i32 %389;
    [1000 * i32]* %390 = getelementptr &([1000 * i32]* %354)[i64 9];
    i32* %391 = getelementptr &([1000 * i32]* %390)[i64 0][i32 %333];
    i32 %392 = load i32* %391;
    i32 %393 = neg i32 %392;
    store i32* %347 with i32 %393;
    [1000 * i32]* %394 = getelementptr &([1000 * i32]* %354)[i64 10];
    i32* %395 = getelementptr &([1000 * i32]* %394)[i64 0][i32 %333];
    i32 %396 = load i32* %395;
    i32 %397 = neg i32 %396;
    store i32* %348 with i32 %397;
    [1000 * i32]* %398 = getelementptr &([1000 * i32]* %354)[i64 11];
    i32* %399 = getelementptr &([1000 * i32]* %398)[i64 0][i32 %333];
    i32 %400 = load i32* %399;
    i32 %401 = neg i32 %400;
    store i32* %349 with i32 %401;
    [1000 * i32]* %402 = getelementptr &([1000 * i32]* %354)[i64 12];
    i32* %403 = getelementptr &([1000 * i32]* %402)[i64 0][i32 %333];
    i32 %404 = load i32* %403;
    i32 %405 = neg i32 %404;
    store i32* %350 with i32 %405;
    [1000 * i32]* %406 = getelementptr &([1000 * i32]* %354)[i64 13];
    i32* %407 = getelementptr &([1000 * i32]* %406)[i64 0][i32 %333];
    i32 %408 = load i32* %407;
    i32 %409 = neg i32 %408;
    store i32* %351 with i32 %409;
    [1000 * i32]* %410 = getelementptr &([1000 * i32]* %354)[i64 14];
    i32* %411 = getelementptr &([1000 * i32]* %410)[i64 0][i32 %333];
    i32 %412 = load i32* %411;
    i32 %413 = neg i32 %412;
    store i32* %352 with i32 %413;
    [1000 * i32]* %414 = getelementptr &([1000 * i32]* %354)[i64 15];
    i32* %415 = getelementptr &([1000 * i32]* %414)[i64 0][i32 %333];
    i32 %416 = load i32* %415;
    i32 %417 = neg i32 %416;
    store i32* %353 with i32 %417;
    cbr i1 %337(prob = 0.98), ^while.body13, ^while.body14;
^while.body14:
    i32 %418 = add i32 %333, i32 1;
    i1 %419 = scmp lt i32 %418, i32 1000;
    i32* %420 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %336];
    i32* %421 = getelementptr &(i32* %420)[i64 1];
    i32* %422 = getelementptr &(i32* %420)[i64 2];
    i32* %423 = getelementptr &(i32* %420)[i64 3];
    i32* %424 = getelementptr &(i32* %420)[i64 4];
    i32* %425 = getelementptr &(i32* %420)[i64 5];
    i32* %426 = getelementptr &(i32* %420)[i64 6];
    i32* %427 = getelementptr &(i32* %420)[i64 7];
    [1000 * i32]* %428 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %336];
    i32* %429 = getelementptr &([1000 * i32]* %428)[i64 0][i32 %333];
    i32 %430 = load i32* %429;
    i32 %431 = neg i32 %430;
    store i32* %420 with i32 %431;
    [1000 * i32]* %432 = getelementptr &([1000 * i32]* %428)[i64 1];
    i32* %433 = getelementptr &([1000 * i32]* %432)[i64 0][i32 %333];
    i32 %434 = load i32* %433;
    i32 %435 = neg i32 %434;
    store i32* %421 with i32 %435;
    [1000 * i32]* %436 = getelementptr &([1000 * i32]* %428)[i64 2];
    i32* %437 = getelementptr &([1000 * i32]* %436)[i64 0][i32 %333];
    i32 %438 = load i32* %437;
    i32 %439 = neg i32 %438;
    store i32* %422 with i32 %439;
    [1000 * i32]* %440 = getelementptr &([1000 * i32]* %428)[i64 3];
    i32* %441 = getelementptr &([1000 * i32]* %440)[i64 0][i32 %333];
    i32 %442 = load i32* %441;
    i32 %443 = neg i32 %442;
    store i32* %423 with i32 %443;
    [1000 * i32]* %444 = getelementptr &([1000 * i32]* %428)[i64 4];
    i32* %445 = getelementptr &([1000 * i32]* %444)[i64 0][i32 %333];
    i32 %446 = load i32* %445;
    i32 %447 = neg i32 %446;
    store i32* %424 with i32 %447;
    [1000 * i32]* %448 = getelementptr &([1000 * i32]* %428)[i64 5];
    i32* %449 = getelementptr &([1000 * i32]* %448)[i64 0][i32 %333];
    i32 %450 = load i32* %449;
    i32 %451 = neg i32 %450;
    store i32* %425 with i32 %451;
    [1000 * i32]* %452 = getelementptr &([1000 * i32]* %428)[i64 6];
    i32* %453 = getelementptr &([1000 * i32]* %452)[i64 0][i32 %333];
    i32 %454 = load i32* %453;
    i32 %455 = neg i32 %454;
    store i32* %426 with i32 %455;
    [1000 * i32]* %456 = getelementptr &([1000 * i32]* %428)[i64 7];
    i32* %457 = getelementptr &([1000 * i32]* %456)[i64 0][i32 %333];
    i32 %458 = load i32* %457;
    i32 %459 = neg i32 %458;
    store i32* %427 with i32 %459;
    store i32* %i with i32 %418;
    cbr i1 %419(prob = 1), ^while.body12, ^while.body15;
^while.body15:
    i32 %460 = phi [^while.body14, i32 0] [^while.body17, i32 %515];
    i32 %461 = phi [^while.body14, i32 %5] [^while.body17, i32 %540];
    [1000 * i32]* %462 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %460];
    ubr ^while.body16;
^while.body16:
    i32 %463 = phi [^while.body15, i32 %461] [^while.body16, i32 %514];
    i32 %464 = phi [^while.body15, i32 0] [^while.body16, i32 %465];
    i32 %465 = add i32 %464, i32 16;
    i1 %466 = scmp lt i32 %465, i32 992;
    i32* %467 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %464];
    i32 %468 = load i32* %467;
    i32 %469 = add i32 %463, i32 %468;
    i32* %470 = getelementptr &(i32* %467)[i64 1];
    i32 %471 = load i32* %470;
    i32 %472 = add i32 %469, i32 %471;
    i32* %473 = getelementptr &(i32* %467)[i64 2];
    i32 %474 = load i32* %473;
    i32 %475 = add i32 %472, i32 %474;
    i32* %476 = getelementptr &(i32* %467)[i64 3];
    i32 %477 = load i32* %476;
    i32 %478 = add i32 %475, i32 %477;
    i32* %479 = getelementptr &(i32* %467)[i64 4];
    i32 %480 = load i32* %479;
    i32 %481 = add i32 %478, i32 %480;
    i32* %482 = getelementptr &(i32* %467)[i64 5];
    i32 %483 = load i32* %482;
    i32 %484 = add i32 %481, i32 %483;
    i32* %485 = getelementptr &(i32* %467)[i64 6];
    i32 %486 = load i32* %485;
    i32 %487 = add i32 %484, i32 %486;
    i32* %488 = getelementptr &(i32* %467)[i64 7];
    i32 %489 = load i32* %488;
    i32 %490 = add i32 %487, i32 %489;
    i32* %491 = getelementptr &(i32* %467)[i64 8];
    i32 %492 = load i32* %491;
    i32 %493 = add i32 %490, i32 %492;
    i32* %494 = getelementptr &(i32* %467)[i64 9];
    i32 %495 = load i32* %494;
    i32 %496 = add i32 %493, i32 %495;
    i32* %497 = getelementptr &(i32* %467)[i64 10];
    i32 %498 = load i32* %497;
    i32 %499 = add i32 %496, i32 %498;
    i32* %500 = getelementptr &(i32* %467)[i64 11];
    i32 %501 = load i32* %500;
    i32 %502 = add i32 %499, i32 %501;
    i32* %503 = getelementptr &(i32* %467)[i64 12];
    i32 %504 = load i32* %503;
    i32 %505 = add i32 %502, i32 %504;
    i32* %506 = getelementptr &(i32* %467)[i64 13];
    i32 %507 = load i32* %506;
    i32 %508 = add i32 %505, i32 %507;
    i32* %509 = getelementptr &(i32* %467)[i64 14];
    i32 %510 = load i32* %509;
    i32 %511 = add i32 %508, i32 %510;
    i32* %512 = getelementptr &(i32* %467)[i64 15];
    i32 %513 = load i32* %512;
    i32 %514 = add i32 %511, i32 %513;
    store i32* %sum with i32 %514;
    cbr i1 %466(prob = 0.98), ^while.body16, ^while.body17;
^while.body17:
    i32 %515 = add i32 %460, i32 1;
    i1 %516 = scmp lt i32 %515, i32 1000;
    i32* %517 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %465];
    i32 %518 = load i32* %517;
    i32* %519 = getelementptr &(i32* %517)[i64 1];
    i32 %520 = load i32* %519;
    i32 %521 = add i32 %518, i32 %520;
    i32* %522 = getelementptr &(i32* %517)[i64 2];
    i32 %523 = load i32* %522;
    i32 %524 = add i32 %521, i32 %523;
    i32* %525 = getelementptr &(i32* %517)[i64 3];
    i32 %526 = load i32* %525;
    i32 %527 = add i32 %524, i32 %526;
    i32* %528 = getelementptr &(i32* %517)[i64 4];
    i32 %529 = load i32* %528;
    i32 %530 = add i32 %527, i32 %529;
    i32* %531 = getelementptr &(i32* %517)[i64 5];
    i32 %532 = load i32* %531;
    i32 %533 = add i32 %530, i32 %532;
    i32* %534 = getelementptr &(i32* %517)[i64 6];
    i32 %535 = load i32* %534;
    i32 %536 = add i32 %533, i32 %535;
    i32 %537 = add i32 %536, i32 %514;
    i32* %538 = getelementptr &(i32* %517)[i64 7];
    i32 %539 = load i32* %538;
    store i32* %i with i32 %515;
    i32 %540 = add i32 %537, i32 %539;
    cbr i1 %516(prob = 1), ^while.body15, ^b7;
^b7:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %540);
    ubr ^b1;
}
