internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    i32* %sum = alloc i32;
    i32* %i = alloc i32;
    store i32* %sum with i32 0;
    store i32* %i with i32 0;
    ubr ^while.body;
^while.body:
    i32 %0 = phi [^b, i32 %7] [^entry, i32 0];
    [1000 * i32]* %1 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %0];
    i32* %2 = getelementptr &([1000 * i32]* %1)[i64 0][i64 0];
    i32 %3 = call (i32*) -> i32 @getarray(i32* %2);
    i32 %4 = load i32* %i;
    i32 %5 = load i32* %sum;
    i1 %6 = scmp neq i32 %3, i32 1000;
    cbr i1 %6(prob = 0.5), ^b1, ^b;
^b:
    i32 %7 = add i32 %4, i32 1;
    store i32* %i with i32 %7;
    i1 %8 = scmp lt i32 %7, i32 1000;
    cbr i1 %8(prob = 0.97), ^while.body, ^b2;
^b1:
    i32 %9 = phi [^while.body, i32 %3] [^b5, i32 0];
    ret i32 %9;
^b2:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.body1;
^while.body1:
    i32 %10 = phi [^while.body3, i32 %111] [^b2, i32 0];
    [1000 * i32]* %11 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %10];
    ubr ^while.body2;
^while.body2:
    i32 %12 = phi [^while.body2, i32 %77] [^while.body1, i32 0];
    i32* %13 = getelementptr &([1000 * i32]* %11)[i64 0][i32 %12];
    [1000 * i32]* %14 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %12];
    i32* %15 = getelementptr &([1000 * i32]* %14)[i64 0][i32 %10];
    i32 %16 = load i32* %15;
    store i32* %13 with i32 %16;
    i32* %17 = getelementptr &(i32* %13)[i64 1];
    [1000 * i32]* %18 = getelementptr &([1000 * i32]* %14)[i64 1];
    i32* %19 = getelementptr &([1000 * i32]* %18)[i64 0][i32 %10];
    i32 %20 = load i32* %19;
    store i32* %17 with i32 %20;
    i32* %21 = getelementptr &(i32* %13)[i64 2];
    [1000 * i32]* %22 = getelementptr &([1000 * i32]* %14)[i64 2];
    i32* %23 = getelementptr &([1000 * i32]* %22)[i64 0][i32 %10];
    i32 %24 = load i32* %23;
    store i32* %21 with i32 %24;
    i32* %25 = getelementptr &(i32* %13)[i64 3];
    [1000 * i32]* %26 = getelementptr &([1000 * i32]* %14)[i64 3];
    i32* %27 = getelementptr &([1000 * i32]* %26)[i64 0][i32 %10];
    i32 %28 = load i32* %27;
    store i32* %25 with i32 %28;
    i32* %29 = getelementptr &(i32* %13)[i64 4];
    [1000 * i32]* %30 = getelementptr &([1000 * i32]* %14)[i64 4];
    i32* %31 = getelementptr &([1000 * i32]* %30)[i64 0][i32 %10];
    i32 %32 = load i32* %31;
    store i32* %29 with i32 %32;
    i32* %33 = getelementptr &(i32* %13)[i64 5];
    [1000 * i32]* %34 = getelementptr &([1000 * i32]* %14)[i64 5];
    i32* %35 = getelementptr &([1000 * i32]* %34)[i64 0][i32 %10];
    i32 %36 = load i32* %35;
    store i32* %33 with i32 %36;
    i32* %37 = getelementptr &(i32* %13)[i64 6];
    [1000 * i32]* %38 = getelementptr &([1000 * i32]* %14)[i64 6];
    i32* %39 = getelementptr &([1000 * i32]* %38)[i64 0][i32 %10];
    i32 %40 = load i32* %39;
    store i32* %37 with i32 %40;
    i32* %41 = getelementptr &(i32* %13)[i64 7];
    [1000 * i32]* %42 = getelementptr &([1000 * i32]* %14)[i64 7];
    i32* %43 = getelementptr &([1000 * i32]* %42)[i64 0][i32 %10];
    i32 %44 = load i32* %43;
    store i32* %41 with i32 %44;
    i32* %45 = getelementptr &(i32* %13)[i64 8];
    [1000 * i32]* %46 = getelementptr &([1000 * i32]* %14)[i64 8];
    i32* %47 = getelementptr &([1000 * i32]* %46)[i64 0][i32 %10];
    i32 %48 = load i32* %47;
    store i32* %45 with i32 %48;
    i32* %49 = getelementptr &(i32* %13)[i64 9];
    [1000 * i32]* %50 = getelementptr &([1000 * i32]* %14)[i64 9];
    i32* %51 = getelementptr &([1000 * i32]* %50)[i64 0][i32 %10];
    i32 %52 = load i32* %51;
    store i32* %49 with i32 %52;
    i32* %53 = getelementptr &(i32* %13)[i64 10];
    [1000 * i32]* %54 = getelementptr &([1000 * i32]* %14)[i64 10];
    i32* %55 = getelementptr &([1000 * i32]* %54)[i64 0][i32 %10];
    i32 %56 = load i32* %55;
    store i32* %53 with i32 %56;
    i32* %57 = getelementptr &(i32* %13)[i64 11];
    [1000 * i32]* %58 = getelementptr &([1000 * i32]* %14)[i64 11];
    i32* %59 = getelementptr &([1000 * i32]* %58)[i64 0][i32 %10];
    i32 %60 = load i32* %59;
    store i32* %57 with i32 %60;
    i32* %61 = getelementptr &(i32* %13)[i64 12];
    [1000 * i32]* %62 = getelementptr &([1000 * i32]* %14)[i64 12];
    i32* %63 = getelementptr &([1000 * i32]* %62)[i64 0][i32 %10];
    i32 %64 = load i32* %63;
    store i32* %61 with i32 %64;
    i32* %65 = getelementptr &(i32* %13)[i64 13];
    [1000 * i32]* %66 = getelementptr &([1000 * i32]* %14)[i64 13];
    i32* %67 = getelementptr &([1000 * i32]* %66)[i64 0][i32 %10];
    i32 %68 = load i32* %67;
    store i32* %65 with i32 %68;
    i32* %69 = getelementptr &(i32* %13)[i64 14];
    [1000 * i32]* %70 = getelementptr &([1000 * i32]* %14)[i64 14];
    i32* %71 = getelementptr &([1000 * i32]* %70)[i64 0][i32 %10];
    i32 %72 = load i32* %71;
    store i32* %69 with i32 %72;
    i32* %73 = getelementptr &(i32* %13)[i64 15];
    [1000 * i32]* %74 = getelementptr &([1000 * i32]* %14)[i64 15];
    i32* %75 = getelementptr &([1000 * i32]* %74)[i64 0][i32 %10];
    i32 %76 = load i32* %75;
    store i32* %73 with i32 %76;
    i32 %77 = add i32 %12, i32 16;
    i1 %78 = scmp lt i32 %77, i32 992;
    cbr i1 %78(prob = 0.98), ^while.body2, ^while.body3;
^while.body3:
    i32* %79 = getelementptr &([1000 * i32]* %11)[i64 0][i32 %77];
    [1000 * i32]* %80 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %77];
    i32* %81 = getelementptr &([1000 * i32]* %80)[i64 0][i32 %10];
    i32 %82 = load i32* %81;
    store i32* %79 with i32 %82;
    i32* %83 = getelementptr &(i32* %79)[i64 1];
    [1000 * i32]* %84 = getelementptr &([1000 * i32]* %80)[i64 1];
    i32* %85 = getelementptr &([1000 * i32]* %84)[i64 0][i32 %10];
    i32 %86 = load i32* %85;
    store i32* %83 with i32 %86;
    i32* %87 = getelementptr &(i32* %79)[i64 2];
    [1000 * i32]* %88 = getelementptr &([1000 * i32]* %80)[i64 2];
    i32* %89 = getelementptr &([1000 * i32]* %88)[i64 0][i32 %10];
    i32 %90 = load i32* %89;
    store i32* %87 with i32 %90;
    i32* %91 = getelementptr &(i32* %79)[i64 3];
    [1000 * i32]* %92 = getelementptr &([1000 * i32]* %80)[i64 3];
    i32* %93 = getelementptr &([1000 * i32]* %92)[i64 0][i32 %10];
    i32 %94 = load i32* %93;
    store i32* %91 with i32 %94;
    i32* %95 = getelementptr &(i32* %79)[i64 4];
    [1000 * i32]* %96 = getelementptr &([1000 * i32]* %80)[i64 4];
    i32* %97 = getelementptr &([1000 * i32]* %96)[i64 0][i32 %10];
    i32 %98 = load i32* %97;
    store i32* %95 with i32 %98;
    i32* %99 = getelementptr &(i32* %79)[i64 5];
    [1000 * i32]* %100 = getelementptr &([1000 * i32]* %80)[i64 5];
    i32* %101 = getelementptr &([1000 * i32]* %100)[i64 0][i32 %10];
    i32 %102 = load i32* %101;
    store i32* %99 with i32 %102;
    i32* %103 = getelementptr &(i32* %79)[i64 6];
    [1000 * i32]* %104 = getelementptr &([1000 * i32]* %80)[i64 6];
    i32* %105 = getelementptr &([1000 * i32]* %104)[i64 0][i32 %10];
    i32 %106 = load i32* %105;
    store i32* %103 with i32 %106;
    i32* %107 = getelementptr &(i32* %79)[i64 7];
    [1000 * i32]* %108 = getelementptr &([1000 * i32]* %80)[i64 7];
    i32* %109 = getelementptr &([1000 * i32]* %108)[i64 0][i32 %10];
    i32 %110 = load i32* %109;
    store i32* %107 with i32 %110;
    i32 %111 = add i32 %10, i32 1;
    i1 %112 = scmp lt i32 %111, i32 1000;
    cbr i1 %112(prob = 1), ^while.body1, ^while.body4;
^while.body4:
    i32 %113 = phi [^while.body3, i32 0] [^b3, i32 %292];
    [1000 * i32]* %114 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %113];
    [1000 * i32]* %115 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %113];
    ubr ^while.body5;
^while.body5:
    i32 %116 = phi [^while.body7, i32 %290] [^while.body4, i32 0];
    ubr ^while.body6;
^while.body6:
    i32 %117 = phi [^while.body6, i32 %231] [^while.body5, i32 0];
    i32 %118 = phi [^while.body6, i32 %230] [^while.body5, i32 0];
    i32* %119 = getelementptr &([1000 * i32]* %114)[i64 0][i32 %117];
    i32 %120 = load i32* %119;
    [1000 * i32]* %121 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %117];
    i32* %122 = getelementptr &([1000 * i32]* %121)[i64 0][i32 %116];
    i32 %123 = load i32* %122;
    i32 %124 = mul i32 %120, i32 %123;
    i32* %125 = getelementptr &(i32* %119)[i64 1];
    i32 %126 = load i32* %125;
    [1000 * i32]* %127 = getelementptr &([1000 * i32]* %121)[i64 1];
    i32* %128 = getelementptr &([1000 * i32]* %127)[i64 0][i32 %116];
    i32 %129 = load i32* %128;
    i32 %130 = mul i32 %126, i32 %129;
    i32* %131 = getelementptr &(i32* %119)[i64 2];
    i32 %132 = load i32* %131;
    [1000 * i32]* %133 = getelementptr &([1000 * i32]* %121)[i64 2];
    i32* %134 = getelementptr &([1000 * i32]* %133)[i64 0][i32 %116];
    i32 %135 = load i32* %134;
    i32 %136 = mul i32 %132, i32 %135;
    i32* %137 = getelementptr &(i32* %119)[i64 3];
    i32 %138 = load i32* %137;
    [1000 * i32]* %139 = getelementptr &([1000 * i32]* %121)[i64 3];
    i32* %140 = getelementptr &([1000 * i32]* %139)[i64 0][i32 %116];
    i32 %141 = load i32* %140;
    i32 %142 = mul i32 %138, i32 %141;
    i32* %143 = getelementptr &(i32* %119)[i64 4];
    i32 %144 = load i32* %143;
    [1000 * i32]* %145 = getelementptr &([1000 * i32]* %121)[i64 4];
    i32* %146 = getelementptr &([1000 * i32]* %145)[i64 0][i32 %116];
    i32 %147 = load i32* %146;
    i32 %148 = mul i32 %144, i32 %147;
    i32* %149 = getelementptr &(i32* %119)[i64 5];
    i32 %150 = load i32* %149;
    [1000 * i32]* %151 = getelementptr &([1000 * i32]* %121)[i64 5];
    i32* %152 = getelementptr &([1000 * i32]* %151)[i64 0][i32 %116];
    i32 %153 = load i32* %152;
    i32 %154 = mul i32 %150, i32 %153;
    i32* %155 = getelementptr &(i32* %119)[i64 6];
    i32 %156 = load i32* %155;
    [1000 * i32]* %157 = getelementptr &([1000 * i32]* %121)[i64 6];
    i32* %158 = getelementptr &([1000 * i32]* %157)[i64 0][i32 %116];
    i32 %159 = load i32* %158;
    i32 %160 = mul i32 %156, i32 %159;
    i32* %161 = getelementptr &(i32* %119)[i64 7];
    i32 %162 = load i32* %161;
    [1000 * i32]* %163 = getelementptr &([1000 * i32]* %121)[i64 7];
    i32* %164 = getelementptr &([1000 * i32]* %163)[i64 0][i32 %116];
    i32 %165 = load i32* %164;
    i32 %166 = mul i32 %162, i32 %165;
    i32* %167 = getelementptr &(i32* %119)[i64 8];
    i32 %168 = load i32* %167;
    [1000 * i32]* %169 = getelementptr &([1000 * i32]* %121)[i64 8];
    i32* %170 = getelementptr &([1000 * i32]* %169)[i64 0][i32 %116];
    i32 %171 = load i32* %170;
    i32 %172 = mul i32 %168, i32 %171;
    i32* %173 = getelementptr &(i32* %119)[i64 9];
    i32 %174 = load i32* %173;
    [1000 * i32]* %175 = getelementptr &([1000 * i32]* %121)[i64 9];
    i32* %176 = getelementptr &([1000 * i32]* %175)[i64 0][i32 %116];
    i32 %177 = load i32* %176;
    i32 %178 = mul i32 %174, i32 %177;
    i32* %179 = getelementptr &(i32* %119)[i64 10];
    i32 %180 = load i32* %179;
    [1000 * i32]* %181 = getelementptr &([1000 * i32]* %121)[i64 10];
    i32* %182 = getelementptr &([1000 * i32]* %181)[i64 0][i32 %116];
    i32 %183 = load i32* %182;
    i32 %184 = mul i32 %180, i32 %183;
    i32* %185 = getelementptr &(i32* %119)[i64 11];
    i32 %186 = load i32* %185;
    [1000 * i32]* %187 = getelementptr &([1000 * i32]* %121)[i64 11];
    i32* %188 = getelementptr &([1000 * i32]* %187)[i64 0][i32 %116];
    i32 %189 = load i32* %188;
    i32 %190 = mul i32 %186, i32 %189;
    i32* %191 = getelementptr &(i32* %119)[i64 12];
    i32 %192 = load i32* %191;
    [1000 * i32]* %193 = getelementptr &([1000 * i32]* %121)[i64 12];
    i32* %194 = getelementptr &([1000 * i32]* %193)[i64 0][i32 %116];
    i32 %195 = load i32* %194;
    i32 %196 = mul i32 %192, i32 %195;
    i32* %197 = getelementptr &(i32* %119)[i64 13];
    i32 %198 = load i32* %197;
    [1000 * i32]* %199 = getelementptr &([1000 * i32]* %121)[i64 13];
    i32* %200 = getelementptr &([1000 * i32]* %199)[i64 0][i32 %116];
    i32 %201 = load i32* %200;
    i32 %202 = mul i32 %198, i32 %201;
    i32* %203 = getelementptr &(i32* %119)[i64 14];
    i32 %204 = load i32* %203;
    [1000 * i32]* %205 = getelementptr &([1000 * i32]* %121)[i64 14];
    i32* %206 = getelementptr &([1000 * i32]* %205)[i64 0][i32 %116];
    i32 %207 = load i32* %206;
    i32 %208 = mul i32 %204, i32 %207;
    i32* %209 = getelementptr &(i32* %119)[i64 15];
    i32 %210 = load i32* %209;
    [1000 * i32]* %211 = getelementptr &([1000 * i32]* %121)[i64 15];
    i32* %212 = getelementptr &([1000 * i32]* %211)[i64 0][i32 %116];
    i32 %213 = load i32* %212;
    i32 %214 = mul i32 %210, i32 %213;
    i32 %215 = add i32 %118, i32 %124;
    i32 %216 = add i32 %215, i32 %130;
    i32 %217 = add i32 %216, i32 %136;
    i32 %218 = add i32 %217, i32 %142;
    i32 %219 = add i32 %218, i32 %148;
    i32 %220 = add i32 %219, i32 %154;
    i32 %221 = add i32 %220, i32 %160;
    i32 %222 = add i32 %221, i32 %166;
    i32 %223 = add i32 %222, i32 %172;
    i32 %224 = add i32 %223, i32 %178;
    i32 %225 = add i32 %224, i32 %184;
    i32 %226 = add i32 %225, i32 %190;
    i32 %227 = add i32 %226, i32 %196;
    i32 %228 = add i32 %227, i32 %202;
    i32 %229 = add i32 %228, i32 %208;
    i32 %230 = add i32 %229, i32 %214;
    i32 %231 = add i32 %117, i32 16;
    i1 %232 = scmp lt i32 %231, i32 992;
    cbr i1 %232(prob = 0.98), ^while.body6, ^while.body7;
^while.body7:
    i32* %233 = getelementptr &([1000 * i32]* %114)[i64 0][i32 %231];
    i32 %234 = load i32* %233;
    [1000 * i32]* %235 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %231];
    i32* %236 = getelementptr &([1000 * i32]* %235)[i64 0][i32 %116];
    i32 %237 = load i32* %236;
    i32 %238 = mul i32 %234, i32 %237;
    i32* %239 = getelementptr &(i32* %233)[i64 1];
    i32 %240 = load i32* %239;
    [1000 * i32]* %241 = getelementptr &([1000 * i32]* %235)[i64 1];
    i32* %242 = getelementptr &([1000 * i32]* %241)[i64 0][i32 %116];
    i32 %243 = load i32* %242;
    i32 %244 = mul i32 %240, i32 %243;
    i32* %245 = getelementptr &(i32* %233)[i64 2];
    i32 %246 = load i32* %245;
    [1000 * i32]* %247 = getelementptr &([1000 * i32]* %235)[i64 2];
    i32* %248 = getelementptr &([1000 * i32]* %247)[i64 0][i32 %116];
    i32 %249 = load i32* %248;
    i32 %250 = mul i32 %246, i32 %249;
    i32* %251 = getelementptr &(i32* %233)[i64 3];
    i32 %252 = load i32* %251;
    [1000 * i32]* %253 = getelementptr &([1000 * i32]* %235)[i64 3];
    i32* %254 = getelementptr &([1000 * i32]* %253)[i64 0][i32 %116];
    i32 %255 = load i32* %254;
    i32 %256 = mul i32 %252, i32 %255;
    i32* %257 = getelementptr &(i32* %233)[i64 4];
    i32 %258 = load i32* %257;
    [1000 * i32]* %259 = getelementptr &([1000 * i32]* %235)[i64 4];
    i32* %260 = getelementptr &([1000 * i32]* %259)[i64 0][i32 %116];
    i32 %261 = load i32* %260;
    i32 %262 = mul i32 %258, i32 %261;
    i32* %263 = getelementptr &(i32* %233)[i64 5];
    i32 %264 = load i32* %263;
    [1000 * i32]* %265 = getelementptr &([1000 * i32]* %235)[i64 5];
    i32* %266 = getelementptr &([1000 * i32]* %265)[i64 0][i32 %116];
    i32 %267 = load i32* %266;
    i32 %268 = mul i32 %264, i32 %267;
    i32* %269 = getelementptr &(i32* %233)[i64 6];
    i32 %270 = load i32* %269;
    [1000 * i32]* %271 = getelementptr &([1000 * i32]* %235)[i64 6];
    i32* %272 = getelementptr &([1000 * i32]* %271)[i64 0][i32 %116];
    i32 %273 = load i32* %272;
    i32 %274 = mul i32 %270, i32 %273;
    i32* %275 = getelementptr &(i32* %233)[i64 7];
    i32 %276 = load i32* %275;
    [1000 * i32]* %277 = getelementptr &([1000 * i32]* %235)[i64 7];
    i32* %278 = getelementptr &([1000 * i32]* %277)[i64 0][i32 %116];
    i32 %279 = load i32* %278;
    i32 %280 = mul i32 %276, i32 %279;
    i32 %281 = add i32 %238, i32 %244;
    i32 %282 = add i32 %281, i32 %250;
    i32 %283 = add i32 %282, i32 %256;
    i32 %284 = add i32 %283, i32 %262;
    i32 %285 = add i32 %284, i32 %268;
    i32 %286 = add i32 %285, i32 %274;
    i32 %287 = add i32 %286, i32 %280;
    i32 %288 = add i32 %287, i32 %230;
    i32* %289 = getelementptr &([1000 * i32]* %115)[i64 0][i32 %116];
    store i32* %289 with i32 %288;
    i32 %290 = add i32 %116, i32 1;
    i1 %291 = scmp lt i32 %290, i32 1000;
    cbr i1 %291(prob = 1), ^while.body5, ^b3;
^b3:
    i32 %292 = add i32 %113, i32 1;
    i1 %293 = scmp lt i32 %292, i32 1000;
    cbr i1 %293(prob = 1), ^while.body4, ^while.body8;
^while.body8:
    i32 %294 = phi [^while.body11, i32 %331] [^b3, i32 0];
    [1000 * i32]* %295 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %294];
    ubr ^while.body9;
^while.body9:
    i32 %296 = phi [^b4, i32 %302] [^while.body8, i32 0];
    i32 %297 = phi [^b4, i32 %301] [^while.body8, i32 2147483647];
    i32* %298 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %296];
    i32 %299 = load i32* %298;
    i1 %300 = scmp lt i32 %299, i32 %297;
    cbr i1 %300(prob = 0.5), ^if.then, ^b4;
^if.then:
    ubr ^b4;
^b4:
    i32 %301 = phi [^while.body9, i32 %297] [^if.then, i32 %299];
    i32 %302 = add i32 %296, i32 1;
    i1 %303 = scmp lt i32 %302, i32 1000;
    cbr i1 %303(prob = 1), ^while.body9, ^while.body10;
^while.body10:
    i32 %304 = phi [^b4, i32 0] [^while.body10, i32 %321];
    i32* %305 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %304];
    store i32* %305 with i32 %301;
    i32* %306 = getelementptr &(i32* %305)[i64 1];
    store i32* %306 with i32 %301;
    i32* %307 = getelementptr &(i32* %305)[i64 2];
    store i32* %307 with i32 %301;
    i32* %308 = getelementptr &(i32* %305)[i64 3];
    store i32* %308 with i32 %301;
    i32* %309 = getelementptr &(i32* %305)[i64 4];
    store i32* %309 with i32 %301;
    i32* %310 = getelementptr &(i32* %305)[i64 5];
    store i32* %310 with i32 %301;
    i32* %311 = getelementptr &(i32* %305)[i64 6];
    store i32* %311 with i32 %301;
    i32* %312 = getelementptr &(i32* %305)[i64 7];
    store i32* %312 with i32 %301;
    i32* %313 = getelementptr &(i32* %305)[i64 8];
    store i32* %313 with i32 %301;
    i32* %314 = getelementptr &(i32* %305)[i64 9];
    store i32* %314 with i32 %301;
    i32* %315 = getelementptr &(i32* %305)[i64 10];
    store i32* %315 with i32 %301;
    i32* %316 = getelementptr &(i32* %305)[i64 11];
    store i32* %316 with i32 %301;
    i32* %317 = getelementptr &(i32* %305)[i64 12];
    store i32* %317 with i32 %301;
    i32* %318 = getelementptr &(i32* %305)[i64 13];
    store i32* %318 with i32 %301;
    i32* %319 = getelementptr &(i32* %305)[i64 14];
    store i32* %319 with i32 %301;
    i32* %320 = getelementptr &(i32* %305)[i64 15];
    store i32* %320 with i32 %301;
    i32 %321 = add i32 %304, i32 16;
    i1 %322 = scmp lt i32 %321, i32 992;
    cbr i1 %322(prob = 0.98), ^while.body10, ^while.body11;
^while.body11:
    i32* %323 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %321];
    store i32* %323 with i32 %301;
    i32* %324 = getelementptr &(i32* %323)[i64 1];
    store i32* %324 with i32 %301;
    i32* %325 = getelementptr &(i32* %323)[i64 2];
    store i32* %325 with i32 %301;
    i32* %326 = getelementptr &(i32* %323)[i64 3];
    store i32* %326 with i32 %301;
    i32* %327 = getelementptr &(i32* %323)[i64 4];
    store i32* %327 with i32 %301;
    i32* %328 = getelementptr &(i32* %323)[i64 5];
    store i32* %328 with i32 %301;
    i32* %329 = getelementptr &(i32* %323)[i64 6];
    store i32* %329 with i32 %301;
    i32* %330 = getelementptr &(i32* %323)[i64 7];
    store i32* %330 with i32 %301;
    i32 %331 = add i32 %294, i32 1;
    i1 %332 = scmp lt i32 %331, i32 1000;
    cbr i1 %332(prob = 1), ^while.body8, ^while.body12;
^while.body12:
    i32 %333 = phi [^while.body11, i32 0] [^while.body14, i32 %458];
    [1000 * i32]* %334 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %333];
    ubr ^while.body13;
^while.body13:
    i32 %335 = phi [^while.body13, i32 %416] [^while.body12, i32 0];
    i32* %336 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %335];
    [1000 * i32]* %337 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %335];
    i32* %338 = getelementptr &([1000 * i32]* %337)[i64 0][i32 %333];
    i32 %339 = load i32* %338;
    i32 %340 = neg i32 %339;
    store i32* %336 with i32 %340;
    i32* %341 = getelementptr &(i32* %336)[i64 1];
    [1000 * i32]* %342 = getelementptr &([1000 * i32]* %337)[i64 1];
    i32* %343 = getelementptr &([1000 * i32]* %342)[i64 0][i32 %333];
    i32 %344 = load i32* %343;
    i32 %345 = neg i32 %344;
    store i32* %341 with i32 %345;
    i32* %346 = getelementptr &(i32* %336)[i64 2];
    [1000 * i32]* %347 = getelementptr &([1000 * i32]* %337)[i64 2];
    i32* %348 = getelementptr &([1000 * i32]* %347)[i64 0][i32 %333];
    i32 %349 = load i32* %348;
    i32 %350 = neg i32 %349;
    store i32* %346 with i32 %350;
    i32* %351 = getelementptr &(i32* %336)[i64 3];
    [1000 * i32]* %352 = getelementptr &([1000 * i32]* %337)[i64 3];
    i32* %353 = getelementptr &([1000 * i32]* %352)[i64 0][i32 %333];
    i32 %354 = load i32* %353;
    i32 %355 = neg i32 %354;
    store i32* %351 with i32 %355;
    i32* %356 = getelementptr &(i32* %336)[i64 4];
    [1000 * i32]* %357 = getelementptr &([1000 * i32]* %337)[i64 4];
    i32* %358 = getelementptr &([1000 * i32]* %357)[i64 0][i32 %333];
    i32 %359 = load i32* %358;
    i32 %360 = neg i32 %359;
    store i32* %356 with i32 %360;
    i32* %361 = getelementptr &(i32* %336)[i64 5];
    [1000 * i32]* %362 = getelementptr &([1000 * i32]* %337)[i64 5];
    i32* %363 = getelementptr &([1000 * i32]* %362)[i64 0][i32 %333];
    i32 %364 = load i32* %363;
    i32 %365 = neg i32 %364;
    store i32* %361 with i32 %365;
    i32* %366 = getelementptr &(i32* %336)[i64 6];
    [1000 * i32]* %367 = getelementptr &([1000 * i32]* %337)[i64 6];
    i32* %368 = getelementptr &([1000 * i32]* %367)[i64 0][i32 %333];
    i32 %369 = load i32* %368;
    i32 %370 = neg i32 %369;
    store i32* %366 with i32 %370;
    i32* %371 = getelementptr &(i32* %336)[i64 7];
    [1000 * i32]* %372 = getelementptr &([1000 * i32]* %337)[i64 7];
    i32* %373 = getelementptr &([1000 * i32]* %372)[i64 0][i32 %333];
    i32 %374 = load i32* %373;
    i32 %375 = neg i32 %374;
    store i32* %371 with i32 %375;
    i32* %376 = getelementptr &(i32* %336)[i64 8];
    [1000 * i32]* %377 = getelementptr &([1000 * i32]* %337)[i64 8];
    i32* %378 = getelementptr &([1000 * i32]* %377)[i64 0][i32 %333];
    i32 %379 = load i32* %378;
    i32 %380 = neg i32 %379;
    store i32* %376 with i32 %380;
    i32* %381 = getelementptr &(i32* %336)[i64 9];
    [1000 * i32]* %382 = getelementptr &([1000 * i32]* %337)[i64 9];
    i32* %383 = getelementptr &([1000 * i32]* %382)[i64 0][i32 %333];
    i32 %384 = load i32* %383;
    i32 %385 = neg i32 %384;
    store i32* %381 with i32 %385;
    i32* %386 = getelementptr &(i32* %336)[i64 10];
    [1000 * i32]* %387 = getelementptr &([1000 * i32]* %337)[i64 10];
    i32* %388 = getelementptr &([1000 * i32]* %387)[i64 0][i32 %333];
    i32 %389 = load i32* %388;
    i32 %390 = neg i32 %389;
    store i32* %386 with i32 %390;
    i32* %391 = getelementptr &(i32* %336)[i64 11];
    [1000 * i32]* %392 = getelementptr &([1000 * i32]* %337)[i64 11];
    i32* %393 = getelementptr &([1000 * i32]* %392)[i64 0][i32 %333];
    i32 %394 = load i32* %393;
    i32 %395 = neg i32 %394;
    store i32* %391 with i32 %395;
    i32* %396 = getelementptr &(i32* %336)[i64 12];
    [1000 * i32]* %397 = getelementptr &([1000 * i32]* %337)[i64 12];
    i32* %398 = getelementptr &([1000 * i32]* %397)[i64 0][i32 %333];
    i32 %399 = load i32* %398;
    i32 %400 = neg i32 %399;
    store i32* %396 with i32 %400;
    i32* %401 = getelementptr &(i32* %336)[i64 13];
    [1000 * i32]* %402 = getelementptr &([1000 * i32]* %337)[i64 13];
    i32* %403 = getelementptr &([1000 * i32]* %402)[i64 0][i32 %333];
    i32 %404 = load i32* %403;
    i32 %405 = neg i32 %404;
    store i32* %401 with i32 %405;
    i32* %406 = getelementptr &(i32* %336)[i64 14];
    [1000 * i32]* %407 = getelementptr &([1000 * i32]* %337)[i64 14];
    i32* %408 = getelementptr &([1000 * i32]* %407)[i64 0][i32 %333];
    i32 %409 = load i32* %408;
    i32 %410 = neg i32 %409;
    store i32* %406 with i32 %410;
    i32* %411 = getelementptr &(i32* %336)[i64 15];
    [1000 * i32]* %412 = getelementptr &([1000 * i32]* %337)[i64 15];
    i32* %413 = getelementptr &([1000 * i32]* %412)[i64 0][i32 %333];
    i32 %414 = load i32* %413;
    i32 %415 = neg i32 %414;
    store i32* %411 with i32 %415;
    i32 %416 = add i32 %335, i32 16;
    i1 %417 = scmp lt i32 %416, i32 992;
    cbr i1 %417(prob = 0.98), ^while.body13, ^while.body14;
^while.body14:
    i32* %418 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %416];
    [1000 * i32]* %419 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %416];
    i32* %420 = getelementptr &([1000 * i32]* %419)[i64 0][i32 %333];
    i32 %421 = load i32* %420;
    i32 %422 = neg i32 %421;
    store i32* %418 with i32 %422;
    i32* %423 = getelementptr &(i32* %418)[i64 1];
    [1000 * i32]* %424 = getelementptr &([1000 * i32]* %419)[i64 1];
    i32* %425 = getelementptr &([1000 * i32]* %424)[i64 0][i32 %333];
    i32 %426 = load i32* %425;
    i32 %427 = neg i32 %426;
    store i32* %423 with i32 %427;
    i32* %428 = getelementptr &(i32* %418)[i64 2];
    [1000 * i32]* %429 = getelementptr &([1000 * i32]* %419)[i64 2];
    i32* %430 = getelementptr &([1000 * i32]* %429)[i64 0][i32 %333];
    i32 %431 = load i32* %430;
    i32 %432 = neg i32 %431;
    store i32* %428 with i32 %432;
    i32* %433 = getelementptr &(i32* %418)[i64 3];
    [1000 * i32]* %434 = getelementptr &([1000 * i32]* %419)[i64 3];
    i32* %435 = getelementptr &([1000 * i32]* %434)[i64 0][i32 %333];
    i32 %436 = load i32* %435;
    i32 %437 = neg i32 %436;
    store i32* %433 with i32 %437;
    i32* %438 = getelementptr &(i32* %418)[i64 4];
    [1000 * i32]* %439 = getelementptr &([1000 * i32]* %419)[i64 4];
    i32* %440 = getelementptr &([1000 * i32]* %439)[i64 0][i32 %333];
    i32 %441 = load i32* %440;
    i32 %442 = neg i32 %441;
    store i32* %438 with i32 %442;
    i32* %443 = getelementptr &(i32* %418)[i64 5];
    [1000 * i32]* %444 = getelementptr &([1000 * i32]* %419)[i64 5];
    i32* %445 = getelementptr &([1000 * i32]* %444)[i64 0][i32 %333];
    i32 %446 = load i32* %445;
    i32 %447 = neg i32 %446;
    store i32* %443 with i32 %447;
    i32* %448 = getelementptr &(i32* %418)[i64 6];
    [1000 * i32]* %449 = getelementptr &([1000 * i32]* %419)[i64 6];
    i32* %450 = getelementptr &([1000 * i32]* %449)[i64 0][i32 %333];
    i32 %451 = load i32* %450;
    i32 %452 = neg i32 %451;
    store i32* %448 with i32 %452;
    i32* %453 = getelementptr &(i32* %418)[i64 7];
    [1000 * i32]* %454 = getelementptr &([1000 * i32]* %419)[i64 7];
    i32* %455 = getelementptr &([1000 * i32]* %454)[i64 0][i32 %333];
    i32 %456 = load i32* %455;
    i32 %457 = neg i32 %456;
    store i32* %453 with i32 %457;
    i32 %458 = add i32 %333, i32 1;
    i1 %459 = scmp lt i32 %458, i32 1000;
    cbr i1 %459(prob = 1), ^while.body12, ^while.body15;
^while.body15:
    i32 %460 = phi [^while.body17, i32 %539] [^while.body14, i32 0];
    i32 %461 = phi [^while.body17, i32 %538] [^while.body14, i32 %5];
    [1000 * i32]* %462 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %460];
    ubr ^while.body16;
^while.body16:
    i32 %463 = phi [^while.body16, i32 %512] [^while.body15, i32 %461];
    i32 %464 = phi [^while.body16, i32 %513] [^while.body15, i32 0];
    i32* %465 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %464];
    i32 %466 = load i32* %465;
    i32* %467 = getelementptr &(i32* %465)[i64 1];
    i32 %468 = load i32* %467;
    i32* %469 = getelementptr &(i32* %465)[i64 2];
    i32 %470 = load i32* %469;
    i32* %471 = getelementptr &(i32* %465)[i64 3];
    i32 %472 = load i32* %471;
    i32* %473 = getelementptr &(i32* %465)[i64 4];
    i32 %474 = load i32* %473;
    i32* %475 = getelementptr &(i32* %465)[i64 5];
    i32 %476 = load i32* %475;
    i32* %477 = getelementptr &(i32* %465)[i64 6];
    i32 %478 = load i32* %477;
    i32* %479 = getelementptr &(i32* %465)[i64 7];
    i32 %480 = load i32* %479;
    i32* %481 = getelementptr &(i32* %465)[i64 8];
    i32 %482 = load i32* %481;
    i32* %483 = getelementptr &(i32* %465)[i64 9];
    i32 %484 = load i32* %483;
    i32* %485 = getelementptr &(i32* %465)[i64 10];
    i32 %486 = load i32* %485;
    i32* %487 = getelementptr &(i32* %465)[i64 11];
    i32 %488 = load i32* %487;
    i32* %489 = getelementptr &(i32* %465)[i64 12];
    i32 %490 = load i32* %489;
    i32* %491 = getelementptr &(i32* %465)[i64 13];
    i32 %492 = load i32* %491;
    i32* %493 = getelementptr &(i32* %465)[i64 14];
    i32 %494 = load i32* %493;
    i32* %495 = getelementptr &(i32* %465)[i64 15];
    i32 %496 = load i32* %495;
    i32 %497 = add i32 %463, i32 %466;
    i32 %498 = add i32 %497, i32 %468;
    i32 %499 = add i32 %498, i32 %470;
    i32 %500 = add i32 %499, i32 %472;
    i32 %501 = add i32 %500, i32 %474;
    i32 %502 = add i32 %501, i32 %476;
    i32 %503 = add i32 %502, i32 %478;
    i32 %504 = add i32 %503, i32 %480;
    i32 %505 = add i32 %504, i32 %482;
    i32 %506 = add i32 %505, i32 %484;
    i32 %507 = add i32 %506, i32 %486;
    i32 %508 = add i32 %507, i32 %488;
    i32 %509 = add i32 %508, i32 %490;
    i32 %510 = add i32 %509, i32 %492;
    i32 %511 = add i32 %510, i32 %494;
    i32 %512 = add i32 %511, i32 %496;
    i32 %513 = add i32 %464, i32 16;
    i1 %514 = scmp lt i32 %513, i32 992;
    cbr i1 %514(prob = 0.98), ^while.body16, ^while.body17;
^while.body17:
    i32* %515 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %513];
    i32 %516 = load i32* %515;
    i32* %517 = getelementptr &(i32* %515)[i64 1];
    i32 %518 = load i32* %517;
    i32* %519 = getelementptr &(i32* %515)[i64 2];
    i32 %520 = load i32* %519;
    i32* %521 = getelementptr &(i32* %515)[i64 3];
    i32 %522 = load i32* %521;
    i32* %523 = getelementptr &(i32* %515)[i64 4];
    i32 %524 = load i32* %523;
    i32* %525 = getelementptr &(i32* %515)[i64 5];
    i32 %526 = load i32* %525;
    i32* %527 = getelementptr &(i32* %515)[i64 6];
    i32 %528 = load i32* %527;
    i32* %529 = getelementptr &(i32* %515)[i64 7];
    i32 %530 = load i32* %529;
    i32 %531 = add i32 %516, i32 %518;
    i32 %532 = add i32 %531, i32 %520;
    i32 %533 = add i32 %532, i32 %522;
    i32 %534 = add i32 %533, i32 %524;
    i32 %535 = add i32 %534, i32 %526;
    i32 %536 = add i32 %535, i32 %528;
    i32 %537 = add i32 %536, i32 %530;
    i32 %538 = add i32 %537, i32 %512;
    i32 %539 = add i32 %460, i32 1;
    i1 %540 = scmp lt i32 %539, i32 1000;
    cbr i1 %540(prob = 1), ^while.body15, ^b5;
^b5:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %538);
    ubr ^b1;
}
