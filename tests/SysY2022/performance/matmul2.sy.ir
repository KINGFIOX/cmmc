internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    ubr ^while.header;
^while.header:
    i32 %0 = phi [^entry, i32 0] [^b1, i32 %6];
    i1 %1 = scmp lt i32 %0, i32 1000;
    cbr i1 %1(prob = 0.97), ^while.body, ^b;
^b:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.header1;
^while.body:
    [1000 * i32]* %2 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %0];
    i32* %3 = getelementptr &([1000 * i32]* %2)[i64 0][i64 0];
    i32 %4 = call (i32*) -> i32 @getarray(i32* %3);
    i1 %5 = scmp neq i32 %4, i32 1000;
    cbr i1 %5(prob = 0.5), ^b2, ^b1;
^b1:
    i32 %6 = add i32 %0, i32 1;
    ubr ^while.header;
^while.header1:
    i32 %7 = phi [^b, i32 0] [^while.body3, i32 %118];
    i1 %8 = scmp lt i32 %7, i32 1000;
    cbr i1 %8(prob = 0.97), ^while.body1, ^while.header2;
^b2:
    i32 %9 = phi [^while.body, i32 %4] [^b4, i32 0];
    ret i32 %9;
^while.body1:
    [1000 * i32]* %10 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %7];
    ubr ^while.body2;
^while.header2:
    i32 %11 = phi [^while.header1, i32 0] [^b3, i32 %119];
    i1 %12 = scmp lt i32 %11, i32 1000;
    [1000 * i32]* %13 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %11];
    [1000 * i32]* %14 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %11];
    cbr i1 %12(prob = 0.97), ^while.header3, ^while.header4;
^while.body2:
    i32 %15 = phi [^while.body1, i32 0] [^while.body2, i32 %80];
    i32* %16 = getelementptr &([1000 * i32]* %10)[i64 0][i32 %15];
    [1000 * i32]* %17 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %15];
    i32* %18 = getelementptr &([1000 * i32]* %17)[i64 0][i32 %7];
    i32 %19 = load i32* %18;
    store i32* %16 with i32 %19;
    i32* %20 = getelementptr &(i32* %16)[i64 1];
    [1000 * i32]* %21 = getelementptr &([1000 * i32]* %17)[i64 1];
    i32* %22 = getelementptr &([1000 * i32]* %21)[i64 0][i32 %7];
    i32 %23 = load i32* %22;
    store i32* %20 with i32 %23;
    i32* %24 = getelementptr &(i32* %16)[i64 2];
    [1000 * i32]* %25 = getelementptr &([1000 * i32]* %17)[i64 2];
    i32* %26 = getelementptr &([1000 * i32]* %25)[i64 0][i32 %7];
    i32 %27 = load i32* %26;
    store i32* %24 with i32 %27;
    i32* %28 = getelementptr &(i32* %16)[i64 3];
    [1000 * i32]* %29 = getelementptr &([1000 * i32]* %17)[i64 3];
    i32* %30 = getelementptr &([1000 * i32]* %29)[i64 0][i32 %7];
    i32 %31 = load i32* %30;
    store i32* %28 with i32 %31;
    i32* %32 = getelementptr &(i32* %16)[i64 4];
    [1000 * i32]* %33 = getelementptr &([1000 * i32]* %17)[i64 4];
    i32* %34 = getelementptr &([1000 * i32]* %33)[i64 0][i32 %7];
    i32 %35 = load i32* %34;
    store i32* %32 with i32 %35;
    i32* %36 = getelementptr &(i32* %16)[i64 5];
    [1000 * i32]* %37 = getelementptr &([1000 * i32]* %17)[i64 5];
    i32* %38 = getelementptr &([1000 * i32]* %37)[i64 0][i32 %7];
    i32 %39 = load i32* %38;
    store i32* %36 with i32 %39;
    i32* %40 = getelementptr &(i32* %16)[i64 6];
    [1000 * i32]* %41 = getelementptr &([1000 * i32]* %17)[i64 6];
    i32* %42 = getelementptr &([1000 * i32]* %41)[i64 0][i32 %7];
    i32 %43 = load i32* %42;
    store i32* %40 with i32 %43;
    i32* %44 = getelementptr &(i32* %16)[i64 7];
    [1000 * i32]* %45 = getelementptr &([1000 * i32]* %17)[i64 7];
    i32* %46 = getelementptr &([1000 * i32]* %45)[i64 0][i32 %7];
    i32 %47 = load i32* %46;
    store i32* %44 with i32 %47;
    i32* %48 = getelementptr &(i32* %16)[i64 8];
    [1000 * i32]* %49 = getelementptr &([1000 * i32]* %17)[i64 8];
    i32* %50 = getelementptr &([1000 * i32]* %49)[i64 0][i32 %7];
    i32 %51 = load i32* %50;
    store i32* %48 with i32 %51;
    i32* %52 = getelementptr &(i32* %16)[i64 9];
    [1000 * i32]* %53 = getelementptr &([1000 * i32]* %17)[i64 9];
    i32* %54 = getelementptr &([1000 * i32]* %53)[i64 0][i32 %7];
    i32 %55 = load i32* %54;
    store i32* %52 with i32 %55;
    i32* %56 = getelementptr &(i32* %16)[i64 10];
    [1000 * i32]* %57 = getelementptr &([1000 * i32]* %17)[i64 10];
    i32* %58 = getelementptr &([1000 * i32]* %57)[i64 0][i32 %7];
    i32 %59 = load i32* %58;
    store i32* %56 with i32 %59;
    i32* %60 = getelementptr &(i32* %16)[i64 11];
    [1000 * i32]* %61 = getelementptr &([1000 * i32]* %17)[i64 11];
    i32* %62 = getelementptr &([1000 * i32]* %61)[i64 0][i32 %7];
    i32 %63 = load i32* %62;
    store i32* %60 with i32 %63;
    i32* %64 = getelementptr &(i32* %16)[i64 12];
    [1000 * i32]* %65 = getelementptr &([1000 * i32]* %17)[i64 12];
    i32* %66 = getelementptr &([1000 * i32]* %65)[i64 0][i32 %7];
    i32 %67 = load i32* %66;
    store i32* %64 with i32 %67;
    i32* %68 = getelementptr &(i32* %16)[i64 13];
    [1000 * i32]* %69 = getelementptr &([1000 * i32]* %17)[i64 13];
    i32* %70 = getelementptr &([1000 * i32]* %69)[i64 0][i32 %7];
    i32 %71 = load i32* %70;
    store i32* %68 with i32 %71;
    i32* %72 = getelementptr &(i32* %16)[i64 14];
    [1000 * i32]* %73 = getelementptr &([1000 * i32]* %17)[i64 14];
    i32* %74 = getelementptr &([1000 * i32]* %73)[i64 0][i32 %7];
    i32 %75 = load i32* %74;
    store i32* %72 with i32 %75;
    i32* %76 = getelementptr &(i32* %16)[i64 15];
    [1000 * i32]* %77 = getelementptr &([1000 * i32]* %17)[i64 15];
    i32* %78 = getelementptr &([1000 * i32]* %77)[i64 0][i32 %7];
    i32 %79 = load i32* %78;
    store i32* %76 with i32 %79;
    i32 %80 = add i32 %15, i32 16;
    i1 %81 = scmp lt i32 %80, i32 992;
    cbr i1 %81(prob = 0.98), ^while.body2, ^while.body3;
^while.header3:
    i32 %82 = phi [^while.header2, i32 0] [^while.body5, i32 %296];
    i1 %83 = scmp lt i32 %82, i32 1000;
    cbr i1 %83(prob = 0.97), ^while.body4, ^b3;
^while.header4:
    i32 %84 = phi [^while.header2, i32 0] [^while.body13, i32 %605];
    i1 %85 = scmp lt i32 %84, i32 1000;
    cbr i1 %85(prob = 0.97), ^while.header5, ^while.header6;
^while.body3:
    i32* %86 = getelementptr &([1000 * i32]* %10)[i64 0][i32 %80];
    [1000 * i32]* %87 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %80];
    i32* %88 = getelementptr &([1000 * i32]* %87)[i64 0][i32 %7];
    i32 %89 = load i32* %88;
    store i32* %86 with i32 %89;
    i32* %90 = getelementptr &(i32* %86)[i64 1];
    [1000 * i32]* %91 = getelementptr &([1000 * i32]* %87)[i64 1];
    i32* %92 = getelementptr &([1000 * i32]* %91)[i64 0][i32 %7];
    i32 %93 = load i32* %92;
    store i32* %90 with i32 %93;
    i32* %94 = getelementptr &(i32* %86)[i64 2];
    [1000 * i32]* %95 = getelementptr &([1000 * i32]* %87)[i64 2];
    i32* %96 = getelementptr &([1000 * i32]* %95)[i64 0][i32 %7];
    i32 %97 = load i32* %96;
    store i32* %94 with i32 %97;
    i32* %98 = getelementptr &(i32* %86)[i64 3];
    [1000 * i32]* %99 = getelementptr &([1000 * i32]* %87)[i64 3];
    i32* %100 = getelementptr &([1000 * i32]* %99)[i64 0][i32 %7];
    i32 %101 = load i32* %100;
    store i32* %98 with i32 %101;
    i32* %102 = getelementptr &(i32* %86)[i64 4];
    [1000 * i32]* %103 = getelementptr &([1000 * i32]* %87)[i64 4];
    i32* %104 = getelementptr &([1000 * i32]* %103)[i64 0][i32 %7];
    i32 %105 = load i32* %104;
    store i32* %102 with i32 %105;
    i32* %106 = getelementptr &(i32* %86)[i64 5];
    [1000 * i32]* %107 = getelementptr &([1000 * i32]* %87)[i64 5];
    i32* %108 = getelementptr &([1000 * i32]* %107)[i64 0][i32 %7];
    i32 %109 = load i32* %108;
    store i32* %106 with i32 %109;
    i32* %110 = getelementptr &(i32* %86)[i64 6];
    [1000 * i32]* %111 = getelementptr &([1000 * i32]* %87)[i64 6];
    i32* %112 = getelementptr &([1000 * i32]* %111)[i64 0][i32 %7];
    i32 %113 = load i32* %112;
    store i32* %110 with i32 %113;
    i32* %114 = getelementptr &(i32* %86)[i64 7];
    [1000 * i32]* %115 = getelementptr &([1000 * i32]* %87)[i64 7];
    i32* %116 = getelementptr &([1000 * i32]* %115)[i64 0][i32 %7];
    i32 %117 = load i32* %116;
    store i32* %114 with i32 %117;
    i32 %118 = add i32 %7, i32 1;
    ubr ^while.header1;
^b3:
    i32 %119 = add i32 %11, i32 1;
    ubr ^while.header2;
^while.header5:
    [1000 * i32]* %120 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %84];
    ubr ^while.body7;
^while.body4:
    i32 %121 = phi [^while.header3, i32 0] [^while.body4, i32 %234];
    i32 %122 = phi [^while.header3, i32 0] [^while.body4, i32 %235];
    i32* %123 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %122];
    i32 %124 = load i32* %123;
    [1000 * i32]* %125 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %122];
    i32* %126 = getelementptr &([1000 * i32]* %125)[i64 0][i32 %82];
    i32 %127 = load i32* %126;
    i32 %128 = mul i32 %124, i32 %127;
    i32* %129 = getelementptr &(i32* %123)[i64 1];
    i32 %130 = load i32* %129;
    [1000 * i32]* %131 = getelementptr &([1000 * i32]* %125)[i64 1];
    i32* %132 = getelementptr &([1000 * i32]* %131)[i64 0][i32 %82];
    i32 %133 = load i32* %132;
    i32 %134 = mul i32 %130, i32 %133;
    i32* %135 = getelementptr &(i32* %123)[i64 2];
    i32 %136 = load i32* %135;
    [1000 * i32]* %137 = getelementptr &([1000 * i32]* %125)[i64 2];
    i32* %138 = getelementptr &([1000 * i32]* %137)[i64 0][i32 %82];
    i32 %139 = load i32* %138;
    i32 %140 = mul i32 %136, i32 %139;
    i32* %141 = getelementptr &(i32* %123)[i64 3];
    i32 %142 = load i32* %141;
    [1000 * i32]* %143 = getelementptr &([1000 * i32]* %125)[i64 3];
    i32* %144 = getelementptr &([1000 * i32]* %143)[i64 0][i32 %82];
    i32 %145 = load i32* %144;
    i32 %146 = mul i32 %142, i32 %145;
    i32* %147 = getelementptr &(i32* %123)[i64 4];
    i32 %148 = load i32* %147;
    [1000 * i32]* %149 = getelementptr &([1000 * i32]* %125)[i64 4];
    i32* %150 = getelementptr &([1000 * i32]* %149)[i64 0][i32 %82];
    i32 %151 = load i32* %150;
    i32 %152 = mul i32 %148, i32 %151;
    i32* %153 = getelementptr &(i32* %123)[i64 5];
    i32 %154 = load i32* %153;
    [1000 * i32]* %155 = getelementptr &([1000 * i32]* %125)[i64 5];
    i32* %156 = getelementptr &([1000 * i32]* %155)[i64 0][i32 %82];
    i32 %157 = load i32* %156;
    i32 %158 = mul i32 %154, i32 %157;
    i32* %159 = getelementptr &(i32* %123)[i64 6];
    i32 %160 = load i32* %159;
    [1000 * i32]* %161 = getelementptr &([1000 * i32]* %125)[i64 6];
    i32* %162 = getelementptr &([1000 * i32]* %161)[i64 0][i32 %82];
    i32 %163 = load i32* %162;
    i32 %164 = mul i32 %160, i32 %163;
    i32* %165 = getelementptr &(i32* %123)[i64 7];
    i32 %166 = load i32* %165;
    [1000 * i32]* %167 = getelementptr &([1000 * i32]* %125)[i64 7];
    i32* %168 = getelementptr &([1000 * i32]* %167)[i64 0][i32 %82];
    i32 %169 = load i32* %168;
    i32 %170 = mul i32 %166, i32 %169;
    i32* %171 = getelementptr &(i32* %123)[i64 8];
    i32 %172 = load i32* %171;
    [1000 * i32]* %173 = getelementptr &([1000 * i32]* %125)[i64 8];
    i32* %174 = getelementptr &([1000 * i32]* %173)[i64 0][i32 %82];
    i32 %175 = load i32* %174;
    i32 %176 = mul i32 %172, i32 %175;
    i32* %177 = getelementptr &(i32* %123)[i64 9];
    i32 %178 = load i32* %177;
    [1000 * i32]* %179 = getelementptr &([1000 * i32]* %125)[i64 9];
    i32* %180 = getelementptr &([1000 * i32]* %179)[i64 0][i32 %82];
    i32 %181 = load i32* %180;
    i32 %182 = mul i32 %178, i32 %181;
    i32* %183 = getelementptr &(i32* %123)[i64 10];
    i32 %184 = load i32* %183;
    [1000 * i32]* %185 = getelementptr &([1000 * i32]* %125)[i64 10];
    i32* %186 = getelementptr &([1000 * i32]* %185)[i64 0][i32 %82];
    i32 %187 = load i32* %186;
    i32 %188 = mul i32 %184, i32 %187;
    i32* %189 = getelementptr &(i32* %123)[i64 11];
    i32 %190 = load i32* %189;
    [1000 * i32]* %191 = getelementptr &([1000 * i32]* %125)[i64 11];
    i32* %192 = getelementptr &([1000 * i32]* %191)[i64 0][i32 %82];
    i32 %193 = load i32* %192;
    i32 %194 = mul i32 %190, i32 %193;
    i32* %195 = getelementptr &(i32* %123)[i64 12];
    i32 %196 = load i32* %195;
    [1000 * i32]* %197 = getelementptr &([1000 * i32]* %125)[i64 12];
    i32* %198 = getelementptr &([1000 * i32]* %197)[i64 0][i32 %82];
    i32 %199 = load i32* %198;
    i32 %200 = mul i32 %196, i32 %199;
    i32* %201 = getelementptr &(i32* %123)[i64 13];
    i32 %202 = load i32* %201;
    [1000 * i32]* %203 = getelementptr &([1000 * i32]* %125)[i64 13];
    i32* %204 = getelementptr &([1000 * i32]* %203)[i64 0][i32 %82];
    i32 %205 = load i32* %204;
    i32 %206 = mul i32 %202, i32 %205;
    i32* %207 = getelementptr &(i32* %123)[i64 14];
    i32 %208 = load i32* %207;
    [1000 * i32]* %209 = getelementptr &([1000 * i32]* %125)[i64 14];
    i32* %210 = getelementptr &([1000 * i32]* %209)[i64 0][i32 %82];
    i32 %211 = load i32* %210;
    i32 %212 = mul i32 %208, i32 %211;
    i32* %213 = getelementptr &(i32* %123)[i64 15];
    i32 %214 = load i32* %213;
    [1000 * i32]* %215 = getelementptr &([1000 * i32]* %125)[i64 15];
    i32* %216 = getelementptr &([1000 * i32]* %215)[i64 0][i32 %82];
    i32 %217 = load i32* %216;
    i32 %218 = mul i32 %214, i32 %217;
    i32 %219 = add i32 %121, i32 %128;
    i32 %220 = add i32 %219, i32 %134;
    i32 %221 = add i32 %220, i32 %140;
    i32 %222 = add i32 %221, i32 %146;
    i32 %223 = add i32 %222, i32 %152;
    i32 %224 = add i32 %223, i32 %158;
    i32 %225 = add i32 %224, i32 %164;
    i32 %226 = add i32 %225, i32 %170;
    i32 %227 = add i32 %226, i32 %176;
    i32 %228 = add i32 %227, i32 %182;
    i32 %229 = add i32 %228, i32 %188;
    i32 %230 = add i32 %229, i32 %194;
    i32 %231 = add i32 %230, i32 %200;
    i32 %232 = add i32 %231, i32 %206;
    i32 %233 = add i32 %232, i32 %212;
    i32 %234 = add i32 %233, i32 %218;
    i32 %235 = add i32 %122, i32 16;
    i1 %236 = scmp lt i32 %235, i32 992;
    cbr i1 %236(prob = 0.98), ^while.body4, ^while.body5;
^while.header6:
    i32 %237 = phi [^while.header4, i32 0] [^while.body10, i32 %525];
    i1 %238 = scmp lt i32 %237, i32 1000;
    cbr i1 %238(prob = 0.97), ^while.body6, ^while.header7;
^while.body5:
    i32* %239 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %235];
    i32 %240 = load i32* %239;
    [1000 * i32]* %241 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %235];
    i32* %242 = getelementptr &([1000 * i32]* %241)[i64 0][i32 %82];
    i32 %243 = load i32* %242;
    i32 %244 = mul i32 %240, i32 %243;
    i32* %245 = getelementptr &(i32* %239)[i64 1];
    i32 %246 = load i32* %245;
    [1000 * i32]* %247 = getelementptr &([1000 * i32]* %241)[i64 1];
    i32* %248 = getelementptr &([1000 * i32]* %247)[i64 0][i32 %82];
    i32 %249 = load i32* %248;
    i32 %250 = mul i32 %246, i32 %249;
    i32* %251 = getelementptr &(i32* %239)[i64 2];
    i32 %252 = load i32* %251;
    [1000 * i32]* %253 = getelementptr &([1000 * i32]* %241)[i64 2];
    i32* %254 = getelementptr &([1000 * i32]* %253)[i64 0][i32 %82];
    i32 %255 = load i32* %254;
    i32 %256 = mul i32 %252, i32 %255;
    i32* %257 = getelementptr &(i32* %239)[i64 3];
    i32 %258 = load i32* %257;
    [1000 * i32]* %259 = getelementptr &([1000 * i32]* %241)[i64 3];
    i32* %260 = getelementptr &([1000 * i32]* %259)[i64 0][i32 %82];
    i32 %261 = load i32* %260;
    i32 %262 = mul i32 %258, i32 %261;
    i32* %263 = getelementptr &(i32* %239)[i64 4];
    i32 %264 = load i32* %263;
    [1000 * i32]* %265 = getelementptr &([1000 * i32]* %241)[i64 4];
    i32* %266 = getelementptr &([1000 * i32]* %265)[i64 0][i32 %82];
    i32 %267 = load i32* %266;
    i32 %268 = mul i32 %264, i32 %267;
    i32* %269 = getelementptr &(i32* %239)[i64 5];
    i32 %270 = load i32* %269;
    [1000 * i32]* %271 = getelementptr &([1000 * i32]* %241)[i64 5];
    i32* %272 = getelementptr &([1000 * i32]* %271)[i64 0][i32 %82];
    i32 %273 = load i32* %272;
    i32 %274 = mul i32 %270, i32 %273;
    i32* %275 = getelementptr &(i32* %239)[i64 6];
    i32 %276 = load i32* %275;
    [1000 * i32]* %277 = getelementptr &([1000 * i32]* %241)[i64 6];
    i32* %278 = getelementptr &([1000 * i32]* %277)[i64 0][i32 %82];
    i32 %279 = load i32* %278;
    i32 %280 = mul i32 %276, i32 %279;
    i32* %281 = getelementptr &(i32* %239)[i64 7];
    i32 %282 = load i32* %281;
    [1000 * i32]* %283 = getelementptr &([1000 * i32]* %241)[i64 7];
    i32* %284 = getelementptr &([1000 * i32]* %283)[i64 0][i32 %82];
    i32 %285 = load i32* %284;
    i32 %286 = mul i32 %282, i32 %285;
    i32 %287 = add i32 %234, i32 %244;
    i32 %288 = add i32 %287, i32 %250;
    i32 %289 = add i32 %288, i32 %256;
    i32 %290 = add i32 %289, i32 %262;
    i32 %291 = add i32 %290, i32 %268;
    i32 %292 = add i32 %291, i32 %274;
    i32 %293 = add i32 %292, i32 %280;
    i32 %294 = add i32 %293, i32 %286;
    i32* %295 = getelementptr &([1000 * i32]* %14)[i64 0][i32 %82];
    store i32* %295 with i32 %294;
    i32 %296 = add i32 %82, i32 1;
    ubr ^while.header3;
^while.body6:
    [1000 * i32]* %297 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %237];
    ubr ^while.body9;
^while.body7:
    i32 %298 = phi [^while.header5, i32 0] [^while.body7, i32 %364];
    i32 %299 = phi [^while.header5, i32 2147483647] [^while.body7, i32 %363];
    i32* %300 = getelementptr &([1000 * i32]* %120)[i64 0][i32 %298];
    i32 %301 = load i32* %300;
    i1 %302 = scmp lt i32 %301, i32 %299;
    i32 %303 = select i1 %302 ? i32 %301 : i32 %299;
    i32* %304 = getelementptr &(i32* %300)[i64 1];
    i32 %305 = load i32* %304;
    i1 %306 = scmp lt i32 %305, i32 %303;
    i32 %307 = select i1 %306 ? i32 %305 : i32 %303;
    i32* %308 = getelementptr &(i32* %300)[i64 2];
    i32 %309 = load i32* %308;
    i1 %310 = scmp lt i32 %309, i32 %307;
    i32 %311 = select i1 %310 ? i32 %309 : i32 %307;
    i32* %312 = getelementptr &(i32* %300)[i64 3];
    i32 %313 = load i32* %312;
    i1 %314 = scmp lt i32 %313, i32 %311;
    i32 %315 = select i1 %314 ? i32 %313 : i32 %311;
    i32* %316 = getelementptr &(i32* %300)[i64 4];
    i32 %317 = load i32* %316;
    i1 %318 = scmp lt i32 %317, i32 %315;
    i32 %319 = select i1 %318 ? i32 %317 : i32 %315;
    i32* %320 = getelementptr &(i32* %300)[i64 5];
    i32 %321 = load i32* %320;
    i1 %322 = scmp lt i32 %321, i32 %319;
    i32 %323 = select i1 %322 ? i32 %321 : i32 %319;
    i32* %324 = getelementptr &(i32* %300)[i64 6];
    i32 %325 = load i32* %324;
    i1 %326 = scmp lt i32 %325, i32 %323;
    i32 %327 = select i1 %326 ? i32 %325 : i32 %323;
    i32* %328 = getelementptr &(i32* %300)[i64 7];
    i32 %329 = load i32* %328;
    i1 %330 = scmp lt i32 %329, i32 %327;
    i32 %331 = select i1 %330 ? i32 %329 : i32 %327;
    i32* %332 = getelementptr &(i32* %300)[i64 8];
    i32 %333 = load i32* %332;
    i1 %334 = scmp lt i32 %333, i32 %331;
    i32 %335 = select i1 %334 ? i32 %333 : i32 %331;
    i32* %336 = getelementptr &(i32* %300)[i64 9];
    i32 %337 = load i32* %336;
    i1 %338 = scmp lt i32 %337, i32 %335;
    i32 %339 = select i1 %338 ? i32 %337 : i32 %335;
    i32* %340 = getelementptr &(i32* %300)[i64 10];
    i32 %341 = load i32* %340;
    i1 %342 = scmp lt i32 %341, i32 %339;
    i32 %343 = select i1 %342 ? i32 %341 : i32 %339;
    i32* %344 = getelementptr &(i32* %300)[i64 11];
    i32 %345 = load i32* %344;
    i1 %346 = scmp lt i32 %345, i32 %343;
    i32 %347 = select i1 %346 ? i32 %345 : i32 %343;
    i32* %348 = getelementptr &(i32* %300)[i64 12];
    i32 %349 = load i32* %348;
    i1 %350 = scmp lt i32 %349, i32 %347;
    i32 %351 = select i1 %350 ? i32 %349 : i32 %347;
    i32* %352 = getelementptr &(i32* %300)[i64 13];
    i32 %353 = load i32* %352;
    i1 %354 = scmp lt i32 %353, i32 %351;
    i32 %355 = select i1 %354 ? i32 %353 : i32 %351;
    i32* %356 = getelementptr &(i32* %300)[i64 14];
    i32 %357 = load i32* %356;
    i1 %358 = scmp lt i32 %357, i32 %355;
    i32 %359 = select i1 %358 ? i32 %357 : i32 %355;
    i32* %360 = getelementptr &(i32* %300)[i64 15];
    i32 %361 = load i32* %360;
    i1 %362 = scmp lt i32 %361, i32 %359;
    i32 %363 = select i1 %362 ? i32 %361 : i32 %359;
    i32 %364 = add i32 %298, i32 16;
    i1 %365 = scmp lt i32 %364, i32 992;
    cbr i1 %365(prob = 0.98), ^while.body7, ^while.body8;
^while.header7:
    i32 %366 = phi [^while.header6, i32 0] [^while.body14, i32 %630];
    i32 %367 = phi [^while.header6, i32 0] [^while.body14, i32 %629];
    i1 %368 = scmp lt i32 %366, i32 1000;
    cbr i1 %368(prob = 0.97), ^indirect, ^b4;
^while.body8:
    i32* %369 = getelementptr &([1000 * i32]* %120)[i64 0][i32 %364];
    i32 %370 = load i32* %369;
    i1 %371 = scmp lt i32 %370, i32 %363;
    i32 %372 = select i1 %371 ? i32 %370 : i32 %363;
    i32* %373 = getelementptr &(i32* %369)[i64 1];
    i32 %374 = load i32* %373;
    i1 %375 = scmp lt i32 %374, i32 %372;
    i32 %376 = select i1 %375 ? i32 %374 : i32 %372;
    i32* %377 = getelementptr &(i32* %369)[i64 2];
    i32 %378 = load i32* %377;
    i1 %379 = scmp lt i32 %378, i32 %376;
    i32 %380 = select i1 %379 ? i32 %378 : i32 %376;
    i32* %381 = getelementptr &(i32* %369)[i64 3];
    i32 %382 = load i32* %381;
    i1 %383 = scmp lt i32 %382, i32 %380;
    i32 %384 = select i1 %383 ? i32 %382 : i32 %380;
    i32* %385 = getelementptr &(i32* %369)[i64 4];
    i32 %386 = load i32* %385;
    i1 %387 = scmp lt i32 %386, i32 %384;
    i32 %388 = select i1 %387 ? i32 %386 : i32 %384;
    i32* %389 = getelementptr &(i32* %369)[i64 5];
    i32 %390 = load i32* %389;
    i1 %391 = scmp lt i32 %390, i32 %388;
    i32 %392 = select i1 %391 ? i32 %390 : i32 %388;
    i32* %393 = getelementptr &(i32* %369)[i64 6];
    i32 %394 = load i32* %393;
    i1 %395 = scmp lt i32 %394, i32 %392;
    i32 %396 = select i1 %395 ? i32 %394 : i32 %392;
    i32* %397 = getelementptr &(i32* %369)[i64 7];
    i32 %398 = load i32* %397;
    i1 %399 = scmp lt i32 %398, i32 %396;
    i32 %400 = select i1 %399 ? i32 %398 : i32 %396;
    ubr ^while.body11;
^indirect:
    [1000 * i32]* %401 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %366];
    ubr ^while.body12;
^while.body9:
    i32 %402 = phi [^while.body6, i32 0] [^while.body9, i32 %483];
    i32* %403 = getelementptr &([1000 * i32]* %297)[i64 0][i32 %402];
    [1000 * i32]* %404 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %402];
    i32* %405 = getelementptr &([1000 * i32]* %404)[i64 0][i32 %237];
    i32 %406 = load i32* %405;
    i32 %407 = neg i32 %406;
    store i32* %403 with i32 %407;
    i32* %408 = getelementptr &(i32* %403)[i64 1];
    [1000 * i32]* %409 = getelementptr &([1000 * i32]* %404)[i64 1];
    i32* %410 = getelementptr &([1000 * i32]* %409)[i64 0][i32 %237];
    i32 %411 = load i32* %410;
    i32 %412 = neg i32 %411;
    store i32* %408 with i32 %412;
    i32* %413 = getelementptr &(i32* %403)[i64 2];
    [1000 * i32]* %414 = getelementptr &([1000 * i32]* %404)[i64 2];
    i32* %415 = getelementptr &([1000 * i32]* %414)[i64 0][i32 %237];
    i32 %416 = load i32* %415;
    i32 %417 = neg i32 %416;
    store i32* %413 with i32 %417;
    i32* %418 = getelementptr &(i32* %403)[i64 3];
    [1000 * i32]* %419 = getelementptr &([1000 * i32]* %404)[i64 3];
    i32* %420 = getelementptr &([1000 * i32]* %419)[i64 0][i32 %237];
    i32 %421 = load i32* %420;
    i32 %422 = neg i32 %421;
    store i32* %418 with i32 %422;
    i32* %423 = getelementptr &(i32* %403)[i64 4];
    [1000 * i32]* %424 = getelementptr &([1000 * i32]* %404)[i64 4];
    i32* %425 = getelementptr &([1000 * i32]* %424)[i64 0][i32 %237];
    i32 %426 = load i32* %425;
    i32 %427 = neg i32 %426;
    store i32* %423 with i32 %427;
    i32* %428 = getelementptr &(i32* %403)[i64 5];
    [1000 * i32]* %429 = getelementptr &([1000 * i32]* %404)[i64 5];
    i32* %430 = getelementptr &([1000 * i32]* %429)[i64 0][i32 %237];
    i32 %431 = load i32* %430;
    i32 %432 = neg i32 %431;
    store i32* %428 with i32 %432;
    i32* %433 = getelementptr &(i32* %403)[i64 6];
    [1000 * i32]* %434 = getelementptr &([1000 * i32]* %404)[i64 6];
    i32* %435 = getelementptr &([1000 * i32]* %434)[i64 0][i32 %237];
    i32 %436 = load i32* %435;
    i32 %437 = neg i32 %436;
    store i32* %433 with i32 %437;
    i32* %438 = getelementptr &(i32* %403)[i64 7];
    [1000 * i32]* %439 = getelementptr &([1000 * i32]* %404)[i64 7];
    i32* %440 = getelementptr &([1000 * i32]* %439)[i64 0][i32 %237];
    i32 %441 = load i32* %440;
    i32 %442 = neg i32 %441;
    store i32* %438 with i32 %442;
    i32* %443 = getelementptr &(i32* %403)[i64 8];
    [1000 * i32]* %444 = getelementptr &([1000 * i32]* %404)[i64 8];
    i32* %445 = getelementptr &([1000 * i32]* %444)[i64 0][i32 %237];
    i32 %446 = load i32* %445;
    i32 %447 = neg i32 %446;
    store i32* %443 with i32 %447;
    i32* %448 = getelementptr &(i32* %403)[i64 9];
    [1000 * i32]* %449 = getelementptr &([1000 * i32]* %404)[i64 9];
    i32* %450 = getelementptr &([1000 * i32]* %449)[i64 0][i32 %237];
    i32 %451 = load i32* %450;
    i32 %452 = neg i32 %451;
    store i32* %448 with i32 %452;
    i32* %453 = getelementptr &(i32* %403)[i64 10];
    [1000 * i32]* %454 = getelementptr &([1000 * i32]* %404)[i64 10];
    i32* %455 = getelementptr &([1000 * i32]* %454)[i64 0][i32 %237];
    i32 %456 = load i32* %455;
    i32 %457 = neg i32 %456;
    store i32* %453 with i32 %457;
    i32* %458 = getelementptr &(i32* %403)[i64 11];
    [1000 * i32]* %459 = getelementptr &([1000 * i32]* %404)[i64 11];
    i32* %460 = getelementptr &([1000 * i32]* %459)[i64 0][i32 %237];
    i32 %461 = load i32* %460;
    i32 %462 = neg i32 %461;
    store i32* %458 with i32 %462;
    i32* %463 = getelementptr &(i32* %403)[i64 12];
    [1000 * i32]* %464 = getelementptr &([1000 * i32]* %404)[i64 12];
    i32* %465 = getelementptr &([1000 * i32]* %464)[i64 0][i32 %237];
    i32 %466 = load i32* %465;
    i32 %467 = neg i32 %466;
    store i32* %463 with i32 %467;
    i32* %468 = getelementptr &(i32* %403)[i64 13];
    [1000 * i32]* %469 = getelementptr &([1000 * i32]* %404)[i64 13];
    i32* %470 = getelementptr &([1000 * i32]* %469)[i64 0][i32 %237];
    i32 %471 = load i32* %470;
    i32 %472 = neg i32 %471;
    store i32* %468 with i32 %472;
    i32* %473 = getelementptr &(i32* %403)[i64 14];
    [1000 * i32]* %474 = getelementptr &([1000 * i32]* %404)[i64 14];
    i32* %475 = getelementptr &([1000 * i32]* %474)[i64 0][i32 %237];
    i32 %476 = load i32* %475;
    i32 %477 = neg i32 %476;
    store i32* %473 with i32 %477;
    i32* %478 = getelementptr &(i32* %403)[i64 15];
    [1000 * i32]* %479 = getelementptr &([1000 * i32]* %404)[i64 15];
    i32* %480 = getelementptr &([1000 * i32]* %479)[i64 0][i32 %237];
    i32 %481 = load i32* %480;
    i32 %482 = neg i32 %481;
    store i32* %478 with i32 %482;
    i32 %483 = add i32 %402, i32 16;
    i1 %484 = scmp lt i32 %483, i32 992;
    cbr i1 %484(prob = 0.98), ^while.body9, ^while.body10;
^b4:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %367);
    ubr ^b2;
^while.body10:
    i32* %485 = getelementptr &([1000 * i32]* %297)[i64 0][i32 %483];
    [1000 * i32]* %486 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %483];
    i32* %487 = getelementptr &([1000 * i32]* %486)[i64 0][i32 %237];
    i32 %488 = load i32* %487;
    i32 %489 = neg i32 %488;
    store i32* %485 with i32 %489;
    i32* %490 = getelementptr &(i32* %485)[i64 1];
    [1000 * i32]* %491 = getelementptr &([1000 * i32]* %486)[i64 1];
    i32* %492 = getelementptr &([1000 * i32]* %491)[i64 0][i32 %237];
    i32 %493 = load i32* %492;
    i32 %494 = neg i32 %493;
    store i32* %490 with i32 %494;
    i32* %495 = getelementptr &(i32* %485)[i64 2];
    [1000 * i32]* %496 = getelementptr &([1000 * i32]* %486)[i64 2];
    i32* %497 = getelementptr &([1000 * i32]* %496)[i64 0][i32 %237];
    i32 %498 = load i32* %497;
    i32 %499 = neg i32 %498;
    store i32* %495 with i32 %499;
    i32* %500 = getelementptr &(i32* %485)[i64 3];
    [1000 * i32]* %501 = getelementptr &([1000 * i32]* %486)[i64 3];
    i32* %502 = getelementptr &([1000 * i32]* %501)[i64 0][i32 %237];
    i32 %503 = load i32* %502;
    i32 %504 = neg i32 %503;
    store i32* %500 with i32 %504;
    i32* %505 = getelementptr &(i32* %485)[i64 4];
    [1000 * i32]* %506 = getelementptr &([1000 * i32]* %486)[i64 4];
    i32* %507 = getelementptr &([1000 * i32]* %506)[i64 0][i32 %237];
    i32 %508 = load i32* %507;
    i32 %509 = neg i32 %508;
    store i32* %505 with i32 %509;
    i32* %510 = getelementptr &(i32* %485)[i64 5];
    [1000 * i32]* %511 = getelementptr &([1000 * i32]* %486)[i64 5];
    i32* %512 = getelementptr &([1000 * i32]* %511)[i64 0][i32 %237];
    i32 %513 = load i32* %512;
    i32 %514 = neg i32 %513;
    store i32* %510 with i32 %514;
    i32* %515 = getelementptr &(i32* %485)[i64 6];
    [1000 * i32]* %516 = getelementptr &([1000 * i32]* %486)[i64 6];
    i32* %517 = getelementptr &([1000 * i32]* %516)[i64 0][i32 %237];
    i32 %518 = load i32* %517;
    i32 %519 = neg i32 %518;
    store i32* %515 with i32 %519;
    i32* %520 = getelementptr &(i32* %485)[i64 7];
    [1000 * i32]* %521 = getelementptr &([1000 * i32]* %486)[i64 7];
    i32* %522 = getelementptr &([1000 * i32]* %521)[i64 0][i32 %237];
    i32 %523 = load i32* %522;
    i32 %524 = neg i32 %523;
    store i32* %520 with i32 %524;
    i32 %525 = add i32 %237, i32 1;
    ubr ^while.header6;
^while.body11:
    i32 %526 = phi [^while.body8, i32 0] [^while.body11, i32 %543];
    i32* %527 = getelementptr &([1000 * i32]* %120)[i64 0][i32 %526];
    store i32* %527 with i32 %400;
    i32* %528 = getelementptr &(i32* %527)[i64 1];
    store i32* %528 with i32 %400;
    i32* %529 = getelementptr &(i32* %527)[i64 2];
    store i32* %529 with i32 %400;
    i32* %530 = getelementptr &(i32* %527)[i64 3];
    store i32* %530 with i32 %400;
    i32* %531 = getelementptr &(i32* %527)[i64 4];
    store i32* %531 with i32 %400;
    i32* %532 = getelementptr &(i32* %527)[i64 5];
    store i32* %532 with i32 %400;
    i32* %533 = getelementptr &(i32* %527)[i64 6];
    store i32* %533 with i32 %400;
    i32* %534 = getelementptr &(i32* %527)[i64 7];
    store i32* %534 with i32 %400;
    i32* %535 = getelementptr &(i32* %527)[i64 8];
    store i32* %535 with i32 %400;
    i32* %536 = getelementptr &(i32* %527)[i64 9];
    store i32* %536 with i32 %400;
    i32* %537 = getelementptr &(i32* %527)[i64 10];
    store i32* %537 with i32 %400;
    i32* %538 = getelementptr &(i32* %527)[i64 11];
    store i32* %538 with i32 %400;
    i32* %539 = getelementptr &(i32* %527)[i64 12];
    store i32* %539 with i32 %400;
    i32* %540 = getelementptr &(i32* %527)[i64 13];
    store i32* %540 with i32 %400;
    i32* %541 = getelementptr &(i32* %527)[i64 14];
    store i32* %541 with i32 %400;
    i32* %542 = getelementptr &(i32* %527)[i64 15];
    store i32* %542 with i32 %400;
    i32 %543 = add i32 %526, i32 16;
    i1 %544 = scmp lt i32 %543, i32 992;
    cbr i1 %544(prob = 0.98), ^while.body11, ^while.body13;
^while.body12:
    i32 %545 = phi [^indirect, i32 %367] [^while.body12, i32 %594];
    i32 %546 = phi [^indirect, i32 0] [^while.body12, i32 %595];
    i32* %547 = getelementptr &([1000 * i32]* %401)[i64 0][i32 %546];
    i32 %548 = load i32* %547;
    i32* %549 = getelementptr &(i32* %547)[i64 1];
    i32 %550 = load i32* %549;
    i32* %551 = getelementptr &(i32* %547)[i64 2];
    i32 %552 = load i32* %551;
    i32* %553 = getelementptr &(i32* %547)[i64 3];
    i32 %554 = load i32* %553;
    i32* %555 = getelementptr &(i32* %547)[i64 4];
    i32 %556 = load i32* %555;
    i32* %557 = getelementptr &(i32* %547)[i64 5];
    i32 %558 = load i32* %557;
    i32* %559 = getelementptr &(i32* %547)[i64 6];
    i32 %560 = load i32* %559;
    i32* %561 = getelementptr &(i32* %547)[i64 7];
    i32 %562 = load i32* %561;
    i32* %563 = getelementptr &(i32* %547)[i64 8];
    i32 %564 = load i32* %563;
    i32* %565 = getelementptr &(i32* %547)[i64 9];
    i32 %566 = load i32* %565;
    i32* %567 = getelementptr &(i32* %547)[i64 10];
    i32 %568 = load i32* %567;
    i32* %569 = getelementptr &(i32* %547)[i64 11];
    i32 %570 = load i32* %569;
    i32* %571 = getelementptr &(i32* %547)[i64 12];
    i32 %572 = load i32* %571;
    i32* %573 = getelementptr &(i32* %547)[i64 13];
    i32 %574 = load i32* %573;
    i32* %575 = getelementptr &(i32* %547)[i64 14];
    i32 %576 = load i32* %575;
    i32* %577 = getelementptr &(i32* %547)[i64 15];
    i32 %578 = load i32* %577;
    i32 %579 = add i32 %545, i32 %548;
    i32 %580 = add i32 %579, i32 %550;
    i32 %581 = add i32 %580, i32 %552;
    i32 %582 = add i32 %581, i32 %554;
    i32 %583 = add i32 %582, i32 %556;
    i32 %584 = add i32 %583, i32 %558;
    i32 %585 = add i32 %584, i32 %560;
    i32 %586 = add i32 %585, i32 %562;
    i32 %587 = add i32 %586, i32 %564;
    i32 %588 = add i32 %587, i32 %566;
    i32 %589 = add i32 %588, i32 %568;
    i32 %590 = add i32 %589, i32 %570;
    i32 %591 = add i32 %590, i32 %572;
    i32 %592 = add i32 %591, i32 %574;
    i32 %593 = add i32 %592, i32 %576;
    i32 %594 = add i32 %593, i32 %578;
    i32 %595 = add i32 %546, i32 16;
    i1 %596 = scmp lt i32 %595, i32 992;
    cbr i1 %596(prob = 0.98), ^while.body12, ^while.body14;
^while.body13:
    i32* %597 = getelementptr &([1000 * i32]* %120)[i64 0][i32 %543];
    store i32* %597 with i32 %400;
    i32* %598 = getelementptr &(i32* %597)[i64 1];
    store i32* %598 with i32 %400;
    i32* %599 = getelementptr &(i32* %597)[i64 2];
    store i32* %599 with i32 %400;
    i32* %600 = getelementptr &(i32* %597)[i64 3];
    store i32* %600 with i32 %400;
    i32* %601 = getelementptr &(i32* %597)[i64 4];
    store i32* %601 with i32 %400;
    i32* %602 = getelementptr &(i32* %597)[i64 5];
    store i32* %602 with i32 %400;
    i32* %603 = getelementptr &(i32* %597)[i64 6];
    store i32* %603 with i32 %400;
    i32* %604 = getelementptr &(i32* %597)[i64 7];
    store i32* %604 with i32 %400;
    i32 %605 = add i32 %84, i32 1;
    ubr ^while.header4;
^while.body14:
    i32* %606 = getelementptr &([1000 * i32]* %401)[i64 0][i32 %595];
    i32 %607 = load i32* %606;
    i32* %608 = getelementptr &(i32* %606)[i64 1];
    i32 %609 = load i32* %608;
    i32* %610 = getelementptr &(i32* %606)[i64 2];
    i32 %611 = load i32* %610;
    i32* %612 = getelementptr &(i32* %606)[i64 3];
    i32 %613 = load i32* %612;
    i32* %614 = getelementptr &(i32* %606)[i64 4];
    i32 %615 = load i32* %614;
    i32* %616 = getelementptr &(i32* %606)[i64 5];
    i32 %617 = load i32* %616;
    i32* %618 = getelementptr &(i32* %606)[i64 6];
    i32 %619 = load i32* %618;
    i32* %620 = getelementptr &(i32* %606)[i64 7];
    i32 %621 = load i32* %620;
    i32 %622 = add i32 %607, i32 %609;
    i32 %623 = add i32 %622, i32 %611;
    i32 %624 = add i32 %623, i32 %613;
    i32 %625 = add i32 %624, i32 %615;
    i32 %626 = add i32 %625, i32 %617;
    i32 %627 = add i32 %626, i32 %619;
    i32 %628 = add i32 %627, i32 %594;
    i32 %629 = add i32 %628, i32 %621;
    i32 %630 = add i32 %366, i32 1;
    ubr ^while.header7;
}
