internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [1000 * [1000 * i32]]* %0 = ptrcast [1000 * [1000 * i32]]* @a to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %1 = ptrcast [1000 * [1000 * i32]]* @b to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %2 = ptrcast [1000 * [1000 * i32]]* @c to [1000 * [1000 * i32]]*;
    ubr ^while.header;
  ^while.header:
    i32 %3 = phi [^entry, i32 0] [^b1, i32 %9];
    i1 %4 = scmp lt i32 %3, i32 1000;
    cbr i1 %4(prob = 0.97), ^while.body, ^b;
  ^b:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.header1;
  ^while.body:
    [1000 * i32]* %5 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %3];
    i32* %6 = getelementptr &([1000 * i32]* %5)[i64 0][i64 0];
    i32 %7 = call (i32*) -> i32 @getarray(i32* %6);
    i1 %8 = scmp neq i32 %7, i32 1000;
    cbr i1 %8(prob = 0.5), ^b2, ^b1;
  ^b1:
    i32 %9 = add i32 %3, i32 1;
    ubr ^while.header;
  ^while.header1:
    i32 %10 = phi [^b, i32 0] [^while.body3, i32 %121];
    i1 %11 = scmp lt i32 %10, i32 1000;
    cbr i1 %11(prob = 0.97), ^while.body1, ^while.header2;
  ^b2:
    i32 %12 = phi [^while.body, i32 %7] [^b4, i32 0];
    ret i32 %12;
  ^while.body1:
    [1000 * i32]* %13 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %10];
    ubr ^while.body2;
  ^while.header2:
    i32 %14 = phi [^while.header1, i32 0] [^b3, i32 %122];
    i1 %15 = scmp lt i32 %14, i32 1000;
    [1000 * i32]* %16 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %14];
    [1000 * i32]* %17 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %14];
    cbr i1 %15(prob = 0.97), ^while.header3, ^while.header4;
  ^while.body2:
    i32 %18 = phi [^while.body1, i32 0] [^while.body2, i32 %83];
    [1000 * i32]* %19 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %18];
    i32* %20 = getelementptr &([1000 * i32]* %19)[i64 0][i32 %10];
    i32 %21 = load i32* %20;
    i32* %22 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %18];
    store i32* %22 with i32 %21;
    [1000 * i32]* %23 = getelementptr &([1000 * i32]* %19)[i64 1];
    i32* %24 = getelementptr &([1000 * i32]* %23)[i64 0][i32 %10];
    i32 %25 = load i32* %24;
    i32* %26 = getelementptr &(i32* %22)[i64 1];
    store i32* %26 with i32 %25;
    [1000 * i32]* %27 = getelementptr &([1000 * i32]* %19)[i64 2];
    i32* %28 = getelementptr &([1000 * i32]* %27)[i64 0][i32 %10];
    i32 %29 = load i32* %28;
    i32* %30 = getelementptr &(i32* %22)[i64 2];
    store i32* %30 with i32 %29;
    [1000 * i32]* %31 = getelementptr &([1000 * i32]* %19)[i64 3];
    i32* %32 = getelementptr &([1000 * i32]* %31)[i64 0][i32 %10];
    i32 %33 = load i32* %32;
    i32* %34 = getelementptr &(i32* %22)[i64 3];
    store i32* %34 with i32 %33;
    [1000 * i32]* %35 = getelementptr &([1000 * i32]* %19)[i64 4];
    i32* %36 = getelementptr &([1000 * i32]* %35)[i64 0][i32 %10];
    i32 %37 = load i32* %36;
    i32* %38 = getelementptr &(i32* %22)[i64 4];
    store i32* %38 with i32 %37;
    [1000 * i32]* %39 = getelementptr &([1000 * i32]* %19)[i64 5];
    i32* %40 = getelementptr &([1000 * i32]* %39)[i64 0][i32 %10];
    i32 %41 = load i32* %40;
    i32* %42 = getelementptr &(i32* %22)[i64 5];
    store i32* %42 with i32 %41;
    [1000 * i32]* %43 = getelementptr &([1000 * i32]* %19)[i64 6];
    i32* %44 = getelementptr &([1000 * i32]* %43)[i64 0][i32 %10];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &(i32* %22)[i64 6];
    store i32* %46 with i32 %45;
    [1000 * i32]* %47 = getelementptr &([1000 * i32]* %19)[i64 7];
    i32* %48 = getelementptr &([1000 * i32]* %47)[i64 0][i32 %10];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &(i32* %22)[i64 7];
    store i32* %50 with i32 %49;
    [1000 * i32]* %51 = getelementptr &([1000 * i32]* %19)[i64 8];
    i32* %52 = getelementptr &([1000 * i32]* %51)[i64 0][i32 %10];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &(i32* %22)[i64 8];
    store i32* %54 with i32 %53;
    [1000 * i32]* %55 = getelementptr &([1000 * i32]* %19)[i64 9];
    i32* %56 = getelementptr &([1000 * i32]* %55)[i64 0][i32 %10];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &(i32* %22)[i64 9];
    store i32* %58 with i32 %57;
    [1000 * i32]* %59 = getelementptr &([1000 * i32]* %19)[i64 10];
    i32* %60 = getelementptr &([1000 * i32]* %59)[i64 0][i32 %10];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &(i32* %22)[i64 10];
    store i32* %62 with i32 %61;
    [1000 * i32]* %63 = getelementptr &([1000 * i32]* %19)[i64 11];
    i32* %64 = getelementptr &([1000 * i32]* %63)[i64 0][i32 %10];
    i32 %65 = load i32* %64;
    i32* %66 = getelementptr &(i32* %22)[i64 11];
    store i32* %66 with i32 %65;
    [1000 * i32]* %67 = getelementptr &([1000 * i32]* %19)[i64 12];
    i32* %68 = getelementptr &([1000 * i32]* %67)[i64 0][i32 %10];
    i32 %69 = load i32* %68;
    i32* %70 = getelementptr &(i32* %22)[i64 12];
    store i32* %70 with i32 %69;
    [1000 * i32]* %71 = getelementptr &([1000 * i32]* %19)[i64 13];
    i32* %72 = getelementptr &([1000 * i32]* %71)[i64 0][i32 %10];
    i32 %73 = load i32* %72;
    i32* %74 = getelementptr &(i32* %22)[i64 13];
    store i32* %74 with i32 %73;
    [1000 * i32]* %75 = getelementptr &([1000 * i32]* %19)[i64 14];
    i32* %76 = getelementptr &([1000 * i32]* %75)[i64 0][i32 %10];
    i32 %77 = load i32* %76;
    i32* %78 = getelementptr &(i32* %22)[i64 14];
    store i32* %78 with i32 %77;
    [1000 * i32]* %79 = getelementptr &([1000 * i32]* %19)[i64 15];
    i32* %80 = getelementptr &([1000 * i32]* %79)[i64 0][i32 %10];
    i32 %81 = load i32* %80;
    i32* %82 = getelementptr &(i32* %22)[i64 15];
    store i32* %82 with i32 %81;
    i32 %83 = add i32 %18, i32 16;
    i1 %84 = scmp lt i32 %83, i32 992;
    cbr i1 %84(prob = 0.98), ^while.body2, ^while.body3;
  ^while.header3:
    i32 %85 = phi [^while.header2, i32 0] [^while.body5, i32 %299];
    i1 %86 = scmp lt i32 %85, i32 1000;
    cbr i1 %86(prob = 0.97), ^while.body4, ^b3;
  ^while.header4:
    i32 %87 = phi [^while.header2, i32 0] [^while.body13, i32 %584];
    i1 %88 = scmp lt i32 %87, i32 1000;
    cbr i1 %88(prob = 0.97), ^while.header5, ^while.header6;
  ^while.body3:
    [1000 * i32]* %89 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %83];
    i32* %90 = getelementptr &([1000 * i32]* %89)[i64 0][i32 %10];
    i32 %91 = load i32* %90;
    i32* %92 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %83];
    store i32* %92 with i32 %91;
    [1000 * i32]* %93 = getelementptr &([1000 * i32]* %89)[i64 1];
    i32* %94 = getelementptr &([1000 * i32]* %93)[i64 0][i32 %10];
    i32 %95 = load i32* %94;
    i32* %96 = getelementptr &(i32* %92)[i64 1];
    store i32* %96 with i32 %95;
    [1000 * i32]* %97 = getelementptr &([1000 * i32]* %89)[i64 2];
    i32* %98 = getelementptr &([1000 * i32]* %97)[i64 0][i32 %10];
    i32 %99 = load i32* %98;
    i32* %100 = getelementptr &(i32* %92)[i64 2];
    store i32* %100 with i32 %99;
    [1000 * i32]* %101 = getelementptr &([1000 * i32]* %89)[i64 3];
    i32* %102 = getelementptr &([1000 * i32]* %101)[i64 0][i32 %10];
    i32 %103 = load i32* %102;
    i32* %104 = getelementptr &(i32* %92)[i64 3];
    store i32* %104 with i32 %103;
    [1000 * i32]* %105 = getelementptr &([1000 * i32]* %89)[i64 4];
    i32* %106 = getelementptr &([1000 * i32]* %105)[i64 0][i32 %10];
    i32 %107 = load i32* %106;
    i32* %108 = getelementptr &(i32* %92)[i64 4];
    store i32* %108 with i32 %107;
    [1000 * i32]* %109 = getelementptr &([1000 * i32]* %89)[i64 5];
    i32* %110 = getelementptr &([1000 * i32]* %109)[i64 0][i32 %10];
    i32 %111 = load i32* %110;
    i32* %112 = getelementptr &(i32* %92)[i64 5];
    store i32* %112 with i32 %111;
    [1000 * i32]* %113 = getelementptr &([1000 * i32]* %89)[i64 6];
    i32* %114 = getelementptr &([1000 * i32]* %113)[i64 0][i32 %10];
    i32 %115 = load i32* %114;
    i32* %116 = getelementptr &(i32* %92)[i64 6];
    store i32* %116 with i32 %115;
    [1000 * i32]* %117 = getelementptr &([1000 * i32]* %89)[i64 7];
    i32* %118 = getelementptr &([1000 * i32]* %117)[i64 0][i32 %10];
    i32 %119 = load i32* %118;
    i32* %120 = getelementptr &(i32* %92)[i64 7];
    store i32* %120 with i32 %119;
    i32 %121 = add i32 %10, i32 1;
    ubr ^while.header1;
  ^b3:
    i32 %122 = add i32 %14, i32 1;
    ubr ^while.header2;
  ^while.header5:
    [1000 * i32]* %123 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %87];
    ubr ^while.body7;
  ^while.body4:
    i32 %124 = phi [^while.header3, i32 0] [^while.body4, i32 %237];
    i32 %125 = phi [^while.header3, i32 0] [^while.body4, i32 %238];
    i32* %126 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %125];
    i32 %127 = load i32* %126;
    [1000 * i32]* %128 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %125];
    i32* %129 = getelementptr &([1000 * i32]* %128)[i64 0][i32 %85];
    i32 %130 = load i32* %129;
    i32* %131 = getelementptr &(i32* %126)[i64 1];
    i32 %132 = load i32* %131;
    [1000 * i32]* %133 = getelementptr &([1000 * i32]* %128)[i64 1];
    i32* %134 = getelementptr &([1000 * i32]* %133)[i64 0][i32 %85];
    i32 %135 = load i32* %134;
    i32 %136 = mul i32 %132, i32 %135;
    i32 %137 = mul i32 %127, i32 %130;
    i32 %138 = add i32 %137, i32 %136;
    i32* %139 = getelementptr &(i32* %126)[i64 2];
    i32 %140 = load i32* %139;
    [1000 * i32]* %141 = getelementptr &([1000 * i32]* %128)[i64 2];
    i32* %142 = getelementptr &([1000 * i32]* %141)[i64 0][i32 %85];
    i32 %143 = load i32* %142;
    i32 %144 = mul i32 %140, i32 %143;
    i32 %145 = add i32 %138, i32 %144;
    i32* %146 = getelementptr &(i32* %126)[i64 3];
    i32 %147 = load i32* %146;
    [1000 * i32]* %148 = getelementptr &([1000 * i32]* %128)[i64 3];
    i32* %149 = getelementptr &([1000 * i32]* %148)[i64 0][i32 %85];
    i32 %150 = load i32* %149;
    i32 %151 = mul i32 %147, i32 %150;
    i32 %152 = add i32 %145, i32 %151;
    i32* %153 = getelementptr &(i32* %126)[i64 4];
    i32 %154 = load i32* %153;
    [1000 * i32]* %155 = getelementptr &([1000 * i32]* %128)[i64 4];
    i32* %156 = getelementptr &([1000 * i32]* %155)[i64 0][i32 %85];
    i32 %157 = load i32* %156;
    i32 %158 = mul i32 %154, i32 %157;
    i32 %159 = add i32 %152, i32 %158;
    i32* %160 = getelementptr &(i32* %126)[i64 5];
    i32 %161 = load i32* %160;
    [1000 * i32]* %162 = getelementptr &([1000 * i32]* %128)[i64 5];
    i32* %163 = getelementptr &([1000 * i32]* %162)[i64 0][i32 %85];
    i32 %164 = load i32* %163;
    i32 %165 = mul i32 %161, i32 %164;
    i32 %166 = add i32 %159, i32 %165;
    i32* %167 = getelementptr &(i32* %126)[i64 6];
    i32 %168 = load i32* %167;
    [1000 * i32]* %169 = getelementptr &([1000 * i32]* %128)[i64 6];
    i32* %170 = getelementptr &([1000 * i32]* %169)[i64 0][i32 %85];
    i32 %171 = load i32* %170;
    i32 %172 = mul i32 %168, i32 %171;
    i32 %173 = add i32 %166, i32 %172;
    i32* %174 = getelementptr &(i32* %126)[i64 7];
    i32 %175 = load i32* %174;
    [1000 * i32]* %176 = getelementptr &([1000 * i32]* %128)[i64 7];
    i32* %177 = getelementptr &([1000 * i32]* %176)[i64 0][i32 %85];
    i32 %178 = load i32* %177;
    i32 %179 = mul i32 %175, i32 %178;
    i32 %180 = add i32 %173, i32 %179;
    i32* %181 = getelementptr &(i32* %126)[i64 8];
    i32 %182 = load i32* %181;
    [1000 * i32]* %183 = getelementptr &([1000 * i32]* %128)[i64 8];
    i32* %184 = getelementptr &([1000 * i32]* %183)[i64 0][i32 %85];
    i32 %185 = load i32* %184;
    i32 %186 = mul i32 %182, i32 %185;
    i32 %187 = add i32 %180, i32 %186;
    i32* %188 = getelementptr &(i32* %126)[i64 9];
    i32 %189 = load i32* %188;
    [1000 * i32]* %190 = getelementptr &([1000 * i32]* %128)[i64 9];
    i32* %191 = getelementptr &([1000 * i32]* %190)[i64 0][i32 %85];
    i32 %192 = load i32* %191;
    i32 %193 = mul i32 %189, i32 %192;
    i32 %194 = add i32 %187, i32 %193;
    i32* %195 = getelementptr &(i32* %126)[i64 10];
    i32 %196 = load i32* %195;
    [1000 * i32]* %197 = getelementptr &([1000 * i32]* %128)[i64 10];
    i32* %198 = getelementptr &([1000 * i32]* %197)[i64 0][i32 %85];
    i32 %199 = load i32* %198;
    i32 %200 = mul i32 %196, i32 %199;
    i32 %201 = add i32 %194, i32 %200;
    i32* %202 = getelementptr &(i32* %126)[i64 11];
    i32 %203 = load i32* %202;
    [1000 * i32]* %204 = getelementptr &([1000 * i32]* %128)[i64 11];
    i32* %205 = getelementptr &([1000 * i32]* %204)[i64 0][i32 %85];
    i32 %206 = load i32* %205;
    i32 %207 = mul i32 %203, i32 %206;
    i32 %208 = add i32 %201, i32 %207;
    i32* %209 = getelementptr &(i32* %126)[i64 12];
    i32 %210 = load i32* %209;
    [1000 * i32]* %211 = getelementptr &([1000 * i32]* %128)[i64 12];
    i32* %212 = getelementptr &([1000 * i32]* %211)[i64 0][i32 %85];
    i32 %213 = load i32* %212;
    i32 %214 = mul i32 %210, i32 %213;
    i32 %215 = add i32 %208, i32 %214;
    i32* %216 = getelementptr &(i32* %126)[i64 13];
    i32 %217 = load i32* %216;
    [1000 * i32]* %218 = getelementptr &([1000 * i32]* %128)[i64 13];
    i32* %219 = getelementptr &([1000 * i32]* %218)[i64 0][i32 %85];
    i32 %220 = load i32* %219;
    i32 %221 = mul i32 %217, i32 %220;
    i32 %222 = add i32 %215, i32 %221;
    i32* %223 = getelementptr &(i32* %126)[i64 14];
    i32 %224 = load i32* %223;
    [1000 * i32]* %225 = getelementptr &([1000 * i32]* %128)[i64 14];
    i32* %226 = getelementptr &([1000 * i32]* %225)[i64 0][i32 %85];
    i32 %227 = load i32* %226;
    i32 %228 = mul i32 %224, i32 %227;
    i32 %229 = add i32 %222, i32 %228;
    i32* %230 = getelementptr &(i32* %126)[i64 15];
    i32 %231 = load i32* %230;
    [1000 * i32]* %232 = getelementptr &([1000 * i32]* %128)[i64 15];
    i32* %233 = getelementptr &([1000 * i32]* %232)[i64 0][i32 %85];
    i32 %234 = load i32* %233;
    i32 %235 = mul i32 %231, i32 %234;
    i32 %236 = add i32 %229, i32 %235;
    i32 %237 = add i32 %236, i32 %124;
    i32 %238 = add i32 %125, i32 16;
    i1 %239 = scmp lt i32 %238, i32 992;
    cbr i1 %239(prob = 0.98), ^while.body4, ^while.body5;
  ^while.header6:
    i32 %240 = phi [^while.header4, i32 0] [^while.body10, i32 %504];
    i1 %241 = scmp lt i32 %240, i32 1000;
    cbr i1 %241(prob = 0.97), ^while.body6, ^while.header7;
  ^while.body5:
    i32* %242 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %238];
    i32 %243 = load i32* %242;
    [1000 * i32]* %244 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %238];
    i32* %245 = getelementptr &([1000 * i32]* %244)[i64 0][i32 %85];
    i32 %246 = load i32* %245;
    i32* %247 = getelementptr &(i32* %242)[i64 1];
    i32 %248 = load i32* %247;
    [1000 * i32]* %249 = getelementptr &([1000 * i32]* %244)[i64 1];
    i32* %250 = getelementptr &([1000 * i32]* %249)[i64 0][i32 %85];
    i32 %251 = load i32* %250;
    i32 %252 = mul i32 %248, i32 %251;
    i32 %253 = mul i32 %243, i32 %246;
    i32 %254 = add i32 %237, i32 %253;
    i32 %255 = add i32 %254, i32 %252;
    i32* %256 = getelementptr &(i32* %242)[i64 2];
    i32 %257 = load i32* %256;
    [1000 * i32]* %258 = getelementptr &([1000 * i32]* %244)[i64 2];
    i32* %259 = getelementptr &([1000 * i32]* %258)[i64 0][i32 %85];
    i32 %260 = load i32* %259;
    i32 %261 = mul i32 %257, i32 %260;
    i32 %262 = add i32 %255, i32 %261;
    i32* %263 = getelementptr &(i32* %242)[i64 3];
    i32 %264 = load i32* %263;
    [1000 * i32]* %265 = getelementptr &([1000 * i32]* %244)[i64 3];
    i32* %266 = getelementptr &([1000 * i32]* %265)[i64 0][i32 %85];
    i32 %267 = load i32* %266;
    i32 %268 = mul i32 %264, i32 %267;
    i32 %269 = add i32 %262, i32 %268;
    i32* %270 = getelementptr &(i32* %242)[i64 4];
    i32 %271 = load i32* %270;
    [1000 * i32]* %272 = getelementptr &([1000 * i32]* %244)[i64 4];
    i32* %273 = getelementptr &([1000 * i32]* %272)[i64 0][i32 %85];
    i32 %274 = load i32* %273;
    i32 %275 = mul i32 %271, i32 %274;
    i32 %276 = add i32 %269, i32 %275;
    i32* %277 = getelementptr &(i32* %242)[i64 5];
    i32 %278 = load i32* %277;
    [1000 * i32]* %279 = getelementptr &([1000 * i32]* %244)[i64 5];
    i32* %280 = getelementptr &([1000 * i32]* %279)[i64 0][i32 %85];
    i32 %281 = load i32* %280;
    i32 %282 = mul i32 %278, i32 %281;
    i32 %283 = add i32 %276, i32 %282;
    i32* %284 = getelementptr &(i32* %242)[i64 6];
    i32 %285 = load i32* %284;
    [1000 * i32]* %286 = getelementptr &([1000 * i32]* %244)[i64 6];
    i32* %287 = getelementptr &([1000 * i32]* %286)[i64 0][i32 %85];
    i32 %288 = load i32* %287;
    i32 %289 = mul i32 %285, i32 %288;
    i32 %290 = add i32 %283, i32 %289;
    i32* %291 = getelementptr &(i32* %242)[i64 7];
    i32 %292 = load i32* %291;
    [1000 * i32]* %293 = getelementptr &([1000 * i32]* %244)[i64 7];
    i32* %294 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %85];
    i32 %295 = load i32* %294;
    i32 %296 = mul i32 %292, i32 %295;
    i32 %297 = add i32 %290, i32 %296;
    i32* %298 = getelementptr &([1000 * i32]* %17)[i64 0][i32 %85];
    store i32* %298 with i32 %297;
    i32 %299 = add i32 %85, i32 1;
    ubr ^while.header3;
  ^while.body6:
    [1000 * i32]* %300 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %240];
    ubr ^while.body9;
  ^while.body7:
    i32 %301 = phi [^while.header5, i32 2147483647] [^while.body7, i32 %350];
    i32 %302 = phi [^while.header5, i32 0] [^while.body7, i32 %351];
    i32* %303 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %302];
    i32 %304 = load i32* %303;
    i32 %305 = smin i32 %304, i32 %301;
    i32* %306 = getelementptr &(i32* %303)[i64 1];
    i32 %307 = load i32* %306;
    i32 %308 = smin i32 %307, i32 %305;
    i32* %309 = getelementptr &(i32* %303)[i64 2];
    i32 %310 = load i32* %309;
    i32 %311 = smin i32 %310, i32 %308;
    i32* %312 = getelementptr &(i32* %303)[i64 3];
    i32 %313 = load i32* %312;
    i32 %314 = smin i32 %313, i32 %311;
    i32* %315 = getelementptr &(i32* %303)[i64 4];
    i32 %316 = load i32* %315;
    i32 %317 = smin i32 %316, i32 %314;
    i32* %318 = getelementptr &(i32* %303)[i64 5];
    i32 %319 = load i32* %318;
    i32 %320 = smin i32 %319, i32 %317;
    i32* %321 = getelementptr &(i32* %303)[i64 6];
    i32 %322 = load i32* %321;
    i32 %323 = smin i32 %322, i32 %320;
    i32* %324 = getelementptr &(i32* %303)[i64 7];
    i32 %325 = load i32* %324;
    i32 %326 = smin i32 %325, i32 %323;
    i32* %327 = getelementptr &(i32* %303)[i64 8];
    i32 %328 = load i32* %327;
    i32 %329 = smin i32 %328, i32 %326;
    i32* %330 = getelementptr &(i32* %303)[i64 9];
    i32 %331 = load i32* %330;
    i32 %332 = smin i32 %331, i32 %329;
    i32* %333 = getelementptr &(i32* %303)[i64 10];
    i32 %334 = load i32* %333;
    i32 %335 = smin i32 %334, i32 %332;
    i32* %336 = getelementptr &(i32* %303)[i64 11];
    i32 %337 = load i32* %336;
    i32 %338 = smin i32 %337, i32 %335;
    i32* %339 = getelementptr &(i32* %303)[i64 12];
    i32 %340 = load i32* %339;
    i32 %341 = smin i32 %340, i32 %338;
    i32* %342 = getelementptr &(i32* %303)[i64 13];
    i32 %343 = load i32* %342;
    i32 %344 = smin i32 %343, i32 %341;
    i32* %345 = getelementptr &(i32* %303)[i64 14];
    i32 %346 = load i32* %345;
    i32 %347 = smin i32 %346, i32 %344;
    i32* %348 = getelementptr &(i32* %303)[i64 15];
    i32 %349 = load i32* %348;
    i32 %350 = smin i32 %349, i32 %347;
    i32 %351 = add i32 %302, i32 16;
    i1 %352 = scmp lt i32 %351, i32 992;
    cbr i1 %352(prob = 0.98), ^while.body7, ^while.body8;
  ^while.header7:
    i32 %353 = phi [^while.header6, i32 0] [^while.body14, i32 %609];
    i32 %354 = phi [^while.header6, i32 0] [^while.body14, i32 %608];
    i1 %355 = scmp lt i32 %353, i32 1000;
    cbr i1 %355(prob = 0.97), ^indirect, ^b4;
  ^while.body8:
    i32* %356 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %351];
    i32 %357 = load i32* %356;
    i32 %358 = smin i32 %357, i32 %350;
    i32* %359 = getelementptr &(i32* %356)[i64 1];
    i32 %360 = load i32* %359;
    i32 %361 = smin i32 %360, i32 %358;
    i32* %362 = getelementptr &(i32* %356)[i64 2];
    i32 %363 = load i32* %362;
    i32 %364 = smin i32 %363, i32 %361;
    i32* %365 = getelementptr &(i32* %356)[i64 3];
    i32 %366 = load i32* %365;
    i32 %367 = smin i32 %366, i32 %364;
    i32* %368 = getelementptr &(i32* %356)[i64 4];
    i32 %369 = load i32* %368;
    i32 %370 = smin i32 %369, i32 %367;
    i32* %371 = getelementptr &(i32* %356)[i64 5];
    i32 %372 = load i32* %371;
    i32 %373 = smin i32 %372, i32 %370;
    i32* %374 = getelementptr &(i32* %356)[i64 6];
    i32 %375 = load i32* %374;
    i32 %376 = smin i32 %375, i32 %373;
    i32* %377 = getelementptr &(i32* %356)[i64 7];
    i32 %378 = load i32* %377;
    i32 %379 = smin i32 %378, i32 %376;
    ubr ^while.body11;
  ^indirect:
    [1000 * i32]* %380 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %353];
    ubr ^while.body12;
  ^while.body9:
    i32 %381 = phi [^while.body6, i32 0] [^while.body9, i32 %462];
    [1000 * i32]* %382 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %381];
    i32* %383 = getelementptr &([1000 * i32]* %382)[i64 0][i32 %240];
    i32 %384 = load i32* %383;
    i32 %385 = neg i32 %384;
    i32* %386 = getelementptr &([1000 * i32]* %300)[i64 0][i32 %381];
    store i32* %386 with i32 %385;
    [1000 * i32]* %387 = getelementptr &([1000 * i32]* %382)[i64 1];
    i32* %388 = getelementptr &([1000 * i32]* %387)[i64 0][i32 %240];
    i32 %389 = load i32* %388;
    i32 %390 = neg i32 %389;
    i32* %391 = getelementptr &(i32* %386)[i64 1];
    store i32* %391 with i32 %390;
    [1000 * i32]* %392 = getelementptr &([1000 * i32]* %382)[i64 2];
    i32* %393 = getelementptr &([1000 * i32]* %392)[i64 0][i32 %240];
    i32 %394 = load i32* %393;
    i32 %395 = neg i32 %394;
    i32* %396 = getelementptr &(i32* %386)[i64 2];
    store i32* %396 with i32 %395;
    [1000 * i32]* %397 = getelementptr &([1000 * i32]* %382)[i64 3];
    i32* %398 = getelementptr &([1000 * i32]* %397)[i64 0][i32 %240];
    i32 %399 = load i32* %398;
    i32 %400 = neg i32 %399;
    i32* %401 = getelementptr &(i32* %386)[i64 3];
    store i32* %401 with i32 %400;
    [1000 * i32]* %402 = getelementptr &([1000 * i32]* %382)[i64 4];
    i32* %403 = getelementptr &([1000 * i32]* %402)[i64 0][i32 %240];
    i32 %404 = load i32* %403;
    i32 %405 = neg i32 %404;
    i32* %406 = getelementptr &(i32* %386)[i64 4];
    store i32* %406 with i32 %405;
    [1000 * i32]* %407 = getelementptr &([1000 * i32]* %382)[i64 5];
    i32* %408 = getelementptr &([1000 * i32]* %407)[i64 0][i32 %240];
    i32 %409 = load i32* %408;
    i32 %410 = neg i32 %409;
    i32* %411 = getelementptr &(i32* %386)[i64 5];
    store i32* %411 with i32 %410;
    [1000 * i32]* %412 = getelementptr &([1000 * i32]* %382)[i64 6];
    i32* %413 = getelementptr &([1000 * i32]* %412)[i64 0][i32 %240];
    i32 %414 = load i32* %413;
    i32 %415 = neg i32 %414;
    i32* %416 = getelementptr &(i32* %386)[i64 6];
    store i32* %416 with i32 %415;
    [1000 * i32]* %417 = getelementptr &([1000 * i32]* %382)[i64 7];
    i32* %418 = getelementptr &([1000 * i32]* %417)[i64 0][i32 %240];
    i32 %419 = load i32* %418;
    i32 %420 = neg i32 %419;
    i32* %421 = getelementptr &(i32* %386)[i64 7];
    store i32* %421 with i32 %420;
    [1000 * i32]* %422 = getelementptr &([1000 * i32]* %382)[i64 8];
    i32* %423 = getelementptr &([1000 * i32]* %422)[i64 0][i32 %240];
    i32 %424 = load i32* %423;
    i32 %425 = neg i32 %424;
    i32* %426 = getelementptr &(i32* %386)[i64 8];
    store i32* %426 with i32 %425;
    [1000 * i32]* %427 = getelementptr &([1000 * i32]* %382)[i64 9];
    i32* %428 = getelementptr &([1000 * i32]* %427)[i64 0][i32 %240];
    i32 %429 = load i32* %428;
    i32 %430 = neg i32 %429;
    i32* %431 = getelementptr &(i32* %386)[i64 9];
    store i32* %431 with i32 %430;
    [1000 * i32]* %432 = getelementptr &([1000 * i32]* %382)[i64 10];
    i32* %433 = getelementptr &([1000 * i32]* %432)[i64 0][i32 %240];
    i32 %434 = load i32* %433;
    i32 %435 = neg i32 %434;
    i32* %436 = getelementptr &(i32* %386)[i64 10];
    store i32* %436 with i32 %435;
    [1000 * i32]* %437 = getelementptr &([1000 * i32]* %382)[i64 11];
    i32* %438 = getelementptr &([1000 * i32]* %437)[i64 0][i32 %240];
    i32 %439 = load i32* %438;
    i32 %440 = neg i32 %439;
    i32* %441 = getelementptr &(i32* %386)[i64 11];
    store i32* %441 with i32 %440;
    [1000 * i32]* %442 = getelementptr &([1000 * i32]* %382)[i64 12];
    i32* %443 = getelementptr &([1000 * i32]* %442)[i64 0][i32 %240];
    i32 %444 = load i32* %443;
    i32 %445 = neg i32 %444;
    i32* %446 = getelementptr &(i32* %386)[i64 12];
    store i32* %446 with i32 %445;
    [1000 * i32]* %447 = getelementptr &([1000 * i32]* %382)[i64 13];
    i32* %448 = getelementptr &([1000 * i32]* %447)[i64 0][i32 %240];
    i32 %449 = load i32* %448;
    i32 %450 = neg i32 %449;
    i32* %451 = getelementptr &(i32* %386)[i64 13];
    store i32* %451 with i32 %450;
    [1000 * i32]* %452 = getelementptr &([1000 * i32]* %382)[i64 14];
    i32* %453 = getelementptr &([1000 * i32]* %452)[i64 0][i32 %240];
    i32 %454 = load i32* %453;
    i32 %455 = neg i32 %454;
    i32* %456 = getelementptr &(i32* %386)[i64 14];
    store i32* %456 with i32 %455;
    [1000 * i32]* %457 = getelementptr &([1000 * i32]* %382)[i64 15];
    i32* %458 = getelementptr &([1000 * i32]* %457)[i64 0][i32 %240];
    i32 %459 = load i32* %458;
    i32 %460 = neg i32 %459;
    i32* %461 = getelementptr &(i32* %386)[i64 15];
    store i32* %461 with i32 %460;
    i32 %462 = add i32 %381, i32 16;
    i1 %463 = scmp lt i32 %462, i32 992;
    cbr i1 %463(prob = 0.98), ^while.body9, ^while.body10;
  ^b4:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %354);
    ubr ^b2;
  ^while.body10:
    [1000 * i32]* %464 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %462];
    i32* %465 = getelementptr &([1000 * i32]* %464)[i64 0][i32 %240];
    i32 %466 = load i32* %465;
    i32 %467 = neg i32 %466;
    i32* %468 = getelementptr &([1000 * i32]* %300)[i64 0][i32 %462];
    store i32* %468 with i32 %467;
    [1000 * i32]* %469 = getelementptr &([1000 * i32]* %464)[i64 1];
    i32* %470 = getelementptr &([1000 * i32]* %469)[i64 0][i32 %240];
    i32 %471 = load i32* %470;
    i32 %472 = neg i32 %471;
    i32* %473 = getelementptr &(i32* %468)[i64 1];
    store i32* %473 with i32 %472;
    [1000 * i32]* %474 = getelementptr &([1000 * i32]* %464)[i64 2];
    i32* %475 = getelementptr &([1000 * i32]* %474)[i64 0][i32 %240];
    i32 %476 = load i32* %475;
    i32 %477 = neg i32 %476;
    i32* %478 = getelementptr &(i32* %468)[i64 2];
    store i32* %478 with i32 %477;
    [1000 * i32]* %479 = getelementptr &([1000 * i32]* %464)[i64 3];
    i32* %480 = getelementptr &([1000 * i32]* %479)[i64 0][i32 %240];
    i32 %481 = load i32* %480;
    i32 %482 = neg i32 %481;
    i32* %483 = getelementptr &(i32* %468)[i64 3];
    store i32* %483 with i32 %482;
    [1000 * i32]* %484 = getelementptr &([1000 * i32]* %464)[i64 4];
    i32* %485 = getelementptr &([1000 * i32]* %484)[i64 0][i32 %240];
    i32 %486 = load i32* %485;
    i32 %487 = neg i32 %486;
    i32* %488 = getelementptr &(i32* %468)[i64 4];
    store i32* %488 with i32 %487;
    [1000 * i32]* %489 = getelementptr &([1000 * i32]* %464)[i64 5];
    i32* %490 = getelementptr &([1000 * i32]* %489)[i64 0][i32 %240];
    i32 %491 = load i32* %490;
    i32 %492 = neg i32 %491;
    i32* %493 = getelementptr &(i32* %468)[i64 5];
    store i32* %493 with i32 %492;
    [1000 * i32]* %494 = getelementptr &([1000 * i32]* %464)[i64 6];
    i32* %495 = getelementptr &([1000 * i32]* %494)[i64 0][i32 %240];
    i32 %496 = load i32* %495;
    i32 %497 = neg i32 %496;
    i32* %498 = getelementptr &(i32* %468)[i64 6];
    store i32* %498 with i32 %497;
    [1000 * i32]* %499 = getelementptr &([1000 * i32]* %464)[i64 7];
    i32* %500 = getelementptr &([1000 * i32]* %499)[i64 0][i32 %240];
    i32 %501 = load i32* %500;
    i32 %502 = neg i32 %501;
    i32* %503 = getelementptr &(i32* %468)[i64 7];
    store i32* %503 with i32 %502;
    i32 %504 = add i32 %240, i32 1;
    ubr ^while.header6;
  ^while.body11:
    i32 %505 = phi [^while.body8, i32 0] [^while.body11, i32 %522];
    i32* %506 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %505];
    store i32* %506 with i32 %379;
    i32* %507 = getelementptr &(i32* %506)[i64 1];
    store i32* %507 with i32 %379;
    i32* %508 = getelementptr &(i32* %506)[i64 2];
    store i32* %508 with i32 %379;
    i32* %509 = getelementptr &(i32* %506)[i64 3];
    store i32* %509 with i32 %379;
    i32* %510 = getelementptr &(i32* %506)[i64 4];
    store i32* %510 with i32 %379;
    i32* %511 = getelementptr &(i32* %506)[i64 5];
    store i32* %511 with i32 %379;
    i32* %512 = getelementptr &(i32* %506)[i64 6];
    store i32* %512 with i32 %379;
    i32* %513 = getelementptr &(i32* %506)[i64 7];
    store i32* %513 with i32 %379;
    i32* %514 = getelementptr &(i32* %506)[i64 8];
    store i32* %514 with i32 %379;
    i32* %515 = getelementptr &(i32* %506)[i64 9];
    store i32* %515 with i32 %379;
    i32* %516 = getelementptr &(i32* %506)[i64 10];
    store i32* %516 with i32 %379;
    i32* %517 = getelementptr &(i32* %506)[i64 11];
    store i32* %517 with i32 %379;
    i32* %518 = getelementptr &(i32* %506)[i64 12];
    store i32* %518 with i32 %379;
    i32* %519 = getelementptr &(i32* %506)[i64 13];
    store i32* %519 with i32 %379;
    i32* %520 = getelementptr &(i32* %506)[i64 14];
    store i32* %520 with i32 %379;
    i32* %521 = getelementptr &(i32* %506)[i64 15];
    store i32* %521 with i32 %379;
    i32 %522 = add i32 %505, i32 16;
    i1 %523 = scmp lt i32 %522, i32 992;
    cbr i1 %523(prob = 0.98), ^while.body11, ^while.body13;
  ^while.body12:
    i32 %524 = phi [^indirect, i32 %354] [^while.body12, i32 %573];
    i32 %525 = phi [^indirect, i32 0] [^while.body12, i32 %574];
    i32* %526 = getelementptr &([1000 * i32]* %380)[i64 0][i32 %525];
    i32 %527 = load i32* %526;
    i32 %528 = add i32 %524, i32 %527;
    i32* %529 = getelementptr &(i32* %526)[i64 1];
    i32 %530 = load i32* %529;
    i32 %531 = add i32 %528, i32 %530;
    i32* %532 = getelementptr &(i32* %526)[i64 2];
    i32 %533 = load i32* %532;
    i32 %534 = add i32 %531, i32 %533;
    i32* %535 = getelementptr &(i32* %526)[i64 3];
    i32 %536 = load i32* %535;
    i32 %537 = add i32 %534, i32 %536;
    i32* %538 = getelementptr &(i32* %526)[i64 4];
    i32 %539 = load i32* %538;
    i32 %540 = add i32 %537, i32 %539;
    i32* %541 = getelementptr &(i32* %526)[i64 5];
    i32 %542 = load i32* %541;
    i32 %543 = add i32 %540, i32 %542;
    i32* %544 = getelementptr &(i32* %526)[i64 6];
    i32 %545 = load i32* %544;
    i32 %546 = add i32 %543, i32 %545;
    i32* %547 = getelementptr &(i32* %526)[i64 7];
    i32 %548 = load i32* %547;
    i32 %549 = add i32 %546, i32 %548;
    i32* %550 = getelementptr &(i32* %526)[i64 8];
    i32 %551 = load i32* %550;
    i32 %552 = add i32 %549, i32 %551;
    i32* %553 = getelementptr &(i32* %526)[i64 9];
    i32 %554 = load i32* %553;
    i32 %555 = add i32 %552, i32 %554;
    i32* %556 = getelementptr &(i32* %526)[i64 10];
    i32 %557 = load i32* %556;
    i32 %558 = add i32 %555, i32 %557;
    i32* %559 = getelementptr &(i32* %526)[i64 11];
    i32 %560 = load i32* %559;
    i32 %561 = add i32 %558, i32 %560;
    i32* %562 = getelementptr &(i32* %526)[i64 12];
    i32 %563 = load i32* %562;
    i32 %564 = add i32 %561, i32 %563;
    i32* %565 = getelementptr &(i32* %526)[i64 13];
    i32 %566 = load i32* %565;
    i32 %567 = add i32 %564, i32 %566;
    i32* %568 = getelementptr &(i32* %526)[i64 14];
    i32 %569 = load i32* %568;
    i32 %570 = add i32 %567, i32 %569;
    i32* %571 = getelementptr &(i32* %526)[i64 15];
    i32 %572 = load i32* %571;
    i32 %573 = add i32 %570, i32 %572;
    i32 %574 = add i32 %525, i32 16;
    i1 %575 = scmp lt i32 %574, i32 992;
    cbr i1 %575(prob = 0.98), ^while.body12, ^while.body14;
  ^while.body13:
    i32* %576 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %522];
    store i32* %576 with i32 %379;
    i32* %577 = getelementptr &(i32* %576)[i64 1];
    store i32* %577 with i32 %379;
    i32* %578 = getelementptr &(i32* %576)[i64 2];
    store i32* %578 with i32 %379;
    i32* %579 = getelementptr &(i32* %576)[i64 3];
    store i32* %579 with i32 %379;
    i32* %580 = getelementptr &(i32* %576)[i64 4];
    store i32* %580 with i32 %379;
    i32* %581 = getelementptr &(i32* %576)[i64 5];
    store i32* %581 with i32 %379;
    i32* %582 = getelementptr &(i32* %576)[i64 6];
    store i32* %582 with i32 %379;
    i32* %583 = getelementptr &(i32* %576)[i64 7];
    store i32* %583 with i32 %379;
    i32 %584 = add i32 %87, i32 1;
    ubr ^while.header4;
  ^while.body14:
    i32* %585 = getelementptr &([1000 * i32]* %380)[i64 0][i32 %574];
    i32 %586 = load i32* %585;
    i32* %587 = getelementptr &(i32* %585)[i64 1];
    i32 %588 = load i32* %587;
    i32 %589 = add i32 %573, i32 %586;
    i32 %590 = add i32 %589, i32 %588;
    i32* %591 = getelementptr &(i32* %585)[i64 2];
    i32 %592 = load i32* %591;
    i32 %593 = add i32 %590, i32 %592;
    i32* %594 = getelementptr &(i32* %585)[i64 3];
    i32 %595 = load i32* %594;
    i32 %596 = add i32 %593, i32 %595;
    i32* %597 = getelementptr &(i32* %585)[i64 4];
    i32 %598 = load i32* %597;
    i32 %599 = add i32 %596, i32 %598;
    i32* %600 = getelementptr &(i32* %585)[i64 5];
    i32 %601 = load i32* %600;
    i32 %602 = add i32 %599, i32 %601;
    i32* %603 = getelementptr &(i32* %585)[i64 6];
    i32 %604 = load i32* %603;
    i32 %605 = add i32 %602, i32 %604;
    i32* %606 = getelementptr &(i32* %585)[i64 7];
    i32 %607 = load i32* %606;
    i32 %608 = add i32 %605, i32 %607;
    i32 %609 = add i32 %353, i32 1;
    ubr ^while.header7;
}
