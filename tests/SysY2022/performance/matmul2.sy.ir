internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [1000 * [1000 * i32]]* %0 = ptrcast [1000 * [1000 * i32]]* @a to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %1 = ptrcast [1000 * [1000 * i32]]* @b to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %2 = ptrcast [1000 * [1000 * i32]]* @c to [1000 * [1000 * i32]]*;
    ubr ^while.header;
  ^while.header:
    i32 %3 = phi [^entry, i32 0] [^b1, i32 %9];
    i1 %4 = scmp lt i32 %3, i32 1000;
    cbr i1 %4(prob = 0.97), ^while.body, ^b;
  ^b:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.header1;
  ^while.body:
    [1000 * i32]* %5 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %3];
    i32* %6 = getelementptr &([1000 * i32]* %5)[i64 0][i64 0];
    i32 %7 = call (i32*) -> i32 @getarray(i32* %6);
    i1 %8 = scmp neq i32 %7, i32 1000;
    cbr i1 %8(prob = 0.5), ^b2, ^b1;
  ^b1:
    i32 %9 = add i32 %3, i32 1;
    ubr ^while.header;
  ^while.header1:
    i32 %10 = phi [^b, i32 0] [^while.body3, i32 %122];
    i1 %11 = scmp lt i32 %10, i32 1000;
    cbr i1 %11(prob = 0.97), ^while.body1, ^while.header2;
  ^b2:
    i32 %12 = phi [^while.body, i32 %7] [^b5, i32 0];
    ret i32 %12;
  ^while.body1:
    [1000 * i32]* %13 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %10];
    ubr ^while.body2;
  ^while.header2:
    i32 %14 = phi [^while.header1, i32 0] [^b3, i32 %123];
    [1000 * i32]* %15 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %14];
    [1000 * i32]* %16 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %14];
    i1 %17 = scmp lt i32 %14, i32 1000;
    cbr i1 %17(prob = 0.97), ^while.header3, ^while.header4;
  ^while.body2:
    i32 %18 = phi [^while.body1, i32 0] [^while.body2, i32 %83];
    [1000 * i32]* %19 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %18];
    i32* %20 = getelementptr &([1000 * i32]* %19)[i64 0][i32 %10];
    i32 %21 = load i32* %20;
    i32* %22 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %18];
    store i32* %22 with i32 %21;
    [1000 * i32]* %23 = getelementptr &([1000 * i32]* %19)[i64 1];
    i32* %24 = getelementptr &([1000 * i32]* %23)[i64 0][i32 %10];
    i32 %25 = load i32* %24;
    i32* %26 = getelementptr &(i32* %22)[i64 1];
    store i32* %26 with i32 %25;
    [1000 * i32]* %27 = getelementptr &([1000 * i32]* %19)[i64 2];
    i32* %28 = getelementptr &([1000 * i32]* %27)[i64 0][i32 %10];
    i32 %29 = load i32* %28;
    i32* %30 = getelementptr &(i32* %22)[i64 2];
    store i32* %30 with i32 %29;
    [1000 * i32]* %31 = getelementptr &([1000 * i32]* %19)[i64 3];
    i32* %32 = getelementptr &([1000 * i32]* %31)[i64 0][i32 %10];
    i32 %33 = load i32* %32;
    i32* %34 = getelementptr &(i32* %22)[i64 3];
    store i32* %34 with i32 %33;
    [1000 * i32]* %35 = getelementptr &([1000 * i32]* %19)[i64 4];
    i32* %36 = getelementptr &([1000 * i32]* %35)[i64 0][i32 %10];
    i32 %37 = load i32* %36;
    i32* %38 = getelementptr &(i32* %22)[i64 4];
    store i32* %38 with i32 %37;
    [1000 * i32]* %39 = getelementptr &([1000 * i32]* %19)[i64 5];
    i32* %40 = getelementptr &([1000 * i32]* %39)[i64 0][i32 %10];
    i32 %41 = load i32* %40;
    i32* %42 = getelementptr &(i32* %22)[i64 5];
    store i32* %42 with i32 %41;
    [1000 * i32]* %43 = getelementptr &([1000 * i32]* %19)[i64 6];
    i32* %44 = getelementptr &([1000 * i32]* %43)[i64 0][i32 %10];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &(i32* %22)[i64 6];
    store i32* %46 with i32 %45;
    [1000 * i32]* %47 = getelementptr &([1000 * i32]* %19)[i64 7];
    i32* %48 = getelementptr &([1000 * i32]* %47)[i64 0][i32 %10];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &(i32* %22)[i64 7];
    store i32* %50 with i32 %49;
    [1000 * i32]* %51 = getelementptr &([1000 * i32]* %19)[i64 8];
    i32* %52 = getelementptr &([1000 * i32]* %51)[i64 0][i32 %10];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &(i32* %22)[i64 8];
    store i32* %54 with i32 %53;
    [1000 * i32]* %55 = getelementptr &([1000 * i32]* %19)[i64 9];
    i32* %56 = getelementptr &([1000 * i32]* %55)[i64 0][i32 %10];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &(i32* %22)[i64 9];
    store i32* %58 with i32 %57;
    [1000 * i32]* %59 = getelementptr &([1000 * i32]* %19)[i64 10];
    i32* %60 = getelementptr &([1000 * i32]* %59)[i64 0][i32 %10];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &(i32* %22)[i64 10];
    store i32* %62 with i32 %61;
    [1000 * i32]* %63 = getelementptr &([1000 * i32]* %19)[i64 11];
    i32* %64 = getelementptr &([1000 * i32]* %63)[i64 0][i32 %10];
    i32 %65 = load i32* %64;
    i32* %66 = getelementptr &(i32* %22)[i64 11];
    store i32* %66 with i32 %65;
    [1000 * i32]* %67 = getelementptr &([1000 * i32]* %19)[i64 12];
    i32* %68 = getelementptr &([1000 * i32]* %67)[i64 0][i32 %10];
    i32 %69 = load i32* %68;
    i32* %70 = getelementptr &(i32* %22)[i64 12];
    store i32* %70 with i32 %69;
    [1000 * i32]* %71 = getelementptr &([1000 * i32]* %19)[i64 13];
    i32* %72 = getelementptr &([1000 * i32]* %71)[i64 0][i32 %10];
    i32 %73 = load i32* %72;
    i32* %74 = getelementptr &(i32* %22)[i64 13];
    store i32* %74 with i32 %73;
    [1000 * i32]* %75 = getelementptr &([1000 * i32]* %19)[i64 14];
    i32* %76 = getelementptr &([1000 * i32]* %75)[i64 0][i32 %10];
    i32 %77 = load i32* %76;
    i32* %78 = getelementptr &(i32* %22)[i64 14];
    store i32* %78 with i32 %77;
    [1000 * i32]* %79 = getelementptr &([1000 * i32]* %19)[i64 15];
    i32* %80 = getelementptr &([1000 * i32]* %79)[i64 0][i32 %10];
    i32 %81 = load i32* %80;
    i32* %82 = getelementptr &(i32* %22)[i64 15];
    store i32* %82 with i32 %81;
    i32 %83 = add i32 %18, i32 16;
    i1 %84 = scmp lt i32 %83, i32 992;
    cbr i1 %84(prob = 0.98), ^while.body2, ^while.body3;
  ^while.header3:
    i32 %85 = phi [^while.header2, i32 0] [^b4, i32 %166];
    i1 %86 = scmp lt i32 %85, i32 1000;
    cbr i1 %86(prob = 0.97), ^while.body4, ^b3;
  ^while.header4:
    i32 %87 = phi [^while.header2, i32 0] [^while.body8, i32 %199];
    [1000 * i32]* %88 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %87];
    i1 %89 = scmp lt i32 %87, i32 1000;
    cbr i1 %89(prob = 0.97), ^while.header5, ^while.header6;
  ^while.body3:
    [1000 * i32]* %90 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %83];
    i32* %91 = getelementptr &([1000 * i32]* %90)[i64 0][i32 %10];
    i32 %92 = load i32* %91;
    i32* %93 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %83];
    store i32* %93 with i32 %92;
    [1000 * i32]* %94 = getelementptr &([1000 * i32]* %90)[i64 1];
    i32* %95 = getelementptr &([1000 * i32]* %94)[i64 0][i32 %10];
    i32 %96 = load i32* %95;
    i32* %97 = getelementptr &(i32* %93)[i64 1];
    store i32* %97 with i32 %96;
    [1000 * i32]* %98 = getelementptr &([1000 * i32]* %90)[i64 2];
    i32* %99 = getelementptr &([1000 * i32]* %98)[i64 0][i32 %10];
    i32 %100 = load i32* %99;
    i32* %101 = getelementptr &(i32* %93)[i64 2];
    store i32* %101 with i32 %100;
    [1000 * i32]* %102 = getelementptr &([1000 * i32]* %90)[i64 3];
    i32* %103 = getelementptr &([1000 * i32]* %102)[i64 0][i32 %10];
    i32 %104 = load i32* %103;
    i32* %105 = getelementptr &(i32* %93)[i64 3];
    store i32* %105 with i32 %104;
    [1000 * i32]* %106 = getelementptr &([1000 * i32]* %90)[i64 4];
    i32* %107 = getelementptr &([1000 * i32]* %106)[i64 0][i32 %10];
    i32 %108 = load i32* %107;
    i32* %109 = getelementptr &(i32* %93)[i64 4];
    store i32* %109 with i32 %108;
    [1000 * i32]* %110 = getelementptr &([1000 * i32]* %90)[i64 5];
    i32* %111 = getelementptr &([1000 * i32]* %110)[i64 0][i32 %10];
    i32 %112 = load i32* %111;
    i32* %113 = getelementptr &(i32* %93)[i64 5];
    store i32* %113 with i32 %112;
    [1000 * i32]* %114 = getelementptr &([1000 * i32]* %90)[i64 6];
    i32* %115 = getelementptr &([1000 * i32]* %114)[i64 0][i32 %10];
    i32 %116 = load i32* %115;
    i32* %117 = getelementptr &(i32* %93)[i64 6];
    store i32* %117 with i32 %116;
    [1000 * i32]* %118 = getelementptr &([1000 * i32]* %90)[i64 7];
    i32* %119 = getelementptr &([1000 * i32]* %118)[i64 0][i32 %10];
    i32 %120 = load i32* %119;
    i32* %121 = getelementptr &(i32* %93)[i64 7];
    store i32* %121 with i32 %120;
    i32 %122 = add i32 %10, i32 1;
    ubr ^while.header1;
  ^b3:
    i32 %123 = add i32 %14, i32 1;
    ubr ^while.header2;
  ^while.body4:
    i32 %124 = phi [^while.header3, i32 0] [^while.body4, i32 %153];
    i32 %125 = phi [^while.header3, i32 0] [^while.body4, i32 %154];
    [1000 * i32]* %126 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %125];
    i32* %127 = getelementptr &([1000 * i32]* %126)[i64 0][i32 %85];
    i32* %128 = getelementptr &([1000 * i32]* %15)[i64 0][i32 %125];
    i32 %129 = load i32* %128;
    i32 %130 = load i32* %127;
    [1000 * i32]* %131 = getelementptr &([1000 * i32]* %126)[i64 1];
    i32* %132 = getelementptr &([1000 * i32]* %131)[i64 0][i32 %85];
    i32* %133 = getelementptr &(i32* %128)[i64 1];
    i32 %134 = load i32* %133;
    i32 %135 = load i32* %132;
    i32 %136 = mul i32 %134, i32 %135;
    i32 %137 = mul i32 %129, i32 %130;
    i32 %138 = add i32 %136, i32 %137;
    [1000 * i32]* %139 = getelementptr &([1000 * i32]* %126)[i64 2];
    i32* %140 = getelementptr &([1000 * i32]* %139)[i64 0][i32 %85];
    i32* %141 = getelementptr &(i32* %128)[i64 2];
    i32 %142 = load i32* %141;
    i32 %143 = load i32* %140;
    i32 %144 = mul i32 %142, i32 %143;
    i32 %145 = add i32 %138, i32 %144;
    [1000 * i32]* %146 = getelementptr &([1000 * i32]* %126)[i64 3];
    i32* %147 = getelementptr &([1000 * i32]* %146)[i64 0][i32 %85];
    i32* %148 = getelementptr &(i32* %128)[i64 3];
    i32 %149 = load i32* %148;
    i32 %150 = load i32* %147;
    i32 %151 = mul i32 %149, i32 %150;
    i32 %152 = add i32 %145, i32 %151;
    i32 %153 = add i32 %124, i32 %152;
    i32 %154 = add i32 %125, i32 4;
    i1 %155 = scmp lt i32 %154, i32 1000;
    cbr i1 %155(prob = 1), ^while.body4, ^b4;
  ^while.header5:
    i32 %156 = phi [^while.header4, i32 2147483647] [^while.body5, i32 %163];
    i32 %157 = phi [^while.header4, i32 0] [^while.body5, i32 %164];
    i1 %158 = scmp lt i32 %157, i32 1000;
    cbr i1 %158(prob = 0.97), ^while.body5, ^while.body7;
  ^while.header6:
    i32 %159 = phi [^while.header4, i32 0] [^while.body10, i32 %323];
    i1 %160 = scmp lt i32 %159, i32 1000;
    cbr i1 %160(prob = 0.97), ^while.body6, ^while.header7;
  ^while.body5:
    i32* %161 = getelementptr &([1000 * i32]* %88)[i64 0][i32 %157];
    i32 %162 = load i32* %161;
    i32 %163 = smin i32 %162, i32 %156;
    i32 %164 = add i32 %157, i32 1;
    ubr ^while.header5;
  ^b4:
    i32* %165 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %85];
    store i32* %165 with i32 %153;
    i32 %166 = add i32 %85, i32 1;
    ubr ^while.header3;
  ^while.body6:
    [1000 * i32]* %167 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %159];
    ubr ^while.body9;
  ^while.body7:
    i32 %168 = phi [^while.header5, i32 0] [^while.body7, i32 %185];
    i32* %169 = getelementptr &([1000 * i32]* %88)[i64 0][i32 %168];
    store i32* %169 with i32 %156;
    i32* %170 = getelementptr &(i32* %169)[i64 1];
    store i32* %170 with i32 %156;
    i32* %171 = getelementptr &(i32* %169)[i64 2];
    store i32* %171 with i32 %156;
    i32* %172 = getelementptr &(i32* %169)[i64 3];
    store i32* %172 with i32 %156;
    i32* %173 = getelementptr &(i32* %169)[i64 4];
    store i32* %173 with i32 %156;
    i32* %174 = getelementptr &(i32* %169)[i64 5];
    store i32* %174 with i32 %156;
    i32* %175 = getelementptr &(i32* %169)[i64 6];
    store i32* %175 with i32 %156;
    i32* %176 = getelementptr &(i32* %169)[i64 7];
    store i32* %176 with i32 %156;
    i32* %177 = getelementptr &(i32* %169)[i64 8];
    store i32* %177 with i32 %156;
    i32* %178 = getelementptr &(i32* %169)[i64 9];
    store i32* %178 with i32 %156;
    i32* %179 = getelementptr &(i32* %169)[i64 10];
    store i32* %179 with i32 %156;
    i32* %180 = getelementptr &(i32* %169)[i64 11];
    store i32* %180 with i32 %156;
    i32* %181 = getelementptr &(i32* %169)[i64 12];
    store i32* %181 with i32 %156;
    i32* %182 = getelementptr &(i32* %169)[i64 13];
    store i32* %182 with i32 %156;
    i32* %183 = getelementptr &(i32* %169)[i64 14];
    store i32* %183 with i32 %156;
    i32* %184 = getelementptr &(i32* %169)[i64 15];
    store i32* %184 with i32 %156;
    i32 %185 = add i32 %168, i32 16;
    i1 %186 = scmp lt i32 %185, i32 992;
    cbr i1 %186(prob = 0.98), ^while.body7, ^while.body8;
  ^while.header7:
    i32 %187 = phi [^while.header6, i32 0] [^while.body12, i32 %400];
    i32 %188 = phi [^while.header6, i32 0] [^while.body12, i32 %399];
    i1 %189 = scmp lt i32 %187, i32 1000;
    cbr i1 %189(prob = 0.97), ^indirect, ^b5;
  ^indirect:
    [1000 * i32]* %190 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %187];
    ubr ^while.body11;
  ^while.body8:
    i32* %191 = getelementptr &([1000 * i32]* %88)[i64 0][i32 %185];
    store i32* %191 with i32 %156;
    i32* %192 = getelementptr &(i32* %191)[i64 1];
    store i32* %192 with i32 %156;
    i32* %193 = getelementptr &(i32* %191)[i64 2];
    store i32* %193 with i32 %156;
    i32* %194 = getelementptr &(i32* %191)[i64 3];
    store i32* %194 with i32 %156;
    i32* %195 = getelementptr &(i32* %191)[i64 4];
    store i32* %195 with i32 %156;
    i32* %196 = getelementptr &(i32* %191)[i64 5];
    store i32* %196 with i32 %156;
    i32* %197 = getelementptr &(i32* %191)[i64 6];
    store i32* %197 with i32 %156;
    i32* %198 = getelementptr &(i32* %191)[i64 7];
    store i32* %198 with i32 %156;
    i32 %199 = add i32 %87, i32 1;
    ubr ^while.header4;
  ^while.body9:
    i32 %200 = phi [^while.body6, i32 0] [^while.body9, i32 %281];
    [1000 * i32]* %201 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %200];
    i32* %202 = getelementptr &([1000 * i32]* %201)[i64 0][i32 %159];
    i32 %203 = load i32* %202;
    i32 %204 = neg i32 %203;
    i32* %205 = getelementptr &([1000 * i32]* %167)[i64 0][i32 %200];
    store i32* %205 with i32 %204;
    [1000 * i32]* %206 = getelementptr &([1000 * i32]* %201)[i64 1];
    i32* %207 = getelementptr &([1000 * i32]* %206)[i64 0][i32 %159];
    i32 %208 = load i32* %207;
    i32 %209 = neg i32 %208;
    i32* %210 = getelementptr &(i32* %205)[i64 1];
    store i32* %210 with i32 %209;
    [1000 * i32]* %211 = getelementptr &([1000 * i32]* %201)[i64 2];
    i32* %212 = getelementptr &([1000 * i32]* %211)[i64 0][i32 %159];
    i32 %213 = load i32* %212;
    i32 %214 = neg i32 %213;
    i32* %215 = getelementptr &(i32* %205)[i64 2];
    store i32* %215 with i32 %214;
    [1000 * i32]* %216 = getelementptr &([1000 * i32]* %201)[i64 3];
    i32* %217 = getelementptr &([1000 * i32]* %216)[i64 0][i32 %159];
    i32 %218 = load i32* %217;
    i32 %219 = neg i32 %218;
    i32* %220 = getelementptr &(i32* %205)[i64 3];
    store i32* %220 with i32 %219;
    [1000 * i32]* %221 = getelementptr &([1000 * i32]* %201)[i64 4];
    i32* %222 = getelementptr &([1000 * i32]* %221)[i64 0][i32 %159];
    i32 %223 = load i32* %222;
    i32 %224 = neg i32 %223;
    i32* %225 = getelementptr &(i32* %205)[i64 4];
    store i32* %225 with i32 %224;
    [1000 * i32]* %226 = getelementptr &([1000 * i32]* %201)[i64 5];
    i32* %227 = getelementptr &([1000 * i32]* %226)[i64 0][i32 %159];
    i32 %228 = load i32* %227;
    i32 %229 = neg i32 %228;
    i32* %230 = getelementptr &(i32* %205)[i64 5];
    store i32* %230 with i32 %229;
    [1000 * i32]* %231 = getelementptr &([1000 * i32]* %201)[i64 6];
    i32* %232 = getelementptr &([1000 * i32]* %231)[i64 0][i32 %159];
    i32 %233 = load i32* %232;
    i32 %234 = neg i32 %233;
    i32* %235 = getelementptr &(i32* %205)[i64 6];
    store i32* %235 with i32 %234;
    [1000 * i32]* %236 = getelementptr &([1000 * i32]* %201)[i64 7];
    i32* %237 = getelementptr &([1000 * i32]* %236)[i64 0][i32 %159];
    i32 %238 = load i32* %237;
    i32 %239 = neg i32 %238;
    i32* %240 = getelementptr &(i32* %205)[i64 7];
    store i32* %240 with i32 %239;
    [1000 * i32]* %241 = getelementptr &([1000 * i32]* %201)[i64 8];
    i32* %242 = getelementptr &([1000 * i32]* %241)[i64 0][i32 %159];
    i32 %243 = load i32* %242;
    i32 %244 = neg i32 %243;
    i32* %245 = getelementptr &(i32* %205)[i64 8];
    store i32* %245 with i32 %244;
    [1000 * i32]* %246 = getelementptr &([1000 * i32]* %201)[i64 9];
    i32* %247 = getelementptr &([1000 * i32]* %246)[i64 0][i32 %159];
    i32 %248 = load i32* %247;
    i32 %249 = neg i32 %248;
    i32* %250 = getelementptr &(i32* %205)[i64 9];
    store i32* %250 with i32 %249;
    [1000 * i32]* %251 = getelementptr &([1000 * i32]* %201)[i64 10];
    i32* %252 = getelementptr &([1000 * i32]* %251)[i64 0][i32 %159];
    i32 %253 = load i32* %252;
    i32 %254 = neg i32 %253;
    i32* %255 = getelementptr &(i32* %205)[i64 10];
    store i32* %255 with i32 %254;
    [1000 * i32]* %256 = getelementptr &([1000 * i32]* %201)[i64 11];
    i32* %257 = getelementptr &([1000 * i32]* %256)[i64 0][i32 %159];
    i32 %258 = load i32* %257;
    i32 %259 = neg i32 %258;
    i32* %260 = getelementptr &(i32* %205)[i64 11];
    store i32* %260 with i32 %259;
    [1000 * i32]* %261 = getelementptr &([1000 * i32]* %201)[i64 12];
    i32* %262 = getelementptr &([1000 * i32]* %261)[i64 0][i32 %159];
    i32 %263 = load i32* %262;
    i32 %264 = neg i32 %263;
    i32* %265 = getelementptr &(i32* %205)[i64 12];
    store i32* %265 with i32 %264;
    [1000 * i32]* %266 = getelementptr &([1000 * i32]* %201)[i64 13];
    i32* %267 = getelementptr &([1000 * i32]* %266)[i64 0][i32 %159];
    i32 %268 = load i32* %267;
    i32 %269 = neg i32 %268;
    i32* %270 = getelementptr &(i32* %205)[i64 13];
    store i32* %270 with i32 %269;
    [1000 * i32]* %271 = getelementptr &([1000 * i32]* %201)[i64 14];
    i32* %272 = getelementptr &([1000 * i32]* %271)[i64 0][i32 %159];
    i32 %273 = load i32* %272;
    i32 %274 = neg i32 %273;
    i32* %275 = getelementptr &(i32* %205)[i64 14];
    store i32* %275 with i32 %274;
    [1000 * i32]* %276 = getelementptr &([1000 * i32]* %201)[i64 15];
    i32* %277 = getelementptr &([1000 * i32]* %276)[i64 0][i32 %159];
    i32 %278 = load i32* %277;
    i32 %279 = neg i32 %278;
    i32* %280 = getelementptr &(i32* %205)[i64 15];
    store i32* %280 with i32 %279;
    i32 %281 = add i32 %200, i32 16;
    i1 %282 = scmp lt i32 %281, i32 992;
    cbr i1 %282(prob = 0.98), ^while.body9, ^while.body10;
  ^b5:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %188);
    ubr ^b2;
  ^while.body10:
    [1000 * i32]* %283 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %281];
    i32* %284 = getelementptr &([1000 * i32]* %283)[i64 0][i32 %159];
    i32 %285 = load i32* %284;
    i32 %286 = neg i32 %285;
    i32* %287 = getelementptr &([1000 * i32]* %167)[i64 0][i32 %281];
    store i32* %287 with i32 %286;
    [1000 * i32]* %288 = getelementptr &([1000 * i32]* %283)[i64 1];
    i32* %289 = getelementptr &([1000 * i32]* %288)[i64 0][i32 %159];
    i32 %290 = load i32* %289;
    i32 %291 = neg i32 %290;
    i32* %292 = getelementptr &(i32* %287)[i64 1];
    store i32* %292 with i32 %291;
    [1000 * i32]* %293 = getelementptr &([1000 * i32]* %283)[i64 2];
    i32* %294 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %159];
    i32 %295 = load i32* %294;
    i32 %296 = neg i32 %295;
    i32* %297 = getelementptr &(i32* %287)[i64 2];
    store i32* %297 with i32 %296;
    [1000 * i32]* %298 = getelementptr &([1000 * i32]* %283)[i64 3];
    i32* %299 = getelementptr &([1000 * i32]* %298)[i64 0][i32 %159];
    i32 %300 = load i32* %299;
    i32 %301 = neg i32 %300;
    i32* %302 = getelementptr &(i32* %287)[i64 3];
    store i32* %302 with i32 %301;
    [1000 * i32]* %303 = getelementptr &([1000 * i32]* %283)[i64 4];
    i32* %304 = getelementptr &([1000 * i32]* %303)[i64 0][i32 %159];
    i32 %305 = load i32* %304;
    i32 %306 = neg i32 %305;
    i32* %307 = getelementptr &(i32* %287)[i64 4];
    store i32* %307 with i32 %306;
    [1000 * i32]* %308 = getelementptr &([1000 * i32]* %283)[i64 5];
    i32* %309 = getelementptr &([1000 * i32]* %308)[i64 0][i32 %159];
    i32 %310 = load i32* %309;
    i32 %311 = neg i32 %310;
    i32* %312 = getelementptr &(i32* %287)[i64 5];
    store i32* %312 with i32 %311;
    [1000 * i32]* %313 = getelementptr &([1000 * i32]* %283)[i64 6];
    i32* %314 = getelementptr &([1000 * i32]* %313)[i64 0][i32 %159];
    i32 %315 = load i32* %314;
    i32 %316 = neg i32 %315;
    i32* %317 = getelementptr &(i32* %287)[i64 6];
    store i32* %317 with i32 %316;
    [1000 * i32]* %318 = getelementptr &([1000 * i32]* %283)[i64 7];
    i32* %319 = getelementptr &([1000 * i32]* %318)[i64 0][i32 %159];
    i32 %320 = load i32* %319;
    i32 %321 = neg i32 %320;
    i32* %322 = getelementptr &(i32* %287)[i64 7];
    store i32* %322 with i32 %321;
    i32 %323 = add i32 %159, i32 1;
    ubr ^while.header6;
  ^while.body11:
    i32 %324 = phi [^indirect, i32 %188] [^while.body11, i32 %373];
    i32 %325 = phi [^indirect, i32 0] [^while.body11, i32 %374];
    i32* %326 = getelementptr &([1000 * i32]* %190)[i64 0][i32 %325];
    i32 %327 = load i32* %326;
    i32 %328 = add i32 %324, i32 %327;
    i32* %329 = getelementptr &(i32* %326)[i64 1];
    i32 %330 = load i32* %329;
    i32 %331 = add i32 %328, i32 %330;
    i32* %332 = getelementptr &(i32* %326)[i64 2];
    i32 %333 = load i32* %332;
    i32 %334 = add i32 %331, i32 %333;
    i32* %335 = getelementptr &(i32* %326)[i64 3];
    i32 %336 = load i32* %335;
    i32 %337 = add i32 %334, i32 %336;
    i32* %338 = getelementptr &(i32* %326)[i64 4];
    i32 %339 = load i32* %338;
    i32 %340 = add i32 %337, i32 %339;
    i32* %341 = getelementptr &(i32* %326)[i64 5];
    i32 %342 = load i32* %341;
    i32 %343 = add i32 %340, i32 %342;
    i32* %344 = getelementptr &(i32* %326)[i64 6];
    i32 %345 = load i32* %344;
    i32 %346 = add i32 %343, i32 %345;
    i32* %347 = getelementptr &(i32* %326)[i64 7];
    i32 %348 = load i32* %347;
    i32 %349 = add i32 %346, i32 %348;
    i32* %350 = getelementptr &(i32* %326)[i64 8];
    i32 %351 = load i32* %350;
    i32 %352 = add i32 %349, i32 %351;
    i32* %353 = getelementptr &(i32* %326)[i64 9];
    i32 %354 = load i32* %353;
    i32 %355 = add i32 %352, i32 %354;
    i32* %356 = getelementptr &(i32* %326)[i64 10];
    i32 %357 = load i32* %356;
    i32 %358 = add i32 %355, i32 %357;
    i32* %359 = getelementptr &(i32* %326)[i64 11];
    i32 %360 = load i32* %359;
    i32 %361 = add i32 %358, i32 %360;
    i32* %362 = getelementptr &(i32* %326)[i64 12];
    i32 %363 = load i32* %362;
    i32 %364 = add i32 %361, i32 %363;
    i32* %365 = getelementptr &(i32* %326)[i64 13];
    i32 %366 = load i32* %365;
    i32 %367 = add i32 %364, i32 %366;
    i32* %368 = getelementptr &(i32* %326)[i64 14];
    i32 %369 = load i32* %368;
    i32 %370 = add i32 %367, i32 %369;
    i32* %371 = getelementptr &(i32* %326)[i64 15];
    i32 %372 = load i32* %371;
    i32 %373 = add i32 %370, i32 %372;
    i32 %374 = add i32 %325, i32 16;
    i1 %375 = scmp lt i32 %374, i32 992;
    cbr i1 %375(prob = 0.98), ^while.body11, ^while.body12;
  ^while.body12:
    i32* %376 = getelementptr &([1000 * i32]* %190)[i64 0][i32 %374];
    i32 %377 = load i32* %376;
    i32 %378 = add i32 %373, i32 %377;
    i32* %379 = getelementptr &(i32* %376)[i64 1];
    i32 %380 = load i32* %379;
    i32 %381 = add i32 %378, i32 %380;
    i32* %382 = getelementptr &(i32* %376)[i64 2];
    i32 %383 = load i32* %382;
    i32 %384 = add i32 %381, i32 %383;
    i32* %385 = getelementptr &(i32* %376)[i64 3];
    i32 %386 = load i32* %385;
    i32 %387 = add i32 %384, i32 %386;
    i32* %388 = getelementptr &(i32* %376)[i64 4];
    i32 %389 = load i32* %388;
    i32 %390 = add i32 %387, i32 %389;
    i32* %391 = getelementptr &(i32* %376)[i64 5];
    i32 %392 = load i32* %391;
    i32 %393 = add i32 %390, i32 %392;
    i32* %394 = getelementptr &(i32* %376)[i64 6];
    i32 %395 = load i32* %394;
    i32 %396 = add i32 %393, i32 %395;
    i32* %397 = getelementptr &(i32* %376)[i64 7];
    i32 %398 = load i32* %397;
    i32 %399 = add i32 %396, i32 %398;
    i32 %400 = add i32 %187, i32 1;
    ubr ^while.header7;
}
