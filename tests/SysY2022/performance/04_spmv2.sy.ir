internal func @getarray() -> i32 { NoMemoryRead };
internal func @putarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [100010 * i32]* @x;
internal [3000000 * i32]* @y;
internal [3000000 * i32]* @v;
internal [100010 * i32]* @a;
internal [100010 * i32]* @b;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [100010 * i32]* %0 = ptrcast [100010 * i32]* @x to [100010 * i32]*;
    i32* %1 = getelementptr &([100010 * i32]* %0)[i64 0][i64 0];
    i32 %2 = call (i32*) -> i32 @getarray(i32* %1);
    i32 %3 = add i32 %2, i32 -1;
    i1 %4 = icmp sgt i32 %3, i32 0;
    [3000000 * i32]* %5 = ptrcast [3000000 * i32]* @y to [3000000 * i32]*;
    i32* %6 = getelementptr &([3000000 * i32]* %5)[i64 0][i64 0];
    i32 %7 = call (i32*) -> i32 @getarray(i32* %6);
    [3000000 * i32]* %8 = ptrcast [3000000 * i32]* @v to [3000000 * i32]*;
    i32* %9 = getelementptr &([3000000 * i32]* %8)[i64 0][i64 0];
    i32 %10 = call (i32*) -> i32 @getarray(i32* %9);
    [100010 * i32]* %11 = ptrcast [100010 * i32]* @a to [100010 * i32]*;
    i32* %12 = getelementptr &([100010 * i32]* %11)[i64 0][i64 0];
    i32 %13 = call (i32*) -> i32 @getarray(i32* %12);
    call (i32) -> void @starttime(i32 39);
    [100010 * i32]* %14 = ptrcast [100010 * i32]* @b to [100010 * i32]*;
    i32* %15 = getelementptr &([100010 * i32]* %14)[i64 0][i64 0];
    ubr ^while.body;
  ^while.body:
    i32 %16 = phi [^entry, i32 0] [^while.body10, i32 %106];
    cbr i1 %4(prob = 0.97), ^super.header, ^while.header;
  ^super.header:
    i32 %17 = phi [^while.body, i32 0] [^while.body1, i32 %18];
    i32 %18 = add i32 %17, i32 4;
    i1 %19 = icmp sgt i32 %3, i32 %18;
    cbr i1 %19(prob = 0.89), ^while.body1, ^super.header1;
  ^while.header:
    i32 %20 = phi [^while.body, i32 0] [^b, i32 %29] [^while.body8, i32 0] [^while.body20, i32 %29];
    i1 %21 = icmp sgt i32 %3, i32 %20;
    cbr i1 %21(prob = 0.97), ^while.body2, ^while.body3;
  ^while.body1:
    i32* %22 = getelementptr &(i32* %15)[i32 %17];
    store i32* %22 with i32 0;
    i32* %23 = getelementptr &(i32* %22)[i64 1];
    store i32* %23 with i32 0;
    i32* %24 = getelementptr &(i32* %22)[i64 2];
    store i32* %24 with i32 0;
    i32* %25 = getelementptr &(i32* %22)[i64 3];
    store i32* %25 with i32 0;
    ubr ^super.header;
  ^super.header1:
    i32 %26 = phi [^super.header, i32 %17] [^while.body4, i32 %27];
    i32 %27 = add i32 %26, i32 4;
    i1 %28 = icmp sgt i32 %3, i32 %27;
    cbr i1 %28(prob = 0.89), ^while.body4, ^super.header3;
  ^while.body2:
    i32 %29 = add i32 %20, i32 1;
    i32* %30 = getelementptr &(i32* %1)[i32 %29];
    i32* %31 = getelementptr &(i32* %1)[i32 %20];
    i32 %32 = load i32* %31;
    i32 %33 = load i32* %30;
    i1 %34 = icmp slt i32 %32, i32 %33;
    i32* %35 = getelementptr &(i32* %12)[i32 %20];
    cbr i1 %34(prob = 0.97), ^super.header2, ^b;
  ^while.body3:
    cbr i1 %4(prob = 0.97), ^super.header4, ^while.header1;
  ^while.body4:
    i32* %36 = getelementptr &(i32* %15)[i32 %26];
    store i32* %36 with i32 0;
    i32* %37 = getelementptr &(i32* %36)[i64 1];
    store i32* %37 with i32 0;
    i32* %38 = getelementptr &(i32* %36)[i64 2];
    store i32* %38 with i32 0;
    i32* %39 = getelementptr &(i32* %36)[i64 3];
    store i32* %39 with i32 0;
    ubr ^super.header1;
  ^super.header2:
    i32 %40 = phi [^while.body2, i32 %32] [^while.body5, i32 %41];
    i32 %41 = add i32 %40, i32 4;
    i1 %42 = icmp sgt i32 %33, i32 %41;
    cbr i1 %42(prob = 0.89), ^while.body5, ^super.header5;
  ^super.header3:
    i32 %43 = phi [^super.header1, i32 %26] [^while.body6, i32 %44];
    i32 %44 = add i32 %43, i32 4;
    i1 %45 = icmp sgt i32 %3, i32 %44;
    cbr i1 %45(prob = 0.89), ^while.body6, ^while.body8;
  ^b:
    cbr i1 %34(prob = 0.97), ^indirect, ^while.header;
  ^super.header4:
    i32 %46 = phi [^while.body3, i32 0] [^while.body7, i32 %47];
    i32 %47 = add i32 %46, i32 4;
    i1 %48 = icmp sgt i32 %3, i32 %47;
    cbr i1 %48(prob = 0.89), ^while.body7, ^super.header6;
  ^while.header1:
    i32 %49 = phi [^while.body3, i32 0] [^b1, i32 %99] [^while.body17, i32 0] [^while.body24, i32 %99];
    i1 %50 = icmp sgt i32 %3, i32 %49;
    cbr i1 %50(prob = 0.97), ^while.body9, ^while.body10;
  ^while.body5:
    i32* %51 = getelementptr &(i32* %6)[i32 %40];
    i32 %52 = load i32* %51;
    i32* %53 = getelementptr &(i32* %15)[i32 %52];
    i32 %54 = load i32* %53;
    i32* %55 = getelementptr &(i32* %9)[i32 %40];
    i32 %56 = load i32* %55;
    i32 %57 = add i32 %54, i32 %56;
    store i32* %53 with i32 %57;
    i32* %58 = getelementptr &(i32* %51)[i64 1];
    i32 %59 = load i32* %58;
    i32* %60 = getelementptr &(i32* %15)[i32 %59];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &(i32* %55)[i64 1];
    i32 %63 = load i32* %62;
    i32 %64 = add i32 %61, i32 %63;
    store i32* %60 with i32 %64;
    i32* %65 = getelementptr &(i32* %51)[i64 2];
    i32 %66 = load i32* %65;
    i32* %67 = getelementptr &(i32* %15)[i32 %66];
    i32 %68 = load i32* %67;
    i32* %69 = getelementptr &(i32* %55)[i64 2];
    i32 %70 = load i32* %69;
    i32 %71 = add i32 %68, i32 %70;
    store i32* %67 with i32 %71;
    i32* %72 = getelementptr &(i32* %51)[i64 3];
    i32 %73 = load i32* %72;
    i32* %74 = getelementptr &(i32* %15)[i32 %73];
    i32 %75 = load i32* %74;
    i32* %76 = getelementptr &(i32* %55)[i64 3];
    i32 %77 = load i32* %76;
    i32 %78 = add i32 %75, i32 %77;
    store i32* %74 with i32 %78;
    ubr ^super.header2;
  ^while.body6:
    i32* %79 = getelementptr &(i32* %15)[i32 %43];
    store i32* %79 with i32 0;
    i32* %80 = getelementptr &(i32* %79)[i64 1];
    store i32* %80 with i32 0;
    i32* %81 = getelementptr &(i32* %79)[i64 2];
    store i32* %81 with i32 0;
    i32* %82 = getelementptr &(i32* %79)[i64 3];
    store i32* %82 with i32 0;
    ubr ^super.header3;
  ^while.body7:
    i32* %83 = getelementptr &(i32* %12)[i32 %46];
    store i32* %83 with i32 0;
    i32* %84 = getelementptr &(i32* %83)[i64 1];
    store i32* %84 with i32 0;
    i32* %85 = getelementptr &(i32* %83)[i64 2];
    store i32* %85 with i32 0;
    i32* %86 = getelementptr &(i32* %83)[i64 3];
    store i32* %86 with i32 0;
    ubr ^super.header4;
  ^indirect:
    i32 %87 = load i32* %35;
    i32 %88 = add i32 %87, i32 -1;
    ubr ^super.header7;
  ^super.header5:
    i32 %89 = phi [^super.header2, i32 %40] [^while.body11, i32 %90];
    i32 %90 = add i32 %89, i32 4;
    i1 %91 = icmp sgt i32 %33, i32 %90;
    cbr i1 %91(prob = 0.89), ^while.body11, ^while.body13;
  ^while.body8:
    i32 %92 = phi [^super.header3, i32 %43] [^while.body8, i32 %94];
    i32* %93 = getelementptr &(i32* %15)[i32 %92];
    store i32* %93 with i32 0;
    i32 %94 = add i32 %92, i32 1;
    i1 %95 = icmp sgt i32 %3, i32 %94;
    cbr i1 %95(prob = 0.97), ^while.body8, ^while.header;
  ^super.header6:
    i32 %96 = phi [^super.header4, i32 %46] [^while.body12, i32 %97];
    i32 %97 = add i32 %96, i32 4;
    i1 %98 = icmp sgt i32 %3, i32 %97;
    cbr i1 %98(prob = 0.89), ^while.body12, ^super.header9;
  ^while.body9:
    i32 %99 = add i32 %49, i32 1;
    i32* %100 = getelementptr &(i32* %1)[i32 %99];
    i32* %101 = getelementptr &(i32* %1)[i32 %49];
    i32 %102 = load i32* %101;
    i32 %103 = load i32* %100;
    i1 %104 = icmp slt i32 %102, i32 %103;
    i32* %105 = getelementptr &(i32* %15)[i32 %49];
    cbr i1 %104(prob = 0.97), ^super.header8, ^b1;
  ^while.body10:
    i32 %106 = add i32 %16, i32 1;
    i1 %107 = icmp slt i32 %106, i32 100;
    cbr i1 %107(prob = 0.99), ^while.body, ^b2;
  ^while.body11:
    i32* %108 = getelementptr &(i32* %6)[i32 %89];
    i32 %109 = load i32* %108;
    i32* %110 = getelementptr &(i32* %15)[i32 %109];
    i32 %111 = load i32* %110;
    i32* %112 = getelementptr &(i32* %9)[i32 %89];
    i32 %113 = load i32* %112;
    i32 %114 = add i32 %111, i32 %113;
    store i32* %110 with i32 %114;
    i32* %115 = getelementptr &(i32* %108)[i64 1];
    i32 %116 = load i32* %115;
    i32* %117 = getelementptr &(i32* %15)[i32 %116];
    i32 %118 = load i32* %117;
    i32* %119 = getelementptr &(i32* %112)[i64 1];
    i32 %120 = load i32* %119;
    i32 %121 = add i32 %118, i32 %120;
    store i32* %117 with i32 %121;
    i32* %122 = getelementptr &(i32* %108)[i64 2];
    i32 %123 = load i32* %122;
    i32* %124 = getelementptr &(i32* %15)[i32 %123];
    i32 %125 = load i32* %124;
    i32* %126 = getelementptr &(i32* %112)[i64 2];
    i32 %127 = load i32* %126;
    i32 %128 = add i32 %125, i32 %127;
    store i32* %124 with i32 %128;
    i32* %129 = getelementptr &(i32* %108)[i64 3];
    i32 %130 = load i32* %129;
    i32* %131 = getelementptr &(i32* %15)[i32 %130];
    i32 %132 = load i32* %131;
    i32* %133 = getelementptr &(i32* %112)[i64 3];
    i32 %134 = load i32* %133;
    i32 %135 = add i32 %132, i32 %134;
    store i32* %131 with i32 %135;
    ubr ^super.header5;
  ^while.body12:
    i32* %136 = getelementptr &(i32* %12)[i32 %96];
    store i32* %136 with i32 0;
    i32* %137 = getelementptr &(i32* %136)[i64 1];
    store i32* %137 with i32 0;
    i32* %138 = getelementptr &(i32* %136)[i64 2];
    store i32* %138 with i32 0;
    i32* %139 = getelementptr &(i32* %136)[i64 3];
    store i32* %139 with i32 0;
    ubr ^super.header6;
  ^super.header7:
    i32 %140 = phi [^indirect, i32 %32] [^while.body14, i32 %141];
    i32 %141 = add i32 %140, i32 4;
    i1 %142 = icmp sgt i32 %33, i32 %141;
    cbr i1 %142(prob = 0.89), ^while.body14, ^super.header10;
  ^while.body13:
    i32 %143 = phi [^super.header5, i32 %89] [^while.body13, i32 %151];
    i32* %144 = getelementptr &(i32* %6)[i32 %143];
    i32 %145 = load i32* %144;
    i32* %146 = getelementptr &(i32* %15)[i32 %145];
    i32 %147 = load i32* %146;
    i32* %148 = getelementptr &(i32* %9)[i32 %143];
    i32 %149 = load i32* %148;
    i32 %150 = add i32 %147, i32 %149;
    store i32* %146 with i32 %150;
    i32 %151 = add i32 %143, i32 1;
    i1 %152 = icmp sgt i32 %33, i32 %151;
    cbr i1 %152(prob = 0.97), ^while.body13, ^b;
  ^super.header8:
    i32 %153 = phi [^while.body9, i32 %102] [^while.body15, i32 %154];
    i32 %154 = add i32 %153, i32 4;
    i1 %155 = icmp sgt i32 %103, i32 %154;
    cbr i1 %155(prob = 0.89), ^while.body15, ^super.header11;
  ^super.header9:
    i32 %156 = phi [^super.header6, i32 %96] [^while.body16, i32 %157];
    i32 %157 = add i32 %156, i32 4;
    i1 %158 = icmp sgt i32 %3, i32 %157;
    cbr i1 %158(prob = 0.89), ^while.body16, ^while.body17;
  ^b1:
    cbr i1 %104(prob = 0.97), ^indirect1, ^while.header1;
  ^b2:
    call (i32) -> void @stoptime(i32 47);
    call (i32, i32*) -> void @putarray(i32 %3, i32* %15);
    ret i32 0;
  ^while.body14:
    i32* %159 = getelementptr &(i32* %6)[i32 %140];
    i32 %160 = load i32* %159;
    i32* %161 = getelementptr &(i32* %15)[i32 %160];
    i32 %162 = load i32* %161;
    i32* %163 = getelementptr &(i32* %9)[i32 %140];
    i32 %164 = load i32* %163;
    i32 %165 = mul i32 %88, i32 %164;
    i32 %166 = add i32 %162, i32 %165;
    store i32* %161 with i32 %166;
    i32* %167 = getelementptr &(i32* %159)[i64 1];
    i32 %168 = load i32* %167;
    i32* %169 = getelementptr &(i32* %15)[i32 %168];
    i32 %170 = load i32* %169;
    i32* %171 = getelementptr &(i32* %163)[i64 1];
    i32 %172 = load i32* %171;
    i32 %173 = mul i32 %88, i32 %172;
    i32 %174 = add i32 %170, i32 %173;
    store i32* %169 with i32 %174;
    i32* %175 = getelementptr &(i32* %159)[i64 2];
    i32 %176 = load i32* %175;
    i32* %177 = getelementptr &(i32* %15)[i32 %176];
    i32 %178 = load i32* %177;
    i32* %179 = getelementptr &(i32* %163)[i64 2];
    i32 %180 = load i32* %179;
    i32 %181 = mul i32 %88, i32 %180;
    i32 %182 = add i32 %178, i32 %181;
    store i32* %177 with i32 %182;
    i32* %183 = getelementptr &(i32* %159)[i64 3];
    i32 %184 = load i32* %183;
    i32* %185 = getelementptr &(i32* %15)[i32 %184];
    i32 %186 = load i32* %185;
    i32* %187 = getelementptr &(i32* %163)[i64 3];
    i32 %188 = load i32* %187;
    i32 %189 = mul i32 %88, i32 %188;
    i32 %190 = add i32 %186, i32 %189;
    store i32* %185 with i32 %190;
    ubr ^super.header7;
  ^while.body15:
    i32* %191 = getelementptr &(i32* %6)[i32 %153];
    i32 %192 = load i32* %191;
    i32* %193 = getelementptr &(i32* %12)[i32 %192];
    i32 %194 = load i32* %193;
    i32* %195 = getelementptr &(i32* %9)[i32 %153];
    i32 %196 = load i32* %195;
    i32 %197 = add i32 %194, i32 %196;
    store i32* %193 with i32 %197;
    i32* %198 = getelementptr &(i32* %191)[i64 1];
    i32 %199 = load i32* %198;
    i32* %200 = getelementptr &(i32* %12)[i32 %199];
    i32 %201 = load i32* %200;
    i32* %202 = getelementptr &(i32* %195)[i64 1];
    i32 %203 = load i32* %202;
    i32 %204 = add i32 %201, i32 %203;
    store i32* %200 with i32 %204;
    i32* %205 = getelementptr &(i32* %191)[i64 2];
    i32 %206 = load i32* %205;
    i32* %207 = getelementptr &(i32* %12)[i32 %206];
    i32 %208 = load i32* %207;
    i32* %209 = getelementptr &(i32* %195)[i64 2];
    i32 %210 = load i32* %209;
    i32 %211 = add i32 %208, i32 %210;
    store i32* %207 with i32 %211;
    i32* %212 = getelementptr &(i32* %191)[i64 3];
    i32 %213 = load i32* %212;
    i32* %214 = getelementptr &(i32* %12)[i32 %213];
    i32 %215 = load i32* %214;
    i32* %216 = getelementptr &(i32* %195)[i64 3];
    i32 %217 = load i32* %216;
    i32 %218 = add i32 %215, i32 %217;
    store i32* %214 with i32 %218;
    ubr ^super.header8;
  ^while.body16:
    i32* %219 = getelementptr &(i32* %12)[i32 %156];
    store i32* %219 with i32 0;
    i32* %220 = getelementptr &(i32* %219)[i64 1];
    store i32* %220 with i32 0;
    i32* %221 = getelementptr &(i32* %219)[i64 2];
    store i32* %221 with i32 0;
    i32* %222 = getelementptr &(i32* %219)[i64 3];
    store i32* %222 with i32 0;
    ubr ^super.header9;
  ^indirect1:
    i32 %223 = load i32* %105;
    i32 %224 = add i32 %223, i32 -1;
    ubr ^super.header12;
  ^super.header10:
    i32 %225 = phi [^super.header7, i32 %140] [^while.body18, i32 %226];
    i32 %226 = add i32 %225, i32 4;
    i1 %227 = icmp sgt i32 %33, i32 %226;
    cbr i1 %227(prob = 0.89), ^while.body18, ^while.body20;
  ^super.header11:
    i32 %228 = phi [^super.header8, i32 %153] [^while.body19, i32 %229];
    i32 %229 = add i32 %228, i32 4;
    i1 %230 = icmp sgt i32 %103, i32 %229;
    cbr i1 %230(prob = 0.89), ^while.body19, ^while.body21;
  ^while.body17:
    i32 %231 = phi [^super.header9, i32 %156] [^while.body17, i32 %233];
    i32* %232 = getelementptr &(i32* %12)[i32 %231];
    store i32* %232 with i32 0;
    i32 %233 = add i32 %231, i32 1;
    i1 %234 = icmp sgt i32 %3, i32 %233;
    cbr i1 %234(prob = 0.97), ^while.body17, ^while.header1;
  ^while.body18:
    i32* %235 = getelementptr &(i32* %6)[i32 %225];
    i32 %236 = load i32* %235;
    i32* %237 = getelementptr &(i32* %15)[i32 %236];
    i32 %238 = load i32* %237;
    i32* %239 = getelementptr &(i32* %9)[i32 %225];
    i32 %240 = load i32* %239;
    i32 %241 = mul i32 %88, i32 %240;
    i32 %242 = add i32 %238, i32 %241;
    store i32* %237 with i32 %242;
    i32* %243 = getelementptr &(i32* %235)[i64 1];
    i32 %244 = load i32* %243;
    i32* %245 = getelementptr &(i32* %15)[i32 %244];
    i32 %246 = load i32* %245;
    i32* %247 = getelementptr &(i32* %239)[i64 1];
    i32 %248 = load i32* %247;
    i32 %249 = mul i32 %88, i32 %248;
    i32 %250 = add i32 %246, i32 %249;
    store i32* %245 with i32 %250;
    i32* %251 = getelementptr &(i32* %235)[i64 2];
    i32 %252 = load i32* %251;
    i32* %253 = getelementptr &(i32* %15)[i32 %252];
    i32 %254 = load i32* %253;
    i32* %255 = getelementptr &(i32* %239)[i64 2];
    i32 %256 = load i32* %255;
    i32 %257 = mul i32 %88, i32 %256;
    i32 %258 = add i32 %254, i32 %257;
    store i32* %253 with i32 %258;
    i32* %259 = getelementptr &(i32* %235)[i64 3];
    i32 %260 = load i32* %259;
    i32* %261 = getelementptr &(i32* %15)[i32 %260];
    i32 %262 = load i32* %261;
    i32* %263 = getelementptr &(i32* %239)[i64 3];
    i32 %264 = load i32* %263;
    i32 %265 = mul i32 %88, i32 %264;
    i32 %266 = add i32 %262, i32 %265;
    store i32* %261 with i32 %266;
    ubr ^super.header10;
  ^while.body19:
    i32* %267 = getelementptr &(i32* %6)[i32 %228];
    i32 %268 = load i32* %267;
    i32* %269 = getelementptr &(i32* %12)[i32 %268];
    i32 %270 = load i32* %269;
    i32* %271 = getelementptr &(i32* %9)[i32 %228];
    i32 %272 = load i32* %271;
    i32 %273 = add i32 %270, i32 %272;
    store i32* %269 with i32 %273;
    i32* %274 = getelementptr &(i32* %267)[i64 1];
    i32 %275 = load i32* %274;
    i32* %276 = getelementptr &(i32* %12)[i32 %275];
    i32 %277 = load i32* %276;
    i32* %278 = getelementptr &(i32* %271)[i64 1];
    i32 %279 = load i32* %278;
    i32 %280 = add i32 %277, i32 %279;
    store i32* %276 with i32 %280;
    i32* %281 = getelementptr &(i32* %267)[i64 2];
    i32 %282 = load i32* %281;
    i32* %283 = getelementptr &(i32* %12)[i32 %282];
    i32 %284 = load i32* %283;
    i32* %285 = getelementptr &(i32* %271)[i64 2];
    i32 %286 = load i32* %285;
    i32 %287 = add i32 %284, i32 %286;
    store i32* %283 with i32 %287;
    i32* %288 = getelementptr &(i32* %267)[i64 3];
    i32 %289 = load i32* %288;
    i32* %290 = getelementptr &(i32* %12)[i32 %289];
    i32 %291 = load i32* %290;
    i32* %292 = getelementptr &(i32* %271)[i64 3];
    i32 %293 = load i32* %292;
    i32 %294 = add i32 %291, i32 %293;
    store i32* %290 with i32 %294;
    ubr ^super.header11;
  ^while.body20:
    i32 %295 = phi [^super.header10, i32 %225] [^while.body20, i32 %304];
    i32* %296 = getelementptr &(i32* %6)[i32 %295];
    i32 %297 = load i32* %296;
    i32* %298 = getelementptr &(i32* %15)[i32 %297];
    i32 %299 = load i32* %298;
    i32* %300 = getelementptr &(i32* %9)[i32 %295];
    i32 %301 = load i32* %300;
    i32 %302 = mul i32 %88, i32 %301;
    i32 %303 = add i32 %299, i32 %302;
    store i32* %298 with i32 %303;
    i32 %304 = add i32 %295, i32 1;
    i1 %305 = icmp sgt i32 %33, i32 %304;
    cbr i1 %305(prob = 0.97), ^while.body20, ^while.header;
  ^super.header12:
    i32 %306 = phi [^indirect1, i32 %102] [^while.body22, i32 %307];
    i32 %307 = add i32 %306, i32 4;
    i1 %308 = icmp sgt i32 %103, i32 %307;
    cbr i1 %308(prob = 0.89), ^while.body22, ^super.header13;
  ^while.body21:
    i32 %309 = phi [^super.header11, i32 %228] [^while.body21, i32 %317];
    i32* %310 = getelementptr &(i32* %6)[i32 %309];
    i32 %311 = load i32* %310;
    i32* %312 = getelementptr &(i32* %12)[i32 %311];
    i32 %313 = load i32* %312;
    i32* %314 = getelementptr &(i32* %9)[i32 %309];
    i32 %315 = load i32* %314;
    i32 %316 = add i32 %313, i32 %315;
    store i32* %312 with i32 %316;
    i32 %317 = add i32 %309, i32 1;
    i1 %318 = icmp sgt i32 %103, i32 %317;
    cbr i1 %318(prob = 0.97), ^while.body21, ^b1;
  ^while.body22:
    i32* %319 = getelementptr &(i32* %6)[i32 %306];
    i32 %320 = load i32* %319;
    i32* %321 = getelementptr &(i32* %12)[i32 %320];
    i32 %322 = load i32* %321;
    i32* %323 = getelementptr &(i32* %9)[i32 %306];
    i32 %324 = load i32* %323;
    i32 %325 = mul i32 %224, i32 %324;
    i32 %326 = add i32 %322, i32 %325;
    store i32* %321 with i32 %326;
    i32* %327 = getelementptr &(i32* %319)[i64 1];
    i32 %328 = load i32* %327;
    i32* %329 = getelementptr &(i32* %12)[i32 %328];
    i32 %330 = load i32* %329;
    i32* %331 = getelementptr &(i32* %323)[i64 1];
    i32 %332 = load i32* %331;
    i32 %333 = mul i32 %224, i32 %332;
    i32 %334 = add i32 %330, i32 %333;
    store i32* %329 with i32 %334;
    i32* %335 = getelementptr &(i32* %319)[i64 2];
    i32 %336 = load i32* %335;
    i32* %337 = getelementptr &(i32* %12)[i32 %336];
    i32 %338 = load i32* %337;
    i32* %339 = getelementptr &(i32* %323)[i64 2];
    i32 %340 = load i32* %339;
    i32 %341 = mul i32 %224, i32 %340;
    i32 %342 = add i32 %338, i32 %341;
    store i32* %337 with i32 %342;
    i32* %343 = getelementptr &(i32* %319)[i64 3];
    i32 %344 = load i32* %343;
    i32* %345 = getelementptr &(i32* %12)[i32 %344];
    i32 %346 = load i32* %345;
    i32* %347 = getelementptr &(i32* %323)[i64 3];
    i32 %348 = load i32* %347;
    i32 %349 = mul i32 %224, i32 %348;
    i32 %350 = add i32 %346, i32 %349;
    store i32* %345 with i32 %350;
    ubr ^super.header12;
  ^super.header13:
    i32 %351 = phi [^super.header12, i32 %306] [^while.body23, i32 %352];
    i32 %352 = add i32 %351, i32 4;
    i1 %353 = icmp sgt i32 %103, i32 %352;
    cbr i1 %353(prob = 0.89), ^while.body23, ^while.body24;
  ^while.body23:
    i32* %354 = getelementptr &(i32* %6)[i32 %351];
    i32 %355 = load i32* %354;
    i32* %356 = getelementptr &(i32* %12)[i32 %355];
    i32 %357 = load i32* %356;
    i32* %358 = getelementptr &(i32* %9)[i32 %351];
    i32 %359 = load i32* %358;
    i32 %360 = mul i32 %224, i32 %359;
    i32 %361 = add i32 %357, i32 %360;
    store i32* %356 with i32 %361;
    i32* %362 = getelementptr &(i32* %354)[i64 1];
    i32 %363 = load i32* %362;
    i32* %364 = getelementptr &(i32* %12)[i32 %363];
    i32 %365 = load i32* %364;
    i32* %366 = getelementptr &(i32* %358)[i64 1];
    i32 %367 = load i32* %366;
    i32 %368 = mul i32 %224, i32 %367;
    i32 %369 = add i32 %365, i32 %368;
    store i32* %364 with i32 %369;
    i32* %370 = getelementptr &(i32* %354)[i64 2];
    i32 %371 = load i32* %370;
    i32* %372 = getelementptr &(i32* %12)[i32 %371];
    i32 %373 = load i32* %372;
    i32* %374 = getelementptr &(i32* %358)[i64 2];
    i32 %375 = load i32* %374;
    i32 %376 = mul i32 %224, i32 %375;
    i32 %377 = add i32 %373, i32 %376;
    store i32* %372 with i32 %377;
    i32* %378 = getelementptr &(i32* %354)[i64 3];
    i32 %379 = load i32* %378;
    i32* %380 = getelementptr &(i32* %12)[i32 %379];
    i32 %381 = load i32* %380;
    i32* %382 = getelementptr &(i32* %358)[i64 3];
    i32 %383 = load i32* %382;
    i32 %384 = mul i32 %224, i32 %383;
    i32 %385 = add i32 %381, i32 %384;
    store i32* %380 with i32 %385;
    ubr ^super.header13;
  ^while.body24:
    i32 %386 = phi [^super.header13, i32 %351] [^while.body24, i32 %395];
    i32* %387 = getelementptr &(i32* %6)[i32 %386];
    i32 %388 = load i32* %387;
    i32* %389 = getelementptr &(i32* %12)[i32 %388];
    i32 %390 = load i32* %389;
    i32* %391 = getelementptr &(i32* %9)[i32 %386];
    i32 %392 = load i32* %391;
    i32 %393 = mul i32 %224, i32 %392;
    i32 %394 = add i32 %390, i32 %393;
    store i32* %389 with i32 %394;
    i32 %395 = add i32 %386, i32 1;
    i1 %396 = icmp sgt i32 %103, i32 %395;
    cbr i1 %396(prob = 0.97), ^while.body24, ^while.header1;
}
