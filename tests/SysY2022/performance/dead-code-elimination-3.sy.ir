internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp sgt i32 %0, i32 0;
    call (i32) -> void @starttime(i32 100016);
    cbr i1 %1(prob = 0.97), ^super.header, ^b;
  ^super.header:
    i32 %2 = phi [^entry, i32 0] [^while.body, i32 %4];
    i32 %3 = phi [^entry, i32 0] [^while.body, i32 %17];
    i32 %4 = add i32 %2, i32 4;
    i1 %5 = icmp sgt i32 %0, i32 %4;
    cbr i1 %5(prob = 0.89), ^while.body, ^while.body1;
  ^b:
    i32 %6 = phi [^entry, i32 0] [^while.body1, i32 %21];
    call (i32) -> void @stoptime(i32 100032);
    call (i32) -> void @putint(i32 %6);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
  ^while.body:
    i32 %7 = add i32 %2, i32 %3;
    i32 %8 = srem i32 %7, i32 134209537;
    i32 %9 = add i32 %2, i32 1;
    i32 %10 = add i32 %8, i32 %9;
    i32 %11 = srem i32 %10, i32 134209537;
    i32 %12 = add i32 %2, i32 2;
    i32 %13 = add i32 %11, i32 %12;
    i32 %14 = srem i32 %13, i32 134209537;
    i32 %15 = add i32 %2, i32 3;
    i32 %16 = add i32 %14, i32 %15;
    i32 %17 = srem i32 %16, i32 134209537;
    ubr ^super.header;
  ^while.body1:
    i32 %18 = phi [^super.header, i32 %2] [^while.body1, i32 %22];
    i32 %19 = phi [^super.header, i32 %3] [^while.body1, i32 %21];
    i32 %20 = add i32 %18, i32 %19;
    i32 %21 = srem i32 %20, i32 134209537;
    i32 %22 = add i32 %18, i32 1;
    i1 %23 = icmp sgt i32 %0, i32 %22;
    cbr i1 %23(prob = 0.97), ^while.body1, ^b;
}
