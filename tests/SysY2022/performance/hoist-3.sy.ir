internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry():
    i32 %0 = call () -> i32 @getint();
    call (i32) -> void @starttime(i32 121);
    i1 %1 = scmp lt i32 0, i32 %0;
    cbr i1 %1, [ ^while.body i32 %0, i32 0, i32 0 ], [ ^b i32 0 ];
^while.body(i32 %arg, i32 %arg1, i32 %arg2):
    i32 %0 = add i32 %arg1, i32 15;
    i32 %1 = srem i32 %0, i32 1500000001;
    i32 %2 = add i32 %arg2, i32 1;
    i1 %3 = scmp lt i32 %2, i32 %arg;
    cbr i1 %3, [ ^while.body i32 %arg, i32 %1, i32 %2 ], [ ^b i32 %1 ];
^b(i32 %arg):
    call (i32) -> void @stoptime(i32 123);
    call (i32) -> void @putint(i32 %arg);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
}
