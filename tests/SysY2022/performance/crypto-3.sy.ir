internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [32768 * i32]* @buffer, align 8 { Flexible };
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [80 * i32]* %words = alloc [80 * i32], align 8;
    [5 * i32]* %output_b = alloc [5 * i32], align 8;
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    call (i32) -> void @starttime(i32 161);
    i32* %2 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 0];
    store i32* %2 with i32 0;
    i32* %3 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 1];
    store i32* %3 with i32 0;
    i32* %4 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 2];
    store i32* %4 with i32 0;
    i32* %5 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 3];
    store i32* %5 with i32 0;
    i32* %6 = getelementptr &([5 * i32]* %output_b)[i64 0][i64 4];
    store i32* %6 with i32 0;
    [32768 * i32]* %7 = ptrcast [32768 * i32]* @buffer to [32768 * i32]*;
    i32* %8 = getelementptr &([32768 * i32]* %7)[i64 0][i64 0];
    i32* %9 = getelementptr &([32768 * i32]* %7)[i64 0][i64 32000];
    i32* %10 = getelementptr &([80 * i32]* %words)[i64 0][i64 0];
    i32* %11 = getelementptr &([80 * i32]* %words)[i64 0][i64 1];
    i32* %12 = getelementptr &([80 * i32]* %words)[i64 0][i64 2];
    i32* %13 = getelementptr &([80 * i32]* %words)[i64 0][i64 3];
    i32* %14 = getelementptr &([80 * i32]* %words)[i64 0][i64 4];
    i32* %15 = getelementptr &([80 * i32]* %words)[i64 0][i64 5];
    i32* %16 = getelementptr &([80 * i32]* %words)[i64 0][i64 6];
    i32* %17 = getelementptr &([80 * i32]* %words)[i64 0][i64 7];
    i32* %18 = getelementptr &([80 * i32]* %words)[i64 0][i64 8];
    i32* %19 = getelementptr &([80 * i32]* %words)[i64 0][i64 9];
    i32* %20 = getelementptr &([80 * i32]* %words)[i64 0][i64 10];
    i32* %21 = getelementptr &([80 * i32]* %words)[i64 0][i64 11];
    i32* %22 = getelementptr &([80 * i32]* %words)[i64 0][i64 12];
    i32* %23 = getelementptr &([80 * i32]* %words)[i64 0][i64 13];
    i32* %24 = getelementptr &([80 * i32]* %words)[i64 0][i64 14];
    i32* %25 = getelementptr &([80 * i32]* %words)[i64 0][i64 15];
    i32* %26 = getelementptr &([80 * i32]* %words)[i64 0][i64 16];
    i32* %27 = getelementptr &([80 * i32]* %words)[i64 0][i64 17];
    i32* %28 = getelementptr &([80 * i32]* %words)[i64 0][i64 18];
    i32* %29 = getelementptr &([80 * i32]* %words)[i64 0][i64 19];
    i32* %30 = getelementptr &([80 * i32]* %words)[i64 0][i64 20];
    i32* %31 = getelementptr &([80 * i32]* %words)[i64 0][i64 21];
    i32* %32 = getelementptr &([80 * i32]* %words)[i64 0][i64 22];
    i32* %33 = getelementptr &([80 * i32]* %words)[i64 0][i64 23];
    i32* %34 = getelementptr &([80 * i32]* %words)[i64 0][i64 24];
    i32* %35 = getelementptr &([80 * i32]* %words)[i64 0][i64 25];
    i32* %36 = getelementptr &([80 * i32]* %words)[i64 0][i64 26];
    i32* %37 = getelementptr &([80 * i32]* %words)[i64 0][i64 27];
    i32* %38 = getelementptr &([80 * i32]* %words)[i64 0][i64 28];
    i32* %39 = getelementptr &([80 * i32]* %words)[i64 0][i64 29];
    i32* %40 = getelementptr &([80 * i32]* %words)[i64 0][i64 30];
    i32* %41 = getelementptr &([80 * i32]* %words)[i64 0][i64 31];
    i32* %42 = getelementptr &([80 * i32]* %words)[i64 0][i64 32];
    i32* %43 = getelementptr &([80 * i32]* %words)[i64 0][i64 33];
    i32* %44 = getelementptr &([80 * i32]* %words)[i64 0][i64 34];
    i32* %45 = getelementptr &([80 * i32]* %words)[i64 0][i64 35];
    i32* %46 = getelementptr &([80 * i32]* %words)[i64 0][i64 36];
    i32* %47 = getelementptr &([80 * i32]* %words)[i64 0][i64 37];
    i32* %48 = getelementptr &([80 * i32]* %words)[i64 0][i64 38];
    i32* %49 = getelementptr &([80 * i32]* %words)[i64 0][i64 39];
    i32* %50 = getelementptr &([80 * i32]* %words)[i64 0][i64 40];
    i32* %51 = getelementptr &([80 * i32]* %words)[i64 0][i64 41];
    i32* %52 = getelementptr &([80 * i32]* %words)[i64 0][i64 42];
    i32* %53 = getelementptr &([80 * i32]* %words)[i64 0][i64 43];
    i32* %54 = getelementptr &([80 * i32]* %words)[i64 0][i64 44];
    i32* %55 = getelementptr &([80 * i32]* %words)[i64 0][i64 45];
    i32* %56 = getelementptr &([80 * i32]* %words)[i64 0][i64 46];
    i32* %57 = getelementptr &([80 * i32]* %words)[i64 0][i64 47];
    i32* %58 = getelementptr &([80 * i32]* %words)[i64 0][i64 48];
    i32* %59 = getelementptr &([80 * i32]* %words)[i64 0][i64 49];
    i32* %60 = getelementptr &([80 * i32]* %words)[i64 0][i64 50];
    i32* %61 = getelementptr &([80 * i32]* %words)[i64 0][i64 51];
    i32* %62 = getelementptr &([80 * i32]* %words)[i64 0][i64 52];
    i32* %63 = getelementptr &([80 * i32]* %words)[i64 0][i64 53];
    i32* %64 = getelementptr &([80 * i32]* %words)[i64 0][i64 54];
    i32* %65 = getelementptr &([80 * i32]* %words)[i64 0][i64 55];
    i32* %66 = getelementptr &([80 * i32]* %words)[i64 0][i64 56];
    i32* %67 = getelementptr &([80 * i32]* %words)[i64 0][i64 57];
    i32* %68 = getelementptr &([80 * i32]* %words)[i64 0][i64 58];
    i32* %69 = getelementptr &([80 * i32]* %words)[i64 0][i64 59];
    i32* %70 = getelementptr &([80 * i32]* %words)[i64 0][i64 60];
    i32* %71 = getelementptr &([80 * i32]* %words)[i64 0][i64 61];
    i32* %72 = getelementptr &([80 * i32]* %words)[i64 0][i64 62];
    i32* %73 = getelementptr &([80 * i32]* %words)[i64 0][i64 63];
    i32* %74 = getelementptr &([80 * i32]* %words)[i64 0][i64 64];
    i32* %75 = getelementptr &([80 * i32]* %words)[i64 0][i64 65];
    i32* %76 = getelementptr &([80 * i32]* %words)[i64 0][i64 66];
    i32* %77 = getelementptr &([80 * i32]* %words)[i64 0][i64 67];
    i32* %78 = getelementptr &([80 * i32]* %words)[i64 0][i64 68];
    i32* %79 = getelementptr &([80 * i32]* %words)[i64 0][i64 69];
    i32* %80 = getelementptr &([80 * i32]* %words)[i64 0][i64 70];
    i32* %81 = getelementptr &([80 * i32]* %words)[i64 0][i64 71];
    i32* %82 = getelementptr &([80 * i32]* %words)[i64 0][i64 72];
    i32* %83 = getelementptr &([80 * i32]* %words)[i64 0][i64 73];
    i32* %84 = getelementptr &([80 * i32]* %words)[i64 0][i64 74];
    i32* %85 = getelementptr &([80 * i32]* %words)[i64 0][i64 75];
    i32* %86 = getelementptr &([80 * i32]* %words)[i64 0][i64 76];
    i32* %87 = getelementptr &([80 * i32]* %words)[i64 0][i64 77];
    i32* %88 = getelementptr &([80 * i32]* %words)[i64 0][i64 78];
    i32* %89 = getelementptr &([80 * i32]* %words)[i64 0][i64 79];
    ubr ^while.header;
  ^while.header:
    i32 %90 = phi [^entry, i32 %0] [^b2, i32 %143];
    i32 %91 = phi [^entry, i32 %1] [^b2, i32 %228];
    i1 %92 = icmp sgt i32 %91, i32 0;
    cbr i1 %92(prob = 0.97), ^while.body, ^b;
  ^while.body:
    i32 %93 = phi [^while.header, i32 %90] [^while.body, i32 %143];
    i32 %94 = phi [^while.header, i32 0] [^while.body, i32 %191];
    i32 %95 = mul i32 %93, i32 8193;
    i32 %96 = sdiv i32 %95, i32 131072;
    i32 %97 = add i32 %95, i32 %96;
    i32 %98 = mul i32 %97, i32 270369;
    i32 %99 = sdiv i32 %98, i32 131072;
    i32 %100 = add i32 %98, i32 %99;
    i32 %101 = mul i32 %100, i32 270369;
    i32 %102 = sdiv i32 %101, i32 131072;
    i32 %103 = add i32 %101, i32 %102;
    i32 %104 = mul i32 %103, i32 270369;
    i32 %105 = sdiv i32 %104, i32 131072;
    i32 %106 = add i32 %104, i32 %105;
    i32 %107 = mul i32 %106, i32 270369;
    i32 %108 = sdiv i32 %107, i32 131072;
    i32 %109 = add i32 %107, i32 %108;
    i32 %110 = mul i32 %109, i32 270369;
    i32 %111 = sdiv i32 %110, i32 131072;
    i32 %112 = add i32 %110, i32 %111;
    i32 %113 = mul i32 %112, i32 270369;
    i32 %114 = sdiv i32 %113, i32 131072;
    i32 %115 = add i32 %113, i32 %114;
    i32 %116 = mul i32 %115, i32 270369;
    i32 %117 = sdiv i32 %116, i32 131072;
    i32 %118 = add i32 %116, i32 %117;
    i32 %119 = mul i32 %118, i32 270369;
    i32 %120 = sdiv i32 %119, i32 131072;
    i32 %121 = add i32 %119, i32 %120;
    i32 %122 = mul i32 %121, i32 270369;
    i32 %123 = sdiv i32 %122, i32 131072;
    i32 %124 = add i32 %122, i32 %123;
    i32 %125 = mul i32 %124, i32 270369;
    i32 %126 = sdiv i32 %125, i32 131072;
    i32 %127 = add i32 %125, i32 %126;
    i32 %128 = mul i32 %127, i32 270369;
    i32 %129 = sdiv i32 %128, i32 131072;
    i32 %130 = add i32 %128, i32 %129;
    i32 %131 = mul i32 %130, i32 270369;
    i32 %132 = sdiv i32 %131, i32 131072;
    i32 %133 = add i32 %131, i32 %132;
    i32 %134 = mul i32 %133, i32 270369;
    i32 %135 = sdiv i32 %134, i32 131072;
    i32 %136 = add i32 %134, i32 %135;
    i32 %137 = mul i32 %136, i32 270369;
    i32 %138 = sdiv i32 %137, i32 131072;
    i32 %139 = add i32 %137, i32 %138;
    i32 %140 = mul i32 %139, i32 270369;
    i32 %141 = sdiv i32 %140, i32 131072;
    i32 %142 = add i32 %140, i32 %141;
    i32 %143 = mul i32 %142, i32 33;
    i32 %144 = srem i32 %143, i32 256;
    i32 %145 = mul i32 %139, i32 33;
    i32 %146 = srem i32 %145, i32 256;
    i32 %147 = mul i32 %136, i32 33;
    i32 %148 = srem i32 %147, i32 256;
    i32 %149 = mul i32 %133, i32 33;
    i32 %150 = srem i32 %149, i32 256;
    i32 %151 = mul i32 %130, i32 33;
    i32 %152 = srem i32 %151, i32 256;
    i32 %153 = mul i32 %127, i32 33;
    i32 %154 = srem i32 %153, i32 256;
    i32 %155 = mul i32 %124, i32 33;
    i32 %156 = srem i32 %155, i32 256;
    i32 %157 = mul i32 %121, i32 33;
    i32 %158 = srem i32 %157, i32 256;
    i32 %159 = mul i32 %118, i32 33;
    i32 %160 = srem i32 %159, i32 256;
    i32 %161 = mul i32 %115, i32 33;
    i32 %162 = srem i32 %161, i32 256;
    i32 %163 = mul i32 %112, i32 33;
    i32 %164 = srem i32 %163, i32 256;
    i32 %165 = mul i32 %109, i32 33;
    i32 %166 = srem i32 %165, i32 256;
    i32 %167 = mul i32 %106, i32 33;
    i32 %168 = srem i32 %167, i32 256;
    i32 %169 = mul i32 %103, i32 33;
    i32 %170 = srem i32 %169, i32 256;
    i32 %171 = mul i32 %100, i32 33;
    i32 %172 = srem i32 %171, i32 256;
    i32 %173 = mul i32 %97, i32 33;
    i32 %174 = srem i32 %173, i32 256;
    i32* %175 = getelementptr &([32768 * i32]* %7)[i64 0][i32 %94];
    store i32* %175 with i32 %174;
    i32* %176 = getelementptr &(i32* %175)[i64 1];
    store i32* %176 with i32 %172;
    i32* %177 = getelementptr &(i32* %175)[i64 2];
    store i32* %177 with i32 %170;
    i32* %178 = getelementptr &(i32* %175)[i64 3];
    store i32* %178 with i32 %168;
    i32* %179 = getelementptr &(i32* %175)[i64 4];
    store i32* %179 with i32 %166;
    i32* %180 = getelementptr &(i32* %175)[i64 5];
    store i32* %180 with i32 %164;
    i32* %181 = getelementptr &(i32* %175)[i64 6];
    store i32* %181 with i32 %162;
    i32* %182 = getelementptr &(i32* %175)[i64 7];
    store i32* %182 with i32 %160;
    i32* %183 = getelementptr &(i32* %175)[i64 8];
    store i32* %183 with i32 %158;
    i32* %184 = getelementptr &(i32* %175)[i64 9];
    store i32* %184 with i32 %156;
    i32* %185 = getelementptr &(i32* %175)[i64 10];
    store i32* %185 with i32 %154;
    i32* %186 = getelementptr &(i32* %175)[i64 11];
    store i32* %186 with i32 %152;
    i32* %187 = getelementptr &(i32* %175)[i64 12];
    store i32* %187 with i32 %150;
    i32* %188 = getelementptr &(i32* %175)[i64 13];
    store i32* %188 with i32 %148;
    i32* %189 = getelementptr &(i32* %175)[i64 14];
    store i32* %189 with i32 %146;
    i32* %190 = getelementptr &(i32* %175)[i64 15];
    store i32* %190 with i32 %144;
    i32 %191 = add i32 %94, i32 16;
    i1 %192 = icmp slt i32 %191, i32 32000;
    cbr i1 %192(prob = 1), ^while.body, ^postbody;
  ^b:
    call (i32) -> void @stoptime(i32 184);
    call (i32, i32*) -> void @putarray(i32 5, i32* %2);
    ret i32 0;
  ^postbody:
    store i32* %9 with i32 128;
    ubr ^while.body1;
  ^while.body1:
    i32 %193 = phi [^postbody, i32 32001] [^while.body1, i32 %195];
    i32* %194 = getelementptr &(i32* %8)[i32 %193];
    store i32* %194 with i32 0;
    i32 %195 = add i32 %193, i32 1;
    i32 %196 = and i32 %195, i32 63;
    i1 %197 = icmp neq i32 %196, i32 60;
    cbr i1 %197(prob = 0.97), ^while.body1, ^b1;
  ^b1:
    i32* %198 = getelementptr &(i32* %8)[i32 %195];
    store i32* %198 with i32 0;
    i32* %199 = getelementptr &(i32* %198)[i64 1];
    store i32* %199 with i32 0;
    i32* %200 = getelementptr &(i32* %198)[i64 2];
    store i32* %200 with i32 125;
    i32* %201 = getelementptr &(i32* %198)[i64 3];
    store i32* %201 with i32 0;
    i32 %202 = add i32 %193, i32 5;
    store i32* %10 with i32 0;
    store i32* %11 with i32 0;
    store i32* %12 with i32 0;
    store i32* %13 with i32 0;
    store i32* %14 with i32 0;
    store i32* %15 with i32 0;
    store i32* %16 with i32 0;
    store i32* %17 with i32 0;
    store i32* %18 with i32 0;
    store i32* %19 with i32 0;
    store i32* %20 with i32 0;
    store i32* %21 with i32 0;
    store i32* %22 with i32 0;
    store i32* %23 with i32 0;
    store i32* %24 with i32 0;
    store i32* %25 with i32 0;
    store i32* %26 with i32 0;
    store i32* %27 with i32 0;
    store i32* %28 with i32 0;
    store i32* %29 with i32 0;
    store i32* %30 with i32 0;
    store i32* %31 with i32 0;
    store i32* %32 with i32 0;
    store i32* %33 with i32 0;
    store i32* %34 with i32 0;
    store i32* %35 with i32 0;
    store i32* %36 with i32 0;
    store i32* %37 with i32 0;
    store i32* %38 with i32 0;
    store i32* %39 with i32 0;
    store i32* %40 with i32 0;
    store i32* %41 with i32 0;
    store i32* %42 with i32 0;
    store i32* %43 with i32 0;
    store i32* %44 with i32 0;
    store i32* %45 with i32 0;
    store i32* %46 with i32 0;
    store i32* %47 with i32 0;
    store i32* %48 with i32 0;
    store i32* %49 with i32 0;
    store i32* %50 with i32 0;
    store i32* %51 with i32 0;
    store i32* %52 with i32 0;
    store i32* %53 with i32 0;
    store i32* %54 with i32 0;
    store i32* %55 with i32 0;
    store i32* %56 with i32 0;
    store i32* %57 with i32 0;
    store i32* %58 with i32 0;
    store i32* %59 with i32 0;
    store i32* %60 with i32 0;
    store i32* %61 with i32 0;
    store i32* %62 with i32 0;
    store i32* %63 with i32 0;
    store i32* %64 with i32 0;
    store i32* %65 with i32 0;
    store i32* %66 with i32 0;
    store i32* %67 with i32 0;
    store i32* %68 with i32 0;
    store i32* %69 with i32 0;
    store i32* %70 with i32 0;
    store i32* %71 with i32 0;
    store i32* %72 with i32 0;
    store i32* %73 with i32 0;
    store i32* %74 with i32 0;
    store i32* %75 with i32 0;
    store i32* %76 with i32 0;
    store i32* %77 with i32 0;
    store i32* %78 with i32 0;
    store i32* %79 with i32 0;
    store i32* %80 with i32 0;
    store i32* %81 with i32 0;
    store i32* %82 with i32 0;
    store i32* %83 with i32 0;
    store i32* %84 with i32 0;
    store i32* %85 with i32 0;
    store i32* %86 with i32 0;
    store i32* %87 with i32 0;
    store i32* %88 with i32 0;
    store i32* %89 with i32 0;
    ubr ^while.header1;
  ^while.header1:
    i32 %203 = phi [^b1, i32 -1009589776] [^b3, i32 %366];
    i32 %204 = phi [^b1, i32 271733878] [^b3, i32 %365];
    i32 %205 = phi [^b1, i32 -1732584194] [^b3, i32 %364];
    i32 %206 = phi [^b1, i32 -271733879] [^b3, i32 %363];
    i32 %207 = phi [^b1, i32 1732584193] [^b3, i32 %362];
    i32 %208 = phi [^b1, i32 0] [^b3, i32 %367];
    i1 %209 = icmp sgt i32 %202, i32 %208;
    cbr i1 %209(prob = 0.97), ^prebody, ^b2;
  ^prebody:
    i32 %210 = add i32 %208, i32 4;
    i32 %211 = add i32 %208, i32 8;
    i32 %212 = add i32 %208, i32 12;
    ubr ^while.body2;
  ^b2:
    i32 %213 = load i32* %2;
    i32 %214 = add i32 %207, i32 %213;
    i32 %215 = neg i32 %214;
    store i32* %2 with i32 %215;
    i32 %216 = load i32* %3;
    i32 %217 = add i32 %206, i32 %216;
    i32 %218 = neg i32 %217;
    store i32* %3 with i32 %218;
    i32 %219 = load i32* %4;
    i32 %220 = add i32 %205, i32 %219;
    i32 %221 = neg i32 %220;
    store i32* %4 with i32 %221;
    i32 %222 = load i32* %5;
    i32 %223 = add i32 %204, i32 %222;
    i32 %224 = neg i32 %223;
    store i32* %5 with i32 %224;
    i32 %225 = load i32* %6;
    i32 %226 = add i32 %203, i32 %225;
    i32 %227 = neg i32 %226;
    store i32* %6 with i32 %227;
    i32 %228 = add i32 %91, i32 -1;
    ubr ^while.header;
  ^while.body2:
    i32 %229 = phi [^prebody, i32 0] [^while.body2, i32 %297];
    i32 %230 = phi [^prebody, i32 0] [^while.body2, i32 %295];
    i32 %231 = add i32 %208, i32 %229;
    i32* %232 = getelementptr &(i32* %8)[i32 %231];
    i32 %233 = load i32* %232;
    i32* %234 = getelementptr &(i32* %232)[i64 1];
    i32 %235 = load i32* %234;
    i32 %236 = mul i32 %235, i32 65536;
    i32 %237 = mul i32 %233, i32 16777216;
    i32 %238 = add i32 %236, i32 %237;
    i32* %239 = getelementptr &(i32* %232)[i64 2];
    i32 %240 = load i32* %239;
    i32 %241 = mul i32 %240, i32 256;
    i32 %242 = add i32 %238, i32 %241;
    i32* %243 = getelementptr &(i32* %232)[i64 3];
    i32 %244 = load i32* %243;
    i32 %245 = add i32 %242, i32 %244;
    i32* %246 = getelementptr &([80 * i32]* %words)[i64 0][i32 %230];
    store i32* %246 with i32 %245;
    i32 %247 = add i32 %210, i32 %229;
    i32* %248 = getelementptr &(i32* %8)[i32 %247];
    i32 %249 = load i32* %248;
    i32* %250 = getelementptr &(i32* %248)[i64 1];
    i32 %251 = load i32* %250;
    i32 %252 = mul i32 %251, i32 65536;
    i32 %253 = mul i32 %249, i32 16777216;
    i32 %254 = add i32 %252, i32 %253;
    i32* %255 = getelementptr &(i32* %248)[i64 2];
    i32 %256 = load i32* %255;
    i32 %257 = mul i32 %256, i32 256;
    i32 %258 = add i32 %254, i32 %257;
    i32* %259 = getelementptr &(i32* %248)[i64 3];
    i32 %260 = load i32* %259;
    i32 %261 = add i32 %258, i32 %260;
    i32* %262 = getelementptr &(i32* %246)[i64 1];
    store i32* %262 with i32 %261;
    i32 %263 = add i32 %211, i32 %229;
    i32* %264 = getelementptr &(i32* %8)[i32 %263];
    i32 %265 = load i32* %264;
    i32* %266 = getelementptr &(i32* %264)[i64 1];
    i32 %267 = load i32* %266;
    i32 %268 = mul i32 %267, i32 65536;
    i32 %269 = mul i32 %265, i32 16777216;
    i32 %270 = add i32 %268, i32 %269;
    i32* %271 = getelementptr &(i32* %264)[i64 2];
    i32 %272 = load i32* %271;
    i32 %273 = mul i32 %272, i32 256;
    i32 %274 = add i32 %270, i32 %273;
    i32* %275 = getelementptr &(i32* %264)[i64 3];
    i32 %276 = load i32* %275;
    i32 %277 = add i32 %274, i32 %276;
    i32* %278 = getelementptr &(i32* %246)[i64 2];
    store i32* %278 with i32 %277;
    i32 %279 = add i32 %212, i32 %229;
    i32* %280 = getelementptr &(i32* %8)[i32 %279];
    i32 %281 = load i32* %280;
    i32* %282 = getelementptr &(i32* %280)[i64 1];
    i32 %283 = load i32* %282;
    i32 %284 = mul i32 %283, i32 65536;
    i32 %285 = mul i32 %281, i32 16777216;
    i32 %286 = add i32 %284, i32 %285;
    i32* %287 = getelementptr &(i32* %280)[i64 2];
    i32 %288 = load i32* %287;
    i32 %289 = mul i32 %288, i32 256;
    i32 %290 = add i32 %286, i32 %289;
    i32* %291 = getelementptr &(i32* %280)[i64 3];
    i32 %292 = load i32* %291;
    i32 %293 = add i32 %290, i32 %292;
    i32* %294 = getelementptr &(i32* %246)[i64 3];
    store i32* %294 with i32 %293;
    i32 %295 = add i32 %230, i32 4;
    i1 %296 = icmp slt i32 %295, i32 16;
    i32 %297 = add i32 %229, i32 16;
    cbr i1 %296(prob = 0.75), ^while.body2, ^while.body3;
  ^while.body3:
    i32 %298 = phi [^while.body2, i32 16] [^while.body3, i32 %353];
    i32* %299 = getelementptr &([80 * i32]* %words)[i64 0][i32 %298];
    i32* %300 = getelementptr &(i32* %299)[i64 -3];
    i32 %301 = load i32* %300;
    i32* %302 = getelementptr &(i32* %299)[i64 -8];
    i32 %303 = load i32* %302;
    i32 %304 = add i32 %301, i32 %303;
    i32* %305 = getelementptr &(i32* %299)[i64 -14];
    i32 %306 = load i32* %305;
    i32* %307 = getelementptr &(i32* %299)[i64 -16];
    i32 %308 = load i32* %307;
    i32 %309 = add i32 %304, i32 %308;
    i32 %310 = sub i32 %306, i32 %309;
    i32 %311 = mul i32 %310, i32 2;
    i32 %312 = srem i32 %310, i32 2;
    i32 %313 = add i32 %311, i32 %312;
    store i32* %299 with i32 %313;
    i32* %314 = getelementptr &(i32* %299)[i64 -2];
    i32 %315 = load i32* %314;
    i32* %316 = getelementptr &(i32* %299)[i64 -7];
    i32 %317 = load i32* %316;
    i32* %318 = getelementptr &(i32* %299)[i64 -13];
    i32 %319 = load i32* %318;
    i32 %320 = add i32 %313, i32 %319;
    i32 %321 = add i32 %315, i32 %317;
    i32* %322 = getelementptr &(i32* %299)[i64 -15];
    i32 %323 = load i32* %322;
    i32 %324 = add i32 %321, i32 %323;
    i32 %325 = sub i32 %319, i32 %324;
    i32 %326 = mul i32 %325, i32 2;
    i32 %327 = srem i32 %325, i32 2;
    i32 %328 = add i32 %326, i32 %327;
    i32* %329 = getelementptr &(i32* %299)[i64 1];
    store i32* %329 with i32 %328;
    i32* %330 = getelementptr &(i32* %299)[i64 -1];
    i32 %331 = load i32* %330;
    i32 %332 = add i32 %306, i32 %331;
    i32* %333 = getelementptr &(i32* %299)[i64 -6];
    i32 %334 = load i32* %333;
    i32 %335 = add i32 %332, i32 %334;
    i32* %336 = getelementptr &(i32* %299)[i64 -12];
    i32 %337 = load i32* %336;
    i32 %338 = sub i32 %337, i32 %335;
    i32 %339 = mul i32 %338, i32 2;
    i32 %340 = srem i32 %338, i32 2;
    i32 %341 = add i32 %339, i32 %340;
    i32* %342 = getelementptr &(i32* %299)[i64 2];
    store i32* %342 with i32 %341;
    i32* %343 = getelementptr &(i32* %299)[i64 -5];
    i32 %344 = load i32* %343;
    i32 %345 = add i32 %320, i32 %344;
    i32* %346 = getelementptr &(i32* %299)[i64 -11];
    i32 %347 = load i32* %346;
    i32 %348 = sub i32 %347, i32 %345;
    i32 %349 = mul i32 %348, i32 2;
    i32 %350 = srem i32 %348, i32 2;
    i32 %351 = add i32 %349, i32 %350;
    i32* %352 = getelementptr &(i32* %299)[i64 3];
    store i32* %352 with i32 %351;
    i32 %353 = add i32 %298, i32 4;
    i1 %354 = icmp slt i32 %353, i32 80;
    cbr i1 %354(prob = 0.94), ^while.body3, ^while.header2;
  ^while.header2:
    i32 %355 = phi [^while.body3, i32 %203] [^b4, i32 %356];
    i32 %356 = phi [^while.body3, i32 %204] [^b4, i32 %357];
    i32 %357 = phi [^while.body3, i32 %205] [^b4, i32 %382];
    i32 %358 = phi [^while.body3, i32 %206] [^b4, i32 %359];
    i32 %359 = phi [^while.body3, i32 %207] [^b4, i32 %379];
    i32 %360 = phi [^while.body3, i32 0] [^b4, i32 %383];
    i1 %361 = icmp slt i32 %360, i32 80;
    cbr i1 %361(prob = 0.97), ^while.body4, ^b3;
  ^b3:
    i32 %362 = add i32 %207, i32 %359;
    i32 %363 = add i32 %206, i32 %358;
    i32 %364 = add i32 %205, i32 %357;
    i32 %365 = add i32 %204, i32 %356;
    i32 %366 = add i32 %203, i32 %355;
    i32 %367 = add i32 %208, i32 64;
    ubr ^while.header1;
  ^while.body4:
    i1 %368 = icmp slt i32 %360, i32 20;
    cbr i1 %368(prob = 0.5), ^b4, ^if.else;
  ^b4:
    i32 %369 = phi [^while.body4, i32 1518500249] [^entry1, i32 1859775361] [^if.else1, i32 %391];
    i32 %370 = phi [^while.body4, i32 0] [^entry1, i32 %386] [^if.else1, i32 %390];
    i32 %371 = mul i32 %359, i32 32;
    i32 %372 = add i32 %355, i32 %371;
    i32 %373 = add i32 %369, i32 %372;
    i32 %374 = add i32 %370, i32 %373;
    i32 %375 = srem i32 %359, i32 32;
    i32 %376 = add i32 %374, i32 %375;
    i32* %377 = getelementptr &([80 * i32]* %words)[i64 0][i32 %360];
    i32 %378 = load i32* %377;
    i32 %379 = add i32 %376, i32 %378;
    i32 %380 = mul i32 %358, i32 1073741824;
    i32 %381 = srem i32 %358, i32 1073741824;
    i32 %382 = add i32 %380, i32 %381;
    i32 %383 = add i32 %360, i32 1;
    ubr ^while.header2;
  ^if.else:
    i1 %384 = icmp slt i32 %360, i32 40;
    cbr i1 %384(prob = 0.5), ^entry1, ^if.else1;
  ^entry1:
    i32 %385 = add i32 %357, i32 %358;
    i32 %386 = sub i32 %385, i32 %356;
    ubr ^b4;
  ^if.else1:
    i32 %387 = add i32 %357, i32 %358;
    i32 %388 = sub i32 %387, i32 %356;
    i1 %389 = icmp slt i32 %360, i32 60;
    i32 %390 = select i1 %389 ? i32 0 : i32 %388;
    i32 %391 = select i1 %389 ? i32 -1894007588 : i32 -899497722;
    ubr ^b4;
}
