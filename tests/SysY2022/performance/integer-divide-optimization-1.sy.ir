internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp sgt i32 %0, i32 0;
    call (i32) -> void @starttime(i32 1016);
    cbr i1 %1(prob = 0.984615), ^indirect, ^b;
  ^indirect:
    i32 %2 = add i32 %0, i32 -8;
    i1 %3 = icmp sgt i32 %0, i32 8;
    cbr i1 %3(prob = 0.888889), ^prebody, ^prebody1;
  ^b:
    i32 %4 = phi [^entry, i32 0] [^prebody1, i32 %44];
    call (i32) -> void @stoptime(i32 1031);
    call (i32) -> void @putint(i32 %4);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
  ^prebody:
    i32 %5 = phi [^indirect, i32 7] [^prebody, i32 %40];
    i32 %6 = phi [^indirect, i32 6] [^prebody, i32 %39];
    i32 %7 = phi [^indirect, i32 5] [^prebody, i32 %38];
    i32 %8 = phi [^indirect, i32 4] [^prebody, i32 %37];
    i32 %9 = phi [^indirect, i32 3] [^prebody, i32 %36];
    i32 %10 = phi [^indirect, i32 2] [^prebody, i32 %35];
    i32 %11 = phi [^indirect, i32 1] [^prebody, i32 %34];
    i32 %12 = phi [^indirect, i32 0] [^prebody, i32 %33];
    i32 %13 = phi [^indirect, i32 0] [^prebody, i32 %30];
    i32 %14 = phi [^indirect, i32 0] [^prebody, i32 %31];
    i32 %15 = add i32 %12, i32 %13;
    i32 %16 = srem i32 %15, i32 2147385347;
    i32 %17 = add i32 %11, i32 %16;
    i32 %18 = srem i32 %17, i32 2147385347;
    i32 %19 = add i32 %10, i32 %18;
    i32 %20 = srem i32 %19, i32 2147385347;
    i32 %21 = add i32 %9, i32 %20;
    i32 %22 = srem i32 %21, i32 2147385347;
    i32 %23 = add i32 %8, i32 %22;
    i32 %24 = srem i32 %23, i32 2147385347;
    i32 %25 = add i32 %7, i32 %24;
    i32 %26 = srem i32 %25, i32 2147385347;
    i32 %27 = add i32 %6, i32 %26;
    i32 %28 = srem i32 %27, i32 2147385347;
    i32 %29 = add i32 %5, i32 %28;
    i32 %30 = srem i32 %29, i32 2147385347;
    i32 %31 = add i32 %14, i32 8;
    i1 %32 = icmp sgt i32 %2, i32 %31;
    i32 %33 = add i32 %12, i32 8;
    i32 %34 = add i32 %11, i32 8;
    i32 %35 = add i32 %10, i32 8;
    i32 %36 = add i32 %9, i32 8;
    i32 %37 = add i32 %8, i32 8;
    i32 %38 = add i32 %7, i32 8;
    i32 %39 = add i32 %6, i32 8;
    i32 %40 = add i32 %5, i32 8;
    cbr i1 %32(prob = 0.888889), ^prebody, ^prebody1;
  ^prebody1 {scalar}:
    i32 %41 = phi [^indirect, i32 0] [^prebody, i32 %31] [^prebody1, i32 %45];
    i32 %42 = phi [^indirect, i32 0] [^prebody, i32 %30] [^prebody1, i32 %44];
    i32 %43 = add i32 %41, i32 %42;
    i32 %44 = srem i32 %43, i32 2147385347;
    i32 %45 = add i32 %41, i32 1;
    i1 %46 = icmp sgt i32 %0, i32 %45;
    cbr i1 %46(prob = 0.875), ^prebody1, ^b;
}
