internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @putch(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime(i32) -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    call (i32) -> void @starttime(i32 324);
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp sgt i32 %0, i32 0;
    cbr i1 %1(prob = 0.984615), ^prebody, ^b;
  ^prebody:
    i32 %2 = srem i32 %0, i32 65535;
    i32 %3 = shl i32 %2, i32 1;
    i1 %4 = icmp sgt i32 %3, i32 65534;
    i32 %5 = add i32 %3, i32 -65535;
    i32 %6 = select i1 %4 ? i32 %5 : i32 %3;
    i32 %7 = shl i32 %6, i32 1;
    i1 %8 = icmp sgt i32 %7, i32 65534;
    i32 %9 = add i32 %7, i32 -65535;
    i32 %10 = select i1 %8 ? i32 %9 : i32 %7;
    i32 %11 = shl i32 %10, i32 1;
    i1 %12 = icmp sgt i32 %11, i32 65534;
    i32 %13 = add i32 %11, i32 -65535;
    i32 %14 = select i1 %12 ? i32 %13 : i32 %11;
    i32 %15 = shl i32 %14, i32 1;
    i1 %16 = icmp sgt i32 %15, i32 65534;
    i32 %17 = add i32 %15, i32 -65535;
    i32 %18 = select i1 %16 ? i32 %17 : i32 %15;
    i32 %19 = shl i32 %18, i32 1;
    i1 %20 = icmp sgt i32 %19, i32 65534;
    i32 %21 = add i32 %19, i32 -65535;
    i32 %22 = select i1 %20 ? i32 %21 : i32 %19;
    i32 %23 = shl i32 %22, i32 1;
    i1 %24 = icmp sgt i32 %23, i32 65534;
    i32 %25 = add i32 %23, i32 -65535;
    i32 %26 = select i1 %24 ? i32 %25 : i32 %23;
    i32 %27 = shl i32 %26, i32 1;
    i1 %28 = icmp sgt i32 %27, i32 65534;
    i32 %29 = add i32 %27, i32 -65535;
    i32 %30 = select i1 %28 ? i32 %29 : i32 %27;
    i32 %31 = shl i32 %30, i32 1;
    i1 %32 = icmp sgt i32 %31, i32 65534;
    i32 %33 = add i32 %31, i32 -65535;
    i32 %34 = select i1 %32 ? i32 %33 : i32 %31;
    i32 %35 = shl i32 %34, i32 1;
    i1 %36 = icmp sgt i32 %35, i32 65534;
    i32 %37 = add i32 %35, i32 -65535;
    i32 %38 = select i1 %36 ? i32 %37 : i32 %35;
    i32 %39 = shl i32 %38, i32 1;
    i1 %40 = icmp sgt i32 %39, i32 65534;
    i32 %41 = add i32 %39, i32 -65535;
    i32 %42 = select i1 %40 ? i32 %41 : i32 %39;
    i32 %43 = shl i32 %42, i32 1;
    i1 %44 = icmp sgt i32 %43, i32 65534;
    i32 %45 = add i32 %43, i32 -65535;
    i32 %46 = select i1 %44 ? i32 %45 : i32 %43;
    i32 %47 = shl i32 %46, i32 1;
    i1 %48 = icmp sgt i32 %47, i32 65534;
    i32 %49 = add i32 %47, i32 -65535;
    i32 %50 = select i1 %48 ? i32 %49 : i32 %47;
    i32 %51 = add i32 %3, i32 %7;
    i32 %52 = add i32 %18, i32 %51;
    i32 %53 = add i32 %23, i32 %52;
    i32 %54 = add i32 %34, i32 %53;
    i32 %55 = add i32 %35, i32 %54;
    i32 %56 = srem i32 %55, i32 65535;
    i32 %57 = add i32 %50, i32 %56;
    i1 %58 = icmp sgt i32 %57, i32 65534;
    i32 %59 = add i32 %56, i32 -65535;
    i32 %60 = add i32 %50, i32 %59;
    i32 %61 = select i1 %58 ? i32 %60 : i32 %57;
    ubr ^b;
  ^b:
    i32 %62 = phi [^entry, i32 0] [^prebody, i32 %61];
    call (i32) -> void @putint(i32 %62);
    call (i32) -> void @putch(i32 10);
    call (i32) -> void @stoptime(i32 328);
    ret i32 0;
}
