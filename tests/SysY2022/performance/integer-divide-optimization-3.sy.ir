internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = scmp gt i32 %0, i32 0;
    call (i32) -> void @starttime(i32 1016);
    cbr i1 %1(prob = 0.97), ^while.body, ^b;
^while.body:
    i32 %2 = phi [^entry, i32 0] [^while.body, i32 %12];
    i32 %3 = phi [^entry, i32 0] [^while.body, i32 %4];
    i32 %4 = add i32 %3, i32 1;
    i32 %5 = mul i32 %3, i32 2;
    i32 %6 = sdiv i32 %5, i32 2;
    i32 %7 = mul i32 %6, i32 1000;
    i32 %8 = sdiv i32 %7, i32 1000;
    i32 %9 = mul i32 %8, i32 300;
    i32 %10 = sdiv i32 %9, i32 300;
    i32 %11 = add i32 %10, i32 %2;
    i32 %12 = srem i32 %11, i32 2147385347;
    i1 %13 = scmp lt i32 %4, i32 %0;
    cbr i1 %13(prob = 0.97), ^while.body, ^b;
^b:
    i32 %14 = phi [^entry, i32 0] [^while.body, i32 %12];
    call (i32) -> void @stoptime(i32 1031);
    call (i32) -> void @putint(i32 %14);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
}
