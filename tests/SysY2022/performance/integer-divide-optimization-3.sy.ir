internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp sgt i32 %0, i32 0;
    call (i32) -> void @starttime(i32 1016);
    cbr i1 %1(prob = 0.97), ^indirect, ^b;
  ^indirect:
    i1 %2 = icmp sgt i32 %0, i32 4;
    cbr i1 %2(prob = 0.89), ^super.header, ^prebody;
  ^b:
    i32 %3 = phi [^entry, i32 0] [^prebody, i32 %10];
    call (i32) -> void @stoptime(i32 1031);
    call (i32) -> void @putint(i32 %3);
    call (i32) -> void @putch(i32 10);
    ret i32 0;
  ^super.header:
    i32 %4 = add i32 %0, i32 -4;
    i1 %5 = icmp sgt i32 %4, i32 16;
    i32 %6 = add i32 %0, i32 -20;
    cbr i1 %5(prob = 0.89), ^prebody1, ^prebody2;
  ^prebody {scalar}:
    i32 %7 = phi [^indirect, i32 0] [^prebody, i32 %11] [^prebody2, i32 %83];
    i32 %8 = phi [^indirect, i32 0] [^prebody, i32 %10] [^prebody2, i32 %82];
    i32 %9 = add i32 %7, i32 %8;
    i32 %10 = srem i32 %9, i32 2147385347;
    i32 %11 = add i32 %7, i32 1;
    i1 %12 = icmp sgt i32 %0, i32 %11;
    cbr i1 %12(prob = 0.75), ^prebody, ^b;
  ^prebody1:
    i32 %13 = phi [^super.header, i32 0] [^prebody1, i32 %63];
    i32 %14 = phi [^super.header, i32 0] [^prebody1, i32 %62];
    i32 %15 = phi [^super.header, i32 0] [^prebody1, i32 %65];
    i32 %16 = phi [^super.header, i32 1] [^prebody1, i32 %66];
    i32 %17 = phi [^super.header, i32 2] [^prebody1, i32 %67];
    i32 %18 = phi [^super.header, i32 3] [^prebody1, i32 %68];
    i32 %19 = add i32 %14, i32 %15;
    i32 %20 = srem i32 %19, i32 2147385347;
    i32 %21 = add i32 %16, i32 %20;
    i32 %22 = srem i32 %21, i32 2147385347;
    i32 %23 = add i32 %17, i32 %22;
    i32 %24 = srem i32 %23, i32 2147385347;
    i32 %25 = add i32 %18, i32 %24;
    i32 %26 = srem i32 %25, i32 2147385347;
    i32 %27 = add i32 %15, i32 4;
    i32 %28 = add i32 %26, i32 %27;
    i32 %29 = srem i32 %28, i32 2147385347;
    i32 %30 = add i32 %16, i32 4;
    i32 %31 = add i32 %29, i32 %30;
    i32 %32 = srem i32 %31, i32 2147385347;
    i32 %33 = add i32 %17, i32 4;
    i32 %34 = add i32 %32, i32 %33;
    i32 %35 = srem i32 %34, i32 2147385347;
    i32 %36 = add i32 %18, i32 4;
    i32 %37 = add i32 %35, i32 %36;
    i32 %38 = srem i32 %37, i32 2147385347;
    i32 %39 = add i32 %15, i32 8;
    i32 %40 = add i32 %38, i32 %39;
    i32 %41 = srem i32 %40, i32 2147385347;
    i32 %42 = add i32 %16, i32 8;
    i32 %43 = add i32 %41, i32 %42;
    i32 %44 = srem i32 %43, i32 2147385347;
    i32 %45 = add i32 %17, i32 8;
    i32 %46 = add i32 %44, i32 %45;
    i32 %47 = srem i32 %46, i32 2147385347;
    i32 %48 = add i32 %18, i32 8;
    i32 %49 = add i32 %47, i32 %48;
    i32 %50 = srem i32 %49, i32 2147385347;
    i32 %51 = add i32 %15, i32 12;
    i32 %52 = add i32 %50, i32 %51;
    i32 %53 = srem i32 %52, i32 2147385347;
    i32 %54 = add i32 %16, i32 12;
    i32 %55 = add i32 %53, i32 %54;
    i32 %56 = srem i32 %55, i32 2147385347;
    i32 %57 = add i32 %17, i32 12;
    i32 %58 = add i32 %56, i32 %57;
    i32 %59 = srem i32 %58, i32 2147385347;
    i32 %60 = add i32 %18, i32 12;
    i32 %61 = add i32 %59, i32 %60;
    i32 %62 = srem i32 %61, i32 2147385347;
    i32 %63 = add i32 %13, i32 16;
    i1 %64 = icmp sgt i32 %6, i32 %63;
    i32 %65 = add i32 %15, i32 16;
    i32 %66 = add i32 %16, i32 16;
    i32 %67 = add i32 %17, i32 16;
    i32 %68 = add i32 %18, i32 16;
    cbr i1 %64(prob = 0.89), ^prebody1, ^prebody2;
  ^prebody2 {scalar}:
    i32 %69 = phi [^super.header, i32 3] [^prebody1, i32 %68] [^prebody2, i32 %88];
    i32 %70 = phi [^super.header, i32 2] [^prebody1, i32 %67] [^prebody2, i32 %87];
    i32 %71 = phi [^super.header, i32 1] [^prebody1, i32 %66] [^prebody2, i32 %86];
    i32 %72 = phi [^super.header, i32 0] [^prebody1, i32 %65] [^prebody2, i32 %85];
    i32 %73 = phi [^super.header, i32 0] [^prebody1, i32 %62] [^prebody2, i32 %82];
    i32 %74 = phi [^super.header, i32 0] [^prebody1, i32 %63] [^prebody2, i32 %83];
    i32 %75 = add i32 %72, i32 %73;
    i32 %76 = srem i32 %75, i32 2147385347;
    i32 %77 = add i32 %71, i32 %76;
    i32 %78 = srem i32 %77, i32 2147385347;
    i32 %79 = add i32 %70, i32 %78;
    i32 %80 = srem i32 %79, i32 2147385347;
    i32 %81 = add i32 %69, i32 %80;
    i32 %82 = srem i32 %81, i32 2147385347;
    i32 %83 = add i32 %74, i32 4;
    i1 %84 = icmp sgt i32 %4, i32 %83;
    i32 %85 = add i32 %72, i32 4;
    i32 %86 = add i32 %71, i32 4;
    i32 %87 = add i32 %70, i32 4;
    i32 %88 = add i32 %69, i32 4;
    cbr i1 %84(prob = 0.75), ^prebody2, ^prebody;
}
