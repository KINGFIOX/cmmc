internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [1000 * [1000 * i32]]* %0 = ptrcast [1000 * [1000 * i32]]* @a to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %1 = ptrcast [1000 * [1000 * i32]]* @b to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %2 = ptrcast [1000 * [1000 * i32]]* @c to [1000 * [1000 * i32]]*;
    ubr ^while.header;
  ^while.header:
    i32 %3 = phi [^entry, i32 0] [^b1, i32 %9];
    i1 %4 = scmp lt i32 %3, i32 1000;
    cbr i1 %4(prob = 0.97), ^while.body, ^b;
  ^b:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.header1;
  ^while.body:
    [1000 * i32]* %5 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %3];
    i32* %6 = getelementptr &([1000 * i32]* %5)[i64 0][i64 0];
    i32 %7 = call (i32*) -> i32 @getarray(i32* %6);
    i1 %8 = scmp neq i32 %7, i32 1000;
    cbr i1 %8(prob = 0.5), ^b2, ^b1;
  ^b1:
    i32 %9 = add i32 %3, i32 1;
    ubr ^while.header;
  ^while.header1:
    i32 %10 = phi [^b, i32 0] [^while.body3, i32 %121];
    i1 %11 = scmp lt i32 %10, i32 1000;
    cbr i1 %11(prob = 0.97), ^while.body1, ^while.header2;
  ^b2:
    i32 %12 = phi [^while.body, i32 %7] [^b5, i32 0];
    ret i32 %12;
  ^while.body1:
    [1000 * i32]* %13 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %10];
    ubr ^while.body2;
  ^while.header2:
    i32 %14 = phi [^while.header1, i32 0] [^b3, i32 %122];
    i1 %15 = scmp lt i32 %14, i32 1000;
    [1000 * i32]* %16 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %14];
    [1000 * i32]* %17 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %14];
    cbr i1 %15(prob = 0.97), ^while.header3, ^while.header4;
  ^while.body2:
    i32 %18 = phi [^while.body1, i32 0] [^while.body2, i32 %83];
    [1000 * i32]* %19 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %18];
    i32* %20 = getelementptr &([1000 * i32]* %19)[i64 0][i32 %10];
    i32 %21 = load i32* %20;
    i32* %22 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %18];
    store i32* %22 with i32 %21;
    [1000 * i32]* %23 = getelementptr &([1000 * i32]* %19)[i64 1];
    i32* %24 = getelementptr &([1000 * i32]* %23)[i64 0][i32 %10];
    i32 %25 = load i32* %24;
    i32* %26 = getelementptr &(i32* %22)[i64 1];
    store i32* %26 with i32 %25;
    [1000 * i32]* %27 = getelementptr &([1000 * i32]* %19)[i64 2];
    i32* %28 = getelementptr &([1000 * i32]* %27)[i64 0][i32 %10];
    i32 %29 = load i32* %28;
    i32* %30 = getelementptr &(i32* %22)[i64 2];
    store i32* %30 with i32 %29;
    [1000 * i32]* %31 = getelementptr &([1000 * i32]* %19)[i64 3];
    i32* %32 = getelementptr &([1000 * i32]* %31)[i64 0][i32 %10];
    i32 %33 = load i32* %32;
    i32* %34 = getelementptr &(i32* %22)[i64 3];
    store i32* %34 with i32 %33;
    [1000 * i32]* %35 = getelementptr &([1000 * i32]* %19)[i64 4];
    i32* %36 = getelementptr &([1000 * i32]* %35)[i64 0][i32 %10];
    i32 %37 = load i32* %36;
    i32* %38 = getelementptr &(i32* %22)[i64 4];
    store i32* %38 with i32 %37;
    [1000 * i32]* %39 = getelementptr &([1000 * i32]* %19)[i64 5];
    i32* %40 = getelementptr &([1000 * i32]* %39)[i64 0][i32 %10];
    i32 %41 = load i32* %40;
    i32* %42 = getelementptr &(i32* %22)[i64 5];
    store i32* %42 with i32 %41;
    [1000 * i32]* %43 = getelementptr &([1000 * i32]* %19)[i64 6];
    i32* %44 = getelementptr &([1000 * i32]* %43)[i64 0][i32 %10];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &(i32* %22)[i64 6];
    store i32* %46 with i32 %45;
    [1000 * i32]* %47 = getelementptr &([1000 * i32]* %19)[i64 7];
    i32* %48 = getelementptr &([1000 * i32]* %47)[i64 0][i32 %10];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &(i32* %22)[i64 7];
    store i32* %50 with i32 %49;
    [1000 * i32]* %51 = getelementptr &([1000 * i32]* %19)[i64 8];
    i32* %52 = getelementptr &([1000 * i32]* %51)[i64 0][i32 %10];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &(i32* %22)[i64 8];
    store i32* %54 with i32 %53;
    [1000 * i32]* %55 = getelementptr &([1000 * i32]* %19)[i64 9];
    i32* %56 = getelementptr &([1000 * i32]* %55)[i64 0][i32 %10];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &(i32* %22)[i64 9];
    store i32* %58 with i32 %57;
    [1000 * i32]* %59 = getelementptr &([1000 * i32]* %19)[i64 10];
    i32* %60 = getelementptr &([1000 * i32]* %59)[i64 0][i32 %10];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &(i32* %22)[i64 10];
    store i32* %62 with i32 %61;
    [1000 * i32]* %63 = getelementptr &([1000 * i32]* %19)[i64 11];
    i32* %64 = getelementptr &([1000 * i32]* %63)[i64 0][i32 %10];
    i32 %65 = load i32* %64;
    i32* %66 = getelementptr &(i32* %22)[i64 11];
    store i32* %66 with i32 %65;
    [1000 * i32]* %67 = getelementptr &([1000 * i32]* %19)[i64 12];
    i32* %68 = getelementptr &([1000 * i32]* %67)[i64 0][i32 %10];
    i32 %69 = load i32* %68;
    i32* %70 = getelementptr &(i32* %22)[i64 12];
    store i32* %70 with i32 %69;
    [1000 * i32]* %71 = getelementptr &([1000 * i32]* %19)[i64 13];
    i32* %72 = getelementptr &([1000 * i32]* %71)[i64 0][i32 %10];
    i32 %73 = load i32* %72;
    i32* %74 = getelementptr &(i32* %22)[i64 13];
    store i32* %74 with i32 %73;
    [1000 * i32]* %75 = getelementptr &([1000 * i32]* %19)[i64 14];
    i32* %76 = getelementptr &([1000 * i32]* %75)[i64 0][i32 %10];
    i32 %77 = load i32* %76;
    i32* %78 = getelementptr &(i32* %22)[i64 14];
    store i32* %78 with i32 %77;
    [1000 * i32]* %79 = getelementptr &([1000 * i32]* %19)[i64 15];
    i32* %80 = getelementptr &([1000 * i32]* %79)[i64 0][i32 %10];
    i32 %81 = load i32* %80;
    i32* %82 = getelementptr &(i32* %22)[i64 15];
    store i32* %82 with i32 %81;
    i32 %83 = add i32 %18, i32 16;
    i1 %84 = scmp lt i32 %83, i32 992;
    cbr i1 %84(prob = 0.98), ^while.body2, ^while.body3;
  ^while.header3:
    i32 %85 = phi [^while.header2, i32 0] [^b4, i32 %159];
    i1 %86 = scmp lt i32 %85, i32 1000;
    cbr i1 %86(prob = 0.97), ^while.body4, ^b3;
  ^while.header4:
    i32 %87 = phi [^while.header2, i32 0] [^while.body12, i32 %444];
    i1 %88 = scmp lt i32 %87, i32 1000;
    cbr i1 %88(prob = 0.97), ^while.header5, ^while.header6;
  ^while.body3:
    [1000 * i32]* %89 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %83];
    i32* %90 = getelementptr &([1000 * i32]* %89)[i64 0][i32 %10];
    i32 %91 = load i32* %90;
    i32* %92 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %83];
    store i32* %92 with i32 %91;
    [1000 * i32]* %93 = getelementptr &([1000 * i32]* %89)[i64 1];
    i32* %94 = getelementptr &([1000 * i32]* %93)[i64 0][i32 %10];
    i32 %95 = load i32* %94;
    i32* %96 = getelementptr &(i32* %92)[i64 1];
    store i32* %96 with i32 %95;
    [1000 * i32]* %97 = getelementptr &([1000 * i32]* %89)[i64 2];
    i32* %98 = getelementptr &([1000 * i32]* %97)[i64 0][i32 %10];
    i32 %99 = load i32* %98;
    i32* %100 = getelementptr &(i32* %92)[i64 2];
    store i32* %100 with i32 %99;
    [1000 * i32]* %101 = getelementptr &([1000 * i32]* %89)[i64 3];
    i32* %102 = getelementptr &([1000 * i32]* %101)[i64 0][i32 %10];
    i32 %103 = load i32* %102;
    i32* %104 = getelementptr &(i32* %92)[i64 3];
    store i32* %104 with i32 %103;
    [1000 * i32]* %105 = getelementptr &([1000 * i32]* %89)[i64 4];
    i32* %106 = getelementptr &([1000 * i32]* %105)[i64 0][i32 %10];
    i32 %107 = load i32* %106;
    i32* %108 = getelementptr &(i32* %92)[i64 4];
    store i32* %108 with i32 %107;
    [1000 * i32]* %109 = getelementptr &([1000 * i32]* %89)[i64 5];
    i32* %110 = getelementptr &([1000 * i32]* %109)[i64 0][i32 %10];
    i32 %111 = load i32* %110;
    i32* %112 = getelementptr &(i32* %92)[i64 5];
    store i32* %112 with i32 %111;
    [1000 * i32]* %113 = getelementptr &([1000 * i32]* %89)[i64 6];
    i32* %114 = getelementptr &([1000 * i32]* %113)[i64 0][i32 %10];
    i32 %115 = load i32* %114;
    i32* %116 = getelementptr &(i32* %92)[i64 6];
    store i32* %116 with i32 %115;
    [1000 * i32]* %117 = getelementptr &([1000 * i32]* %89)[i64 7];
    i32* %118 = getelementptr &([1000 * i32]* %117)[i64 0][i32 %10];
    i32 %119 = load i32* %118;
    i32* %120 = getelementptr &(i32* %92)[i64 7];
    store i32* %120 with i32 %119;
    i32 %121 = add i32 %10, i32 1;
    ubr ^while.header1;
  ^b3:
    i32 %122 = add i32 %14, i32 1;
    ubr ^while.header2;
  ^while.header5:
    [1000 * i32]* %123 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %87];
    ubr ^while.body6;
  ^while.body4:
    i32 %124 = phi [^while.header3, i32 0] [^while.body4, i32 %153];
    i32 %125 = phi [^while.header3, i32 0] [^while.body4, i32 %154];
    i32* %126 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %125];
    i32 %127 = load i32* %126;
    [1000 * i32]* %128 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %125];
    i32* %129 = getelementptr &([1000 * i32]* %128)[i64 0][i32 %85];
    i32 %130 = load i32* %129;
    i32* %131 = getelementptr &(i32* %126)[i64 1];
    i32 %132 = load i32* %131;
    [1000 * i32]* %133 = getelementptr &([1000 * i32]* %128)[i64 1];
    i32* %134 = getelementptr &([1000 * i32]* %133)[i64 0][i32 %85];
    i32 %135 = load i32* %134;
    i32 %136 = mul i32 %132, i32 %135;
    i32 %137 = mul i32 %127, i32 %130;
    i32 %138 = add i32 %137, i32 %136;
    i32* %139 = getelementptr &(i32* %126)[i64 2];
    i32 %140 = load i32* %139;
    [1000 * i32]* %141 = getelementptr &([1000 * i32]* %128)[i64 2];
    i32* %142 = getelementptr &([1000 * i32]* %141)[i64 0][i32 %85];
    i32 %143 = load i32* %142;
    i32 %144 = mul i32 %140, i32 %143;
    i32 %145 = add i32 %138, i32 %144;
    i32* %146 = getelementptr &(i32* %126)[i64 3];
    i32 %147 = load i32* %146;
    [1000 * i32]* %148 = getelementptr &([1000 * i32]* %128)[i64 3];
    i32* %149 = getelementptr &([1000 * i32]* %148)[i64 0][i32 %85];
    i32 %150 = load i32* %149;
    i32 %151 = mul i32 %147, i32 %150;
    i32 %152 = add i32 %145, i32 %151;
    i32 %153 = add i32 %152, i32 %124;
    i32 %154 = add i32 %125, i32 4;
    i1 %155 = scmp lt i32 %154, i32 1000;
    cbr i1 %155(prob = 1), ^while.body4, ^b4;
  ^while.header6:
    i32 %156 = phi [^while.header4, i32 0] [^while.body9, i32 %364];
    i1 %157 = scmp lt i32 %156, i32 1000;
    cbr i1 %157(prob = 0.97), ^while.body5, ^while.header7;
  ^b4:
    i32* %158 = getelementptr &([1000 * i32]* %17)[i64 0][i32 %85];
    store i32* %158 with i32 %153;
    i32 %159 = add i32 %85, i32 1;
    ubr ^while.header3;
  ^while.body5:
    [1000 * i32]* %160 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %156];
    ubr ^while.body8;
  ^while.body6:
    i32 %161 = phi [^while.header5, i32 0] [^while.body6, i32 %211];
    i32 %162 = phi [^while.header5, i32 2147483647] [^while.body6, i32 %210];
    i32* %163 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %161];
    i32 %164 = load i32* %163;
    i32 %165 = smin i32 %164, i32 %162;
    i32* %166 = getelementptr &(i32* %163)[i64 1];
    i32 %167 = load i32* %166;
    i32 %168 = smin i32 %167, i32 %165;
    i32* %169 = getelementptr &(i32* %163)[i64 2];
    i32 %170 = load i32* %169;
    i32 %171 = smin i32 %170, i32 %168;
    i32* %172 = getelementptr &(i32* %163)[i64 3];
    i32 %173 = load i32* %172;
    i32 %174 = smin i32 %173, i32 %171;
    i32* %175 = getelementptr &(i32* %163)[i64 4];
    i32 %176 = load i32* %175;
    i32 %177 = smin i32 %176, i32 %174;
    i32* %178 = getelementptr &(i32* %163)[i64 5];
    i32 %179 = load i32* %178;
    i32 %180 = smin i32 %179, i32 %177;
    i32* %181 = getelementptr &(i32* %163)[i64 6];
    i32 %182 = load i32* %181;
    i32 %183 = smin i32 %182, i32 %180;
    i32* %184 = getelementptr &(i32* %163)[i64 7];
    i32 %185 = load i32* %184;
    i32 %186 = smin i32 %185, i32 %183;
    i32* %187 = getelementptr &(i32* %163)[i64 8];
    i32 %188 = load i32* %187;
    i32 %189 = smin i32 %188, i32 %186;
    i32* %190 = getelementptr &(i32* %163)[i64 9];
    i32 %191 = load i32* %190;
    i32 %192 = smin i32 %191, i32 %189;
    i32* %193 = getelementptr &(i32* %163)[i64 10];
    i32 %194 = load i32* %193;
    i32 %195 = smin i32 %194, i32 %192;
    i32* %196 = getelementptr &(i32* %163)[i64 11];
    i32 %197 = load i32* %196;
    i32 %198 = smin i32 %197, i32 %195;
    i32* %199 = getelementptr &(i32* %163)[i64 12];
    i32 %200 = load i32* %199;
    i32 %201 = smin i32 %200, i32 %198;
    i32* %202 = getelementptr &(i32* %163)[i64 13];
    i32 %203 = load i32* %202;
    i32 %204 = smin i32 %203, i32 %201;
    i32* %205 = getelementptr &(i32* %163)[i64 14];
    i32 %206 = load i32* %205;
    i32 %207 = smin i32 %206, i32 %204;
    i32* %208 = getelementptr &(i32* %163)[i64 15];
    i32 %209 = load i32* %208;
    i32 %210 = smin i32 %209, i32 %207;
    i32 %211 = add i32 %161, i32 16;
    i1 %212 = scmp lt i32 %211, i32 992;
    cbr i1 %212(prob = 0.98), ^while.body6, ^while.body7;
  ^while.header7:
    i32 %213 = phi [^while.header6, i32 0] [^while.body13, i32 %469];
    i32 %214 = phi [^while.header6, i32 0] [^while.body13, i32 %468];
    i1 %215 = scmp lt i32 %213, i32 1000;
    cbr i1 %215(prob = 0.97), ^indirect, ^b5;
  ^while.body7:
    i32* %216 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %211];
    i32 %217 = load i32* %216;
    i32 %218 = smin i32 %217, i32 %210;
    i32* %219 = getelementptr &(i32* %216)[i64 1];
    i32 %220 = load i32* %219;
    i32 %221 = smin i32 %220, i32 %218;
    i32* %222 = getelementptr &(i32* %216)[i64 2];
    i32 %223 = load i32* %222;
    i32 %224 = smin i32 %223, i32 %221;
    i32* %225 = getelementptr &(i32* %216)[i64 3];
    i32 %226 = load i32* %225;
    i32 %227 = smin i32 %226, i32 %224;
    i32* %228 = getelementptr &(i32* %216)[i64 4];
    i32 %229 = load i32* %228;
    i32 %230 = smin i32 %229, i32 %227;
    i32* %231 = getelementptr &(i32* %216)[i64 5];
    i32 %232 = load i32* %231;
    i32 %233 = smin i32 %232, i32 %230;
    i32* %234 = getelementptr &(i32* %216)[i64 6];
    i32 %235 = load i32* %234;
    i32 %236 = smin i32 %235, i32 %233;
    i32* %237 = getelementptr &(i32* %216)[i64 7];
    i32 %238 = load i32* %237;
    i32 %239 = smin i32 %238, i32 %236;
    ubr ^while.body10;
  ^indirect:
    [1000 * i32]* %240 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %213];
    ubr ^while.body11;
  ^while.body8:
    i32 %241 = phi [^while.body5, i32 0] [^while.body8, i32 %322];
    [1000 * i32]* %242 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %241];
    i32* %243 = getelementptr &([1000 * i32]* %242)[i64 0][i32 %156];
    i32 %244 = load i32* %243;
    i32 %245 = neg i32 %244;
    i32* %246 = getelementptr &([1000 * i32]* %160)[i64 0][i32 %241];
    store i32* %246 with i32 %245;
    [1000 * i32]* %247 = getelementptr &([1000 * i32]* %242)[i64 1];
    i32* %248 = getelementptr &([1000 * i32]* %247)[i64 0][i32 %156];
    i32 %249 = load i32* %248;
    i32 %250 = neg i32 %249;
    i32* %251 = getelementptr &(i32* %246)[i64 1];
    store i32* %251 with i32 %250;
    [1000 * i32]* %252 = getelementptr &([1000 * i32]* %242)[i64 2];
    i32* %253 = getelementptr &([1000 * i32]* %252)[i64 0][i32 %156];
    i32 %254 = load i32* %253;
    i32 %255 = neg i32 %254;
    i32* %256 = getelementptr &(i32* %246)[i64 2];
    store i32* %256 with i32 %255;
    [1000 * i32]* %257 = getelementptr &([1000 * i32]* %242)[i64 3];
    i32* %258 = getelementptr &([1000 * i32]* %257)[i64 0][i32 %156];
    i32 %259 = load i32* %258;
    i32 %260 = neg i32 %259;
    i32* %261 = getelementptr &(i32* %246)[i64 3];
    store i32* %261 with i32 %260;
    [1000 * i32]* %262 = getelementptr &([1000 * i32]* %242)[i64 4];
    i32* %263 = getelementptr &([1000 * i32]* %262)[i64 0][i32 %156];
    i32 %264 = load i32* %263;
    i32 %265 = neg i32 %264;
    i32* %266 = getelementptr &(i32* %246)[i64 4];
    store i32* %266 with i32 %265;
    [1000 * i32]* %267 = getelementptr &([1000 * i32]* %242)[i64 5];
    i32* %268 = getelementptr &([1000 * i32]* %267)[i64 0][i32 %156];
    i32 %269 = load i32* %268;
    i32 %270 = neg i32 %269;
    i32* %271 = getelementptr &(i32* %246)[i64 5];
    store i32* %271 with i32 %270;
    [1000 * i32]* %272 = getelementptr &([1000 * i32]* %242)[i64 6];
    i32* %273 = getelementptr &([1000 * i32]* %272)[i64 0][i32 %156];
    i32 %274 = load i32* %273;
    i32 %275 = neg i32 %274;
    i32* %276 = getelementptr &(i32* %246)[i64 6];
    store i32* %276 with i32 %275;
    [1000 * i32]* %277 = getelementptr &([1000 * i32]* %242)[i64 7];
    i32* %278 = getelementptr &([1000 * i32]* %277)[i64 0][i32 %156];
    i32 %279 = load i32* %278;
    i32 %280 = neg i32 %279;
    i32* %281 = getelementptr &(i32* %246)[i64 7];
    store i32* %281 with i32 %280;
    [1000 * i32]* %282 = getelementptr &([1000 * i32]* %242)[i64 8];
    i32* %283 = getelementptr &([1000 * i32]* %282)[i64 0][i32 %156];
    i32 %284 = load i32* %283;
    i32 %285 = neg i32 %284;
    i32* %286 = getelementptr &(i32* %246)[i64 8];
    store i32* %286 with i32 %285;
    [1000 * i32]* %287 = getelementptr &([1000 * i32]* %242)[i64 9];
    i32* %288 = getelementptr &([1000 * i32]* %287)[i64 0][i32 %156];
    i32 %289 = load i32* %288;
    i32 %290 = neg i32 %289;
    i32* %291 = getelementptr &(i32* %246)[i64 9];
    store i32* %291 with i32 %290;
    [1000 * i32]* %292 = getelementptr &([1000 * i32]* %242)[i64 10];
    i32* %293 = getelementptr &([1000 * i32]* %292)[i64 0][i32 %156];
    i32 %294 = load i32* %293;
    i32 %295 = neg i32 %294;
    i32* %296 = getelementptr &(i32* %246)[i64 10];
    store i32* %296 with i32 %295;
    [1000 * i32]* %297 = getelementptr &([1000 * i32]* %242)[i64 11];
    i32* %298 = getelementptr &([1000 * i32]* %297)[i64 0][i32 %156];
    i32 %299 = load i32* %298;
    i32 %300 = neg i32 %299;
    i32* %301 = getelementptr &(i32* %246)[i64 11];
    store i32* %301 with i32 %300;
    [1000 * i32]* %302 = getelementptr &([1000 * i32]* %242)[i64 12];
    i32* %303 = getelementptr &([1000 * i32]* %302)[i64 0][i32 %156];
    i32 %304 = load i32* %303;
    i32 %305 = neg i32 %304;
    i32* %306 = getelementptr &(i32* %246)[i64 12];
    store i32* %306 with i32 %305;
    [1000 * i32]* %307 = getelementptr &([1000 * i32]* %242)[i64 13];
    i32* %308 = getelementptr &([1000 * i32]* %307)[i64 0][i32 %156];
    i32 %309 = load i32* %308;
    i32 %310 = neg i32 %309;
    i32* %311 = getelementptr &(i32* %246)[i64 13];
    store i32* %311 with i32 %310;
    [1000 * i32]* %312 = getelementptr &([1000 * i32]* %242)[i64 14];
    i32* %313 = getelementptr &([1000 * i32]* %312)[i64 0][i32 %156];
    i32 %314 = load i32* %313;
    i32 %315 = neg i32 %314;
    i32* %316 = getelementptr &(i32* %246)[i64 14];
    store i32* %316 with i32 %315;
    [1000 * i32]* %317 = getelementptr &([1000 * i32]* %242)[i64 15];
    i32* %318 = getelementptr &([1000 * i32]* %317)[i64 0][i32 %156];
    i32 %319 = load i32* %318;
    i32 %320 = neg i32 %319;
    i32* %321 = getelementptr &(i32* %246)[i64 15];
    store i32* %321 with i32 %320;
    i32 %322 = add i32 %241, i32 16;
    i1 %323 = scmp lt i32 %322, i32 992;
    cbr i1 %323(prob = 0.98), ^while.body8, ^while.body9;
  ^b5:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %214);
    ubr ^b2;
  ^while.body9:
    [1000 * i32]* %324 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %322];
    i32* %325 = getelementptr &([1000 * i32]* %324)[i64 0][i32 %156];
    i32 %326 = load i32* %325;
    i32 %327 = neg i32 %326;
    i32* %328 = getelementptr &([1000 * i32]* %160)[i64 0][i32 %322];
    store i32* %328 with i32 %327;
    [1000 * i32]* %329 = getelementptr &([1000 * i32]* %324)[i64 1];
    i32* %330 = getelementptr &([1000 * i32]* %329)[i64 0][i32 %156];
    i32 %331 = load i32* %330;
    i32 %332 = neg i32 %331;
    i32* %333 = getelementptr &(i32* %328)[i64 1];
    store i32* %333 with i32 %332;
    [1000 * i32]* %334 = getelementptr &([1000 * i32]* %324)[i64 2];
    i32* %335 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %156];
    i32 %336 = load i32* %335;
    i32 %337 = neg i32 %336;
    i32* %338 = getelementptr &(i32* %328)[i64 2];
    store i32* %338 with i32 %337;
    [1000 * i32]* %339 = getelementptr &([1000 * i32]* %324)[i64 3];
    i32* %340 = getelementptr &([1000 * i32]* %339)[i64 0][i32 %156];
    i32 %341 = load i32* %340;
    i32 %342 = neg i32 %341;
    i32* %343 = getelementptr &(i32* %328)[i64 3];
    store i32* %343 with i32 %342;
    [1000 * i32]* %344 = getelementptr &([1000 * i32]* %324)[i64 4];
    i32* %345 = getelementptr &([1000 * i32]* %344)[i64 0][i32 %156];
    i32 %346 = load i32* %345;
    i32 %347 = neg i32 %346;
    i32* %348 = getelementptr &(i32* %328)[i64 4];
    store i32* %348 with i32 %347;
    [1000 * i32]* %349 = getelementptr &([1000 * i32]* %324)[i64 5];
    i32* %350 = getelementptr &([1000 * i32]* %349)[i64 0][i32 %156];
    i32 %351 = load i32* %350;
    i32 %352 = neg i32 %351;
    i32* %353 = getelementptr &(i32* %328)[i64 5];
    store i32* %353 with i32 %352;
    [1000 * i32]* %354 = getelementptr &([1000 * i32]* %324)[i64 6];
    i32* %355 = getelementptr &([1000 * i32]* %354)[i64 0][i32 %156];
    i32 %356 = load i32* %355;
    i32 %357 = neg i32 %356;
    i32* %358 = getelementptr &(i32* %328)[i64 6];
    store i32* %358 with i32 %357;
    [1000 * i32]* %359 = getelementptr &([1000 * i32]* %324)[i64 7];
    i32* %360 = getelementptr &([1000 * i32]* %359)[i64 0][i32 %156];
    i32 %361 = load i32* %360;
    i32 %362 = neg i32 %361;
    i32* %363 = getelementptr &(i32* %328)[i64 7];
    store i32* %363 with i32 %362;
    i32 %364 = add i32 %156, i32 1;
    ubr ^while.header6;
  ^while.body10:
    i32 %365 = phi [^while.body7, i32 0] [^while.body10, i32 %382];
    i32* %366 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %365];
    store i32* %366 with i32 %239;
    i32* %367 = getelementptr &(i32* %366)[i64 1];
    store i32* %367 with i32 %239;
    i32* %368 = getelementptr &(i32* %366)[i64 2];
    store i32* %368 with i32 %239;
    i32* %369 = getelementptr &(i32* %366)[i64 3];
    store i32* %369 with i32 %239;
    i32* %370 = getelementptr &(i32* %366)[i64 4];
    store i32* %370 with i32 %239;
    i32* %371 = getelementptr &(i32* %366)[i64 5];
    store i32* %371 with i32 %239;
    i32* %372 = getelementptr &(i32* %366)[i64 6];
    store i32* %372 with i32 %239;
    i32* %373 = getelementptr &(i32* %366)[i64 7];
    store i32* %373 with i32 %239;
    i32* %374 = getelementptr &(i32* %366)[i64 8];
    store i32* %374 with i32 %239;
    i32* %375 = getelementptr &(i32* %366)[i64 9];
    store i32* %375 with i32 %239;
    i32* %376 = getelementptr &(i32* %366)[i64 10];
    store i32* %376 with i32 %239;
    i32* %377 = getelementptr &(i32* %366)[i64 11];
    store i32* %377 with i32 %239;
    i32* %378 = getelementptr &(i32* %366)[i64 12];
    store i32* %378 with i32 %239;
    i32* %379 = getelementptr &(i32* %366)[i64 13];
    store i32* %379 with i32 %239;
    i32* %380 = getelementptr &(i32* %366)[i64 14];
    store i32* %380 with i32 %239;
    i32* %381 = getelementptr &(i32* %366)[i64 15];
    store i32* %381 with i32 %239;
    i32 %382 = add i32 %365, i32 16;
    i1 %383 = scmp lt i32 %382, i32 992;
    cbr i1 %383(prob = 0.98), ^while.body10, ^while.body12;
  ^while.body11:
    i32 %384 = phi [^indirect, i32 %214] [^while.body11, i32 %433];
    i32 %385 = phi [^indirect, i32 0] [^while.body11, i32 %434];
    i32* %386 = getelementptr &([1000 * i32]* %240)[i64 0][i32 %385];
    i32 %387 = load i32* %386;
    i32 %388 = add i32 %384, i32 %387;
    i32* %389 = getelementptr &(i32* %386)[i64 1];
    i32 %390 = load i32* %389;
    i32 %391 = add i32 %388, i32 %390;
    i32* %392 = getelementptr &(i32* %386)[i64 2];
    i32 %393 = load i32* %392;
    i32 %394 = add i32 %391, i32 %393;
    i32* %395 = getelementptr &(i32* %386)[i64 3];
    i32 %396 = load i32* %395;
    i32 %397 = add i32 %394, i32 %396;
    i32* %398 = getelementptr &(i32* %386)[i64 4];
    i32 %399 = load i32* %398;
    i32 %400 = add i32 %397, i32 %399;
    i32* %401 = getelementptr &(i32* %386)[i64 5];
    i32 %402 = load i32* %401;
    i32 %403 = add i32 %400, i32 %402;
    i32* %404 = getelementptr &(i32* %386)[i64 6];
    i32 %405 = load i32* %404;
    i32 %406 = add i32 %403, i32 %405;
    i32* %407 = getelementptr &(i32* %386)[i64 7];
    i32 %408 = load i32* %407;
    i32 %409 = add i32 %406, i32 %408;
    i32* %410 = getelementptr &(i32* %386)[i64 8];
    i32 %411 = load i32* %410;
    i32 %412 = add i32 %409, i32 %411;
    i32* %413 = getelementptr &(i32* %386)[i64 9];
    i32 %414 = load i32* %413;
    i32 %415 = add i32 %412, i32 %414;
    i32* %416 = getelementptr &(i32* %386)[i64 10];
    i32 %417 = load i32* %416;
    i32 %418 = add i32 %415, i32 %417;
    i32* %419 = getelementptr &(i32* %386)[i64 11];
    i32 %420 = load i32* %419;
    i32 %421 = add i32 %418, i32 %420;
    i32* %422 = getelementptr &(i32* %386)[i64 12];
    i32 %423 = load i32* %422;
    i32 %424 = add i32 %421, i32 %423;
    i32* %425 = getelementptr &(i32* %386)[i64 13];
    i32 %426 = load i32* %425;
    i32 %427 = add i32 %424, i32 %426;
    i32* %428 = getelementptr &(i32* %386)[i64 14];
    i32 %429 = load i32* %428;
    i32 %430 = add i32 %427, i32 %429;
    i32* %431 = getelementptr &(i32* %386)[i64 15];
    i32 %432 = load i32* %431;
    i32 %433 = add i32 %430, i32 %432;
    i32 %434 = add i32 %385, i32 16;
    i1 %435 = scmp lt i32 %434, i32 992;
    cbr i1 %435(prob = 0.98), ^while.body11, ^while.body13;
  ^while.body12:
    i32* %436 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %382];
    store i32* %436 with i32 %239;
    i32* %437 = getelementptr &(i32* %436)[i64 1];
    store i32* %437 with i32 %239;
    i32* %438 = getelementptr &(i32* %436)[i64 2];
    store i32* %438 with i32 %239;
    i32* %439 = getelementptr &(i32* %436)[i64 3];
    store i32* %439 with i32 %239;
    i32* %440 = getelementptr &(i32* %436)[i64 4];
    store i32* %440 with i32 %239;
    i32* %441 = getelementptr &(i32* %436)[i64 5];
    store i32* %441 with i32 %239;
    i32* %442 = getelementptr &(i32* %436)[i64 6];
    store i32* %442 with i32 %239;
    i32* %443 = getelementptr &(i32* %436)[i64 7];
    store i32* %443 with i32 %239;
    i32 %444 = add i32 %87, i32 1;
    ubr ^while.header4;
  ^while.body13:
    i32* %445 = getelementptr &([1000 * i32]* %240)[i64 0][i32 %434];
    i32 %446 = load i32* %445;
    i32* %447 = getelementptr &(i32* %445)[i64 1];
    i32 %448 = load i32* %447;
    i32 %449 = add i32 %433, i32 %446;
    i32 %450 = add i32 %449, i32 %448;
    i32* %451 = getelementptr &(i32* %445)[i64 2];
    i32 %452 = load i32* %451;
    i32 %453 = add i32 %450, i32 %452;
    i32* %454 = getelementptr &(i32* %445)[i64 3];
    i32 %455 = load i32* %454;
    i32 %456 = add i32 %453, i32 %455;
    i32* %457 = getelementptr &(i32* %445)[i64 4];
    i32 %458 = load i32* %457;
    i32 %459 = add i32 %456, i32 %458;
    i32* %460 = getelementptr &(i32* %445)[i64 5];
    i32 %461 = load i32* %460;
    i32 %462 = add i32 %459, i32 %461;
    i32* %463 = getelementptr &(i32* %445)[i64 6];
    i32 %464 = load i32* %463;
    i32 %465 = add i32 %462, i32 %464;
    i32* %466 = getelementptr &(i32* %445)[i64 7];
    i32 %467 = load i32* %466;
    i32 %468 = add i32 %465, i32 %467;
    i32 %469 = add i32 %213, i32 1;
    ubr ^while.header7;
}
