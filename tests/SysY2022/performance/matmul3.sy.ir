internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
  ^entry:
    [1000 * [1000 * i32]]* %0 = ptrcast [1000 * [1000 * i32]]* @a to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %1 = ptrcast [1000 * [1000 * i32]]* @b to [1000 * [1000 * i32]]*;
    [1000 * [1000 * i32]]* %2 = ptrcast [1000 * [1000 * i32]]* @c to [1000 * [1000 * i32]]*;
    ubr ^while.header;
  ^while.header:
    i32 %3 = phi [^entry, i32 0] [^b1, i32 %9];
    i1 %4 = scmp lt i32 %3, i32 1000;
    cbr i1 %4(prob = 0.97), ^while.body, ^b;
  ^b:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.header1;
  ^while.body:
    [1000 * i32]* %5 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %3];
    i32* %6 = getelementptr &([1000 * i32]* %5)[i64 0][i64 0];
    i32 %7 = call (i32*) -> i32 @getarray(i32* %6);
    i1 %8 = scmp neq i32 %7, i32 1000;
    cbr i1 %8(prob = 0.5), ^b2, ^b1;
  ^b1:
    i32 %9 = add i32 %3, i32 1;
    ubr ^while.header;
  ^while.header1:
    i32 %10 = phi [^b, i32 0] [^while.body3, i32 %121];
    i1 %11 = scmp lt i32 %10, i32 1000;
    cbr i1 %11(prob = 0.97), ^while.body1, ^while.header2;
  ^b2:
    i32 %12 = phi [^while.body, i32 %7] [^b4, i32 0];
    ret i32 %12;
  ^while.body1:
    [1000 * i32]* %13 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %10];
    ubr ^while.body2;
  ^while.header2:
    i32 %14 = phi [^while.header1, i32 0] [^b3, i32 %122];
    i1 %15 = scmp lt i32 %14, i32 1000;
    [1000 * i32]* %16 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %14];
    [1000 * i32]* %17 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %14];
    cbr i1 %15(prob = 0.97), ^while.header3, ^while.header4;
  ^while.body2:
    i32 %18 = phi [^while.body1, i32 0] [^while.body2, i32 %83];
    [1000 * i32]* %19 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %18];
    i32* %20 = getelementptr &([1000 * i32]* %19)[i64 0][i32 %10];
    i32 %21 = load i32* %20;
    i32* %22 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %18];
    store i32* %22 with i32 %21;
    [1000 * i32]* %23 = getelementptr &([1000 * i32]* %19)[i64 1];
    i32* %24 = getelementptr &([1000 * i32]* %23)[i64 0][i32 %10];
    i32 %25 = load i32* %24;
    i32* %26 = getelementptr &(i32* %22)[i64 1];
    store i32* %26 with i32 %25;
    [1000 * i32]* %27 = getelementptr &([1000 * i32]* %19)[i64 2];
    i32* %28 = getelementptr &([1000 * i32]* %27)[i64 0][i32 %10];
    i32 %29 = load i32* %28;
    i32* %30 = getelementptr &(i32* %22)[i64 2];
    store i32* %30 with i32 %29;
    [1000 * i32]* %31 = getelementptr &([1000 * i32]* %19)[i64 3];
    i32* %32 = getelementptr &([1000 * i32]* %31)[i64 0][i32 %10];
    i32 %33 = load i32* %32;
    i32* %34 = getelementptr &(i32* %22)[i64 3];
    store i32* %34 with i32 %33;
    [1000 * i32]* %35 = getelementptr &([1000 * i32]* %19)[i64 4];
    i32* %36 = getelementptr &([1000 * i32]* %35)[i64 0][i32 %10];
    i32 %37 = load i32* %36;
    i32* %38 = getelementptr &(i32* %22)[i64 4];
    store i32* %38 with i32 %37;
    [1000 * i32]* %39 = getelementptr &([1000 * i32]* %19)[i64 5];
    i32* %40 = getelementptr &([1000 * i32]* %39)[i64 0][i32 %10];
    i32 %41 = load i32* %40;
    i32* %42 = getelementptr &(i32* %22)[i64 5];
    store i32* %42 with i32 %41;
    [1000 * i32]* %43 = getelementptr &([1000 * i32]* %19)[i64 6];
    i32* %44 = getelementptr &([1000 * i32]* %43)[i64 0][i32 %10];
    i32 %45 = load i32* %44;
    i32* %46 = getelementptr &(i32* %22)[i64 6];
    store i32* %46 with i32 %45;
    [1000 * i32]* %47 = getelementptr &([1000 * i32]* %19)[i64 7];
    i32* %48 = getelementptr &([1000 * i32]* %47)[i64 0][i32 %10];
    i32 %49 = load i32* %48;
    i32* %50 = getelementptr &(i32* %22)[i64 7];
    store i32* %50 with i32 %49;
    [1000 * i32]* %51 = getelementptr &([1000 * i32]* %19)[i64 8];
    i32* %52 = getelementptr &([1000 * i32]* %51)[i64 0][i32 %10];
    i32 %53 = load i32* %52;
    i32* %54 = getelementptr &(i32* %22)[i64 8];
    store i32* %54 with i32 %53;
    [1000 * i32]* %55 = getelementptr &([1000 * i32]* %19)[i64 9];
    i32* %56 = getelementptr &([1000 * i32]* %55)[i64 0][i32 %10];
    i32 %57 = load i32* %56;
    i32* %58 = getelementptr &(i32* %22)[i64 9];
    store i32* %58 with i32 %57;
    [1000 * i32]* %59 = getelementptr &([1000 * i32]* %19)[i64 10];
    i32* %60 = getelementptr &([1000 * i32]* %59)[i64 0][i32 %10];
    i32 %61 = load i32* %60;
    i32* %62 = getelementptr &(i32* %22)[i64 10];
    store i32* %62 with i32 %61;
    [1000 * i32]* %63 = getelementptr &([1000 * i32]* %19)[i64 11];
    i32* %64 = getelementptr &([1000 * i32]* %63)[i64 0][i32 %10];
    i32 %65 = load i32* %64;
    i32* %66 = getelementptr &(i32* %22)[i64 11];
    store i32* %66 with i32 %65;
    [1000 * i32]* %67 = getelementptr &([1000 * i32]* %19)[i64 12];
    i32* %68 = getelementptr &([1000 * i32]* %67)[i64 0][i32 %10];
    i32 %69 = load i32* %68;
    i32* %70 = getelementptr &(i32* %22)[i64 12];
    store i32* %70 with i32 %69;
    [1000 * i32]* %71 = getelementptr &([1000 * i32]* %19)[i64 13];
    i32* %72 = getelementptr &([1000 * i32]* %71)[i64 0][i32 %10];
    i32 %73 = load i32* %72;
    i32* %74 = getelementptr &(i32* %22)[i64 13];
    store i32* %74 with i32 %73;
    [1000 * i32]* %75 = getelementptr &([1000 * i32]* %19)[i64 14];
    i32* %76 = getelementptr &([1000 * i32]* %75)[i64 0][i32 %10];
    i32 %77 = load i32* %76;
    i32* %78 = getelementptr &(i32* %22)[i64 14];
    store i32* %78 with i32 %77;
    [1000 * i32]* %79 = getelementptr &([1000 * i32]* %19)[i64 15];
    i32* %80 = getelementptr &([1000 * i32]* %79)[i64 0][i32 %10];
    i32 %81 = load i32* %80;
    i32* %82 = getelementptr &(i32* %22)[i64 15];
    store i32* %82 with i32 %81;
    i32 %83 = add i32 %18, i32 16;
    i1 %84 = scmp lt i32 %83, i32 992;
    cbr i1 %84(prob = 0.98), ^while.body2, ^while.body3;
  ^while.header3:
    i32 %85 = phi [^while.header2, i32 0] [^while.body5, i32 %299];
    i1 %86 = scmp lt i32 %85, i32 1000;
    cbr i1 %86(prob = 0.97), ^while.body4, ^b3;
  ^while.header4:
    i32 %87 = phi [^while.header2, i32 0] [^while.body13, i32 %608];
    i1 %88 = scmp lt i32 %87, i32 1000;
    cbr i1 %88(prob = 0.97), ^while.header5, ^while.header6;
  ^while.body3:
    [1000 * i32]* %89 = getelementptr &([1000 * [1000 * i32]]* %0)[i64 0][i32 %83];
    i32* %90 = getelementptr &([1000 * i32]* %89)[i64 0][i32 %10];
    i32 %91 = load i32* %90;
    i32* %92 = getelementptr &([1000 * i32]* %13)[i64 0][i32 %83];
    store i32* %92 with i32 %91;
    [1000 * i32]* %93 = getelementptr &([1000 * i32]* %89)[i64 1];
    i32* %94 = getelementptr &([1000 * i32]* %93)[i64 0][i32 %10];
    i32 %95 = load i32* %94;
    i32* %96 = getelementptr &(i32* %92)[i64 1];
    store i32* %96 with i32 %95;
    [1000 * i32]* %97 = getelementptr &([1000 * i32]* %89)[i64 2];
    i32* %98 = getelementptr &([1000 * i32]* %97)[i64 0][i32 %10];
    i32 %99 = load i32* %98;
    i32* %100 = getelementptr &(i32* %92)[i64 2];
    store i32* %100 with i32 %99;
    [1000 * i32]* %101 = getelementptr &([1000 * i32]* %89)[i64 3];
    i32* %102 = getelementptr &([1000 * i32]* %101)[i64 0][i32 %10];
    i32 %103 = load i32* %102;
    i32* %104 = getelementptr &(i32* %92)[i64 3];
    store i32* %104 with i32 %103;
    [1000 * i32]* %105 = getelementptr &([1000 * i32]* %89)[i64 4];
    i32* %106 = getelementptr &([1000 * i32]* %105)[i64 0][i32 %10];
    i32 %107 = load i32* %106;
    i32* %108 = getelementptr &(i32* %92)[i64 4];
    store i32* %108 with i32 %107;
    [1000 * i32]* %109 = getelementptr &([1000 * i32]* %89)[i64 5];
    i32* %110 = getelementptr &([1000 * i32]* %109)[i64 0][i32 %10];
    i32 %111 = load i32* %110;
    i32* %112 = getelementptr &(i32* %92)[i64 5];
    store i32* %112 with i32 %111;
    [1000 * i32]* %113 = getelementptr &([1000 * i32]* %89)[i64 6];
    i32* %114 = getelementptr &([1000 * i32]* %113)[i64 0][i32 %10];
    i32 %115 = load i32* %114;
    i32* %116 = getelementptr &(i32* %92)[i64 6];
    store i32* %116 with i32 %115;
    [1000 * i32]* %117 = getelementptr &([1000 * i32]* %89)[i64 7];
    i32* %118 = getelementptr &([1000 * i32]* %117)[i64 0][i32 %10];
    i32 %119 = load i32* %118;
    i32* %120 = getelementptr &(i32* %92)[i64 7];
    store i32* %120 with i32 %119;
    i32 %121 = add i32 %10, i32 1;
    ubr ^while.header1;
  ^b3:
    i32 %122 = add i32 %14, i32 1;
    ubr ^while.header2;
  ^while.header5:
    [1000 * i32]* %123 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %87];
    ubr ^while.body7;
  ^while.body4:
    i32 %124 = phi [^while.header3, i32 0] [^while.body4, i32 %237];
    i32 %125 = phi [^while.header3, i32 0] [^while.body4, i32 %238];
    i32* %126 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %125];
    i32 %127 = load i32* %126;
    [1000 * i32]* %128 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %125];
    i32* %129 = getelementptr &([1000 * i32]* %128)[i64 0][i32 %85];
    i32 %130 = load i32* %129;
    i32* %131 = getelementptr &(i32* %126)[i64 1];
    i32 %132 = load i32* %131;
    [1000 * i32]* %133 = getelementptr &([1000 * i32]* %128)[i64 1];
    i32* %134 = getelementptr &([1000 * i32]* %133)[i64 0][i32 %85];
    i32 %135 = load i32* %134;
    i32 %136 = mul i32 %132, i32 %135;
    i32 %137 = mul i32 %127, i32 %130;
    i32 %138 = add i32 %137, i32 %136;
    i32* %139 = getelementptr &(i32* %126)[i64 2];
    i32 %140 = load i32* %139;
    [1000 * i32]* %141 = getelementptr &([1000 * i32]* %128)[i64 2];
    i32* %142 = getelementptr &([1000 * i32]* %141)[i64 0][i32 %85];
    i32 %143 = load i32* %142;
    i32 %144 = mul i32 %140, i32 %143;
    i32 %145 = add i32 %138, i32 %144;
    i32* %146 = getelementptr &(i32* %126)[i64 3];
    i32 %147 = load i32* %146;
    [1000 * i32]* %148 = getelementptr &([1000 * i32]* %128)[i64 3];
    i32* %149 = getelementptr &([1000 * i32]* %148)[i64 0][i32 %85];
    i32 %150 = load i32* %149;
    i32 %151 = mul i32 %147, i32 %150;
    i32 %152 = add i32 %145, i32 %151;
    i32* %153 = getelementptr &(i32* %126)[i64 4];
    i32 %154 = load i32* %153;
    [1000 * i32]* %155 = getelementptr &([1000 * i32]* %128)[i64 4];
    i32* %156 = getelementptr &([1000 * i32]* %155)[i64 0][i32 %85];
    i32 %157 = load i32* %156;
    i32 %158 = mul i32 %154, i32 %157;
    i32 %159 = add i32 %152, i32 %158;
    i32* %160 = getelementptr &(i32* %126)[i64 5];
    i32 %161 = load i32* %160;
    [1000 * i32]* %162 = getelementptr &([1000 * i32]* %128)[i64 5];
    i32* %163 = getelementptr &([1000 * i32]* %162)[i64 0][i32 %85];
    i32 %164 = load i32* %163;
    i32 %165 = mul i32 %161, i32 %164;
    i32 %166 = add i32 %159, i32 %165;
    i32* %167 = getelementptr &(i32* %126)[i64 6];
    i32 %168 = load i32* %167;
    [1000 * i32]* %169 = getelementptr &([1000 * i32]* %128)[i64 6];
    i32* %170 = getelementptr &([1000 * i32]* %169)[i64 0][i32 %85];
    i32 %171 = load i32* %170;
    i32 %172 = mul i32 %168, i32 %171;
    i32 %173 = add i32 %166, i32 %172;
    i32* %174 = getelementptr &(i32* %126)[i64 7];
    i32 %175 = load i32* %174;
    [1000 * i32]* %176 = getelementptr &([1000 * i32]* %128)[i64 7];
    i32* %177 = getelementptr &([1000 * i32]* %176)[i64 0][i32 %85];
    i32 %178 = load i32* %177;
    i32 %179 = mul i32 %175, i32 %178;
    i32 %180 = add i32 %173, i32 %179;
    i32* %181 = getelementptr &(i32* %126)[i64 8];
    i32 %182 = load i32* %181;
    [1000 * i32]* %183 = getelementptr &([1000 * i32]* %128)[i64 8];
    i32* %184 = getelementptr &([1000 * i32]* %183)[i64 0][i32 %85];
    i32 %185 = load i32* %184;
    i32 %186 = mul i32 %182, i32 %185;
    i32 %187 = add i32 %180, i32 %186;
    i32* %188 = getelementptr &(i32* %126)[i64 9];
    i32 %189 = load i32* %188;
    [1000 * i32]* %190 = getelementptr &([1000 * i32]* %128)[i64 9];
    i32* %191 = getelementptr &([1000 * i32]* %190)[i64 0][i32 %85];
    i32 %192 = load i32* %191;
    i32 %193 = mul i32 %189, i32 %192;
    i32 %194 = add i32 %187, i32 %193;
    i32* %195 = getelementptr &(i32* %126)[i64 10];
    i32 %196 = load i32* %195;
    [1000 * i32]* %197 = getelementptr &([1000 * i32]* %128)[i64 10];
    i32* %198 = getelementptr &([1000 * i32]* %197)[i64 0][i32 %85];
    i32 %199 = load i32* %198;
    i32 %200 = mul i32 %196, i32 %199;
    i32 %201 = add i32 %194, i32 %200;
    i32* %202 = getelementptr &(i32* %126)[i64 11];
    i32 %203 = load i32* %202;
    [1000 * i32]* %204 = getelementptr &([1000 * i32]* %128)[i64 11];
    i32* %205 = getelementptr &([1000 * i32]* %204)[i64 0][i32 %85];
    i32 %206 = load i32* %205;
    i32 %207 = mul i32 %203, i32 %206;
    i32 %208 = add i32 %201, i32 %207;
    i32* %209 = getelementptr &(i32* %126)[i64 12];
    i32 %210 = load i32* %209;
    [1000 * i32]* %211 = getelementptr &([1000 * i32]* %128)[i64 12];
    i32* %212 = getelementptr &([1000 * i32]* %211)[i64 0][i32 %85];
    i32 %213 = load i32* %212;
    i32 %214 = mul i32 %210, i32 %213;
    i32 %215 = add i32 %208, i32 %214;
    i32* %216 = getelementptr &(i32* %126)[i64 13];
    i32 %217 = load i32* %216;
    [1000 * i32]* %218 = getelementptr &([1000 * i32]* %128)[i64 13];
    i32* %219 = getelementptr &([1000 * i32]* %218)[i64 0][i32 %85];
    i32 %220 = load i32* %219;
    i32 %221 = mul i32 %217, i32 %220;
    i32 %222 = add i32 %215, i32 %221;
    i32* %223 = getelementptr &(i32* %126)[i64 14];
    i32 %224 = load i32* %223;
    [1000 * i32]* %225 = getelementptr &([1000 * i32]* %128)[i64 14];
    i32* %226 = getelementptr &([1000 * i32]* %225)[i64 0][i32 %85];
    i32 %227 = load i32* %226;
    i32 %228 = mul i32 %224, i32 %227;
    i32 %229 = add i32 %222, i32 %228;
    i32* %230 = getelementptr &(i32* %126)[i64 15];
    i32 %231 = load i32* %230;
    [1000 * i32]* %232 = getelementptr &([1000 * i32]* %128)[i64 15];
    i32* %233 = getelementptr &([1000 * i32]* %232)[i64 0][i32 %85];
    i32 %234 = load i32* %233;
    i32 %235 = mul i32 %231, i32 %234;
    i32 %236 = add i32 %229, i32 %235;
    i32 %237 = add i32 %236, i32 %124;
    i32 %238 = add i32 %125, i32 16;
    i1 %239 = scmp lt i32 %238, i32 992;
    cbr i1 %239(prob = 0.98), ^while.body4, ^while.body5;
  ^while.header6:
    i32 %240 = phi [^while.header4, i32 0] [^while.body10, i32 %528];
    i1 %241 = scmp lt i32 %240, i32 1000;
    cbr i1 %241(prob = 0.97), ^while.body6, ^while.header7;
  ^while.body5:
    i32* %242 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %238];
    i32 %243 = load i32* %242;
    [1000 * i32]* %244 = getelementptr &([1000 * [1000 * i32]]* %1)[i64 0][i32 %238];
    i32* %245 = getelementptr &([1000 * i32]* %244)[i64 0][i32 %85];
    i32 %246 = load i32* %245;
    i32* %247 = getelementptr &(i32* %242)[i64 1];
    i32 %248 = load i32* %247;
    [1000 * i32]* %249 = getelementptr &([1000 * i32]* %244)[i64 1];
    i32* %250 = getelementptr &([1000 * i32]* %249)[i64 0][i32 %85];
    i32 %251 = load i32* %250;
    i32 %252 = mul i32 %248, i32 %251;
    i32 %253 = mul i32 %243, i32 %246;
    i32 %254 = add i32 %237, i32 %253;
    i32 %255 = add i32 %254, i32 %252;
    i32* %256 = getelementptr &(i32* %242)[i64 2];
    i32 %257 = load i32* %256;
    [1000 * i32]* %258 = getelementptr &([1000 * i32]* %244)[i64 2];
    i32* %259 = getelementptr &([1000 * i32]* %258)[i64 0][i32 %85];
    i32 %260 = load i32* %259;
    i32 %261 = mul i32 %257, i32 %260;
    i32 %262 = add i32 %255, i32 %261;
    i32* %263 = getelementptr &(i32* %242)[i64 3];
    i32 %264 = load i32* %263;
    [1000 * i32]* %265 = getelementptr &([1000 * i32]* %244)[i64 3];
    i32* %266 = getelementptr &([1000 * i32]* %265)[i64 0][i32 %85];
    i32 %267 = load i32* %266;
    i32 %268 = mul i32 %264, i32 %267;
    i32 %269 = add i32 %262, i32 %268;
    i32* %270 = getelementptr &(i32* %242)[i64 4];
    i32 %271 = load i32* %270;
    [1000 * i32]* %272 = getelementptr &([1000 * i32]* %244)[i64 4];
    i32* %273 = getelementptr &([1000 * i32]* %272)[i64 0][i32 %85];
    i32 %274 = load i32* %273;
    i32 %275 = mul i32 %271, i32 %274;
    i32 %276 = add i32 %269, i32 %275;
    i32* %277 = getelementptr &(i32* %242)[i64 5];
    i32 %278 = load i32* %277;
    [1000 * i32]* %279 = getelementptr &([1000 * i32]* %244)[i64 5];
    i32* %280 = getelementptr &([1000 * i32]* %279)[i64 0][i32 %85];
    i32 %281 = load i32* %280;
    i32 %282 = mul i32 %278, i32 %281;
    i32 %283 = add i32 %276, i32 %282;
    i32* %284 = getelementptr &(i32* %242)[i64 6];
    i32 %285 = load i32* %284;
    [1000 * i32]* %286 = getelementptr &([1000 * i32]* %244)[i64 6];
    i32* %287 = getelementptr &([1000 * i32]* %286)[i64 0][i32 %85];
    i32 %288 = load i32* %287;
    i32 %289 = mul i32 %285, i32 %288;
    i32 %290 = add i32 %283, i32 %289;
    i32* %291 = getelementptr &(i32* %242)[i64 7];
    i32 %292 = load i32* %291;
    [1000 * i32]* %293 = getelementptr &([1000 * i32]* %244)[i64 7];
    i32* %294 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %85];
    i32 %295 = load i32* %294;
    i32 %296 = mul i32 %292, i32 %295;
    i32 %297 = add i32 %290, i32 %296;
    i32* %298 = getelementptr &([1000 * i32]* %17)[i64 0][i32 %85];
    store i32* %298 with i32 %297;
    i32 %299 = add i32 %85, i32 1;
    ubr ^while.header3;
  ^while.body6:
    [1000 * i32]* %300 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %240];
    ubr ^while.body9;
  ^while.body7:
    i32 %301 = phi [^while.header5, i32 2147483647] [^while.body7, i32 %366];
    i32 %302 = phi [^while.header5, i32 0] [^while.body7, i32 %367];
    i32* %303 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %302];
    i32 %304 = load i32* %303;
    i1 %305 = scmp lt i32 %304, i32 %301;
    i32 %306 = select i1 %305 ? i32 %304 : i32 %301;
    i32* %307 = getelementptr &(i32* %303)[i64 1];
    i32 %308 = load i32* %307;
    i1 %309 = scmp lt i32 %308, i32 %306;
    i32 %310 = select i1 %309 ? i32 %308 : i32 %306;
    i32* %311 = getelementptr &(i32* %303)[i64 2];
    i32 %312 = load i32* %311;
    i1 %313 = scmp lt i32 %312, i32 %310;
    i32 %314 = select i1 %313 ? i32 %312 : i32 %310;
    i32* %315 = getelementptr &(i32* %303)[i64 3];
    i32 %316 = load i32* %315;
    i1 %317 = scmp lt i32 %316, i32 %314;
    i32 %318 = select i1 %317 ? i32 %316 : i32 %314;
    i32* %319 = getelementptr &(i32* %303)[i64 4];
    i32 %320 = load i32* %319;
    i1 %321 = scmp lt i32 %320, i32 %318;
    i32 %322 = select i1 %321 ? i32 %320 : i32 %318;
    i32* %323 = getelementptr &(i32* %303)[i64 5];
    i32 %324 = load i32* %323;
    i1 %325 = scmp lt i32 %324, i32 %322;
    i32 %326 = select i1 %325 ? i32 %324 : i32 %322;
    i32* %327 = getelementptr &(i32* %303)[i64 6];
    i32 %328 = load i32* %327;
    i1 %329 = scmp lt i32 %328, i32 %326;
    i32 %330 = select i1 %329 ? i32 %328 : i32 %326;
    i32* %331 = getelementptr &(i32* %303)[i64 7];
    i32 %332 = load i32* %331;
    i1 %333 = scmp lt i32 %332, i32 %330;
    i32 %334 = select i1 %333 ? i32 %332 : i32 %330;
    i32* %335 = getelementptr &(i32* %303)[i64 8];
    i32 %336 = load i32* %335;
    i1 %337 = scmp lt i32 %336, i32 %334;
    i32 %338 = select i1 %337 ? i32 %336 : i32 %334;
    i32* %339 = getelementptr &(i32* %303)[i64 9];
    i32 %340 = load i32* %339;
    i1 %341 = scmp lt i32 %340, i32 %338;
    i32 %342 = select i1 %341 ? i32 %340 : i32 %338;
    i32* %343 = getelementptr &(i32* %303)[i64 10];
    i32 %344 = load i32* %343;
    i1 %345 = scmp lt i32 %344, i32 %342;
    i32 %346 = select i1 %345 ? i32 %344 : i32 %342;
    i32* %347 = getelementptr &(i32* %303)[i64 11];
    i32 %348 = load i32* %347;
    i1 %349 = scmp lt i32 %348, i32 %346;
    i32 %350 = select i1 %349 ? i32 %348 : i32 %346;
    i32* %351 = getelementptr &(i32* %303)[i64 12];
    i32 %352 = load i32* %351;
    i1 %353 = scmp lt i32 %352, i32 %350;
    i32 %354 = select i1 %353 ? i32 %352 : i32 %350;
    i32* %355 = getelementptr &(i32* %303)[i64 13];
    i32 %356 = load i32* %355;
    i1 %357 = scmp lt i32 %356, i32 %354;
    i32 %358 = select i1 %357 ? i32 %356 : i32 %354;
    i32* %359 = getelementptr &(i32* %303)[i64 14];
    i32 %360 = load i32* %359;
    i1 %361 = scmp lt i32 %360, i32 %358;
    i32 %362 = select i1 %361 ? i32 %360 : i32 %358;
    i32* %363 = getelementptr &(i32* %303)[i64 15];
    i32 %364 = load i32* %363;
    i1 %365 = scmp lt i32 %364, i32 %362;
    i32 %366 = select i1 %365 ? i32 %364 : i32 %362;
    i32 %367 = add i32 %302, i32 16;
    i1 %368 = scmp lt i32 %367, i32 992;
    cbr i1 %368(prob = 0.98), ^while.body7, ^while.body8;
  ^while.header7:
    i32 %369 = phi [^while.header6, i32 0] [^while.body14, i32 %633];
    i32 %370 = phi [^while.header6, i32 0] [^while.body14, i32 %632];
    i1 %371 = scmp lt i32 %369, i32 1000;
    cbr i1 %371(prob = 0.97), ^indirect, ^b4;
  ^while.body8:
    i32* %372 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %367];
    i32 %373 = load i32* %372;
    i1 %374 = scmp lt i32 %373, i32 %366;
    i32 %375 = select i1 %374 ? i32 %373 : i32 %366;
    i32* %376 = getelementptr &(i32* %372)[i64 1];
    i32 %377 = load i32* %376;
    i1 %378 = scmp lt i32 %377, i32 %375;
    i32 %379 = select i1 %378 ? i32 %377 : i32 %375;
    i32* %380 = getelementptr &(i32* %372)[i64 2];
    i32 %381 = load i32* %380;
    i1 %382 = scmp lt i32 %381, i32 %379;
    i32 %383 = select i1 %382 ? i32 %381 : i32 %379;
    i32* %384 = getelementptr &(i32* %372)[i64 3];
    i32 %385 = load i32* %384;
    i1 %386 = scmp lt i32 %385, i32 %383;
    i32 %387 = select i1 %386 ? i32 %385 : i32 %383;
    i32* %388 = getelementptr &(i32* %372)[i64 4];
    i32 %389 = load i32* %388;
    i1 %390 = scmp lt i32 %389, i32 %387;
    i32 %391 = select i1 %390 ? i32 %389 : i32 %387;
    i32* %392 = getelementptr &(i32* %372)[i64 5];
    i32 %393 = load i32* %392;
    i1 %394 = scmp lt i32 %393, i32 %391;
    i32 %395 = select i1 %394 ? i32 %393 : i32 %391;
    i32* %396 = getelementptr &(i32* %372)[i64 6];
    i32 %397 = load i32* %396;
    i1 %398 = scmp lt i32 %397, i32 %395;
    i32 %399 = select i1 %398 ? i32 %397 : i32 %395;
    i32* %400 = getelementptr &(i32* %372)[i64 7];
    i32 %401 = load i32* %400;
    i1 %402 = scmp lt i32 %401, i32 %399;
    i32 %403 = select i1 %402 ? i32 %401 : i32 %399;
    ubr ^while.body11;
  ^indirect:
    [1000 * i32]* %404 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %369];
    ubr ^while.body12;
  ^while.body9:
    i32 %405 = phi [^while.body6, i32 0] [^while.body9, i32 %486];
    [1000 * i32]* %406 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %405];
    i32* %407 = getelementptr &([1000 * i32]* %406)[i64 0][i32 %240];
    i32 %408 = load i32* %407;
    i32 %409 = neg i32 %408;
    i32* %410 = getelementptr &([1000 * i32]* %300)[i64 0][i32 %405];
    store i32* %410 with i32 %409;
    [1000 * i32]* %411 = getelementptr &([1000 * i32]* %406)[i64 1];
    i32* %412 = getelementptr &([1000 * i32]* %411)[i64 0][i32 %240];
    i32 %413 = load i32* %412;
    i32 %414 = neg i32 %413;
    i32* %415 = getelementptr &(i32* %410)[i64 1];
    store i32* %415 with i32 %414;
    [1000 * i32]* %416 = getelementptr &([1000 * i32]* %406)[i64 2];
    i32* %417 = getelementptr &([1000 * i32]* %416)[i64 0][i32 %240];
    i32 %418 = load i32* %417;
    i32 %419 = neg i32 %418;
    i32* %420 = getelementptr &(i32* %410)[i64 2];
    store i32* %420 with i32 %419;
    [1000 * i32]* %421 = getelementptr &([1000 * i32]* %406)[i64 3];
    i32* %422 = getelementptr &([1000 * i32]* %421)[i64 0][i32 %240];
    i32 %423 = load i32* %422;
    i32 %424 = neg i32 %423;
    i32* %425 = getelementptr &(i32* %410)[i64 3];
    store i32* %425 with i32 %424;
    [1000 * i32]* %426 = getelementptr &([1000 * i32]* %406)[i64 4];
    i32* %427 = getelementptr &([1000 * i32]* %426)[i64 0][i32 %240];
    i32 %428 = load i32* %427;
    i32 %429 = neg i32 %428;
    i32* %430 = getelementptr &(i32* %410)[i64 4];
    store i32* %430 with i32 %429;
    [1000 * i32]* %431 = getelementptr &([1000 * i32]* %406)[i64 5];
    i32* %432 = getelementptr &([1000 * i32]* %431)[i64 0][i32 %240];
    i32 %433 = load i32* %432;
    i32 %434 = neg i32 %433;
    i32* %435 = getelementptr &(i32* %410)[i64 5];
    store i32* %435 with i32 %434;
    [1000 * i32]* %436 = getelementptr &([1000 * i32]* %406)[i64 6];
    i32* %437 = getelementptr &([1000 * i32]* %436)[i64 0][i32 %240];
    i32 %438 = load i32* %437;
    i32 %439 = neg i32 %438;
    i32* %440 = getelementptr &(i32* %410)[i64 6];
    store i32* %440 with i32 %439;
    [1000 * i32]* %441 = getelementptr &([1000 * i32]* %406)[i64 7];
    i32* %442 = getelementptr &([1000 * i32]* %441)[i64 0][i32 %240];
    i32 %443 = load i32* %442;
    i32 %444 = neg i32 %443;
    i32* %445 = getelementptr &(i32* %410)[i64 7];
    store i32* %445 with i32 %444;
    [1000 * i32]* %446 = getelementptr &([1000 * i32]* %406)[i64 8];
    i32* %447 = getelementptr &([1000 * i32]* %446)[i64 0][i32 %240];
    i32 %448 = load i32* %447;
    i32 %449 = neg i32 %448;
    i32* %450 = getelementptr &(i32* %410)[i64 8];
    store i32* %450 with i32 %449;
    [1000 * i32]* %451 = getelementptr &([1000 * i32]* %406)[i64 9];
    i32* %452 = getelementptr &([1000 * i32]* %451)[i64 0][i32 %240];
    i32 %453 = load i32* %452;
    i32 %454 = neg i32 %453;
    i32* %455 = getelementptr &(i32* %410)[i64 9];
    store i32* %455 with i32 %454;
    [1000 * i32]* %456 = getelementptr &([1000 * i32]* %406)[i64 10];
    i32* %457 = getelementptr &([1000 * i32]* %456)[i64 0][i32 %240];
    i32 %458 = load i32* %457;
    i32 %459 = neg i32 %458;
    i32* %460 = getelementptr &(i32* %410)[i64 10];
    store i32* %460 with i32 %459;
    [1000 * i32]* %461 = getelementptr &([1000 * i32]* %406)[i64 11];
    i32* %462 = getelementptr &([1000 * i32]* %461)[i64 0][i32 %240];
    i32 %463 = load i32* %462;
    i32 %464 = neg i32 %463;
    i32* %465 = getelementptr &(i32* %410)[i64 11];
    store i32* %465 with i32 %464;
    [1000 * i32]* %466 = getelementptr &([1000 * i32]* %406)[i64 12];
    i32* %467 = getelementptr &([1000 * i32]* %466)[i64 0][i32 %240];
    i32 %468 = load i32* %467;
    i32 %469 = neg i32 %468;
    i32* %470 = getelementptr &(i32* %410)[i64 12];
    store i32* %470 with i32 %469;
    [1000 * i32]* %471 = getelementptr &([1000 * i32]* %406)[i64 13];
    i32* %472 = getelementptr &([1000 * i32]* %471)[i64 0][i32 %240];
    i32 %473 = load i32* %472;
    i32 %474 = neg i32 %473;
    i32* %475 = getelementptr &(i32* %410)[i64 13];
    store i32* %475 with i32 %474;
    [1000 * i32]* %476 = getelementptr &([1000 * i32]* %406)[i64 14];
    i32* %477 = getelementptr &([1000 * i32]* %476)[i64 0][i32 %240];
    i32 %478 = load i32* %477;
    i32 %479 = neg i32 %478;
    i32* %480 = getelementptr &(i32* %410)[i64 14];
    store i32* %480 with i32 %479;
    [1000 * i32]* %481 = getelementptr &([1000 * i32]* %406)[i64 15];
    i32* %482 = getelementptr &([1000 * i32]* %481)[i64 0][i32 %240];
    i32 %483 = load i32* %482;
    i32 %484 = neg i32 %483;
    i32* %485 = getelementptr &(i32* %410)[i64 15];
    store i32* %485 with i32 %484;
    i32 %486 = add i32 %405, i32 16;
    i1 %487 = scmp lt i32 %486, i32 992;
    cbr i1 %487(prob = 0.98), ^while.body9, ^while.body10;
  ^b4:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %370);
    ubr ^b2;
  ^while.body10:
    [1000 * i32]* %488 = getelementptr &([1000 * [1000 * i32]]* %2)[i64 0][i32 %486];
    i32* %489 = getelementptr &([1000 * i32]* %488)[i64 0][i32 %240];
    i32 %490 = load i32* %489;
    i32 %491 = neg i32 %490;
    i32* %492 = getelementptr &([1000 * i32]* %300)[i64 0][i32 %486];
    store i32* %492 with i32 %491;
    [1000 * i32]* %493 = getelementptr &([1000 * i32]* %488)[i64 1];
    i32* %494 = getelementptr &([1000 * i32]* %493)[i64 0][i32 %240];
    i32 %495 = load i32* %494;
    i32 %496 = neg i32 %495;
    i32* %497 = getelementptr &(i32* %492)[i64 1];
    store i32* %497 with i32 %496;
    [1000 * i32]* %498 = getelementptr &([1000 * i32]* %488)[i64 2];
    i32* %499 = getelementptr &([1000 * i32]* %498)[i64 0][i32 %240];
    i32 %500 = load i32* %499;
    i32 %501 = neg i32 %500;
    i32* %502 = getelementptr &(i32* %492)[i64 2];
    store i32* %502 with i32 %501;
    [1000 * i32]* %503 = getelementptr &([1000 * i32]* %488)[i64 3];
    i32* %504 = getelementptr &([1000 * i32]* %503)[i64 0][i32 %240];
    i32 %505 = load i32* %504;
    i32 %506 = neg i32 %505;
    i32* %507 = getelementptr &(i32* %492)[i64 3];
    store i32* %507 with i32 %506;
    [1000 * i32]* %508 = getelementptr &([1000 * i32]* %488)[i64 4];
    i32* %509 = getelementptr &([1000 * i32]* %508)[i64 0][i32 %240];
    i32 %510 = load i32* %509;
    i32 %511 = neg i32 %510;
    i32* %512 = getelementptr &(i32* %492)[i64 4];
    store i32* %512 with i32 %511;
    [1000 * i32]* %513 = getelementptr &([1000 * i32]* %488)[i64 5];
    i32* %514 = getelementptr &([1000 * i32]* %513)[i64 0][i32 %240];
    i32 %515 = load i32* %514;
    i32 %516 = neg i32 %515;
    i32* %517 = getelementptr &(i32* %492)[i64 5];
    store i32* %517 with i32 %516;
    [1000 * i32]* %518 = getelementptr &([1000 * i32]* %488)[i64 6];
    i32* %519 = getelementptr &([1000 * i32]* %518)[i64 0][i32 %240];
    i32 %520 = load i32* %519;
    i32 %521 = neg i32 %520;
    i32* %522 = getelementptr &(i32* %492)[i64 6];
    store i32* %522 with i32 %521;
    [1000 * i32]* %523 = getelementptr &([1000 * i32]* %488)[i64 7];
    i32* %524 = getelementptr &([1000 * i32]* %523)[i64 0][i32 %240];
    i32 %525 = load i32* %524;
    i32 %526 = neg i32 %525;
    i32* %527 = getelementptr &(i32* %492)[i64 7];
    store i32* %527 with i32 %526;
    i32 %528 = add i32 %240, i32 1;
    ubr ^while.header6;
  ^while.body11:
    i32 %529 = phi [^while.body8, i32 0] [^while.body11, i32 %546];
    i32* %530 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %529];
    store i32* %530 with i32 %403;
    i32* %531 = getelementptr &(i32* %530)[i64 1];
    store i32* %531 with i32 %403;
    i32* %532 = getelementptr &(i32* %530)[i64 2];
    store i32* %532 with i32 %403;
    i32* %533 = getelementptr &(i32* %530)[i64 3];
    store i32* %533 with i32 %403;
    i32* %534 = getelementptr &(i32* %530)[i64 4];
    store i32* %534 with i32 %403;
    i32* %535 = getelementptr &(i32* %530)[i64 5];
    store i32* %535 with i32 %403;
    i32* %536 = getelementptr &(i32* %530)[i64 6];
    store i32* %536 with i32 %403;
    i32* %537 = getelementptr &(i32* %530)[i64 7];
    store i32* %537 with i32 %403;
    i32* %538 = getelementptr &(i32* %530)[i64 8];
    store i32* %538 with i32 %403;
    i32* %539 = getelementptr &(i32* %530)[i64 9];
    store i32* %539 with i32 %403;
    i32* %540 = getelementptr &(i32* %530)[i64 10];
    store i32* %540 with i32 %403;
    i32* %541 = getelementptr &(i32* %530)[i64 11];
    store i32* %541 with i32 %403;
    i32* %542 = getelementptr &(i32* %530)[i64 12];
    store i32* %542 with i32 %403;
    i32* %543 = getelementptr &(i32* %530)[i64 13];
    store i32* %543 with i32 %403;
    i32* %544 = getelementptr &(i32* %530)[i64 14];
    store i32* %544 with i32 %403;
    i32* %545 = getelementptr &(i32* %530)[i64 15];
    store i32* %545 with i32 %403;
    i32 %546 = add i32 %529, i32 16;
    i1 %547 = scmp lt i32 %546, i32 992;
    cbr i1 %547(prob = 0.98), ^while.body11, ^while.body13;
  ^while.body12:
    i32 %548 = phi [^indirect, i32 %370] [^while.body12, i32 %597];
    i32 %549 = phi [^indirect, i32 0] [^while.body12, i32 %598];
    i32* %550 = getelementptr &([1000 * i32]* %404)[i64 0][i32 %549];
    i32 %551 = load i32* %550;
    i32 %552 = add i32 %548, i32 %551;
    i32* %553 = getelementptr &(i32* %550)[i64 1];
    i32 %554 = load i32* %553;
    i32 %555 = add i32 %552, i32 %554;
    i32* %556 = getelementptr &(i32* %550)[i64 2];
    i32 %557 = load i32* %556;
    i32 %558 = add i32 %555, i32 %557;
    i32* %559 = getelementptr &(i32* %550)[i64 3];
    i32 %560 = load i32* %559;
    i32 %561 = add i32 %558, i32 %560;
    i32* %562 = getelementptr &(i32* %550)[i64 4];
    i32 %563 = load i32* %562;
    i32 %564 = add i32 %561, i32 %563;
    i32* %565 = getelementptr &(i32* %550)[i64 5];
    i32 %566 = load i32* %565;
    i32 %567 = add i32 %564, i32 %566;
    i32* %568 = getelementptr &(i32* %550)[i64 6];
    i32 %569 = load i32* %568;
    i32 %570 = add i32 %567, i32 %569;
    i32* %571 = getelementptr &(i32* %550)[i64 7];
    i32 %572 = load i32* %571;
    i32 %573 = add i32 %570, i32 %572;
    i32* %574 = getelementptr &(i32* %550)[i64 8];
    i32 %575 = load i32* %574;
    i32 %576 = add i32 %573, i32 %575;
    i32* %577 = getelementptr &(i32* %550)[i64 9];
    i32 %578 = load i32* %577;
    i32 %579 = add i32 %576, i32 %578;
    i32* %580 = getelementptr &(i32* %550)[i64 10];
    i32 %581 = load i32* %580;
    i32 %582 = add i32 %579, i32 %581;
    i32* %583 = getelementptr &(i32* %550)[i64 11];
    i32 %584 = load i32* %583;
    i32 %585 = add i32 %582, i32 %584;
    i32* %586 = getelementptr &(i32* %550)[i64 12];
    i32 %587 = load i32* %586;
    i32 %588 = add i32 %585, i32 %587;
    i32* %589 = getelementptr &(i32* %550)[i64 13];
    i32 %590 = load i32* %589;
    i32 %591 = add i32 %588, i32 %590;
    i32* %592 = getelementptr &(i32* %550)[i64 14];
    i32 %593 = load i32* %592;
    i32 %594 = add i32 %591, i32 %593;
    i32* %595 = getelementptr &(i32* %550)[i64 15];
    i32 %596 = load i32* %595;
    i32 %597 = add i32 %594, i32 %596;
    i32 %598 = add i32 %549, i32 16;
    i1 %599 = scmp lt i32 %598, i32 992;
    cbr i1 %599(prob = 0.98), ^while.body12, ^while.body14;
  ^while.body13:
    i32* %600 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %546];
    store i32* %600 with i32 %403;
    i32* %601 = getelementptr &(i32* %600)[i64 1];
    store i32* %601 with i32 %403;
    i32* %602 = getelementptr &(i32* %600)[i64 2];
    store i32* %602 with i32 %403;
    i32* %603 = getelementptr &(i32* %600)[i64 3];
    store i32* %603 with i32 %403;
    i32* %604 = getelementptr &(i32* %600)[i64 4];
    store i32* %604 with i32 %403;
    i32* %605 = getelementptr &(i32* %600)[i64 5];
    store i32* %605 with i32 %403;
    i32* %606 = getelementptr &(i32* %600)[i64 6];
    store i32* %606 with i32 %403;
    i32* %607 = getelementptr &(i32* %600)[i64 7];
    store i32* %607 with i32 %403;
    i32 %608 = add i32 %87, i32 1;
    ubr ^while.header4;
  ^while.body14:
    i32* %609 = getelementptr &([1000 * i32]* %404)[i64 0][i32 %598];
    i32 %610 = load i32* %609;
    i32* %611 = getelementptr &(i32* %609)[i64 1];
    i32 %612 = load i32* %611;
    i32 %613 = add i32 %597, i32 %610;
    i32 %614 = add i32 %613, i32 %612;
    i32* %615 = getelementptr &(i32* %609)[i64 2];
    i32 %616 = load i32* %615;
    i32 %617 = add i32 %614, i32 %616;
    i32* %618 = getelementptr &(i32* %609)[i64 3];
    i32 %619 = load i32* %618;
    i32 %620 = add i32 %617, i32 %619;
    i32* %621 = getelementptr &(i32* %609)[i64 4];
    i32 %622 = load i32* %621;
    i32 %623 = add i32 %620, i32 %622;
    i32* %624 = getelementptr &(i32* %609)[i64 5];
    i32 %625 = load i32* %624;
    i32 %626 = add i32 %623, i32 %625;
    i32* %627 = getelementptr &(i32* %609)[i64 6];
    i32 %628 = load i32* %627;
    i32 %629 = add i32 %626, i32 %628;
    i32* %630 = getelementptr &(i32* %609)[i64 7];
    i32 %631 = load i32* %630;
    i32 %632 = add i32 %629, i32 %631;
    i32 %633 = add i32 %369, i32 1;
    ubr ^while.header7;
}
