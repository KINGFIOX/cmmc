internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    ubr ^while.body;
^while.body:
    i32 %0 = phi [^entry, i32 0] [^b, i32 %5];
    [1000 * i32]* %1 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %0];
    i32* %2 = getelementptr &([1000 * i32]* %1)[i64 0][i64 0];
    i32 %3 = call (i32*) -> i32 @getarray(i32* %2);
    i1 %4 = scmp neq i32 %3, i32 1000;
    cbr i1 %4(prob = 0.5), ^b1, ^b;
^b:
    i32 %5 = add i32 %0, i32 1;
    i1 %6 = scmp lt i32 %5, i32 1000;
    cbr i1 %6(prob = 1), ^while.body, ^b2;
^b1:
    i32 %7 = phi [^while.body, i32 %3] [^b4, i32 0];
    ret i32 %7;
^b2:
    call (i32) -> void @starttime(i32 23);
    ubr ^while.body1;
^while.body1:
    i32 %8 = phi [^b2, i32 0] [^while.body3, i32 %109];
    [1000 * i32]* %9 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %8];
    ubr ^while.body2;
^while.body2:
    i32 %10 = phi [^while.body1, i32 0] [^while.body2, i32 %75];
    i32* %11 = getelementptr &([1000 * i32]* %9)[i64 0][i32 %10];
    [1000 * i32]* %12 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %10];
    i32* %13 = getelementptr &([1000 * i32]* %12)[i64 0][i32 %8];
    i32 %14 = load i32* %13;
    store i32* %11 with i32 %14;
    i32* %15 = getelementptr &(i32* %11)[i64 1];
    [1000 * i32]* %16 = getelementptr &([1000 * i32]* %12)[i64 1];
    i32* %17 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %8];
    i32 %18 = load i32* %17;
    store i32* %15 with i32 %18;
    i32* %19 = getelementptr &(i32* %11)[i64 2];
    [1000 * i32]* %20 = getelementptr &([1000 * i32]* %12)[i64 2];
    i32* %21 = getelementptr &([1000 * i32]* %20)[i64 0][i32 %8];
    i32 %22 = load i32* %21;
    store i32* %19 with i32 %22;
    i32* %23 = getelementptr &(i32* %11)[i64 3];
    [1000 * i32]* %24 = getelementptr &([1000 * i32]* %12)[i64 3];
    i32* %25 = getelementptr &([1000 * i32]* %24)[i64 0][i32 %8];
    i32 %26 = load i32* %25;
    store i32* %23 with i32 %26;
    i32* %27 = getelementptr &(i32* %11)[i64 4];
    [1000 * i32]* %28 = getelementptr &([1000 * i32]* %12)[i64 4];
    i32* %29 = getelementptr &([1000 * i32]* %28)[i64 0][i32 %8];
    i32 %30 = load i32* %29;
    store i32* %27 with i32 %30;
    i32* %31 = getelementptr &(i32* %11)[i64 5];
    [1000 * i32]* %32 = getelementptr &([1000 * i32]* %12)[i64 5];
    i32* %33 = getelementptr &([1000 * i32]* %32)[i64 0][i32 %8];
    i32 %34 = load i32* %33;
    store i32* %31 with i32 %34;
    i32* %35 = getelementptr &(i32* %11)[i64 6];
    [1000 * i32]* %36 = getelementptr &([1000 * i32]* %12)[i64 6];
    i32* %37 = getelementptr &([1000 * i32]* %36)[i64 0][i32 %8];
    i32 %38 = load i32* %37;
    store i32* %35 with i32 %38;
    i32* %39 = getelementptr &(i32* %11)[i64 7];
    [1000 * i32]* %40 = getelementptr &([1000 * i32]* %12)[i64 7];
    i32* %41 = getelementptr &([1000 * i32]* %40)[i64 0][i32 %8];
    i32 %42 = load i32* %41;
    store i32* %39 with i32 %42;
    i32* %43 = getelementptr &(i32* %11)[i64 8];
    [1000 * i32]* %44 = getelementptr &([1000 * i32]* %12)[i64 8];
    i32* %45 = getelementptr &([1000 * i32]* %44)[i64 0][i32 %8];
    i32 %46 = load i32* %45;
    store i32* %43 with i32 %46;
    i32* %47 = getelementptr &(i32* %11)[i64 9];
    [1000 * i32]* %48 = getelementptr &([1000 * i32]* %12)[i64 9];
    i32* %49 = getelementptr &([1000 * i32]* %48)[i64 0][i32 %8];
    i32 %50 = load i32* %49;
    store i32* %47 with i32 %50;
    i32* %51 = getelementptr &(i32* %11)[i64 10];
    [1000 * i32]* %52 = getelementptr &([1000 * i32]* %12)[i64 10];
    i32* %53 = getelementptr &([1000 * i32]* %52)[i64 0][i32 %8];
    i32 %54 = load i32* %53;
    store i32* %51 with i32 %54;
    i32* %55 = getelementptr &(i32* %11)[i64 11];
    [1000 * i32]* %56 = getelementptr &([1000 * i32]* %12)[i64 11];
    i32* %57 = getelementptr &([1000 * i32]* %56)[i64 0][i32 %8];
    i32 %58 = load i32* %57;
    store i32* %55 with i32 %58;
    i32* %59 = getelementptr &(i32* %11)[i64 12];
    [1000 * i32]* %60 = getelementptr &([1000 * i32]* %12)[i64 12];
    i32* %61 = getelementptr &([1000 * i32]* %60)[i64 0][i32 %8];
    i32 %62 = load i32* %61;
    store i32* %59 with i32 %62;
    i32* %63 = getelementptr &(i32* %11)[i64 13];
    [1000 * i32]* %64 = getelementptr &([1000 * i32]* %12)[i64 13];
    i32* %65 = getelementptr &([1000 * i32]* %64)[i64 0][i32 %8];
    i32 %66 = load i32* %65;
    store i32* %63 with i32 %66;
    i32* %67 = getelementptr &(i32* %11)[i64 14];
    [1000 * i32]* %68 = getelementptr &([1000 * i32]* %12)[i64 14];
    i32* %69 = getelementptr &([1000 * i32]* %68)[i64 0][i32 %8];
    i32 %70 = load i32* %69;
    store i32* %67 with i32 %70;
    i32* %71 = getelementptr &(i32* %11)[i64 15];
    [1000 * i32]* %72 = getelementptr &([1000 * i32]* %12)[i64 15];
    i32* %73 = getelementptr &([1000 * i32]* %72)[i64 0][i32 %8];
    i32 %74 = load i32* %73;
    store i32* %71 with i32 %74;
    i32 %75 = add i32 %10, i32 16;
    i1 %76 = scmp lt i32 %75, i32 992;
    cbr i1 %76(prob = 0.98), ^while.body2, ^while.body3;
^while.body3:
    i32* %77 = getelementptr &([1000 * i32]* %9)[i64 0][i32 %75];
    [1000 * i32]* %78 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %75];
    i32* %79 = getelementptr &([1000 * i32]* %78)[i64 0][i32 %8];
    i32 %80 = load i32* %79;
    store i32* %77 with i32 %80;
    i32* %81 = getelementptr &(i32* %77)[i64 1];
    [1000 * i32]* %82 = getelementptr &([1000 * i32]* %78)[i64 1];
    i32* %83 = getelementptr &([1000 * i32]* %82)[i64 0][i32 %8];
    i32 %84 = load i32* %83;
    store i32* %81 with i32 %84;
    i32* %85 = getelementptr &(i32* %77)[i64 2];
    [1000 * i32]* %86 = getelementptr &([1000 * i32]* %78)[i64 2];
    i32* %87 = getelementptr &([1000 * i32]* %86)[i64 0][i32 %8];
    i32 %88 = load i32* %87;
    store i32* %85 with i32 %88;
    i32* %89 = getelementptr &(i32* %77)[i64 3];
    [1000 * i32]* %90 = getelementptr &([1000 * i32]* %78)[i64 3];
    i32* %91 = getelementptr &([1000 * i32]* %90)[i64 0][i32 %8];
    i32 %92 = load i32* %91;
    store i32* %89 with i32 %92;
    i32* %93 = getelementptr &(i32* %77)[i64 4];
    [1000 * i32]* %94 = getelementptr &([1000 * i32]* %78)[i64 4];
    i32* %95 = getelementptr &([1000 * i32]* %94)[i64 0][i32 %8];
    i32 %96 = load i32* %95;
    store i32* %93 with i32 %96;
    i32* %97 = getelementptr &(i32* %77)[i64 5];
    [1000 * i32]* %98 = getelementptr &([1000 * i32]* %78)[i64 5];
    i32* %99 = getelementptr &([1000 * i32]* %98)[i64 0][i32 %8];
    i32 %100 = load i32* %99;
    store i32* %97 with i32 %100;
    i32* %101 = getelementptr &(i32* %77)[i64 6];
    [1000 * i32]* %102 = getelementptr &([1000 * i32]* %78)[i64 6];
    i32* %103 = getelementptr &([1000 * i32]* %102)[i64 0][i32 %8];
    i32 %104 = load i32* %103;
    store i32* %101 with i32 %104;
    i32* %105 = getelementptr &(i32* %77)[i64 7];
    [1000 * i32]* %106 = getelementptr &([1000 * i32]* %78)[i64 7];
    i32* %107 = getelementptr &([1000 * i32]* %106)[i64 0][i32 %8];
    i32 %108 = load i32* %107;
    store i32* %105 with i32 %108;
    i32 %109 = add i32 %8, i32 1;
    i1 %110 = scmp lt i32 %109, i32 1000;
    cbr i1 %110(prob = 1), ^while.body1, ^while.body4;
^while.body4:
    i32 %111 = phi [^while.body3, i32 0] [^b3, i32 %290];
    [1000 * i32]* %112 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %111];
    [1000 * i32]* %113 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %111];
    ubr ^while.body5;
^while.body5:
    i32 %114 = phi [^while.body4, i32 0] [^while.body7, i32 %288];
    ubr ^while.body6;
^while.body6:
    i32 %115 = phi [^while.body5, i32 0] [^while.body6, i32 %228];
    i32 %116 = phi [^while.body5, i32 0] [^while.body6, i32 %229];
    i32* %117 = getelementptr &([1000 * i32]* %112)[i64 0][i32 %116];
    i32 %118 = load i32* %117;
    [1000 * i32]* %119 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %116];
    i32* %120 = getelementptr &([1000 * i32]* %119)[i64 0][i32 %114];
    i32 %121 = load i32* %120;
    i32 %122 = mul i32 %118, i32 %121;
    i32* %123 = getelementptr &(i32* %117)[i64 1];
    i32 %124 = load i32* %123;
    [1000 * i32]* %125 = getelementptr &([1000 * i32]* %119)[i64 1];
    i32* %126 = getelementptr &([1000 * i32]* %125)[i64 0][i32 %114];
    i32 %127 = load i32* %126;
    i32 %128 = mul i32 %124, i32 %127;
    i32* %129 = getelementptr &(i32* %117)[i64 2];
    i32 %130 = load i32* %129;
    [1000 * i32]* %131 = getelementptr &([1000 * i32]* %119)[i64 2];
    i32* %132 = getelementptr &([1000 * i32]* %131)[i64 0][i32 %114];
    i32 %133 = load i32* %132;
    i32 %134 = mul i32 %130, i32 %133;
    i32* %135 = getelementptr &(i32* %117)[i64 3];
    i32 %136 = load i32* %135;
    [1000 * i32]* %137 = getelementptr &([1000 * i32]* %119)[i64 3];
    i32* %138 = getelementptr &([1000 * i32]* %137)[i64 0][i32 %114];
    i32 %139 = load i32* %138;
    i32 %140 = mul i32 %136, i32 %139;
    i32* %141 = getelementptr &(i32* %117)[i64 4];
    i32 %142 = load i32* %141;
    [1000 * i32]* %143 = getelementptr &([1000 * i32]* %119)[i64 4];
    i32* %144 = getelementptr &([1000 * i32]* %143)[i64 0][i32 %114];
    i32 %145 = load i32* %144;
    i32 %146 = mul i32 %142, i32 %145;
    i32* %147 = getelementptr &(i32* %117)[i64 5];
    i32 %148 = load i32* %147;
    [1000 * i32]* %149 = getelementptr &([1000 * i32]* %119)[i64 5];
    i32* %150 = getelementptr &([1000 * i32]* %149)[i64 0][i32 %114];
    i32 %151 = load i32* %150;
    i32 %152 = mul i32 %148, i32 %151;
    i32* %153 = getelementptr &(i32* %117)[i64 6];
    i32 %154 = load i32* %153;
    [1000 * i32]* %155 = getelementptr &([1000 * i32]* %119)[i64 6];
    i32* %156 = getelementptr &([1000 * i32]* %155)[i64 0][i32 %114];
    i32 %157 = load i32* %156;
    i32 %158 = mul i32 %154, i32 %157;
    i32* %159 = getelementptr &(i32* %117)[i64 7];
    i32 %160 = load i32* %159;
    [1000 * i32]* %161 = getelementptr &([1000 * i32]* %119)[i64 7];
    i32* %162 = getelementptr &([1000 * i32]* %161)[i64 0][i32 %114];
    i32 %163 = load i32* %162;
    i32 %164 = mul i32 %160, i32 %163;
    i32* %165 = getelementptr &(i32* %117)[i64 8];
    i32 %166 = load i32* %165;
    [1000 * i32]* %167 = getelementptr &([1000 * i32]* %119)[i64 8];
    i32* %168 = getelementptr &([1000 * i32]* %167)[i64 0][i32 %114];
    i32 %169 = load i32* %168;
    i32 %170 = mul i32 %166, i32 %169;
    i32* %171 = getelementptr &(i32* %117)[i64 9];
    i32 %172 = load i32* %171;
    [1000 * i32]* %173 = getelementptr &([1000 * i32]* %119)[i64 9];
    i32* %174 = getelementptr &([1000 * i32]* %173)[i64 0][i32 %114];
    i32 %175 = load i32* %174;
    i32 %176 = mul i32 %172, i32 %175;
    i32* %177 = getelementptr &(i32* %117)[i64 10];
    i32 %178 = load i32* %177;
    [1000 * i32]* %179 = getelementptr &([1000 * i32]* %119)[i64 10];
    i32* %180 = getelementptr &([1000 * i32]* %179)[i64 0][i32 %114];
    i32 %181 = load i32* %180;
    i32 %182 = mul i32 %178, i32 %181;
    i32* %183 = getelementptr &(i32* %117)[i64 11];
    i32 %184 = load i32* %183;
    [1000 * i32]* %185 = getelementptr &([1000 * i32]* %119)[i64 11];
    i32* %186 = getelementptr &([1000 * i32]* %185)[i64 0][i32 %114];
    i32 %187 = load i32* %186;
    i32 %188 = mul i32 %184, i32 %187;
    i32* %189 = getelementptr &(i32* %117)[i64 12];
    i32 %190 = load i32* %189;
    [1000 * i32]* %191 = getelementptr &([1000 * i32]* %119)[i64 12];
    i32* %192 = getelementptr &([1000 * i32]* %191)[i64 0][i32 %114];
    i32 %193 = load i32* %192;
    i32 %194 = mul i32 %190, i32 %193;
    i32* %195 = getelementptr &(i32* %117)[i64 13];
    i32 %196 = load i32* %195;
    [1000 * i32]* %197 = getelementptr &([1000 * i32]* %119)[i64 13];
    i32* %198 = getelementptr &([1000 * i32]* %197)[i64 0][i32 %114];
    i32 %199 = load i32* %198;
    i32 %200 = mul i32 %196, i32 %199;
    i32* %201 = getelementptr &(i32* %117)[i64 14];
    i32 %202 = load i32* %201;
    [1000 * i32]* %203 = getelementptr &([1000 * i32]* %119)[i64 14];
    i32* %204 = getelementptr &([1000 * i32]* %203)[i64 0][i32 %114];
    i32 %205 = load i32* %204;
    i32 %206 = mul i32 %202, i32 %205;
    i32* %207 = getelementptr &(i32* %117)[i64 15];
    i32 %208 = load i32* %207;
    [1000 * i32]* %209 = getelementptr &([1000 * i32]* %119)[i64 15];
    i32* %210 = getelementptr &([1000 * i32]* %209)[i64 0][i32 %114];
    i32 %211 = load i32* %210;
    i32 %212 = mul i32 %208, i32 %211;
    i32 %213 = add i32 %115, i32 %122;
    i32 %214 = add i32 %213, i32 %128;
    i32 %215 = add i32 %214, i32 %134;
    i32 %216 = add i32 %215, i32 %140;
    i32 %217 = add i32 %216, i32 %146;
    i32 %218 = add i32 %217, i32 %152;
    i32 %219 = add i32 %218, i32 %158;
    i32 %220 = add i32 %219, i32 %164;
    i32 %221 = add i32 %220, i32 %170;
    i32 %222 = add i32 %221, i32 %176;
    i32 %223 = add i32 %222, i32 %182;
    i32 %224 = add i32 %223, i32 %188;
    i32 %225 = add i32 %224, i32 %194;
    i32 %226 = add i32 %225, i32 %200;
    i32 %227 = add i32 %226, i32 %206;
    i32 %228 = add i32 %227, i32 %212;
    i32 %229 = add i32 %116, i32 16;
    i1 %230 = scmp lt i32 %229, i32 992;
    cbr i1 %230(prob = 0.98), ^while.body6, ^while.body7;
^while.body7:
    i32* %231 = getelementptr &([1000 * i32]* %112)[i64 0][i32 %229];
    i32 %232 = load i32* %231;
    [1000 * i32]* %233 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %229];
    i32* %234 = getelementptr &([1000 * i32]* %233)[i64 0][i32 %114];
    i32 %235 = load i32* %234;
    i32 %236 = mul i32 %232, i32 %235;
    i32* %237 = getelementptr &(i32* %231)[i64 1];
    i32 %238 = load i32* %237;
    [1000 * i32]* %239 = getelementptr &([1000 * i32]* %233)[i64 1];
    i32* %240 = getelementptr &([1000 * i32]* %239)[i64 0][i32 %114];
    i32 %241 = load i32* %240;
    i32 %242 = mul i32 %238, i32 %241;
    i32* %243 = getelementptr &(i32* %231)[i64 2];
    i32 %244 = load i32* %243;
    [1000 * i32]* %245 = getelementptr &([1000 * i32]* %233)[i64 2];
    i32* %246 = getelementptr &([1000 * i32]* %245)[i64 0][i32 %114];
    i32 %247 = load i32* %246;
    i32 %248 = mul i32 %244, i32 %247;
    i32* %249 = getelementptr &(i32* %231)[i64 3];
    i32 %250 = load i32* %249;
    [1000 * i32]* %251 = getelementptr &([1000 * i32]* %233)[i64 3];
    i32* %252 = getelementptr &([1000 * i32]* %251)[i64 0][i32 %114];
    i32 %253 = load i32* %252;
    i32 %254 = mul i32 %250, i32 %253;
    i32* %255 = getelementptr &(i32* %231)[i64 4];
    i32 %256 = load i32* %255;
    [1000 * i32]* %257 = getelementptr &([1000 * i32]* %233)[i64 4];
    i32* %258 = getelementptr &([1000 * i32]* %257)[i64 0][i32 %114];
    i32 %259 = load i32* %258;
    i32 %260 = mul i32 %256, i32 %259;
    i32* %261 = getelementptr &(i32* %231)[i64 5];
    i32 %262 = load i32* %261;
    [1000 * i32]* %263 = getelementptr &([1000 * i32]* %233)[i64 5];
    i32* %264 = getelementptr &([1000 * i32]* %263)[i64 0][i32 %114];
    i32 %265 = load i32* %264;
    i32 %266 = mul i32 %262, i32 %265;
    i32* %267 = getelementptr &(i32* %231)[i64 6];
    i32 %268 = load i32* %267;
    [1000 * i32]* %269 = getelementptr &([1000 * i32]* %233)[i64 6];
    i32* %270 = getelementptr &([1000 * i32]* %269)[i64 0][i32 %114];
    i32 %271 = load i32* %270;
    i32 %272 = mul i32 %268, i32 %271;
    i32* %273 = getelementptr &(i32* %231)[i64 7];
    i32 %274 = load i32* %273;
    [1000 * i32]* %275 = getelementptr &([1000 * i32]* %233)[i64 7];
    i32* %276 = getelementptr &([1000 * i32]* %275)[i64 0][i32 %114];
    i32 %277 = load i32* %276;
    i32 %278 = mul i32 %274, i32 %277;
    i32 %279 = add i32 %228, i32 %236;
    i32 %280 = add i32 %279, i32 %242;
    i32 %281 = add i32 %280, i32 %248;
    i32 %282 = add i32 %281, i32 %254;
    i32 %283 = add i32 %282, i32 %260;
    i32 %284 = add i32 %283, i32 %266;
    i32 %285 = add i32 %284, i32 %272;
    i32 %286 = add i32 %285, i32 %278;
    i32* %287 = getelementptr &([1000 * i32]* %113)[i64 0][i32 %114];
    store i32* %287 with i32 %286;
    i32 %288 = add i32 %114, i32 1;
    i1 %289 = scmp lt i32 %288, i32 1000;
    cbr i1 %289(prob = 1), ^while.body5, ^b3;
^b3:
    i32 %290 = add i32 %111, i32 1;
    i1 %291 = scmp lt i32 %290, i32 1000;
    cbr i1 %291(prob = 1), ^while.body4, ^while.body8;
^while.body8:
    i32 %292 = phi [^b3, i32 0] [^while.body12, i32 %421];
    [1000 * i32]* %293 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %292];
    ubr ^while.body9;
^while.body9:
    i32 %294 = phi [^while.body8, i32 2147483647] [^while.body9, i32 %359];
    i32 %295 = phi [^while.body8, i32 0] [^while.body9, i32 %360];
    i32* %296 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %295];
    i32 %297 = load i32* %296;
    i1 %298 = scmp lt i32 %297, i32 %294;
    i32 %299 = select i1 %298 ? i32 %297 : i32 %294;
    i32* %300 = getelementptr &(i32* %296)[i64 1];
    i32 %301 = load i32* %300;
    i1 %302 = scmp lt i32 %301, i32 %299;
    i32 %303 = select i1 %302 ? i32 %301 : i32 %299;
    i32* %304 = getelementptr &(i32* %296)[i64 2];
    i32 %305 = load i32* %304;
    i1 %306 = scmp lt i32 %305, i32 %303;
    i32 %307 = select i1 %306 ? i32 %305 : i32 %303;
    i32* %308 = getelementptr &(i32* %296)[i64 3];
    i32 %309 = load i32* %308;
    i1 %310 = scmp lt i32 %309, i32 %307;
    i32 %311 = select i1 %310 ? i32 %309 : i32 %307;
    i32* %312 = getelementptr &(i32* %296)[i64 4];
    i32 %313 = load i32* %312;
    i1 %314 = scmp lt i32 %313, i32 %311;
    i32 %315 = select i1 %314 ? i32 %313 : i32 %311;
    i32* %316 = getelementptr &(i32* %296)[i64 5];
    i32 %317 = load i32* %316;
    i1 %318 = scmp lt i32 %317, i32 %315;
    i32 %319 = select i1 %318 ? i32 %317 : i32 %315;
    i32* %320 = getelementptr &(i32* %296)[i64 6];
    i32 %321 = load i32* %320;
    i1 %322 = scmp lt i32 %321, i32 %319;
    i32 %323 = select i1 %322 ? i32 %321 : i32 %319;
    i32* %324 = getelementptr &(i32* %296)[i64 7];
    i32 %325 = load i32* %324;
    i1 %326 = scmp lt i32 %325, i32 %323;
    i32 %327 = select i1 %326 ? i32 %325 : i32 %323;
    i32* %328 = getelementptr &(i32* %296)[i64 8];
    i32 %329 = load i32* %328;
    i1 %330 = scmp lt i32 %329, i32 %327;
    i32 %331 = select i1 %330 ? i32 %329 : i32 %327;
    i32* %332 = getelementptr &(i32* %296)[i64 9];
    i32 %333 = load i32* %332;
    i1 %334 = scmp lt i32 %333, i32 %331;
    i32 %335 = select i1 %334 ? i32 %333 : i32 %331;
    i32* %336 = getelementptr &(i32* %296)[i64 10];
    i32 %337 = load i32* %336;
    i1 %338 = scmp lt i32 %337, i32 %335;
    i32 %339 = select i1 %338 ? i32 %337 : i32 %335;
    i32* %340 = getelementptr &(i32* %296)[i64 11];
    i32 %341 = load i32* %340;
    i1 %342 = scmp lt i32 %341, i32 %339;
    i32 %343 = select i1 %342 ? i32 %341 : i32 %339;
    i32* %344 = getelementptr &(i32* %296)[i64 12];
    i32 %345 = load i32* %344;
    i1 %346 = scmp lt i32 %345, i32 %343;
    i32 %347 = select i1 %346 ? i32 %345 : i32 %343;
    i32* %348 = getelementptr &(i32* %296)[i64 13];
    i32 %349 = load i32* %348;
    i1 %350 = scmp lt i32 %349, i32 %347;
    i32 %351 = select i1 %350 ? i32 %349 : i32 %347;
    i32* %352 = getelementptr &(i32* %296)[i64 14];
    i32 %353 = load i32* %352;
    i1 %354 = scmp lt i32 %353, i32 %351;
    i32 %355 = select i1 %354 ? i32 %353 : i32 %351;
    i32* %356 = getelementptr &(i32* %296)[i64 15];
    i32 %357 = load i32* %356;
    i1 %358 = scmp lt i32 %357, i32 %355;
    i32 %359 = select i1 %358 ? i32 %357 : i32 %355;
    i32 %360 = add i32 %295, i32 16;
    i1 %361 = scmp lt i32 %360, i32 992;
    cbr i1 %361(prob = 0.98), ^while.body9, ^while.body10;
^while.body10:
    i32* %362 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %360];
    i32 %363 = load i32* %362;
    i1 %364 = scmp lt i32 %363, i32 %359;
    i32 %365 = select i1 %364 ? i32 %363 : i32 %359;
    i32* %366 = getelementptr &(i32* %362)[i64 1];
    i32 %367 = load i32* %366;
    i1 %368 = scmp lt i32 %367, i32 %365;
    i32 %369 = select i1 %368 ? i32 %367 : i32 %365;
    i32* %370 = getelementptr &(i32* %362)[i64 2];
    i32 %371 = load i32* %370;
    i1 %372 = scmp lt i32 %371, i32 %369;
    i32 %373 = select i1 %372 ? i32 %371 : i32 %369;
    i32* %374 = getelementptr &(i32* %362)[i64 3];
    i32 %375 = load i32* %374;
    i1 %376 = scmp lt i32 %375, i32 %373;
    i32 %377 = select i1 %376 ? i32 %375 : i32 %373;
    i32* %378 = getelementptr &(i32* %362)[i64 4];
    i32 %379 = load i32* %378;
    i1 %380 = scmp lt i32 %379, i32 %377;
    i32 %381 = select i1 %380 ? i32 %379 : i32 %377;
    i32* %382 = getelementptr &(i32* %362)[i64 5];
    i32 %383 = load i32* %382;
    i1 %384 = scmp lt i32 %383, i32 %381;
    i32 %385 = select i1 %384 ? i32 %383 : i32 %381;
    i32* %386 = getelementptr &(i32* %362)[i64 6];
    i32 %387 = load i32* %386;
    i1 %388 = scmp lt i32 %387, i32 %385;
    i32 %389 = select i1 %388 ? i32 %387 : i32 %385;
    i32* %390 = getelementptr &(i32* %362)[i64 7];
    i32 %391 = load i32* %390;
    i1 %392 = scmp lt i32 %391, i32 %389;
    i32 %393 = select i1 %392 ? i32 %391 : i32 %389;
    ubr ^while.body11;
^while.body11:
    i32 %394 = phi [^while.body10, i32 0] [^while.body11, i32 %411];
    i32* %395 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %394];
    store i32* %395 with i32 %393;
    i32* %396 = getelementptr &(i32* %395)[i64 1];
    store i32* %396 with i32 %393;
    i32* %397 = getelementptr &(i32* %395)[i64 2];
    store i32* %397 with i32 %393;
    i32* %398 = getelementptr &(i32* %395)[i64 3];
    store i32* %398 with i32 %393;
    i32* %399 = getelementptr &(i32* %395)[i64 4];
    store i32* %399 with i32 %393;
    i32* %400 = getelementptr &(i32* %395)[i64 5];
    store i32* %400 with i32 %393;
    i32* %401 = getelementptr &(i32* %395)[i64 6];
    store i32* %401 with i32 %393;
    i32* %402 = getelementptr &(i32* %395)[i64 7];
    store i32* %402 with i32 %393;
    i32* %403 = getelementptr &(i32* %395)[i64 8];
    store i32* %403 with i32 %393;
    i32* %404 = getelementptr &(i32* %395)[i64 9];
    store i32* %404 with i32 %393;
    i32* %405 = getelementptr &(i32* %395)[i64 10];
    store i32* %405 with i32 %393;
    i32* %406 = getelementptr &(i32* %395)[i64 11];
    store i32* %406 with i32 %393;
    i32* %407 = getelementptr &(i32* %395)[i64 12];
    store i32* %407 with i32 %393;
    i32* %408 = getelementptr &(i32* %395)[i64 13];
    store i32* %408 with i32 %393;
    i32* %409 = getelementptr &(i32* %395)[i64 14];
    store i32* %409 with i32 %393;
    i32* %410 = getelementptr &(i32* %395)[i64 15];
    store i32* %410 with i32 %393;
    i32 %411 = add i32 %394, i32 16;
    i1 %412 = scmp lt i32 %411, i32 992;
    cbr i1 %412(prob = 0.98), ^while.body11, ^while.body12;
^while.body12:
    i32* %413 = getelementptr &([1000 * i32]* %293)[i64 0][i32 %411];
    store i32* %413 with i32 %393;
    i32* %414 = getelementptr &(i32* %413)[i64 1];
    store i32* %414 with i32 %393;
    i32* %415 = getelementptr &(i32* %413)[i64 2];
    store i32* %415 with i32 %393;
    i32* %416 = getelementptr &(i32* %413)[i64 3];
    store i32* %416 with i32 %393;
    i32* %417 = getelementptr &(i32* %413)[i64 4];
    store i32* %417 with i32 %393;
    i32* %418 = getelementptr &(i32* %413)[i64 5];
    store i32* %418 with i32 %393;
    i32* %419 = getelementptr &(i32* %413)[i64 6];
    store i32* %419 with i32 %393;
    i32* %420 = getelementptr &(i32* %413)[i64 7];
    store i32* %420 with i32 %393;
    i32 %421 = add i32 %292, i32 1;
    i1 %422 = scmp lt i32 %421, i32 1000;
    cbr i1 %422(prob = 1), ^while.body8, ^while.body13;
^while.body13:
    i32 %423 = phi [^while.body12, i32 0] [^while.body15, i32 %548];
    [1000 * i32]* %424 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %423];
    ubr ^while.body14;
^while.body14:
    i32 %425 = phi [^while.body13, i32 0] [^while.body14, i32 %506];
    i32* %426 = getelementptr &([1000 * i32]* %424)[i64 0][i32 %425];
    [1000 * i32]* %427 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %425];
    i32* %428 = getelementptr &([1000 * i32]* %427)[i64 0][i32 %423];
    i32 %429 = load i32* %428;
    i32 %430 = neg i32 %429;
    store i32* %426 with i32 %430;
    i32* %431 = getelementptr &(i32* %426)[i64 1];
    [1000 * i32]* %432 = getelementptr &([1000 * i32]* %427)[i64 1];
    i32* %433 = getelementptr &([1000 * i32]* %432)[i64 0][i32 %423];
    i32 %434 = load i32* %433;
    i32 %435 = neg i32 %434;
    store i32* %431 with i32 %435;
    i32* %436 = getelementptr &(i32* %426)[i64 2];
    [1000 * i32]* %437 = getelementptr &([1000 * i32]* %427)[i64 2];
    i32* %438 = getelementptr &([1000 * i32]* %437)[i64 0][i32 %423];
    i32 %439 = load i32* %438;
    i32 %440 = neg i32 %439;
    store i32* %436 with i32 %440;
    i32* %441 = getelementptr &(i32* %426)[i64 3];
    [1000 * i32]* %442 = getelementptr &([1000 * i32]* %427)[i64 3];
    i32* %443 = getelementptr &([1000 * i32]* %442)[i64 0][i32 %423];
    i32 %444 = load i32* %443;
    i32 %445 = neg i32 %444;
    store i32* %441 with i32 %445;
    i32* %446 = getelementptr &(i32* %426)[i64 4];
    [1000 * i32]* %447 = getelementptr &([1000 * i32]* %427)[i64 4];
    i32* %448 = getelementptr &([1000 * i32]* %447)[i64 0][i32 %423];
    i32 %449 = load i32* %448;
    i32 %450 = neg i32 %449;
    store i32* %446 with i32 %450;
    i32* %451 = getelementptr &(i32* %426)[i64 5];
    [1000 * i32]* %452 = getelementptr &([1000 * i32]* %427)[i64 5];
    i32* %453 = getelementptr &([1000 * i32]* %452)[i64 0][i32 %423];
    i32 %454 = load i32* %453;
    i32 %455 = neg i32 %454;
    store i32* %451 with i32 %455;
    i32* %456 = getelementptr &(i32* %426)[i64 6];
    [1000 * i32]* %457 = getelementptr &([1000 * i32]* %427)[i64 6];
    i32* %458 = getelementptr &([1000 * i32]* %457)[i64 0][i32 %423];
    i32 %459 = load i32* %458;
    i32 %460 = neg i32 %459;
    store i32* %456 with i32 %460;
    i32* %461 = getelementptr &(i32* %426)[i64 7];
    [1000 * i32]* %462 = getelementptr &([1000 * i32]* %427)[i64 7];
    i32* %463 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %423];
    i32 %464 = load i32* %463;
    i32 %465 = neg i32 %464;
    store i32* %461 with i32 %465;
    i32* %466 = getelementptr &(i32* %426)[i64 8];
    [1000 * i32]* %467 = getelementptr &([1000 * i32]* %427)[i64 8];
    i32* %468 = getelementptr &([1000 * i32]* %467)[i64 0][i32 %423];
    i32 %469 = load i32* %468;
    i32 %470 = neg i32 %469;
    store i32* %466 with i32 %470;
    i32* %471 = getelementptr &(i32* %426)[i64 9];
    [1000 * i32]* %472 = getelementptr &([1000 * i32]* %427)[i64 9];
    i32* %473 = getelementptr &([1000 * i32]* %472)[i64 0][i32 %423];
    i32 %474 = load i32* %473;
    i32 %475 = neg i32 %474;
    store i32* %471 with i32 %475;
    i32* %476 = getelementptr &(i32* %426)[i64 10];
    [1000 * i32]* %477 = getelementptr &([1000 * i32]* %427)[i64 10];
    i32* %478 = getelementptr &([1000 * i32]* %477)[i64 0][i32 %423];
    i32 %479 = load i32* %478;
    i32 %480 = neg i32 %479;
    store i32* %476 with i32 %480;
    i32* %481 = getelementptr &(i32* %426)[i64 11];
    [1000 * i32]* %482 = getelementptr &([1000 * i32]* %427)[i64 11];
    i32* %483 = getelementptr &([1000 * i32]* %482)[i64 0][i32 %423];
    i32 %484 = load i32* %483;
    i32 %485 = neg i32 %484;
    store i32* %481 with i32 %485;
    i32* %486 = getelementptr &(i32* %426)[i64 12];
    [1000 * i32]* %487 = getelementptr &([1000 * i32]* %427)[i64 12];
    i32* %488 = getelementptr &([1000 * i32]* %487)[i64 0][i32 %423];
    i32 %489 = load i32* %488;
    i32 %490 = neg i32 %489;
    store i32* %486 with i32 %490;
    i32* %491 = getelementptr &(i32* %426)[i64 13];
    [1000 * i32]* %492 = getelementptr &([1000 * i32]* %427)[i64 13];
    i32* %493 = getelementptr &([1000 * i32]* %492)[i64 0][i32 %423];
    i32 %494 = load i32* %493;
    i32 %495 = neg i32 %494;
    store i32* %491 with i32 %495;
    i32* %496 = getelementptr &(i32* %426)[i64 14];
    [1000 * i32]* %497 = getelementptr &([1000 * i32]* %427)[i64 14];
    i32* %498 = getelementptr &([1000 * i32]* %497)[i64 0][i32 %423];
    i32 %499 = load i32* %498;
    i32 %500 = neg i32 %499;
    store i32* %496 with i32 %500;
    i32* %501 = getelementptr &(i32* %426)[i64 15];
    [1000 * i32]* %502 = getelementptr &([1000 * i32]* %427)[i64 15];
    i32* %503 = getelementptr &([1000 * i32]* %502)[i64 0][i32 %423];
    i32 %504 = load i32* %503;
    i32 %505 = neg i32 %504;
    store i32* %501 with i32 %505;
    i32 %506 = add i32 %425, i32 16;
    i1 %507 = scmp lt i32 %506, i32 992;
    cbr i1 %507(prob = 0.98), ^while.body14, ^while.body15;
^while.body15:
    i32* %508 = getelementptr &([1000 * i32]* %424)[i64 0][i32 %506];
    [1000 * i32]* %509 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %506];
    i32* %510 = getelementptr &([1000 * i32]* %509)[i64 0][i32 %423];
    i32 %511 = load i32* %510;
    i32 %512 = neg i32 %511;
    store i32* %508 with i32 %512;
    i32* %513 = getelementptr &(i32* %508)[i64 1];
    [1000 * i32]* %514 = getelementptr &([1000 * i32]* %509)[i64 1];
    i32* %515 = getelementptr &([1000 * i32]* %514)[i64 0][i32 %423];
    i32 %516 = load i32* %515;
    i32 %517 = neg i32 %516;
    store i32* %513 with i32 %517;
    i32* %518 = getelementptr &(i32* %508)[i64 2];
    [1000 * i32]* %519 = getelementptr &([1000 * i32]* %509)[i64 2];
    i32* %520 = getelementptr &([1000 * i32]* %519)[i64 0][i32 %423];
    i32 %521 = load i32* %520;
    i32 %522 = neg i32 %521;
    store i32* %518 with i32 %522;
    i32* %523 = getelementptr &(i32* %508)[i64 3];
    [1000 * i32]* %524 = getelementptr &([1000 * i32]* %509)[i64 3];
    i32* %525 = getelementptr &([1000 * i32]* %524)[i64 0][i32 %423];
    i32 %526 = load i32* %525;
    i32 %527 = neg i32 %526;
    store i32* %523 with i32 %527;
    i32* %528 = getelementptr &(i32* %508)[i64 4];
    [1000 * i32]* %529 = getelementptr &([1000 * i32]* %509)[i64 4];
    i32* %530 = getelementptr &([1000 * i32]* %529)[i64 0][i32 %423];
    i32 %531 = load i32* %530;
    i32 %532 = neg i32 %531;
    store i32* %528 with i32 %532;
    i32* %533 = getelementptr &(i32* %508)[i64 5];
    [1000 * i32]* %534 = getelementptr &([1000 * i32]* %509)[i64 5];
    i32* %535 = getelementptr &([1000 * i32]* %534)[i64 0][i32 %423];
    i32 %536 = load i32* %535;
    i32 %537 = neg i32 %536;
    store i32* %533 with i32 %537;
    i32* %538 = getelementptr &(i32* %508)[i64 6];
    [1000 * i32]* %539 = getelementptr &([1000 * i32]* %509)[i64 6];
    i32* %540 = getelementptr &([1000 * i32]* %539)[i64 0][i32 %423];
    i32 %541 = load i32* %540;
    i32 %542 = neg i32 %541;
    store i32* %538 with i32 %542;
    i32* %543 = getelementptr &(i32* %508)[i64 7];
    [1000 * i32]* %544 = getelementptr &([1000 * i32]* %509)[i64 7];
    i32* %545 = getelementptr &([1000 * i32]* %544)[i64 0][i32 %423];
    i32 %546 = load i32* %545;
    i32 %547 = neg i32 %546;
    store i32* %543 with i32 %547;
    i32 %548 = add i32 %423, i32 1;
    i1 %549 = scmp lt i32 %548, i32 1000;
    cbr i1 %549(prob = 1), ^while.body13, ^while.body16;
^while.body16:
    i32 %550 = phi [^while.body15, i32 0] [^while.body18, i32 %629];
    i32 %551 = phi [^while.body15, i32 0] [^while.body18, i32 %628];
    [1000 * i32]* %552 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %550];
    ubr ^while.body17;
^while.body17:
    i32 %553 = phi [^while.body16, i32 0] [^while.body17, i32 %603];
    i32 %554 = phi [^while.body16, i32 %551] [^while.body17, i32 %602];
    i32* %555 = getelementptr &([1000 * i32]* %552)[i64 0][i32 %553];
    i32 %556 = load i32* %555;
    i32* %557 = getelementptr &(i32* %555)[i64 1];
    i32 %558 = load i32* %557;
    i32* %559 = getelementptr &(i32* %555)[i64 2];
    i32 %560 = load i32* %559;
    i32* %561 = getelementptr &(i32* %555)[i64 3];
    i32 %562 = load i32* %561;
    i32* %563 = getelementptr &(i32* %555)[i64 4];
    i32 %564 = load i32* %563;
    i32* %565 = getelementptr &(i32* %555)[i64 5];
    i32 %566 = load i32* %565;
    i32* %567 = getelementptr &(i32* %555)[i64 6];
    i32 %568 = load i32* %567;
    i32* %569 = getelementptr &(i32* %555)[i64 7];
    i32 %570 = load i32* %569;
    i32* %571 = getelementptr &(i32* %555)[i64 8];
    i32 %572 = load i32* %571;
    i32* %573 = getelementptr &(i32* %555)[i64 9];
    i32 %574 = load i32* %573;
    i32* %575 = getelementptr &(i32* %555)[i64 10];
    i32 %576 = load i32* %575;
    i32* %577 = getelementptr &(i32* %555)[i64 11];
    i32 %578 = load i32* %577;
    i32* %579 = getelementptr &(i32* %555)[i64 12];
    i32 %580 = load i32* %579;
    i32* %581 = getelementptr &(i32* %555)[i64 13];
    i32 %582 = load i32* %581;
    i32* %583 = getelementptr &(i32* %555)[i64 14];
    i32 %584 = load i32* %583;
    i32* %585 = getelementptr &(i32* %555)[i64 15];
    i32 %586 = load i32* %585;
    i32 %587 = add i32 %554, i32 %556;
    i32 %588 = add i32 %587, i32 %558;
    i32 %589 = add i32 %588, i32 %560;
    i32 %590 = add i32 %589, i32 %562;
    i32 %591 = add i32 %590, i32 %564;
    i32 %592 = add i32 %591, i32 %566;
    i32 %593 = add i32 %592, i32 %568;
    i32 %594 = add i32 %593, i32 %570;
    i32 %595 = add i32 %594, i32 %572;
    i32 %596 = add i32 %595, i32 %574;
    i32 %597 = add i32 %596, i32 %576;
    i32 %598 = add i32 %597, i32 %578;
    i32 %599 = add i32 %598, i32 %580;
    i32 %600 = add i32 %599, i32 %582;
    i32 %601 = add i32 %600, i32 %584;
    i32 %602 = add i32 %601, i32 %586;
    i32 %603 = add i32 %553, i32 16;
    i1 %604 = scmp lt i32 %603, i32 992;
    cbr i1 %604(prob = 0.98), ^while.body17, ^while.body18;
^while.body18:
    i32* %605 = getelementptr &([1000 * i32]* %552)[i64 0][i32 %603];
    i32 %606 = load i32* %605;
    i32* %607 = getelementptr &(i32* %605)[i64 1];
    i32 %608 = load i32* %607;
    i32* %609 = getelementptr &(i32* %605)[i64 2];
    i32 %610 = load i32* %609;
    i32* %611 = getelementptr &(i32* %605)[i64 3];
    i32 %612 = load i32* %611;
    i32* %613 = getelementptr &(i32* %605)[i64 4];
    i32 %614 = load i32* %613;
    i32* %615 = getelementptr &(i32* %605)[i64 5];
    i32 %616 = load i32* %615;
    i32* %617 = getelementptr &(i32* %605)[i64 6];
    i32 %618 = load i32* %617;
    i32* %619 = getelementptr &(i32* %605)[i64 7];
    i32 %620 = load i32* %619;
    i32 %621 = add i32 %606, i32 %608;
    i32 %622 = add i32 %621, i32 %610;
    i32 %623 = add i32 %622, i32 %612;
    i32 %624 = add i32 %623, i32 %614;
    i32 %625 = add i32 %624, i32 %616;
    i32 %626 = add i32 %625, i32 %618;
    i32 %627 = add i32 %626, i32 %602;
    i32 %628 = add i32 %627, i32 %620;
    i32 %629 = add i32 %550, i32 1;
    i1 %630 = scmp lt i32 %629, i32 1000;
    cbr i1 %630(prob = 1), ^while.body16, ^b4;
^b4:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %628);
    ubr ^b1;
}
