internal func @getarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
internal [1000 * [1000 * i32]]* @a;
internal [1000 * [1000 * i32]]* @b;
internal [1000 * [1000 * i32]]* @c;
func @main() -> i32 { NoRecurse Entry } {
^entry:
    i32* %sum = alloc i32;
    i32* %i = alloc i32;
    store i32* %sum with i32 0;
    store i32* %i with i32 0;
    ubr ^while.body;
^while.body:
    i32 %0 = phi [^entry, i32 0] [^b, i32 %7];
    [1000 * i32]* %1 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %0];
    i32* %2 = getelementptr &([1000 * i32]* %1)[i64 0][i64 0];
    i32 %3 = call (i32*) -> i32 @getarray(i32* %2);
    i32 %4 = load i32* %i;
    i32 %5 = load i32* %sum;
    i1 %6 = scmp neq i32 %3, i32 1000;
    cbr i1 %6(prob = 0.5), ^b1, ^b;
^b:
    i32 %7 = add i32 %4, i32 1;
    store i32* %i with i32 %7;
    i1 %8 = scmp lt i32 %7, i32 1000;
    cbr i1 %8(prob = 0.97), ^while.body, ^b2;
^b1:
    i32 %9 = phi [^while.body, i32 %3] [^b7, i32 0];
    ret i32 %9;
^b2:
    call (i32) -> void @starttime(i32 23);
    store i32* %i with i32 0;
    ubr ^while.body1;
^while.body1:
    i32 %10 = phi [^b2, i32 0] [^while.body3, i32 %79];
    [1000 * i32]* %11 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %10];
    ubr ^while.body2;
^while.body2:
    i32 %12 = phi [^while.body1, i32 0] [^while.body2, i32 %13];
    i32 %13 = add i32 %12, i32 16;
    i1 %14 = scmp lt i32 %13, i32 992;
    [1000 * i32]* %15 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %12];
    [1000 * i32]* %16 = getelementptr &([1000 * i32]* %15)[i64 1];
    [1000 * i32]* %17 = getelementptr &([1000 * i32]* %15)[i64 2];
    [1000 * i32]* %18 = getelementptr &([1000 * i32]* %15)[i64 3];
    [1000 * i32]* %19 = getelementptr &([1000 * i32]* %15)[i64 4];
    [1000 * i32]* %20 = getelementptr &([1000 * i32]* %15)[i64 5];
    [1000 * i32]* %21 = getelementptr &([1000 * i32]* %15)[i64 6];
    [1000 * i32]* %22 = getelementptr &([1000 * i32]* %15)[i64 7];
    [1000 * i32]* %23 = getelementptr &([1000 * i32]* %15)[i64 8];
    [1000 * i32]* %24 = getelementptr &([1000 * i32]* %15)[i64 9];
    [1000 * i32]* %25 = getelementptr &([1000 * i32]* %15)[i64 10];
    [1000 * i32]* %26 = getelementptr &([1000 * i32]* %15)[i64 11];
    [1000 * i32]* %27 = getelementptr &([1000 * i32]* %15)[i64 12];
    [1000 * i32]* %28 = getelementptr &([1000 * i32]* %15)[i64 13];
    [1000 * i32]* %29 = getelementptr &([1000 * i32]* %15)[i64 14];
    [1000 * i32]* %30 = getelementptr &([1000 * i32]* %15)[i64 15];
    i32* %31 = getelementptr &([1000 * i32]* %15)[i64 0][i32 %10];
    i32 %32 = load i32* %31;
    i32* %33 = getelementptr &([1000 * i32]* %16)[i64 0][i32 %10];
    i32* %34 = getelementptr &([1000 * i32]* %17)[i64 0][i32 %10];
    i32* %35 = getelementptr &([1000 * i32]* %18)[i64 0][i32 %10];
    i32* %36 = getelementptr &([1000 * i32]* %19)[i64 0][i32 %10];
    i32* %37 = getelementptr &([1000 * i32]* %20)[i64 0][i32 %10];
    i32* %38 = getelementptr &([1000 * i32]* %21)[i64 0][i32 %10];
    i32* %39 = getelementptr &([1000 * i32]* %22)[i64 0][i32 %10];
    i32* %40 = getelementptr &([1000 * i32]* %23)[i64 0][i32 %10];
    i32* %41 = getelementptr &([1000 * i32]* %24)[i64 0][i32 %10];
    i32* %42 = getelementptr &([1000 * i32]* %25)[i64 0][i32 %10];
    i32* %43 = getelementptr &([1000 * i32]* %26)[i64 0][i32 %10];
    i32* %44 = getelementptr &([1000 * i32]* %27)[i64 0][i32 %10];
    i32* %45 = getelementptr &([1000 * i32]* %28)[i64 0][i32 %10];
    i32* %46 = getelementptr &([1000 * i32]* %29)[i64 0][i32 %10];
    i32* %47 = getelementptr &([1000 * i32]* %30)[i64 0][i32 %10];
    i32* %48 = getelementptr &([1000 * i32]* %11)[i64 0][i32 %12];
    store i32* %48 with i32 %32;
    i32 %49 = load i32* %33;
    i32* %50 = getelementptr &(i32* %48)[i64 1];
    store i32* %50 with i32 %49;
    i32 %51 = load i32* %34;
    i32* %52 = getelementptr &(i32* %48)[i64 2];
    store i32* %52 with i32 %51;
    i32 %53 = load i32* %35;
    i32* %54 = getelementptr &(i32* %48)[i64 3];
    store i32* %54 with i32 %53;
    i32 %55 = load i32* %36;
    i32* %56 = getelementptr &(i32* %48)[i64 4];
    store i32* %56 with i32 %55;
    i32 %57 = load i32* %37;
    i32* %58 = getelementptr &(i32* %48)[i64 5];
    store i32* %58 with i32 %57;
    i32 %59 = load i32* %38;
    i32* %60 = getelementptr &(i32* %48)[i64 6];
    store i32* %60 with i32 %59;
    i32 %61 = load i32* %39;
    i32* %62 = getelementptr &(i32* %48)[i64 7];
    store i32* %62 with i32 %61;
    i32 %63 = load i32* %40;
    i32* %64 = getelementptr &(i32* %48)[i64 8];
    store i32* %64 with i32 %63;
    i32 %65 = load i32* %41;
    i32* %66 = getelementptr &(i32* %48)[i64 9];
    store i32* %66 with i32 %65;
    i32 %67 = load i32* %42;
    i32* %68 = getelementptr &(i32* %48)[i64 10];
    store i32* %68 with i32 %67;
    i32 %69 = load i32* %43;
    i32* %70 = getelementptr &(i32* %48)[i64 11];
    store i32* %70 with i32 %69;
    i32 %71 = load i32* %44;
    i32* %72 = getelementptr &(i32* %48)[i64 12];
    store i32* %72 with i32 %71;
    i32 %73 = load i32* %45;
    i32* %74 = getelementptr &(i32* %48)[i64 13];
    store i32* %74 with i32 %73;
    i32 %75 = load i32* %46;
    i32* %76 = getelementptr &(i32* %48)[i64 14];
    store i32* %76 with i32 %75;
    i32 %77 = load i32* %47;
    i32* %78 = getelementptr &(i32* %48)[i64 15];
    store i32* %78 with i32 %77;
    cbr i1 %14(prob = 0.98), ^while.body2, ^while.body3;
^while.body3:
    i32 %79 = add i32 %10, i32 1;
    i1 %80 = scmp lt i32 %79, i32 1000;
    [1000 * i32]* %81 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %13];
    [1000 * i32]* %82 = getelementptr &([1000 * i32]* %81)[i64 1];
    [1000 * i32]* %83 = getelementptr &([1000 * i32]* %81)[i64 2];
    [1000 * i32]* %84 = getelementptr &([1000 * i32]* %81)[i64 3];
    [1000 * i32]* %85 = getelementptr &([1000 * i32]* %81)[i64 4];
    [1000 * i32]* %86 = getelementptr &([1000 * i32]* %81)[i64 5];
    [1000 * i32]* %87 = getelementptr &([1000 * i32]* %81)[i64 6];
    [1000 * i32]* %88 = getelementptr &([1000 * i32]* %81)[i64 7];
    i32* %89 = getelementptr &([1000 * i32]* %81)[i64 0][i32 %10];
    i32 %90 = load i32* %89;
    i32* %91 = getelementptr &([1000 * i32]* %82)[i64 0][i32 %10];
    i32* %92 = getelementptr &([1000 * i32]* %83)[i64 0][i32 %10];
    i32* %93 = getelementptr &([1000 * i32]* %84)[i64 0][i32 %10];
    i32* %94 = getelementptr &([1000 * i32]* %85)[i64 0][i32 %10];
    i32* %95 = getelementptr &([1000 * i32]* %86)[i64 0][i32 %10];
    i32* %96 = getelementptr &([1000 * i32]* %87)[i64 0][i32 %10];
    i32* %97 = getelementptr &([1000 * i32]* %88)[i64 0][i32 %10];
    i32* %98 = getelementptr &([1000 * i32]* %11)[i64 0][i32 %13];
    store i32* %98 with i32 %90;
    i32 %99 = load i32* %91;
    i32* %100 = getelementptr &(i32* %98)[i64 1];
    store i32* %100 with i32 %99;
    i32 %101 = load i32* %92;
    i32* %102 = getelementptr &(i32* %98)[i64 2];
    store i32* %102 with i32 %101;
    i32 %103 = load i32* %93;
    i32* %104 = getelementptr &(i32* %98)[i64 3];
    store i32* %104 with i32 %103;
    i32 %105 = load i32* %94;
    i32* %106 = getelementptr &(i32* %98)[i64 4];
    store i32* %106 with i32 %105;
    i32 %107 = load i32* %95;
    i32* %108 = getelementptr &(i32* %98)[i64 5];
    store i32* %108 with i32 %107;
    i32 %109 = load i32* %96;
    i32* %110 = getelementptr &(i32* %98)[i64 6];
    store i32* %110 with i32 %109;
    i32 %111 = load i32* %97;
    i32* %112 = getelementptr &(i32* %98)[i64 7];
    store i32* %112 with i32 %111;
    store i32* %i with i32 %79;
    cbr i1 %80(prob = 1), ^while.body1, ^b3;
^b3:
    store i32* %i with i32 0;
    ubr ^while.body4;
^while.body4:
    i32 %113 = phi [^b3, i32 0] [^b4, i32 %292];
    [1000 * i32]* %114 = getelementptr &([1000 * [1000 * i32]]* @a)[i64 0][i32 %113];
    [1000 * i32]* %115 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %113];
    ubr ^while.body5;
^while.body5:
    i32 %116 = phi [^while.body4, i32 0] [^while.body7, i32 %233];
    ubr ^while.body6;
^while.body6:
    i32 %117 = phi [^while.body5, i32 0] [^while.body6, i32 %119];
    i32 %118 = phi [^while.body5, i32 0] [^while.body6, i32 %232];
    i32 %119 = add i32 %117, i32 16;
    i1 %120 = scmp lt i32 %119, i32 992;
    [1000 * i32]* %121 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %117];
    [1000 * i32]* %122 = getelementptr &([1000 * i32]* %121)[i64 1];
    [1000 * i32]* %123 = getelementptr &([1000 * i32]* %121)[i64 2];
    [1000 * i32]* %124 = getelementptr &([1000 * i32]* %121)[i64 3];
    [1000 * i32]* %125 = getelementptr &([1000 * i32]* %121)[i64 4];
    [1000 * i32]* %126 = getelementptr &([1000 * i32]* %121)[i64 5];
    [1000 * i32]* %127 = getelementptr &([1000 * i32]* %121)[i64 6];
    [1000 * i32]* %128 = getelementptr &([1000 * i32]* %121)[i64 7];
    [1000 * i32]* %129 = getelementptr &([1000 * i32]* %121)[i64 8];
    [1000 * i32]* %130 = getelementptr &([1000 * i32]* %121)[i64 9];
    [1000 * i32]* %131 = getelementptr &([1000 * i32]* %121)[i64 10];
    [1000 * i32]* %132 = getelementptr &([1000 * i32]* %121)[i64 11];
    [1000 * i32]* %133 = getelementptr &([1000 * i32]* %121)[i64 12];
    [1000 * i32]* %134 = getelementptr &([1000 * i32]* %121)[i64 13];
    [1000 * i32]* %135 = getelementptr &([1000 * i32]* %121)[i64 14];
    [1000 * i32]* %136 = getelementptr &([1000 * i32]* %121)[i64 15];
    i32* %137 = getelementptr &([1000 * i32]* %121)[i64 0][i32 %116];
    i32* %138 = getelementptr &([1000 * i32]* %122)[i64 0][i32 %116];
    i32* %139 = getelementptr &([1000 * i32]* %123)[i64 0][i32 %116];
    i32* %140 = getelementptr &([1000 * i32]* %124)[i64 0][i32 %116];
    i32* %141 = getelementptr &([1000 * i32]* %125)[i64 0][i32 %116];
    i32* %142 = getelementptr &([1000 * i32]* %126)[i64 0][i32 %116];
    i32* %143 = getelementptr &([1000 * i32]* %127)[i64 0][i32 %116];
    i32* %144 = getelementptr &([1000 * i32]* %128)[i64 0][i32 %116];
    i32* %145 = getelementptr &([1000 * i32]* %129)[i64 0][i32 %116];
    i32* %146 = getelementptr &([1000 * i32]* %130)[i64 0][i32 %116];
    i32* %147 = getelementptr &([1000 * i32]* %131)[i64 0][i32 %116];
    i32* %148 = getelementptr &([1000 * i32]* %132)[i64 0][i32 %116];
    i32* %149 = getelementptr &([1000 * i32]* %133)[i64 0][i32 %116];
    i32* %150 = getelementptr &([1000 * i32]* %134)[i64 0][i32 %116];
    i32* %151 = getelementptr &([1000 * i32]* %135)[i64 0][i32 %116];
    i32* %152 = getelementptr &([1000 * i32]* %136)[i64 0][i32 %116];
    i32* %153 = getelementptr &([1000 * i32]* %114)[i64 0][i32 %117];
    i32 %154 = load i32* %153;
    i32 %155 = load i32* %137;
    i32 %156 = mul i32 %154, i32 %155;
    i32 %157 = add i32 %118, i32 %156;
    i32* %158 = getelementptr &(i32* %153)[i64 1];
    i32 %159 = load i32* %158;
    i32 %160 = load i32* %138;
    i32 %161 = mul i32 %159, i32 %160;
    i32 %162 = add i32 %157, i32 %161;
    i32* %163 = getelementptr &(i32* %153)[i64 2];
    i32 %164 = load i32* %163;
    i32 %165 = load i32* %139;
    i32 %166 = mul i32 %164, i32 %165;
    i32 %167 = add i32 %162, i32 %166;
    i32* %168 = getelementptr &(i32* %153)[i64 3];
    i32 %169 = load i32* %168;
    i32 %170 = load i32* %140;
    i32 %171 = mul i32 %169, i32 %170;
    i32 %172 = add i32 %167, i32 %171;
    i32* %173 = getelementptr &(i32* %153)[i64 4];
    i32 %174 = load i32* %173;
    i32 %175 = load i32* %141;
    i32 %176 = mul i32 %174, i32 %175;
    i32 %177 = add i32 %172, i32 %176;
    i32* %178 = getelementptr &(i32* %153)[i64 5];
    i32 %179 = load i32* %178;
    i32 %180 = load i32* %142;
    i32 %181 = mul i32 %179, i32 %180;
    i32 %182 = add i32 %177, i32 %181;
    i32* %183 = getelementptr &(i32* %153)[i64 6];
    i32 %184 = load i32* %183;
    i32 %185 = load i32* %143;
    i32 %186 = mul i32 %184, i32 %185;
    i32 %187 = add i32 %182, i32 %186;
    i32* %188 = getelementptr &(i32* %153)[i64 7];
    i32 %189 = load i32* %188;
    i32 %190 = load i32* %144;
    i32 %191 = mul i32 %189, i32 %190;
    i32 %192 = add i32 %187, i32 %191;
    i32* %193 = getelementptr &(i32* %153)[i64 8];
    i32 %194 = load i32* %193;
    i32 %195 = load i32* %145;
    i32 %196 = mul i32 %194, i32 %195;
    i32 %197 = add i32 %192, i32 %196;
    i32* %198 = getelementptr &(i32* %153)[i64 9];
    i32 %199 = load i32* %198;
    i32 %200 = load i32* %146;
    i32 %201 = mul i32 %199, i32 %200;
    i32 %202 = add i32 %197, i32 %201;
    i32* %203 = getelementptr &(i32* %153)[i64 10];
    i32 %204 = load i32* %203;
    i32 %205 = load i32* %147;
    i32 %206 = mul i32 %204, i32 %205;
    i32 %207 = add i32 %202, i32 %206;
    i32* %208 = getelementptr &(i32* %153)[i64 11];
    i32 %209 = load i32* %208;
    i32 %210 = load i32* %148;
    i32 %211 = mul i32 %209, i32 %210;
    i32 %212 = add i32 %207, i32 %211;
    i32* %213 = getelementptr &(i32* %153)[i64 12];
    i32 %214 = load i32* %213;
    i32 %215 = load i32* %149;
    i32 %216 = mul i32 %214, i32 %215;
    i32 %217 = add i32 %212, i32 %216;
    i32* %218 = getelementptr &(i32* %153)[i64 13];
    i32 %219 = load i32* %218;
    i32 %220 = load i32* %150;
    i32 %221 = mul i32 %219, i32 %220;
    i32 %222 = add i32 %217, i32 %221;
    i32* %223 = getelementptr &(i32* %153)[i64 14];
    i32 %224 = load i32* %223;
    i32 %225 = load i32* %151;
    i32 %226 = mul i32 %224, i32 %225;
    i32 %227 = add i32 %222, i32 %226;
    i32* %228 = getelementptr &(i32* %153)[i64 15];
    i32 %229 = load i32* %228;
    i32 %230 = load i32* %152;
    i32 %231 = mul i32 %229, i32 %230;
    i32 %232 = add i32 %227, i32 %231;
    cbr i1 %120(prob = 0.98), ^while.body6, ^while.body7;
^while.body7:
    i32 %233 = add i32 %116, i32 1;
    i1 %234 = scmp lt i32 %233, i32 1000;
    i32* %235 = getelementptr &([1000 * i32]* %115)[i64 0][i32 %116];
    [1000 * i32]* %236 = getelementptr &([1000 * [1000 * i32]]* @b)[i64 0][i32 %119];
    [1000 * i32]* %237 = getelementptr &([1000 * i32]* %236)[i64 1];
    [1000 * i32]* %238 = getelementptr &([1000 * i32]* %236)[i64 2];
    [1000 * i32]* %239 = getelementptr &([1000 * i32]* %236)[i64 3];
    [1000 * i32]* %240 = getelementptr &([1000 * i32]* %236)[i64 4];
    [1000 * i32]* %241 = getelementptr &([1000 * i32]* %236)[i64 5];
    [1000 * i32]* %242 = getelementptr &([1000 * i32]* %236)[i64 6];
    [1000 * i32]* %243 = getelementptr &([1000 * i32]* %236)[i64 7];
    i32* %244 = getelementptr &([1000 * i32]* %236)[i64 0][i32 %116];
    i32* %245 = getelementptr &([1000 * i32]* %237)[i64 0][i32 %116];
    i32* %246 = getelementptr &([1000 * i32]* %238)[i64 0][i32 %116];
    i32* %247 = getelementptr &([1000 * i32]* %239)[i64 0][i32 %116];
    i32* %248 = getelementptr &([1000 * i32]* %240)[i64 0][i32 %116];
    i32* %249 = getelementptr &([1000 * i32]* %241)[i64 0][i32 %116];
    i32* %250 = getelementptr &([1000 * i32]* %242)[i64 0][i32 %116];
    i32* %251 = getelementptr &([1000 * i32]* %243)[i64 0][i32 %116];
    i32* %252 = getelementptr &([1000 * i32]* %114)[i64 0][i32 %119];
    i32 %253 = load i32* %252;
    i32 %254 = load i32* %244;
    i32 %255 = mul i32 %253, i32 %254;
    i32* %256 = getelementptr &(i32* %252)[i64 1];
    i32 %257 = load i32* %256;
    i32 %258 = load i32* %245;
    i32 %259 = mul i32 %257, i32 %258;
    i32 %260 = add i32 %255, i32 %259;
    i32* %261 = getelementptr &(i32* %252)[i64 2];
    i32 %262 = load i32* %261;
    i32 %263 = load i32* %246;
    i32 %264 = mul i32 %262, i32 %263;
    i32 %265 = add i32 %260, i32 %264;
    i32* %266 = getelementptr &(i32* %252)[i64 3];
    i32 %267 = load i32* %266;
    i32 %268 = load i32* %247;
    i32 %269 = mul i32 %267, i32 %268;
    i32 %270 = add i32 %265, i32 %269;
    i32* %271 = getelementptr &(i32* %252)[i64 4];
    i32 %272 = load i32* %271;
    i32 %273 = load i32* %248;
    i32 %274 = mul i32 %272, i32 %273;
    i32 %275 = add i32 %270, i32 %274;
    i32* %276 = getelementptr &(i32* %252)[i64 5];
    i32 %277 = load i32* %276;
    i32 %278 = load i32* %249;
    i32 %279 = mul i32 %277, i32 %278;
    i32 %280 = add i32 %275, i32 %279;
    i32* %281 = getelementptr &(i32* %252)[i64 6];
    i32 %282 = load i32* %281;
    i32 %283 = load i32* %250;
    i32 %284 = mul i32 %282, i32 %283;
    i32 %285 = add i32 %280, i32 %284;
    i32* %286 = getelementptr &(i32* %252)[i64 7];
    i32 %287 = load i32* %286;
    i32 %288 = load i32* %251;
    i32 %289 = mul i32 %287, i32 %288;
    i32 %290 = add i32 %285, i32 %289;
    i32 %291 = add i32 %290, i32 %232;
    store i32* %235 with i32 %291;
    cbr i1 %234(prob = 1), ^while.body5, ^b4;
^b4:
    i32 %292 = add i32 %113, i32 1;
    store i32* %i with i32 %292;
    i1 %293 = scmp lt i32 %292, i32 1000;
    cbr i1 %293(prob = 1), ^while.body4, ^while.body8;
^while.body8:
    i32 %294 = phi [^b4, i32 0] [^while.body11, i32 %323];
    [1000 * i32]* %295 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %294];
    ubr ^while.body9;
^while.body9:
    i32 %296 = phi [^while.body8, i32 0] [^b5, i32 %302];
    i32 %297 = phi [^while.body8, i32 2147483647] [^b5, i32 %301];
    i32* %298 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %296];
    i32 %299 = load i32* %298;
    i1 %300 = scmp lt i32 %299, i32 %297;
    cbr i1 %300(prob = 0.5), ^if.then, ^b5;
^if.then:
    ubr ^b5;
^b5:
    i32 %301 = phi [^while.body9, i32 %297] [^if.then, i32 %299];
    i32 %302 = add i32 %296, i32 1;
    i1 %303 = scmp lt i32 %302, i32 1000;
    cbr i1 %303(prob = 1), ^while.body9, ^while.body10;
^while.body10:
    i32 %304 = phi [^b5, i32 0] [^while.body10, i32 %305];
    i32 %305 = add i32 %304, i32 16;
    i1 %306 = scmp lt i32 %305, i32 992;
    i32* %307 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %304];
    store i32* %307 with i32 %301;
    i32* %308 = getelementptr &(i32* %307)[i64 1];
    store i32* %308 with i32 %301;
    i32* %309 = getelementptr &(i32* %307)[i64 2];
    store i32* %309 with i32 %301;
    i32* %310 = getelementptr &(i32* %307)[i64 3];
    store i32* %310 with i32 %301;
    i32* %311 = getelementptr &(i32* %307)[i64 4];
    store i32* %311 with i32 %301;
    i32* %312 = getelementptr &(i32* %307)[i64 5];
    store i32* %312 with i32 %301;
    i32* %313 = getelementptr &(i32* %307)[i64 6];
    store i32* %313 with i32 %301;
    i32* %314 = getelementptr &(i32* %307)[i64 7];
    store i32* %314 with i32 %301;
    i32* %315 = getelementptr &(i32* %307)[i64 8];
    store i32* %315 with i32 %301;
    i32* %316 = getelementptr &(i32* %307)[i64 9];
    store i32* %316 with i32 %301;
    i32* %317 = getelementptr &(i32* %307)[i64 10];
    store i32* %317 with i32 %301;
    i32* %318 = getelementptr &(i32* %307)[i64 11];
    store i32* %318 with i32 %301;
    i32* %319 = getelementptr &(i32* %307)[i64 12];
    store i32* %319 with i32 %301;
    i32* %320 = getelementptr &(i32* %307)[i64 13];
    store i32* %320 with i32 %301;
    i32* %321 = getelementptr &(i32* %307)[i64 14];
    store i32* %321 with i32 %301;
    i32* %322 = getelementptr &(i32* %307)[i64 15];
    store i32* %322 with i32 %301;
    cbr i1 %306(prob = 0.98), ^while.body10, ^while.body11;
^while.body11:
    i32 %323 = add i32 %294, i32 1;
    i1 %324 = scmp lt i32 %323, i32 1000;
    i32* %325 = getelementptr &([1000 * i32]* %295)[i64 0][i32 %305];
    store i32* %325 with i32 %301;
    i32* %326 = getelementptr &(i32* %325)[i64 1];
    store i32* %326 with i32 %301;
    i32* %327 = getelementptr &(i32* %325)[i64 2];
    store i32* %327 with i32 %301;
    i32* %328 = getelementptr &(i32* %325)[i64 3];
    store i32* %328 with i32 %301;
    i32* %329 = getelementptr &(i32* %325)[i64 4];
    store i32* %329 with i32 %301;
    i32* %330 = getelementptr &(i32* %325)[i64 5];
    store i32* %330 with i32 %301;
    i32* %331 = getelementptr &(i32* %325)[i64 6];
    store i32* %331 with i32 %301;
    i32* %332 = getelementptr &(i32* %325)[i64 7];
    store i32* %332 with i32 %301;
    cbr i1 %324(prob = 1), ^while.body8, ^b6;
^b6:
    store i32* %i with i32 0;
    ubr ^while.body12;
^while.body12:
    i32 %333 = phi [^b6, i32 0] [^while.body14, i32 %418];
    [1000 * i32]* %334 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %333];
    ubr ^while.body13;
^while.body13:
    i32 %335 = phi [^while.body12, i32 0] [^while.body13, i32 %336];
    i32 %336 = add i32 %335, i32 16;
    i1 %337 = scmp lt i32 %336, i32 992;
    [1000 * i32]* %338 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %335];
    [1000 * i32]* %339 = getelementptr &([1000 * i32]* %338)[i64 1];
    [1000 * i32]* %340 = getelementptr &([1000 * i32]* %338)[i64 2];
    [1000 * i32]* %341 = getelementptr &([1000 * i32]* %338)[i64 3];
    [1000 * i32]* %342 = getelementptr &([1000 * i32]* %338)[i64 4];
    [1000 * i32]* %343 = getelementptr &([1000 * i32]* %338)[i64 5];
    [1000 * i32]* %344 = getelementptr &([1000 * i32]* %338)[i64 6];
    [1000 * i32]* %345 = getelementptr &([1000 * i32]* %338)[i64 7];
    [1000 * i32]* %346 = getelementptr &([1000 * i32]* %338)[i64 8];
    [1000 * i32]* %347 = getelementptr &([1000 * i32]* %338)[i64 9];
    [1000 * i32]* %348 = getelementptr &([1000 * i32]* %338)[i64 10];
    [1000 * i32]* %349 = getelementptr &([1000 * i32]* %338)[i64 11];
    [1000 * i32]* %350 = getelementptr &([1000 * i32]* %338)[i64 12];
    [1000 * i32]* %351 = getelementptr &([1000 * i32]* %338)[i64 13];
    [1000 * i32]* %352 = getelementptr &([1000 * i32]* %338)[i64 14];
    [1000 * i32]* %353 = getelementptr &([1000 * i32]* %338)[i64 15];
    i32* %354 = getelementptr &([1000 * i32]* %338)[i64 0][i32 %333];
    i32 %355 = load i32* %354;
    i32 %356 = neg i32 %355;
    i32* %357 = getelementptr &([1000 * i32]* %339)[i64 0][i32 %333];
    i32* %358 = getelementptr &([1000 * i32]* %340)[i64 0][i32 %333];
    i32* %359 = getelementptr &([1000 * i32]* %341)[i64 0][i32 %333];
    i32* %360 = getelementptr &([1000 * i32]* %342)[i64 0][i32 %333];
    i32* %361 = getelementptr &([1000 * i32]* %343)[i64 0][i32 %333];
    i32* %362 = getelementptr &([1000 * i32]* %344)[i64 0][i32 %333];
    i32* %363 = getelementptr &([1000 * i32]* %345)[i64 0][i32 %333];
    i32* %364 = getelementptr &([1000 * i32]* %346)[i64 0][i32 %333];
    i32* %365 = getelementptr &([1000 * i32]* %347)[i64 0][i32 %333];
    i32* %366 = getelementptr &([1000 * i32]* %348)[i64 0][i32 %333];
    i32* %367 = getelementptr &([1000 * i32]* %349)[i64 0][i32 %333];
    i32* %368 = getelementptr &([1000 * i32]* %350)[i64 0][i32 %333];
    i32* %369 = getelementptr &([1000 * i32]* %351)[i64 0][i32 %333];
    i32* %370 = getelementptr &([1000 * i32]* %352)[i64 0][i32 %333];
    i32* %371 = getelementptr &([1000 * i32]* %353)[i64 0][i32 %333];
    i32* %372 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %335];
    store i32* %372 with i32 %356;
    i32 %373 = load i32* %357;
    i32 %374 = neg i32 %373;
    i32* %375 = getelementptr &(i32* %372)[i64 1];
    store i32* %375 with i32 %374;
    i32 %376 = load i32* %358;
    i32 %377 = neg i32 %376;
    i32* %378 = getelementptr &(i32* %372)[i64 2];
    store i32* %378 with i32 %377;
    i32 %379 = load i32* %359;
    i32 %380 = neg i32 %379;
    i32* %381 = getelementptr &(i32* %372)[i64 3];
    store i32* %381 with i32 %380;
    i32 %382 = load i32* %360;
    i32 %383 = neg i32 %382;
    i32* %384 = getelementptr &(i32* %372)[i64 4];
    store i32* %384 with i32 %383;
    i32 %385 = load i32* %361;
    i32 %386 = neg i32 %385;
    i32* %387 = getelementptr &(i32* %372)[i64 5];
    store i32* %387 with i32 %386;
    i32 %388 = load i32* %362;
    i32 %389 = neg i32 %388;
    i32* %390 = getelementptr &(i32* %372)[i64 6];
    store i32* %390 with i32 %389;
    i32 %391 = load i32* %363;
    i32 %392 = neg i32 %391;
    i32* %393 = getelementptr &(i32* %372)[i64 7];
    store i32* %393 with i32 %392;
    i32 %394 = load i32* %364;
    i32 %395 = neg i32 %394;
    i32* %396 = getelementptr &(i32* %372)[i64 8];
    store i32* %396 with i32 %395;
    i32 %397 = load i32* %365;
    i32 %398 = neg i32 %397;
    i32* %399 = getelementptr &(i32* %372)[i64 9];
    store i32* %399 with i32 %398;
    i32 %400 = load i32* %366;
    i32 %401 = neg i32 %400;
    i32* %402 = getelementptr &(i32* %372)[i64 10];
    store i32* %402 with i32 %401;
    i32 %403 = load i32* %367;
    i32 %404 = neg i32 %403;
    i32* %405 = getelementptr &(i32* %372)[i64 11];
    store i32* %405 with i32 %404;
    i32 %406 = load i32* %368;
    i32 %407 = neg i32 %406;
    i32* %408 = getelementptr &(i32* %372)[i64 12];
    store i32* %408 with i32 %407;
    i32 %409 = load i32* %369;
    i32 %410 = neg i32 %409;
    i32* %411 = getelementptr &(i32* %372)[i64 13];
    store i32* %411 with i32 %410;
    i32 %412 = load i32* %370;
    i32 %413 = neg i32 %412;
    i32* %414 = getelementptr &(i32* %372)[i64 14];
    store i32* %414 with i32 %413;
    i32 %415 = load i32* %371;
    i32 %416 = neg i32 %415;
    i32* %417 = getelementptr &(i32* %372)[i64 15];
    store i32* %417 with i32 %416;
    cbr i1 %337(prob = 0.98), ^while.body13, ^while.body14;
^while.body14:
    i32 %418 = add i32 %333, i32 1;
    i1 %419 = scmp lt i32 %418, i32 1000;
    [1000 * i32]* %420 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %336];
    [1000 * i32]* %421 = getelementptr &([1000 * i32]* %420)[i64 1];
    [1000 * i32]* %422 = getelementptr &([1000 * i32]* %420)[i64 2];
    [1000 * i32]* %423 = getelementptr &([1000 * i32]* %420)[i64 3];
    [1000 * i32]* %424 = getelementptr &([1000 * i32]* %420)[i64 4];
    [1000 * i32]* %425 = getelementptr &([1000 * i32]* %420)[i64 5];
    [1000 * i32]* %426 = getelementptr &([1000 * i32]* %420)[i64 6];
    [1000 * i32]* %427 = getelementptr &([1000 * i32]* %420)[i64 7];
    i32* %428 = getelementptr &([1000 * i32]* %420)[i64 0][i32 %333];
    i32 %429 = load i32* %428;
    i32 %430 = neg i32 %429;
    i32* %431 = getelementptr &([1000 * i32]* %421)[i64 0][i32 %333];
    i32* %432 = getelementptr &([1000 * i32]* %422)[i64 0][i32 %333];
    i32* %433 = getelementptr &([1000 * i32]* %423)[i64 0][i32 %333];
    i32* %434 = getelementptr &([1000 * i32]* %424)[i64 0][i32 %333];
    i32* %435 = getelementptr &([1000 * i32]* %425)[i64 0][i32 %333];
    i32* %436 = getelementptr &([1000 * i32]* %426)[i64 0][i32 %333];
    i32* %437 = getelementptr &([1000 * i32]* %427)[i64 0][i32 %333];
    i32* %438 = getelementptr &([1000 * i32]* %334)[i64 0][i32 %336];
    store i32* %438 with i32 %430;
    i32 %439 = load i32* %431;
    i32 %440 = neg i32 %439;
    i32* %441 = getelementptr &(i32* %438)[i64 1];
    store i32* %441 with i32 %440;
    i32 %442 = load i32* %432;
    i32 %443 = neg i32 %442;
    i32* %444 = getelementptr &(i32* %438)[i64 2];
    store i32* %444 with i32 %443;
    i32 %445 = load i32* %433;
    i32 %446 = neg i32 %445;
    i32* %447 = getelementptr &(i32* %438)[i64 3];
    store i32* %447 with i32 %446;
    i32 %448 = load i32* %434;
    i32 %449 = neg i32 %448;
    i32* %450 = getelementptr &(i32* %438)[i64 4];
    store i32* %450 with i32 %449;
    i32 %451 = load i32* %435;
    i32 %452 = neg i32 %451;
    i32* %453 = getelementptr &(i32* %438)[i64 5];
    store i32* %453 with i32 %452;
    i32 %454 = load i32* %436;
    i32 %455 = neg i32 %454;
    i32* %456 = getelementptr &(i32* %438)[i64 6];
    store i32* %456 with i32 %455;
    i32 %457 = load i32* %437;
    i32 %458 = neg i32 %457;
    i32* %459 = getelementptr &(i32* %438)[i64 7];
    store i32* %459 with i32 %458;
    store i32* %i with i32 %418;
    cbr i1 %419(prob = 1), ^while.body12, ^while.body15;
^while.body15:
    i32 %460 = phi [^while.body14, i32 0] [^while.body17, i32 %515];
    i32 %461 = phi [^while.body14, i32 %5] [^while.body17, i32 %540];
    [1000 * i32]* %462 = getelementptr &([1000 * [1000 * i32]]* @c)[i64 0][i32 %460];
    ubr ^while.body16;
^while.body16:
    i32 %463 = phi [^while.body15, i32 %461] [^while.body16, i32 %514];
    i32 %464 = phi [^while.body15, i32 0] [^while.body16, i32 %465];
    i32 %465 = add i32 %464, i32 16;
    i1 %466 = scmp lt i32 %465, i32 992;
    i32* %467 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %464];
    i32 %468 = load i32* %467;
    i32 %469 = add i32 %463, i32 %468;
    i32* %470 = getelementptr &(i32* %467)[i64 1];
    i32 %471 = load i32* %470;
    i32 %472 = add i32 %469, i32 %471;
    i32* %473 = getelementptr &(i32* %467)[i64 2];
    i32 %474 = load i32* %473;
    i32 %475 = add i32 %472, i32 %474;
    i32* %476 = getelementptr &(i32* %467)[i64 3];
    i32 %477 = load i32* %476;
    i32 %478 = add i32 %475, i32 %477;
    i32* %479 = getelementptr &(i32* %467)[i64 4];
    i32 %480 = load i32* %479;
    i32 %481 = add i32 %478, i32 %480;
    i32* %482 = getelementptr &(i32* %467)[i64 5];
    i32 %483 = load i32* %482;
    i32 %484 = add i32 %481, i32 %483;
    i32* %485 = getelementptr &(i32* %467)[i64 6];
    i32 %486 = load i32* %485;
    i32 %487 = add i32 %484, i32 %486;
    i32* %488 = getelementptr &(i32* %467)[i64 7];
    i32 %489 = load i32* %488;
    i32 %490 = add i32 %487, i32 %489;
    i32* %491 = getelementptr &(i32* %467)[i64 8];
    i32 %492 = load i32* %491;
    i32 %493 = add i32 %490, i32 %492;
    i32* %494 = getelementptr &(i32* %467)[i64 9];
    i32 %495 = load i32* %494;
    i32 %496 = add i32 %493, i32 %495;
    i32* %497 = getelementptr &(i32* %467)[i64 10];
    i32 %498 = load i32* %497;
    i32 %499 = add i32 %496, i32 %498;
    i32* %500 = getelementptr &(i32* %467)[i64 11];
    i32 %501 = load i32* %500;
    i32 %502 = add i32 %499, i32 %501;
    i32* %503 = getelementptr &(i32* %467)[i64 12];
    i32 %504 = load i32* %503;
    i32 %505 = add i32 %502, i32 %504;
    i32* %506 = getelementptr &(i32* %467)[i64 13];
    i32 %507 = load i32* %506;
    i32 %508 = add i32 %505, i32 %507;
    i32* %509 = getelementptr &(i32* %467)[i64 14];
    i32 %510 = load i32* %509;
    i32 %511 = add i32 %508, i32 %510;
    i32* %512 = getelementptr &(i32* %467)[i64 15];
    i32 %513 = load i32* %512;
    i32 %514 = add i32 %511, i32 %513;
    store i32* %sum with i32 %514;
    cbr i1 %466(prob = 0.98), ^while.body16, ^while.body17;
^while.body17:
    i32 %515 = add i32 %460, i32 1;
    i1 %516 = scmp lt i32 %515, i32 1000;
    i32* %517 = getelementptr &([1000 * i32]* %462)[i64 0][i32 %465];
    i32 %518 = load i32* %517;
    i32* %519 = getelementptr &(i32* %517)[i64 1];
    i32 %520 = load i32* %519;
    i32 %521 = add i32 %518, i32 %520;
    i32* %522 = getelementptr &(i32* %517)[i64 2];
    i32 %523 = load i32* %522;
    i32 %524 = add i32 %521, i32 %523;
    i32* %525 = getelementptr &(i32* %517)[i64 3];
    i32 %526 = load i32* %525;
    i32 %527 = add i32 %524, i32 %526;
    i32* %528 = getelementptr &(i32* %517)[i64 4];
    i32 %529 = load i32* %528;
    i32 %530 = add i32 %527, i32 %529;
    i32* %531 = getelementptr &(i32* %517)[i64 5];
    i32 %532 = load i32* %531;
    i32 %533 = add i32 %530, i32 %532;
    i32* %534 = getelementptr &(i32* %517)[i64 6];
    i32 %535 = load i32* %534;
    i32 %536 = add i32 %533, i32 %535;
    i32 %537 = add i32 %536, i32 %514;
    i32* %538 = getelementptr &(i32* %517)[i64 7];
    i32 %539 = load i32* %538;
    store i32* %i with i32 %515;
    i32 %540 = add i32 %537, i32 %539;
    cbr i1 %516(prob = 1), ^while.body15, ^b7;
^b7:
    call (i32) -> void @stoptime(i32 92);
    call (i32) -> void @putint(i32 %540);
    ubr ^b1;
}
