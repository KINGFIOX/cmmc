internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry():
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    i32 %2 = mul i32 %0, i32 %1;
    i32 %3 = add i32 %2, i32 1;
    i32 %4 = add i32 %2, i32 2;
    i32 %5 = add i32 %2, i32 3;
    ubr [ ^for.body i32 %3, i32 %4, i32 %5, i32 %2, i32 0 ];
^for.body(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4):
    i32 %0 = add i32 %arg3, i32 120;
    i32 %1 = mul i32 %arg4, i32 16;
    i32 %2 = add i32 %0, i32 %1;
    i32 %3 = add i32 %arg4, i32 16;
    i1 %4 = scmp lt i32 %3, i32 960;
    cbr i1 %4, [ ^for.body i32 %arg, i32 %arg1, i32 %arg2, i32 %2, i32 %3 ], [ ^for.body1 i32 %arg, i32 %arg1, i32 %arg2, i32 %2 ];
^for.body1(i32 %arg, i32 %arg1, i32 %arg2, i32 %arg3):
    i32 %0 = add i32 %arg3, i32 39180;
    call (i32) -> void @putint(i32 %0);
    call (i32) -> void @putint(i32 %arg2);
    call (i32) -> void @putint(i32 %arg1);
    call (i32) -> void @putint(i32 %arg);
    ret i32 0;
}
