internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { Entry } {
^entry:
    i32* %w = alloc i32;
    i32* %z = alloc i32;
    i32* %y = alloc i32;
    i32* %x = alloc i32;
    i32 %0 = call () -> i32 @getint();
    store i32* %x with i32 %0;
    i32 %1 = call () -> i32 @getint();
    store i32* %y with i32 %1;
    i32 %2 = load i32* %x;
    i32 %3 = load i32* %y;
    i32 %4 = xor i32 %2, i32 %3;
    store i32* %z with i32 %4;
    i32 %5 = load i32* %y;
    i32 %6 = load i32* %x;
    i32 %7 = xor i32 %5, i32 %6;
    store i32* %w with i32 %7;
    i32 %8 = load i32* %z;
    i32 %9 = load i32* %w;
    i1 %10 = scmp eq i32 %8, i32 %9;
    i32 %11 = zext i1 %10 to i32;
    ret i32 %11;
}
