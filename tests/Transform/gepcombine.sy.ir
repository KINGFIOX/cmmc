struct foo {i32 x, i32 y};

internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry():
    [10 * struct foo]* %a = alloc [10 * struct foo];
    i32* %0 = getelementptr &([10 * struct foo]* %a)[i32 0][i32 0].x;
    i32 %1 = call () -> i32 @getint();
    store i32* %0 with i32 %1;
    i32* %2 = getelementptr &([10 * struct foo]* %a)[i32 0][i32 1].y;
    i32 %3 = call () -> i32 @getint();
    store i32* %2 with i32 %3;
    i32* %4 = getelementptr &([10 * struct foo]* %a)[i32 0][i32 0].y;
    i32 %5 = load i32* %4;
    i32* %6 = getelementptr &([10 * struct foo]* %a)[i32 0][i32 1].x;
    i32 %7 = load i32* %6;
    i32 %8 = add i32 %5, i32 %7;
    ret i32 %8;
}
