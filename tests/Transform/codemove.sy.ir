internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry():
    i32 %0 = call () -> i32 @getint();
    i32 %1 = call () -> i32 @getint();
    i32* %i = alloc i32;
    ubr [ ^for.body i32* %i, i32 %0, i32 %1, i32 0, i32 0 ];
^for.body(i32* %arg, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4):
    i32 %0 = add i32 %arg1, i32 %arg2;
    i32 %1 = add i32 %arg3, i32 %0;
    i32 %2 = add i32 %arg4, i32 1;
    i1 %3 = scmp lt i32 %2, i32 10;
    cbr i1 %3, [ ^for.body i32* %arg, i32 %arg1, i32 %arg2, i32 %1, i32 %2 ], [ ^b i32* %arg, i32 %1 ];
^b(i32* %arg, i32 %arg1):
    free i32* %arg;
    call (i32) -> void @putint(i32 %arg1);
    ret i32 0;
}
