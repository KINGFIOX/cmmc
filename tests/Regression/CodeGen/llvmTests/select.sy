//This file is automatically generated by llvm2c from llvm/test/CodeGen/RISCV/select

// function declarations
uint32_t select_add_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_add_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_add_3(uint32_t var0, uint32_t var1);
uint32_t select_and_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_and_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_and_3(uint32_t var0, uint32_t var1);
uint32_t select_ashr_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_ashr_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_ashr_3(uint32_t var0, uint32_t var1);
uint32_t select_lshr_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_lshr_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_lshr_3(uint32_t var0, uint32_t var1);
uint32_t select_or(uint32_t var0, uint32_t var1, uint8_t var2);
uint32_t select_or_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_or_1b(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_or_2(uint32_t var0, uint32_t var1, uint8_t var2);
uint32_t select_or_2b(uint32_t var0, uint32_t var1, uint8_t var2);
uint32_t select_or_3(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_or_3b(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_or_b(uint32_t var0, uint32_t var1, uint8_t var2);
uint32_t select_shl_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_shl_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_shl_3(uint32_t var0, uint32_t var1);
uint32_t select_sub_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_sub_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_sub_3(uint32_t var0, uint32_t var1);
uint32_t select_udiv_1(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_udiv_2(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t select_udiv_3(uint32_t var0, uint32_t var1);
uint16_t select_xor_1(uint16_t var0, uint8_t var1);
uint16_t select_xor_1b(uint16_t var0, uint8_t var1);
uint32_t select_xor_2(uint32_t var0, uint32_t var1, uint8_t var2);
uint32_t select_xor_2b(uint32_t var0, uint32_t var1, uint8_t var2);
uint16_t select_xor_3(uint16_t var0, uint8_t var1);
uint16_t select_xor_3b(uint16_t var0, uint8_t var1);
uint32_t select_xor_4(uint32_t var0, uint32_t var1, uint8_t var2);
uint32_t select_xor_4b(uint32_t var0, uint32_t var1, uint8_t var2);

uint32_t select_add_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? (var1 + var2) : var2;
}

uint32_t select_add_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : (var1 + var2);
}

uint32_t select_add_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : (var1 + 42);
}

uint32_t select_and_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? (var1 & var2) : var2;
}

uint32_t select_and_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : (var1 & var2);
}

uint32_t select_and_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : (var1 & 42);
}

uint32_t select_ashr_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? (var1 >> ((uint32_t)var2)) : var2;
}

uint32_t select_ashr_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : (var1 >> ((uint32_t)var2));
}

uint32_t select_ashr_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : (var1 >> ((uint32_t)42));
}

uint32_t select_lshr_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? ((var1) >> (var2)) : var2;
}

uint32_t select_lshr_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : ((var1) >> (var2));
}

uint32_t select_lshr_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : ((var1) >> (42));
}

uint32_t select_or(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) == 0) ? var0 : (var1 | var0);
}

uint32_t select_or_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return ((var2 & 1) == 0) ? var0 : (var1 | var0);
}

uint32_t select_or_1b(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return ((var2 & 1) != 1) ? var0 : (var1 | var0);
}

uint32_t select_or_2(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) == 0) ? (var1 | var0) : var0;
}

uint32_t select_or_2b(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) != 1) ? (var1 | var0) : var0;
}

uint32_t select_or_3(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return ((var2 & 1) == 0) ? (var1 | var0) : var0;
}

uint32_t select_or_3b(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return ((var2 & 1) != 1) ? (var1 | var0) : var0;
}

uint32_t select_or_b(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) != 1) ? var0 : (var1 | var0);
}

uint32_t select_shl_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? (var1 << ((uint32_t)var2)) : var2;
}

uint32_t select_shl_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : (var1 << ((uint32_t)var2));
}

uint32_t select_shl_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : (var1 << ((uint32_t)42));
}

uint32_t select_sub_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? (var1 - var2) : var2;
}

uint32_t select_sub_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : (var1 - var2);
}

uint32_t select_sub_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : (var1 - 42);
}

uint32_t select_udiv_1(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? (var1 / var2) : var2;
}

uint32_t select_udiv_2(uint32_t var0, uint32_t var1, uint32_t var2){
    block0:
    return var0 ? var1 : (var1 / var2);
}

uint32_t select_udiv_3(uint32_t var0, uint32_t var1){
    block0:
    return var0 ? var1 : (var1 / 42);
}

uint16_t select_xor_1(uint16_t var0, uint8_t var1){
    block0:
    return ((var1 & 1) == 0) ? var0 : (var0 ^ 43);
}

uint16_t select_xor_1b(uint16_t var0, uint8_t var1){
    block0:
    return ((var1 & 1) != 1) ? var0 : (var0 ^ 43);
}

uint32_t select_xor_2(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) == 0) ? var0 : (var1 ^ var0);
}

uint32_t select_xor_2b(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) != 1) ? var0 : (var1 ^ var0);
}

uint16_t select_xor_3(uint16_t var0, uint8_t var1){
    block0:
    return ((var1 & 1) == 0) ? (var0 ^ 43) : var0;
}

uint16_t select_xor_3b(uint16_t var0, uint8_t var1){
    block0:
    return ((var1 & 1) != 1) ? (var0 ^ 43) : var0;
}

uint32_t select_xor_4(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) == 0) ? (var1 ^ var0) : var0;
}

uint32_t select_xor_4b(uint32_t var0, uint32_t var1, uint8_t var2){
    block0:
    return ((var2 & 1) != 1) ? (var1 ^ var0) : var0;
}

