//This file is automatically generated by llvm2c from llvm/test/CodeGen/ARM/mvn

// function declarations
uint32_t f1(void);
uint32_t f10(uint32_t var0);
uint32_t f2(uint32_t var0);
uint32_t f3(uint32_t var0);
uint32_t f4(uint32_t var0, uint8_t var1);
uint32_t f5(uint32_t var0);
uint32_t f6(uint32_t var0, uint8_t var1);
uint32_t f7(uint32_t var0);
uint32_t f8(uint32_t var0, uint8_t var1);
uint32_t f9(void);

uint32_t f1(void){
    block0:
    return -1;
}

uint32_t f10(uint32_t var0){
    block0:
    return -2 == var0;
}

uint32_t f2(uint32_t var0){
    block0:
    return var0 ^ -1;
}

uint32_t f3(uint32_t var0){
    block0:
    return (var0 << ((uint32_t)2)) ^ -1;
}

uint32_t f4(uint32_t var0, uint8_t var1){
    block0:
    return (var0 << ((uint32_t)((uint32_t)var1))) ^ -1;
}

uint32_t f5(uint32_t var0){
    block0:
    return ((var0) >> (2)) ^ -1;
}

uint32_t f6(uint32_t var0, uint8_t var1){
    block0:
    return ((var0) >> ((uint32_t)var1)) ^ -1;
}

uint32_t f7(uint32_t var0){
    block0:
    return (var0 >> ((uint32_t)2)) ^ -1;
}

uint32_t f8(uint32_t var0, uint8_t var1){
    block0:
    return (var0 >> ((uint32_t)((uint32_t)var1))) ^ -1;
}

uint32_t f9(void){
    uint32_t var0;
    block0:
    var0 = (0 + 0);
    return (-3 - 0) + var0;
}

