//This file is automatically generated by llvm2c from llvm/test/CodeGen/X86/conditional-indecrement

// function declarations
uint32_t test1(uint32_t var0, uint32_t var1);
uint32_t test1_commute(uint32_t var0, uint32_t var1);
uint32_t test2(uint32_t var0, uint32_t var1);
uint32_t test3(uint32_t var0, uint32_t var1);
uint32_t test4(uint32_t var0, uint32_t var1);
uint32_t test5(uint32_t var0, uint32_t var1);
uint32_t test6(uint32_t var0, uint32_t var1);
uint32_t test7(uint32_t var0, uint32_t var1);
uint32_t test8(uint32_t var0, uint32_t var1);

uint32_t test1(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)(var0 != 0)) + var1;
}

uint32_t test1_commute(uint32_t var0, uint32_t var1){
    block0:
    return var1 + ((uint32_t)(var0 != 0));
}

uint32_t test2(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)(var0 == 0)) + var1;
}

uint32_t test3(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)(var0 == 0)) + var1;
}

uint32_t test4(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)(var0 != 0)) + var1;
}

uint32_t test5(uint32_t var0, uint32_t var1){
    block0:
    return var1 - ((uint32_t)(var0 != 0));
}

uint32_t test6(uint32_t var0, uint32_t var1){
    block0:
    return var1 - ((uint32_t)(var0 == 0));
}

uint32_t test7(uint32_t var0, uint32_t var1){
    block0:
    return var1 - ((uint32_t)(var0 == 0));
}

uint32_t test8(uint32_t var0, uint32_t var1){
    block0:
    return var1 - ((uint32_t)(var0 != 0));
}

