//This file is automatically generated by llvm2c from llvm/test/CodeGen/ARM/fast-isel-binary

// function declarations
void add_i1(uint32_t var0, uint32_t var1);
void add_i16(uint16_t var0, uint16_t var1);
void add_i8(uint8_t var0, uint8_t var1);
void or_i1(uint32_t var0, uint32_t var1);
void or_i16(uint16_t var0, uint16_t var1);
void or_i8(uint8_t var0, uint8_t var1);
void sub_i1(uint32_t var0, uint32_t var1);
void sub_i16(uint16_t var0, uint16_t var1);
void sub_i8(uint8_t var0, uint8_t var1);

void add_i1(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + var1);
    return;
}

void add_i16(uint16_t var0, uint16_t var1){
    uint16_t var2;
    block0:
    var2 = (var0 + var1);
    return;
}

void add_i8(uint8_t var0, uint8_t var1){
    uint8_t var2;
    block0:
    var2 = (var0 + var1);
    return;
}

void or_i1(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 | var1);
    return;
}

void or_i16(uint16_t var0, uint16_t var1){
    uint16_t var2;
    block0:
    var2 = (var0 | var1);
    return;
}

void or_i8(uint8_t var0, uint8_t var1){
    uint8_t var2;
    block0:
    var2 = (var0 | var1);
    return;
}

void sub_i1(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 - var1);
    return;
}

void sub_i16(uint16_t var0, uint16_t var1){
    uint16_t var2;
    block0:
    var2 = (var0 - var1);
    return;
}

void sub_i8(uint8_t var0, uint8_t var1){
    uint8_t var2;
    block0:
    var2 = (var0 - var1);
    return;
}

