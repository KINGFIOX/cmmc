//This file is automatically generated by llvm2c from llvm/test/CodeGen/ARM/uxt_rot

// function declarations
uint8_t test1(uint32_t var0);
uint32_t test10(uint32_t var0, uint32_t var1);
uint32_t test11(uint32_t var0, uint32_t var1);
uint32_t test12(uint32_t var0, uint32_t var1);
uint32_t test13(uint32_t var0, uint32_t var1);
uint32_t test14(uint32_t var0, uint32_t var1);
uint32_t test15(uint32_t var0, uint32_t var1);
uint32_t test16(uint32_t var0, uint32_t var1);
uint32_t test2(uint32_t var0, uint32_t var1);
uint32_t test3(uint32_t var0);
uint32_t test4(uint32_t var0);
uint16_t test5(uint32_t var0);
uint32_t test6(uint32_t var0, uint32_t var1);
uint32_t test7(uint32_t var0, uint32_t var1);
uint32_t test8(uint32_t var0, uint32_t var1);
uint32_t test9(uint32_t var0, uint32_t var1);

uint8_t test1(uint32_t var0){
    block0:
    return (uint8_t)var0;
}

uint32_t test10(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)((uint16_t)(((var0) >> (24)) | (var0 << ((uint32_t)8))))) + var1;
}

uint32_t test11(uint32_t var0, uint32_t var1){
    block0:
    return var1 + (var0 & 255);
}

uint32_t test12(uint32_t var0, uint32_t var1){
    block0:
    return (((var0) >> (8)) & 255) + var1;
}

uint32_t test13(uint32_t var0, uint32_t var1){
    block0:
    return (((var0) >> (16)) & 255) + var1;
}

uint32_t test14(uint32_t var0, uint32_t var1){
    block0:
    return var1 + (var0 & 65535);
}

uint32_t test15(uint32_t var0, uint32_t var1){
    block0:
    return (((var0) >> (8)) & 65535) + var1;
}

uint32_t test16(uint32_t var0, uint32_t var1){
    block0:
    return ((((var0) >> (24)) | (var0 << ((uint32_t)8))) & 65535) + var1;
}

uint32_t test2(uint32_t var0, uint32_t var1){
    block0:
    return var0 + ((uint32_t)((uint8_t)var1));
}

uint32_t test3(uint32_t var0){
    block0:
    return (uint32_t)((uint16_t)(((var0) >> (8)) | (var0 << ((uint32_t)24))));
}

uint32_t test4(uint32_t var0){
    block0:
    return (uint32_t)((uint8_t)(((var0) >> (8)) | (var0 << ((uint32_t)24))));
}

uint16_t test5(uint32_t var0){
    block0:
    return (uint16_t)var0;
}

uint32_t test6(uint32_t var0, uint32_t var1){
    block0:
    return var0 + ((uint32_t)((uint16_t)var1));
}

uint32_t test7(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)((uint8_t)(((var0) >> (8)) | (var0 << ((uint32_t)24))))) + var1;
}

uint32_t test8(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)((uint8_t)(((var0) >> (16)) | (var0 << ((uint32_t)16))))) + var1;
}

uint32_t test9(uint32_t var0, uint32_t var1){
    block0:
    return ((uint32_t)((uint16_t)(((var0) >> (8)) | (var0 << ((uint32_t)24))))) + var1;
}

