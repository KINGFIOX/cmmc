internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    ubr ^while.header;
  ^while.header:
    i32 %1 = phi [^entry, i32 %0] [^while.header1, i32 %3];
    i1 %2 = icmp slt i32 %1, i32 10;
    cbr i1 %2(prob = 0.97), ^while.header1, ^b;
  ^while.header1:
    i32 %3 = phi [^while.header, i32 %1] [^if.then, i32 %6] [^while.header2, i32 %7];
    i1 %4 = icmp slt i32 %3, i32 10;
    cbr i1 %4(prob = 0.97), ^while.body, ^while.header;
  ^b:
    ret i32 %1;
  ^while.body:
    i1 %5 = icmp sgt i32 %3, i32 5;
    cbr i1 %5(prob = 0.5), ^if.then, ^while.header2;
  ^if.then:
    i32 %6 = call () -> i32 @getint();
    ubr ^while.header1;
  ^while.header2:
    i32 %7 = phi [^while.body, i32 %3] [^if.then1, i32 %10] [^while.header3, i32 %11];
    i1 %8 = icmp slt i32 %7, i32 10;
    cbr i1 %8(prob = 0.97), ^while.body1, ^while.header1;
  ^while.body1:
    i1 %9 = icmp sgt i32 %7, i32 5;
    cbr i1 %9(prob = 0.5), ^if.then1, ^while.header3;
  ^if.then1:
    i32 %10 = call () -> i32 @getint();
    ubr ^while.header2;
  ^while.header3:
    i32 %11 = phi [^while.body1, i32 %7] [^if.then2, i32 %14] [^while.header4, i32 %15];
    i1 %12 = icmp slt i32 %11, i32 10;
    cbr i1 %12(prob = 0.97), ^while.body2, ^while.header2;
  ^while.body2:
    i1 %13 = icmp sgt i32 %11, i32 5;
    cbr i1 %13(prob = 0.5), ^if.then2, ^while.header4;
  ^if.then2:
    i32 %14 = call () -> i32 @getint();
    ubr ^while.header3;
  ^while.header4:
    i32 %15 = phi [^while.body2, i32 %11] [^if.then3, i32 %18] [^while.header5, i32 %19];
    i1 %16 = icmp slt i32 %15, i32 10;
    cbr i1 %16(prob = 0.97), ^while.body3, ^while.header3;
  ^while.body3:
    i1 %17 = icmp sgt i32 %15, i32 5;
    cbr i1 %17(prob = 0.5), ^if.then3, ^while.header5;
  ^if.then3:
    i32 %18 = call () -> i32 @getint();
    ubr ^while.header4;
  ^while.header5:
    i32 %19 = phi [^while.body3, i32 %15] [^if.then4, i32 %22] [^if.else, i32 %23];
    i1 %20 = icmp slt i32 %19, i32 10;
    cbr i1 %20(prob = 0.97), ^while.body4, ^while.header4;
  ^while.body4:
    i1 %21 = icmp sgt i32 %19, i32 5;
    cbr i1 %21(prob = 0.5), ^if.then4, ^if.else;
  ^if.then4:
    i32 %22 = call () -> i32 @getint();
    ubr ^while.header5;
  ^if.else:
    i32 %23 = add i32 %19, i32 1;
    ubr ^while.header5;
}
