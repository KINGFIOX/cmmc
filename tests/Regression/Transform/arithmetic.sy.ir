func @foo1(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo2(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 %x;
}
func @foo3(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo4(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 %x;
}
func @foo5(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sub i32 %y, i32 %x;
    ret i32 %0;
}
func @foo6(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %x;
    ret i32 %0;
}
func @foo7(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fneg f32 %x;
    ret f32 %0;
}
func @foo8(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo9(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo10(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 0;
}
func @foo11(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo12(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 %x;
}
func @foo13(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 16;
    ret i32 %0;
}
func @foo14(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fadd f32 %x, f32 %x;
    ret f32 %0;
}
func @foo15(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %x;
    ret i32 %0;
}
func @foo16(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fneg f32 %x;
    ret f32 %0;
}
func @foo17(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo18(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 0;
}
func @foo19(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo20(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 1;
}
func @foo21(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo22(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 %x;
}
func @foo23(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %x;
    ret i32 %0;
}
func @foo24(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fneg f32 %x;
    ret f32 %0;
}
func @foo25(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 -1;
}
func @foo26(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 -1;
}
func @foo27(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 -1;
}
func @foo28(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 -1;
}
func @foo29(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fmul f32 %x, f32 0.0625;
    ret f32 %0;
}
func @foo30(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sdiv i32 %x, i32 160;
    ret i32 %0;
}
func @foo31(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo32(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo33(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo34(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo35(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo36(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo37(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo38(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo39(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sgt i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo40(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo41(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo42(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 -1;
}
func @foo43(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo44(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo45(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo46(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo47(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo48(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo49(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo50(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sub i32 %x, i32 %y;
    ret i32 %0;
}
func @foo51(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 %y;
    ret i32 %0;
}
func @foo52(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo53(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @foo54(f32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret f32 0;
}
func @foo55(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 2;
    ret i32 %0;
}
func @foo56(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 4;
    ret i32 %0;
}
func @foo57(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %x;
    ret i32 %0;
}
func @foo58(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 127;
    ret i32 %0;
}
func @foo59(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sge i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo60(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo61(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo62(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sge i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo63(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo64(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo65(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 3;
    ret i32 %0;
}
func @foo66(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -1;
    ret i32 %0;
}
func @foo67(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 1;
    ret i32 %0;
}
func @foo68(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -3;
    ret i32 %0;
}
func @foo69(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 3;
    ret i32 %0;
}
func @foo70(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 3;
    ret i32 %0;
}
func @foo71(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 3;
    ret i32 %0;
}
func @foo72(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 3;
    ret i32 %0;
}
func @foo73(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = xor i32 %x, i32 3;
    ret i32 %0;
}
func @foo74(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 1;
    ret i32 %0;
}
func @foo75(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %y, i32 0;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = add i32 %x, i32 1;
    i32 %3 = sub i32 %2, i32 %1;
    ret i32 %3;
}
func @foo76(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %z, i32 0;
    i32 %1 = select i1 %0 ? i32 %x : i32 %y;
    ret i32 %1;
}
func @foo77(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sge i32 %x, i32 %y;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo78(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo79(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo80(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo81(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo82(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @foo83(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo84(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 1;
    i1 %1 = icmp eq i32 %x, i32 %0;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo85(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 1;
    i1 %1 = icmp sgt i32 %0, i32 2;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo86(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %x, i32 -1;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo87(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = srem i32 %x, i32 1000;
    i32 %1 = add i32 %0, i32 10;
    i32 %2 = srem i32 %1, i32 1024;
    ret i32 %2;
}
func @foo88(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 %y;
    i1 %1 = icmp eq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo89(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 %y;
    i1 %1 = icmp neq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo90(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = shl i32 %x, i32 3;
    ret i32 %0;
}
func @foo91(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = ashr i32 %x, i32 3;
    ret i32 %0;
}
func @foo92(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = ashr i32 %x, i32 1;
    i32 %1 = shl i32 %0, i32 1;
    ret i32 %1;
}
func @foo93(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %x, i32 %y;
    i1 %1 = icmp sgt i32 %y, i32 %z;
    i1 %2 = and i1 %0, i1 %1;
    i32 %3 = zext i1 %2 to i32;
    ret i32 %3;
}
func @foo94(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sge i32 %x, i32 %y;
    i1 %1 = icmp sgt i32 %y, i32 %z;
    i1 %2 = or i1 %0, i1 %1;
    i32 %3 = zext i1 %2 to i32;
    ret i32 %3;
}
func @foo95(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %x, i32 %y;
    i1 %1 = icmp sgt i32 %y, i32 %z;
    i1 %2 = or i1 %0, i1 %1;
    i32 %3 = zext i1 %2 to i32;
    ret i32 %3;
}
func @foo96(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sge i32 %x, i32 %y;
    i1 %1 = icmp sgt i32 %y, i32 %z;
    i1 %2 = and i1 %0, i1 %1;
    i32 %3 = zext i1 %2 to i32;
    ret i32 %3;
}
func @foo97(i32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = s2f i32 %x to f32;
    i32 %1 = f2s f32 %0 to i32;
    f32 %2 = s2f i32 %1 to f32;
    ret f32 %2;
}
func @foo98(f32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = f2s f32 %x to i32;
    ret i32 %0;
}
func @foo99(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 7;
    i1 %1 = icmp neq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo100(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 1;
    i32 %1 = and i32 %y, i32 %0;
    ret i32 %1;
}
func @foo101(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = shl i32 1, i32 %y;
    i32 %1 = add i32 %0, i32 -1;
    i32 %2 = and i32 %x, i32 %1;
    i1 %3 = icmp eq i32 %2, i32 0;
    i32 %4 = zext i1 %3 to i32;
    ret i32 %4;
}
func @foo102(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = xor i32 %x, i32 324;
    i32 %1 = xor i32 %y, i32 32;
    i32 %2 = or i32 %0, i32 %1;
    i1 %3 = icmp eq i32 %2, i32 0;
    i32 %4 = zext i1 %3 to i32;
    ret i32 %4;
}
func @foo103(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -48;
    i1 %1 = icmp ult i32 %0, i32 10;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo104(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -48;
    i1 %1 = icmp ult i32 %0, i32 10;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @foo105(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @foo106(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 1;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo107(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ult i32 %x, i32 100;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @foo108(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 %y;
    i32 %1 = mul i32 %0, i32 2;
    ret i32 %1;
}
func @foo109(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -100;
    ret i32 %0;
}
func @foo110(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 %y;
    i32 %1 = xor i32 %0, i32 -1;
    ret i32 %1;
}
func @foo111(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 %y;
    i32 %1 = xor i32 %0, i32 -1;
    ret i32 %1;
}
func @foo112(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %x;
    ret i32 %0;
}
func @foo113(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %x;
    ret i32 %0;
}
func @foo114(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sub i32 -1, i32 %x;
    ret i32 %0;
}
func @foo115(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 -1;
    ret i32 %0;
}
func @foo116(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 1;
    ret i32 %0;
}
func @foo117(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = xor i32 %x, i32 %y;
    ret i32 %0;
}
func @iabs1(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    ret i32 %0;
}
func @iabs2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    ret i32 %0;
}
func @iabs3(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    ret i32 %0;
}
func @iabs4(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    ret i32 %0;
}
func @nabs1(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    i32 %1 = neg i32 %0;
    ret i32 %1;
}
func @nabs2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    i32 %1 = neg i32 %0;
    ret i32 %1;
}
func @nabs3(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    i32 %1 = neg i32 %0;
    ret i32 %1;
}
func @nabs4(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    i32 %1 = neg i32 %0;
    ret i32 %1;
}
func @absNeg(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = abs i32 %x;
    ret i32 %0;
}
func @average(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 %y;
    i32 %1 = sdiv i32 %0, i32 2;
    ret i32 %1;
}
func @select_two_no_fold(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 %y;
    i32 %1 = select i1 %0 ? i32 %z : i32 %y;
    ret i32 %1;
}
func @select_three(i32 %x, i32 %a, i32 %b, i32 %c) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 %b;
    i32 %1 = select i1 %0 ? i32 %c : i32 %a;
    i1 %2 = icmp eq i32 %x, i32 %a;
    i32 %3 = select i1 %2 ? i32 %b : i32 %1;
    ret i32 %3;
}
func @doubleNeg(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @absSRem2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 1;
    ret i32 %0;
}
func @sdivmul1(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @sdivmul2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 -2;
    ret i32 %0;
}
func @multi_select(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 93;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = sub i32 %y, i32 %1;
    i1 %3 = icmp eq i32 %x, i32 91;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = add i32 %2, i32 %4;
    ret i32 %5;
}
func @sub_add(i32 %a, i32 %b) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %a;
    ret i32 %0;
}
func @sremmul(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @sremneg(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = srem i32 %x, i32 2;
    i32 %1 = neg i32 %0;
    ret i32 %1;
}
func @sdivneg(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sdiv i32 %x, i32 -2;
    ret i32 %0;
}
func @srem2eq(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 -2147483647;
    i1 %1 = icmp eq i32 %0, i32 1;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @mul_neg2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 -2;
    ret i32 %0;
}
func @fused_div_rem(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sdiv i32 %x, i32 %y;
    i32 %1 = srem i32 %x, i32 %y;
    i32 %2 = add i32 %0, i32 %1;
    ret i32 %2;
}
func @fused_div_rem_constant(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = sdiv i32 %x, i32 3;
    i32 %1 = srem i32 %x, i32 3;
    i32 %2 = add i32 %0, i32 %1;
    ret i32 %2;
}
func @select_imm(i32 %c) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %c, i32 0;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = neg i32 %1;
    ret i32 %2;
}
func @div_eq(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 1;
    i1 %1 = icmp ult i32 %0, i32 3;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @ml_select(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 %y;
    i1 %1 = icmp eq i32 %0, i32 0;
    i32 %2 = select i1 %1 ? i32 10 : i32 0;
    ret i32 %2;
}
func @sub_add2(i32 %x, i32 %y, i32 %z) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %x, i32 %y;
    i32 %1 = sub i32 %z, i32 %0;
    ret i32 %1;
}
func @zext_s2f(i32 %x) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    f32 %2 = s2f i32 %1 to f32;
    ret f32 %2;
}
func @select_trunc_sub(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %x, i32 0;
    i32 %1 = neg i32 %y;
    i32 %2 = select i1 %0 ? i32 0 : i32 %1;
    ret i32 %2;
}
func @and_or1(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @and_or2(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @and_or3(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %x;
}
func @and_or4(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 -1;
}
func @square_eq_with_zero(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @square_neq_with_zero(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @square_slt_with_zero(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 %x;
    i32 %1 = lshr i32 %0, i32 31;
    ret i32 %1;
}
func @square_sle_with_zero(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 %x;
    i1 %1 = icmp slt i32 %0, i32 1;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @square_sgt_with_zero(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @square_sge_with_zero(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %x, i32 %x;
    i1 %1 = icmp sgt i32 %0, i32 -1;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @sign(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = ashr i32 %x, i32 31;
    ret i32 %0;
}
func @select_add_one(i32 %y, i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = add i32 %y, i32 %1;
    ret i32 %2;
}
func @select_sub_one(i32 %y, i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %x, i32 0;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = sub i32 %y, i32 %1;
    ret i32 %2;
}
func @range_check1(i32 %c) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %c, i32 -48;
    i1 %1 = icmp ugt i32 %0, i32 9;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @range_check2(i32 %c) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %c, i32 48;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @range_check3(i32 %c) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @sign_check1(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 %y;
    i1 %1 = icmp sgt i32 %0, i32 -1;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @sign_check2(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 %y;
    i1 %1 = icmp sgt i32 %0, i32 -1;
    i32 %2 = zext i1 %1 to i32;
    ret i32 %2;
}
func @sign_check3(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 %y;
    i32 %1 = lshr i32 %0, i32 31;
    i32 %2 = and i32 %1, i32 1;
    ret i32 %2;
}
func @sign_check4(i32 %x, i32 %y) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %x, i32 %y;
    i32 %1 = lshr i32 %0, i32 31;
    i32 %2 = and i32 %1, i32 1;
    ret i32 %2;
}
func @getNumPos(i32 %num, i32 %pos) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp slt i32 %pos, i32 9;
    cbr i1 %0(prob = 0.5), ^while.header, ^b;
  ^while.header:
    i1 %1 = icmp sgt i32 %pos, i32 0;
    cbr i1 %1(prob = 0.984615), ^prebody, ^b1;
  ^b:
    i32 %2 = phi [^entry, i32 0] [^b1, i32 %9];
    ret i32 %2;
  ^prebody:
    i32 %3 = mul i32 %pos, i32 4;
    i32 %4 = shl i32 1, i32 %3;
    i32 %5 = sdiv i32 %num, i32 %4;
    i1 %6 = icmp slt i32 %pos, i32 8;
    i32 %7 = select i1 %6 ? i32 %5 : i32 0;
    ubr ^b1;
  ^b1:
    i32 %8 = phi [^while.header, i32 %num] [^prebody, i32 %7];
    i32 %9 = srem i32 %8, i32 16;
    ubr ^b;
}
func @srem_power_of_two(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %x, i32 15;
    ret i32 %0;
}
