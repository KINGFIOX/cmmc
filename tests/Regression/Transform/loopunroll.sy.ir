internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry:
    ubr ^for.body;
^for.body:
    i32 %0 = phi [^entry, i32 0] [^for.body, i32 %49];
    i32 %1 = phi [^entry, i32 0] [^for.body, i32 %50];
    i32 %2 = shl i32 %1, i32 4;
    i32 %3 = add i32 %1, i32 16;
    i32 %4 = shl i32 %3, i32 4;
    i32 %5 = add i32 %1, i32 32;
    i32 %6 = shl i32 %5, i32 4;
    i32 %7 = add i32 %1, i32 48;
    i32 %8 = shl i32 %7, i32 4;
    i32 %9 = add i32 %1, i32 64;
    i32 %10 = shl i32 %9, i32 4;
    i32 %11 = add i32 %1, i32 80;
    i32 %12 = shl i32 %11, i32 4;
    i32 %13 = add i32 %1, i32 96;
    i32 %14 = shl i32 %13, i32 4;
    i32 %15 = add i32 %1, i32 112;
    i32 %16 = shl i32 %15, i32 4;
    i32 %17 = add i32 %1, i32 128;
    i32 %18 = shl i32 %17, i32 4;
    i32 %19 = add i32 %1, i32 144;
    i32 %20 = shl i32 %19, i32 4;
    i32 %21 = add i32 %1, i32 160;
    i32 %22 = shl i32 %21, i32 4;
    i32 %23 = add i32 %1, i32 176;
    i32 %24 = shl i32 %23, i32 4;
    i32 %25 = add i32 %1, i32 192;
    i32 %26 = shl i32 %25, i32 4;
    i32 %27 = add i32 %1, i32 208;
    i32 %28 = shl i32 %27, i32 4;
    i32 %29 = add i32 %1, i32 224;
    i32 %30 = shl i32 %29, i32 4;
    i32 %31 = add i32 %1, i32 240;
    i32 %32 = shl i32 %31, i32 4;
    i32 %33 = add i32 %0, i32 1920;
    i32 %34 = add i32 %33, i32 %2;
    i32 %35 = add i32 %34, i32 %4;
    i32 %36 = add i32 %35, i32 %6;
    i32 %37 = add i32 %36, i32 %8;
    i32 %38 = add i32 %37, i32 %10;
    i32 %39 = add i32 %38, i32 %12;
    i32 %40 = add i32 %39, i32 %14;
    i32 %41 = add i32 %40, i32 %16;
    i32 %42 = add i32 %41, i32 %18;
    i32 %43 = add i32 %42, i32 %20;
    i32 %44 = add i32 %43, i32 %22;
    i32 %45 = add i32 %44, i32 %24;
    i32 %46 = add i32 %45, i32 %26;
    i32 %47 = add i32 %46, i32 %28;
    i32 %48 = add i32 %47, i32 %30;
    i32 %49 = add i32 %48, i32 %32;
    i32 %50 = add i32 %1, i32 256;
    i1 %51 = scmp lt i32 %50, i32 1792;
    cbr i1 %51(prob = 0.86), ^for.body, ^for.body1;
^for.body1:
    i32 %52 = shl i32 %50, i32 4;
    i32 %53 = add i32 %1, i32 272;
    i32 %54 = shl i32 %53, i32 4;
    i32 %55 = add i32 %1, i32 288;
    i32 %56 = shl i32 %55, i32 4;
    i32 %57 = add i32 %1, i32 304;
    i32 %58 = shl i32 %57, i32 4;
    i32 %59 = add i32 %1, i32 320;
    i32 %60 = shl i32 %59, i32 4;
    i32 %61 = add i32 %1, i32 336;
    i32 %62 = shl i32 %61, i32 4;
    i32 %63 = add i32 %1, i32 352;
    i32 %64 = shl i32 %63, i32 4;
    i32 %65 = add i32 %1, i32 368;
    i32 %66 = shl i32 %65, i32 4;
    i32 %67 = add i32 %1, i32 384;
    i32 %68 = shl i32 %67, i32 4;
    i32 %69 = add i32 %1, i32 400;
    i32 %70 = shl i32 %69, i32 4;
    i32 %71 = add i32 %1, i32 416;
    i32 %72 = shl i32 %71, i32 4;
    i32 %73 = add i32 %1, i32 432;
    i32 %74 = shl i32 %73, i32 4;
    i32 %75 = add i32 %1, i32 448;
    i32 %76 = shl i32 %75, i32 4;
    i32 %77 = add i32 %76, i32 8493;
    i32 %78 = add i32 %77, i32 %52;
    i32 %79 = add i32 %78, i32 %54;
    i32 %80 = add i32 %79, i32 %56;
    i32 %81 = add i32 %80, i32 %58;
    i32 %82 = add i32 %81, i32 %60;
    i32 %83 = add i32 %82, i32 %62;
    i32 %84 = add i32 %83, i32 %64;
    i32 %85 = add i32 %84, i32 %66;
    i32 %86 = add i32 %85, i32 %68;
    i32 %87 = add i32 %86, i32 %70;
    i32 %88 = add i32 %87, i32 %72;
    i32 %89 = add i32 %88, i32 %74;
    i32 %90 = add i32 %89, i32 %49;
    ubr ^while.body;
^while.body:
    i32 %91 = phi [^for.body1, i32 %90] [^while.body, i32 %139];
    i32 %92 = phi [^for.body1, i32 0] [^while.body, i32 %140];
    i32 %93 = shl i32 %92, i32 1;
    i32 %94 = add i32 %92, i32 1;
    i32 %95 = shl i32 %94, i32 1;
    i32 %96 = add i32 %92, i32 2;
    i32 %97 = shl i32 %96, i32 1;
    i32 %98 = add i32 %92, i32 3;
    i32 %99 = shl i32 %98, i32 1;
    i32 %100 = add i32 %92, i32 4;
    i32 %101 = shl i32 %100, i32 1;
    i32 %102 = add i32 %92, i32 5;
    i32 %103 = shl i32 %102, i32 1;
    i32 %104 = add i32 %92, i32 6;
    i32 %105 = shl i32 %104, i32 1;
    i32 %106 = add i32 %92, i32 7;
    i32 %107 = shl i32 %106, i32 1;
    i32 %108 = add i32 %92, i32 8;
    i32 %109 = shl i32 %108, i32 1;
    i32 %110 = add i32 %92, i32 9;
    i32 %111 = shl i32 %110, i32 1;
    i32 %112 = add i32 %92, i32 10;
    i32 %113 = shl i32 %112, i32 1;
    i32 %114 = add i32 %92, i32 11;
    i32 %115 = shl i32 %114, i32 1;
    i32 %116 = add i32 %92, i32 12;
    i32 %117 = shl i32 %116, i32 1;
    i32 %118 = add i32 %92, i32 13;
    i32 %119 = shl i32 %118, i32 1;
    i32 %120 = add i32 %92, i32 14;
    i32 %121 = shl i32 %120, i32 1;
    i32 %122 = add i32 %92, i32 15;
    i32 %123 = shl i32 %122, i32 1;
    i32 %124 = add i32 %91, i32 %93;
    i32 %125 = add i32 %124, i32 %95;
    i32 %126 = add i32 %125, i32 %97;
    i32 %127 = add i32 %126, i32 %99;
    i32 %128 = add i32 %127, i32 %101;
    i32 %129 = add i32 %128, i32 %103;
    i32 %130 = add i32 %129, i32 %105;
    i32 %131 = add i32 %130, i32 %107;
    i32 %132 = add i32 %131, i32 %109;
    i32 %133 = add i32 %132, i32 %111;
    i32 %134 = add i32 %133, i32 %113;
    i32 %135 = add i32 %134, i32 %115;
    i32 %136 = add i32 %135, i32 %117;
    i32 %137 = add i32 %136, i32 %119;
    i32 %138 = add i32 %137, i32 %121;
    i32 %139 = add i32 %138, i32 %123;
    i32 %140 = add i32 %92, i32 16;
    i1 %141 = scmp lt i32 %140, i32 64;
    cbr i1 %141(prob = 0.75), ^while.body, ^while.header;
^while.header:
    i1 %142 = scmp lt i32 %140, i32 65;
    cbr i1 %142(prob = 0.97), ^super.header, ^indirect;
^super.header:
    i32 %143 = phi [^while.header, i32 %139] [^while.body1, i32 %196];
    i32 %144 = phi [^while.header, i32 %140] [^while.body1, i32 %145];
    i32 %145 = add i32 %144, i32 16;
    i1 %146 = scmp lt i32 %145, i32 65;
    cbr i1 %146(prob = 0.67), ^while.body1, ^super.header1;
^indirect:
    i32 %147 = phi [^while.header, i32 %140] [^while.body4, i32 %320];
    i32 %148 = phi [^while.header, i32 %139] [^while.body4, i32 %319];
    i1 %149 = scmp lt i32 %147, i32 67;
    cbr i1 %149(prob = 0.97), ^super.header2, ^b;
^while.body1:
    i32 %150 = mul i32 %144, i32 3;
    i32 %151 = add i32 %144, i32 1;
    i32 %152 = mul i32 %151, i32 3;
    i32 %153 = add i32 %144, i32 2;
    i32 %154 = mul i32 %153, i32 3;
    i32 %155 = add i32 %144, i32 3;
    i32 %156 = mul i32 %155, i32 3;
    i32 %157 = add i32 %144, i32 4;
    i32 %158 = mul i32 %157, i32 3;
    i32 %159 = add i32 %144, i32 5;
    i32 %160 = mul i32 %159, i32 3;
    i32 %161 = add i32 %144, i32 6;
    i32 %162 = mul i32 %161, i32 3;
    i32 %163 = add i32 %144, i32 7;
    i32 %164 = mul i32 %163, i32 3;
    i32 %165 = add i32 %144, i32 8;
    i32 %166 = mul i32 %165, i32 3;
    i32 %167 = add i32 %144, i32 9;
    i32 %168 = mul i32 %167, i32 3;
    i32 %169 = add i32 %144, i32 10;
    i32 %170 = mul i32 %169, i32 3;
    i32 %171 = add i32 %144, i32 11;
    i32 %172 = mul i32 %171, i32 3;
    i32 %173 = add i32 %144, i32 12;
    i32 %174 = mul i32 %173, i32 3;
    i32 %175 = add i32 %144, i32 13;
    i32 %176 = mul i32 %175, i32 3;
    i32 %177 = add i32 %144, i32 14;
    i32 %178 = mul i32 %177, i32 3;
    i32 %179 = add i32 %144, i32 15;
    i32 %180 = mul i32 %179, i32 3;
    i32 %181 = add i32 %143, i32 %150;
    i32 %182 = add i32 %181, i32 %152;
    i32 %183 = add i32 %182, i32 %154;
    i32 %184 = add i32 %183, i32 %156;
    i32 %185 = add i32 %184, i32 %158;
    i32 %186 = add i32 %185, i32 %160;
    i32 %187 = add i32 %186, i32 %162;
    i32 %188 = add i32 %187, i32 %164;
    i32 %189 = add i32 %188, i32 %166;
    i32 %190 = add i32 %189, i32 %168;
    i32 %191 = add i32 %190, i32 %170;
    i32 %192 = add i32 %191, i32 %172;
    i32 %193 = add i32 %192, i32 %174;
    i32 %194 = add i32 %193, i32 %176;
    i32 %195 = add i32 %194, i32 %178;
    i32 %196 = add i32 %195, i32 %180;
    ubr ^super.header;
^super.header1:
    i32 %197 = phi [^super.header, i32 %143] [^while.body2, i32 %252];
    i32 %198 = phi [^super.header, i32 %144] [^while.body2, i32 %199];
    i32 %199 = add i32 %198, i32 16;
    i1 %200 = scmp lt i32 %199, i32 65;
    cbr i1 %200(prob = 0.67), ^while.body2, ^while.body4;
^super.header2:
    i32 %201 = phi [^indirect, i32 %148] [^while.body3, i32 %315];
    i32 %202 = phi [^indirect, i32 %147] [^while.body3, i32 %203];
    i32 %203 = add i32 %202, i32 16;
    i1 %204 = scmp lt i32 %203, i32 67;
    cbr i1 %204(prob = 0.67), ^while.body3, ^super.header3;
^b:
    i32 %205 = phi [^indirect, i32 %148] [^while.body6, i32 %393];
    call (i32) -> void @putint(i32 %205);
    ret i32 %205;
^while.body2:
    i32 %206 = mul i32 %198, i32 3;
    i32 %207 = add i32 %198, i32 1;
    i32 %208 = mul i32 %207, i32 3;
    i32 %209 = add i32 %198, i32 2;
    i32 %210 = mul i32 %209, i32 3;
    i32 %211 = add i32 %198, i32 3;
    i32 %212 = mul i32 %211, i32 3;
    i32 %213 = add i32 %198, i32 4;
    i32 %214 = mul i32 %213, i32 3;
    i32 %215 = add i32 %198, i32 5;
    i32 %216 = mul i32 %215, i32 3;
    i32 %217 = add i32 %198, i32 6;
    i32 %218 = mul i32 %217, i32 3;
    i32 %219 = add i32 %198, i32 7;
    i32 %220 = mul i32 %219, i32 3;
    i32 %221 = add i32 %198, i32 8;
    i32 %222 = mul i32 %221, i32 3;
    i32 %223 = add i32 %198, i32 9;
    i32 %224 = mul i32 %223, i32 3;
    i32 %225 = add i32 %198, i32 10;
    i32 %226 = mul i32 %225, i32 3;
    i32 %227 = add i32 %198, i32 11;
    i32 %228 = mul i32 %227, i32 3;
    i32 %229 = add i32 %198, i32 12;
    i32 %230 = mul i32 %229, i32 3;
    i32 %231 = add i32 %198, i32 13;
    i32 %232 = mul i32 %231, i32 3;
    i32 %233 = add i32 %198, i32 14;
    i32 %234 = mul i32 %233, i32 3;
    i32 %235 = add i32 %198, i32 15;
    i32 %236 = mul i32 %235, i32 3;
    i32 %237 = add i32 %197, i32 %206;
    i32 %238 = add i32 %237, i32 %208;
    i32 %239 = add i32 %238, i32 %210;
    i32 %240 = add i32 %239, i32 %212;
    i32 %241 = add i32 %240, i32 %214;
    i32 %242 = add i32 %241, i32 %216;
    i32 %243 = add i32 %242, i32 %218;
    i32 %244 = add i32 %243, i32 %220;
    i32 %245 = add i32 %244, i32 %222;
    i32 %246 = add i32 %245, i32 %224;
    i32 %247 = add i32 %246, i32 %226;
    i32 %248 = add i32 %247, i32 %228;
    i32 %249 = add i32 %248, i32 %230;
    i32 %250 = add i32 %249, i32 %232;
    i32 %251 = add i32 %250, i32 %234;
    i32 %252 = add i32 %251, i32 %236;
    ubr ^super.header1;
^while.body3:
    i32 %253 = mul i32 %202, i32 %202;
    i32 %254 = mul i32 %202, i32 %253;
    i32 %255 = add i32 %202, i32 1;
    i32 %256 = mul i32 %255, i32 %255;
    i32 %257 = mul i32 %255, i32 %256;
    i32 %258 = add i32 %202, i32 2;
    i32 %259 = mul i32 %258, i32 %258;
    i32 %260 = mul i32 %258, i32 %259;
    i32 %261 = add i32 %202, i32 3;
    i32 %262 = mul i32 %261, i32 %261;
    i32 %263 = mul i32 %261, i32 %262;
    i32 %264 = add i32 %202, i32 4;
    i32 %265 = mul i32 %264, i32 %264;
    i32 %266 = mul i32 %264, i32 %265;
    i32 %267 = add i32 %202, i32 5;
    i32 %268 = mul i32 %267, i32 %267;
    i32 %269 = mul i32 %267, i32 %268;
    i32 %270 = add i32 %202, i32 6;
    i32 %271 = mul i32 %270, i32 %270;
    i32 %272 = mul i32 %270, i32 %271;
    i32 %273 = add i32 %202, i32 7;
    i32 %274 = mul i32 %273, i32 %273;
    i32 %275 = mul i32 %273, i32 %274;
    i32 %276 = add i32 %202, i32 8;
    i32 %277 = mul i32 %276, i32 %276;
    i32 %278 = mul i32 %276, i32 %277;
    i32 %279 = add i32 %202, i32 9;
    i32 %280 = mul i32 %279, i32 %279;
    i32 %281 = mul i32 %279, i32 %280;
    i32 %282 = add i32 %202, i32 10;
    i32 %283 = mul i32 %282, i32 %282;
    i32 %284 = mul i32 %282, i32 %283;
    i32 %285 = add i32 %202, i32 11;
    i32 %286 = mul i32 %285, i32 %285;
    i32 %287 = mul i32 %285, i32 %286;
    i32 %288 = add i32 %202, i32 12;
    i32 %289 = mul i32 %288, i32 %288;
    i32 %290 = mul i32 %288, i32 %289;
    i32 %291 = add i32 %202, i32 13;
    i32 %292 = mul i32 %291, i32 %291;
    i32 %293 = mul i32 %291, i32 %292;
    i32 %294 = add i32 %202, i32 14;
    i32 %295 = mul i32 %294, i32 %294;
    i32 %296 = mul i32 %294, i32 %295;
    i32 %297 = add i32 %202, i32 15;
    i32 %298 = mul i32 %297, i32 %297;
    i32 %299 = mul i32 %297, i32 %298;
    i32 %300 = add i32 %201, i32 %254;
    i32 %301 = add i32 %300, i32 %257;
    i32 %302 = add i32 %301, i32 %260;
    i32 %303 = add i32 %302, i32 %263;
    i32 %304 = add i32 %303, i32 %266;
    i32 %305 = add i32 %304, i32 %269;
    i32 %306 = add i32 %305, i32 %272;
    i32 %307 = add i32 %306, i32 %275;
    i32 %308 = add i32 %307, i32 %278;
    i32 %309 = add i32 %308, i32 %281;
    i32 %310 = add i32 %309, i32 %284;
    i32 %311 = add i32 %310, i32 %287;
    i32 %312 = add i32 %311, i32 %290;
    i32 %313 = add i32 %312, i32 %293;
    i32 %314 = add i32 %313, i32 %296;
    i32 %315 = add i32 %314, i32 %299;
    ubr ^super.header2;
^while.body4:
    i32 %316 = phi [^super.header1, i32 %197] [^while.body4, i32 %319];
    i32 %317 = phi [^super.header1, i32 %198] [^while.body4, i32 %320];
    i32 %318 = mul i32 %317, i32 3;
    i32 %319 = add i32 %316, i32 %318;
    i32 %320 = add i32 %317, i32 1;
    i1 %321 = scmp lt i32 %320, i32 65;
    cbr i1 %321(prob = 0.97), ^while.body4, ^indirect;
^super.header3:
    i32 %322 = phi [^super.header2, i32 %201] [^while.body5, i32 %388];
    i32 %323 = phi [^super.header2, i32 %202] [^while.body5, i32 %324];
    i32 %324 = add i32 %323, i32 16;
    i1 %325 = scmp lt i32 %324, i32 67;
    cbr i1 %325(prob = 0.67), ^while.body5, ^while.body6;
^while.body5:
    i32 %326 = mul i32 %323, i32 %323;
    i32 %327 = mul i32 %323, i32 %326;
    i32 %328 = add i32 %323, i32 1;
    i32 %329 = mul i32 %328, i32 %328;
    i32 %330 = mul i32 %328, i32 %329;
    i32 %331 = add i32 %323, i32 2;
    i32 %332 = mul i32 %331, i32 %331;
    i32 %333 = mul i32 %331, i32 %332;
    i32 %334 = add i32 %323, i32 3;
    i32 %335 = mul i32 %334, i32 %334;
    i32 %336 = mul i32 %334, i32 %335;
    i32 %337 = add i32 %323, i32 4;
    i32 %338 = mul i32 %337, i32 %337;
    i32 %339 = mul i32 %337, i32 %338;
    i32 %340 = add i32 %323, i32 5;
    i32 %341 = mul i32 %340, i32 %340;
    i32 %342 = mul i32 %340, i32 %341;
    i32 %343 = add i32 %323, i32 6;
    i32 %344 = mul i32 %343, i32 %343;
    i32 %345 = mul i32 %343, i32 %344;
    i32 %346 = add i32 %323, i32 7;
    i32 %347 = mul i32 %346, i32 %346;
    i32 %348 = mul i32 %346, i32 %347;
    i32 %349 = add i32 %323, i32 8;
    i32 %350 = mul i32 %349, i32 %349;
    i32 %351 = mul i32 %349, i32 %350;
    i32 %352 = add i32 %323, i32 9;
    i32 %353 = mul i32 %352, i32 %352;
    i32 %354 = mul i32 %352, i32 %353;
    i32 %355 = add i32 %323, i32 10;
    i32 %356 = mul i32 %355, i32 %355;
    i32 %357 = mul i32 %355, i32 %356;
    i32 %358 = add i32 %323, i32 11;
    i32 %359 = mul i32 %358, i32 %358;
    i32 %360 = mul i32 %358, i32 %359;
    i32 %361 = add i32 %323, i32 12;
    i32 %362 = mul i32 %361, i32 %361;
    i32 %363 = mul i32 %361, i32 %362;
    i32 %364 = add i32 %323, i32 13;
    i32 %365 = mul i32 %364, i32 %364;
    i32 %366 = mul i32 %364, i32 %365;
    i32 %367 = add i32 %323, i32 14;
    i32 %368 = mul i32 %367, i32 %367;
    i32 %369 = mul i32 %367, i32 %368;
    i32 %370 = add i32 %323, i32 15;
    i32 %371 = mul i32 %370, i32 %370;
    i32 %372 = mul i32 %370, i32 %371;
    i32 %373 = add i32 %322, i32 %327;
    i32 %374 = add i32 %373, i32 %330;
    i32 %375 = add i32 %374, i32 %333;
    i32 %376 = add i32 %375, i32 %336;
    i32 %377 = add i32 %376, i32 %339;
    i32 %378 = add i32 %377, i32 %342;
    i32 %379 = add i32 %378, i32 %345;
    i32 %380 = add i32 %379, i32 %348;
    i32 %381 = add i32 %380, i32 %351;
    i32 %382 = add i32 %381, i32 %354;
    i32 %383 = add i32 %382, i32 %357;
    i32 %384 = add i32 %383, i32 %360;
    i32 %385 = add i32 %384, i32 %363;
    i32 %386 = add i32 %385, i32 %366;
    i32 %387 = add i32 %386, i32 %369;
    i32 %388 = add i32 %387, i32 %372;
    ubr ^super.header3;
^while.body6:
    i32 %389 = phi [^super.header3, i32 %322] [^while.body6, i32 %393];
    i32 %390 = phi [^super.header3, i32 %323] [^while.body6, i32 %394];
    i32 %391 = mul i32 %390, i32 %390;
    i32 %392 = mul i32 %390, i32 %391;
    i32 %393 = add i32 %389, i32 %392;
    i32 %394 = add i32 %390, i32 1;
    i1 %395 = scmp lt i32 %394, i32 67;
    cbr i1 %395(prob = 0.97), ^while.body6, ^b;
}
