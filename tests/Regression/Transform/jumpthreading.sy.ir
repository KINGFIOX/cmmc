internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
  ^entry:
    i32 %0 = call () -> i32 @getint();
    i1 %1 = icmp neq i32 %0, i32 0;
    cbr i1 %1(prob = 0.5), ^if.then, ^if.else;
  ^if.then:
    i32 %2 = call () -> i32 @getint();
    call (i32) -> void @putint(i32 %2);
    ubr ^b;
  ^if.else:
    call (i32) -> void @putint(i32 0);
    ubr ^b;
  ^b:
    ret i32 0;
}
func @test(i32* %x, i32 %n, i32 %z) -> void { NoMemoryRead NoRecurse } {
  ^entry:
    i1 %0 = icmp sgt i32 %n, i32 0;
    i1 %1 = icmp neq i32 %z, i32 0;
    cbr i1 %0(prob = 0.984615), ^for.body, ^b;
  ^for.body:
    i32 %2 = phi [^entry, i32 0] [^for.iteration, i32 %4];
    cbr i1 %1(prob = 0.5), ^if.then, ^for.iteration;
  ^b:
    ret;
  ^if.then:
    i32* %3 = getelementptr &(i32* %x)[i32 %2];
    store i32* %3 with i32 %z;
    ubr ^for.iteration;
  ^for.iteration:
    i32 %4 = add i32 %2, i32 1;
    i1 %5 = icmp sgt i32 %n, i32 %4;
    cbr i1 %5(prob = 0.984615), ^for.body, ^b;
}
