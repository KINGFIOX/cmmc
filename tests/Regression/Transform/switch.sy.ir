func @test(i32 %a, i32 %b) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    switch i32 %b, [0, ^if.then], [1, ^if.then1], [2, ^if.then2], [3, ^if.then3], default ^b1;
  ^if.then:
    i32 %0 = add i32 %a, i32 100;
    ubr ^b1;
  ^if.then1:
    i32 %1 = add i32 %a, i32 -100;
    ubr ^b1;
  ^if.then2:
    i32 %2 = mul i32 %a, i32 100;
    ubr ^b1;
  ^if.then3:
    i32 %3 = sdiv i32 %a, i32 100;
    ubr ^b1;
  ^b1:
    i32 %4 = phi [^entry, i32 %a] [^if.then, i32 %0] [^if.then1, i32 %1] [^if.then2, i32 %2] [^if.then3, i32 %3];
    ret i32 %4;
}
func @testSwitch(i32 %a, i32 %b) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    switch i32 %b, [0, ^b1], [1, ^b2], [2, ^b3], [3, ^b4], default ^b5;
  ^b1:
    i32 %0 = add i32 %a, i32 100;
    ubr ^b6;
  ^b2:
    i32 %1 = add i32 %a, i32 -100;
    ubr ^b6;
  ^b3:
    i32 %2 = mul i32 %a, i32 100;
    ubr ^b6;
  ^b4:
    i32 %3 = sdiv i32 %a, i32 100;
    ubr ^b6;
  ^b5:
    ubr ^b6;
  ^b6:
    i32 %4 = phi [^b1, i32 %0] [^b2, i32 %1] [^b3, i32 %2] [^b4, i32 %3] [^b5, i32 %a];
    ret i32 %4;
}
