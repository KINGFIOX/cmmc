internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
  ^entry:
    [10000 * i32]* %x = alloc [10000 * i32];
    i32 %0 = call () -> i32 @getint();
    i32* %1 = getelementptr &([10000 * i32]* %x)[i64 0][i32 %0];
    i32 %2 = call () -> i32 @getint();
    store i32* %1 with i32 %2;
    i32 %3 = add i32 %0, i32 1;
    i32* %4 = getelementptr &(i32* %1)[i64 1];
    i32 %5 = call () -> i32 @getint();
    store i32* %4 with i32 %5;
    i1 %6 = scmp lt i32 %2, i32 %5;
    cbr i1 %6(prob = 0.5), ^if.then, ^b;
  ^if.then:
    store i32* %1 with i32 %2;
    ubr ^b;
  ^b:
    call (i32) -> void @putint(i32 %2);
    i32* %7 = getelementptr &([10000 * i32]* %x)[i64 0][i32 %3];
    i32 %8 = load i32* %7;
    call (i32) -> void @putint(i32 %8);
    ret i32 0;
}
