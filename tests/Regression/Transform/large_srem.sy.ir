func @normal_srem1(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = srem i32 %x, i32 1000000007;
    i1 %1 = icmp slt i32 %0, i32 0;
    i32 %2 = add i32 %0, i32 1000000007;
    i32 %3 = select i1 %1 ? i32 %2 : i32 %0;
    ret i32 %3;
}
func @normal_srem2(i32 %x) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp sgt i32 %x, i32 1000000007;
    cbr i1 %0(prob = 0.984615), ^while.body, ^4;
  ^while.body:
    i32 %1 = phi [^entry, i32 %x] [^while.body, i32 %2];
    i32 %2 = add i32 %1, i32 -1000000007;
    i1 %3 = icmp sgt i32 %2, i32 1000000007;
    cbr i1 %3(prob = 0.984615), ^while.body, ^4;
  ^4:
    i32 %5 = phi [^entry, i32 %x] [^while.body, i32 %2];
    i1 %6 = icmp slt i32 %5, i32 0;
    cbr i1 %6(prob = 0.984615), ^while.body1, ^b;
  ^while.body1:
    i32 %7 = phi [^4, i32 %5] [^while.body1, i32 %8];
    i32 %8 = add i32 %7, i32 1000000007;
    i1 %9 = icmp slt i32 %8, i32 0;
    cbr i1 %9(prob = 0.984615), ^while.body1, ^b;
  ^b:
    i32 %10 = phi [^4, i32 %5] [^while.body1, i32 %8];
    ret i32 %10;
}
