// This file is automatically generated by llvm2c from llvm/test/Transforms/InstSimplify/and-or-implied-cond

// function declarations
uint32_t and_implied(uint8_t var0, uint32_t var1);
uint32_t and_implied_comm1(uint8_t var0, uint32_t var1);
uint32_t and_implied_comm2(uint8_t var0, uint32_t var1);
uint32_t and_implied_comm3(uint8_t var0, uint32_t var1);
uint32_t and_not_implied(uint8_t var0, uint32_t var1);
uint32_t or_implied(uint8_t var0, uint32_t var1);
uint32_t or_implied_comm1(uint8_t var0, uint32_t var1);
uint32_t or_implied_comm2(uint8_t var0, uint32_t var1);
uint32_t or_implied_comm3(uint8_t var0, uint32_t var1);
uint32_t or_not_implied(uint8_t var0, uint32_t var1);

uint32_t and_implied(uint8_t var0, uint32_t var1){
    block0:
    return ((var0 != 0) | var1) && (var0 == 1);
}

uint32_t and_implied_comm1(uint8_t var0, uint32_t var1){
    block0:
    return (var0 == 1) && ((var0 != 0) | var1);
}

uint32_t and_implied_comm2(uint8_t var0, uint32_t var1){
    block0:
    return (var1 | (var0 != 0)) & (var0 == 1);
}

uint32_t and_implied_comm3(uint8_t var0, uint32_t var1){
    block0:
    return (var0 == 1) & (var1 | (var0 != 0));
}

uint32_t and_not_implied(uint8_t var0, uint32_t var1){
    block0:
    return ((var0 != 0) | var1) && (var0 == 0);
}

uint32_t or_implied(uint8_t var0, uint32_t var1){
    block0:
    return ((var0 == 0) & var1) | (var0 != 1);
}

uint32_t or_implied_comm1(uint8_t var0, uint32_t var1){
    block0:
    return (var0 != 1) | ((var0 == 0) & var1);
}

uint32_t or_implied_comm2(uint8_t var0, uint32_t var1){
    block0:
    return (var1 & (var0 == 0)) | (var0 != 1);
}

uint32_t or_implied_comm3(uint8_t var0, uint32_t var1){
    block0:
    return (var0 != 1) | (var1 & (var0 == 0));
}

uint32_t or_not_implied(uint8_t var0, uint32_t var1){
    block0:
    return ((var0 == 0) & var1) | (var0 != 0);
}

