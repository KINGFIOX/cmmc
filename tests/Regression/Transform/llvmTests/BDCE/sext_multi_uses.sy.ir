func @NOT_ZEXT_0(i16 %var0) -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = lshr i32 %2, i32 9;
    i32 %4 = and i32 %3, i32 255;
    i32 %5 = and i32 %1, i32 65280;
    i32 %6 = ztrunc i32 %5 to i32;
    i32 %7 = or i32 %4, i32 %6;
    i16 %8 = ztrunc i32 %7 to i16;
    ret i16 %8;
}
func @NOT_ZEXT_1(i16 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = lshr i32 %2, i32 8;
    i32 %4 = and i32 %3, i32 255;
    i32 %5 = and i32 %1, i32 85280;
    i32 %6 = ztrunc i32 %5 to i32;
    i32 %7 = or i32 %4, i32 %6;
    ret i32 %7;
}
func @NOT_ZEXT_2(i16 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = lshr i32 %2, i32 8;
    i32 %4 = and i32 %3, i32 255;
    i32 %5 = xor i32 %1, i32 -65536;
    i32 %6 = ztrunc i32 %5 to i32;
    i32 %7 = or i32 %4, i32 %6;
    ret i32 %7;
}
func @ZEXT_0(i16 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = lshr i32 %2, i32 8;
    i32 %4 = and i32 %3, i32 255;
    i32 %5 = and i32 %1, i32 65280;
    i32 %6 = ztrunc i32 %5 to i32;
    i32 %7 = or i32 %4, i32 %6;
    ret i32 %7;
}
func @ZEXT_1(i16 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = lshr i32 %2, i32 8;
    i32 %4 = and i32 %3, i32 255;
    i32 %5 = or i32 %1, i32 -65536;
    i32 %6 = ztrunc i32 %5 to i32;
    i32 %7 = or i32 %4, i32 %6;
    ret i32 %7;
}
func @clear_assumptions(i8 %var0, i16 %var1) -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i8 %0 = strunc i8 %var0 to i8;
    i16 %1 = sext i8 %0 to i16;
    i32 %2 = sext i16 %1 to i32;
    i16 %3 = strunc i16 %var1 to i16;
    i32 %4 = sext i16 %3 to i32;
    i32 %5 = add i32 %2, i32 %4;
    i32 %6 = and i32 %5, i32 255;
    i16 %7 = ztrunc i32 %6 to i16;
    ret i16 %7;
}
