func @abs_different_constants(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i8 %0 = strunc i8 %var0 to i8;
    i32 %1 = sext i8 %0 to i32;
    i1 %2 = scmp lt i32 %1, i32 0;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    i1 %5 = scmp neq i32 %4, i32 0;
    i32 %6 = zext i8 %var0 to i32;
    i32 %7 = neg i32 %6;
    i32 %8 = and i32 %7, i32 255;
    i32 %9 = select i1 %5 ? i32 %8 : i32 %6;
    i1 %10 = scmp gt i32 %1, i32 -1;
    i32 %11 = select i1 %10 ? i32 %6 : i32 %8;
    i32 %12 = and i32 %11, i32 255;
    i32 %13 = xor i32 %9, i32 %12;
    i8 %14 = ztrunc i32 %13 to i8;
    ret i8 %14;
}
func @abs_swapped(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i8 %0 = strunc i8 %var0 to i8;
    i32 %1 = sext i8 %0 to i32;
    i1 %2 = scmp lt i32 %1, i32 0;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    i1 %5 = scmp neq i32 %4, i32 0;
    i32 %6 = zext i8 %var0 to i32;
    i32 %7 = neg i32 %6;
    i32 %8 = and i32 %7, i32 255;
    i32 %9 = select i1 %5 ? i32 %8 : i32 %6;
    i1 %10 = scmp gt i32 %1, i32 0;
    i32 %11 = select i1 %10 ? i32 %6 : i32 %8;
    i32 %12 = and i32 %11, i32 255;
    i32 %13 = or i32 %9, i32 %12;
    i8 %14 = ztrunc i32 %13 to i8;
    ret i8 %14;
}
func @nabs_different_constants(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i8 %0 = strunc i8 %var0 to i8;
    i32 %1 = sext i8 %0 to i32;
    i1 %2 = scmp gt i32 %1, i32 -1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    i1 %5 = scmp neq i32 %4, i32 0;
    i32 %6 = zext i8 %var0 to i32;
    i32 %7 = neg i32 %6;
    i32 %8 = and i32 %7, i32 255;
    i32 %9 = select i1 %5 ? i32 %8 : i32 %6;
    i1 %10 = scmp lt i32 %1, i32 0;
    i32 %11 = select i1 %10 ? i32 %6 : i32 %8;
    i32 %12 = and i32 %11, i32 255;
    i32 %13 = or i32 %9, i32 %12;
    i8 %14 = ztrunc i32 %13 to i8;
    ret i8 %14;
}
func @nabs_swapped(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i8 %0 = strunc i8 %var0 to i8;
    i32 %1 = sext i8 %0 to i32;
    i1 %2 = scmp gt i32 %1, i32 0;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    i1 %5 = scmp neq i32 %4, i32 0;
    i32 %6 = zext i8 %var0 to i32;
    i32 %7 = neg i32 %6;
    i32 %8 = and i32 %7, i32 255;
    i32 %9 = select i1 %5 ? i32 %8 : i32 %6;
    i1 %10 = scmp lt i32 %1, i32 0;
    i32 %11 = select i1 %10 ? i32 %6 : i32 %8;
    i32 %12 = and i32 %11, i32 255;
    i32 %13 = xor i32 %9, i32 %12;
    i8 %14 = ztrunc i32 %13 to i8;
    ret i8 %14;
}
func @smax_nsw(i8 %var0, i8 %var1) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i8 %0 = strunc i8 %var0 to i8;
    i32 %1 = sext i8 %0 to i32;
    i8 %2 = strunc i8 %var1 to i8;
    i32 %3 = sext i8 %2 to i32;
    i32 %4 = sub i32 %1, i32 %3;
    i8 %5 = strunc i32 %4 to i8;
    i32 %6 = sext i8 %5 to i32;
    i1 %7 = scmp gt i32 %6, i32 0;
    i32 %8 = zext i1 %7 to i32;
    i32 %9 = ztrunc i32 %8 to i32;
    i1 %10 = scmp neq i32 %9, i32 0;
    i32 %11 = select i1 %10 ? i32 %6 : i32 0;
    i32 %12 = and i32 %11, i32 255;
    i1 %13 = scmp lt i32 %1, i32 %3;
    i32 %14 = select i1 %13 ? i32 0 : i32 %6;
    i32 %15 = and i32 %14, i32 255;
    i32 %16 = sub i32 %12, i32 %15;
    i8 %17 = ztrunc i32 %16 to i8;
    ret i8 %17;
}
