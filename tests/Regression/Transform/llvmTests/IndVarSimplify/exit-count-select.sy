// This file is automatically generated by llvm2c from llvm/test/Transforms/IndVarSimplify/exit-count-select

// function declarations
uint32_t logical_and_2ops(uint32_t var0, uint32_t var1);
uint32_t logical_and_3ops(uint32_t var0, uint32_t var1, uint32_t var2);
uint32_t logical_or_2ops(uint32_t var0, uint32_t var1);
uint32_t logical_or_3ops(uint32_t var0, uint32_t var1, uint32_t var2);

uint32_t logical_and_2ops(uint32_t var0, uint32_t var1){
    uint32_t var2_phi;
    uint32_t var3;
    block0:
    var2_phi = 0;
    goto block1;
    block1:
    var3 = (var2_phi + 1);
    if ((var2_phi < var0) ? (var2_phi < var1) : 0) {
        var2_phi = var3;
        goto block1;
    } else {
        return var2_phi;
    }
}

uint32_t logical_and_3ops(uint32_t var0, uint32_t var1, uint32_t var2){
    uint32_t var3_phi;
    uint32_t var4;
    uint32_t var5;
    block0:
    var3_phi = 0;
    goto block1;
    block1:
    var4 = (var3_phi + 1);
    var5 = (var3_phi < var2);
    if (((var3_phi < var0) ? (var3_phi < var1) : 0) ? var5 : 0) {
        var3_phi = var4;
        goto block1;
    } else {
        return var3_phi;
    }
}

uint32_t logical_or_2ops(uint32_t var0, uint32_t var1){
    uint32_t var2_phi;
    uint32_t var3;
    block0:
    var2_phi = 0;
    goto block1;
    block1:
    var3 = (var2_phi + 1);
    if ((var2_phi >= var0) ? 1 : (var2_phi >= var1)) {
        return var2_phi;
    } else {
        var2_phi = var3;
        goto block1;
    }
}

uint32_t logical_or_3ops(uint32_t var0, uint32_t var1, uint32_t var2){
    uint32_t var3_phi;
    uint32_t var4;
    uint32_t var5;
    block0:
    var3_phi = 0;
    goto block1;
    block1:
    var4 = (var3_phi + 1);
    var5 = (var3_phi >= var2);
    if (((var3_phi >= var0) ? 1 : (var3_phi >= var1)) ? 1 : var5) {
        return var3_phi;
    } else {
        var3_phi = var4;
        goto block1;
    }
}

