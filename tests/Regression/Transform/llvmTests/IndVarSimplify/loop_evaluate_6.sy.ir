func @test(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = strunc i32 %var0 to i32;
    i1 %1 = scmp gt i32 %0, i32 4;
    cbr i1 %1(prob = 0.5), ^block2, ^b;
  ^block2:
    i32 %2 = add i32 %var0, i32 -4;
    i32 %3 = strunc i32 %2 to i32;
    i1 %4 = scmp gt i32 %3, i32 4;
    cbr i1 %4(prob = 0.5), ^if.then, ^if.else;
  ^b:
    i32 %5 = phi [^entry, i32 %var0] [^if.else, i32 %6];
    ret i32 %5;
  ^if.else:
    i32 %6 = phi [^block2, i32 %2] [^if.then, i32 %8];
    ubr ^b;
  ^if.then:
    i32 %7 = phi [^block2, i32 %2] [^if.then, i32 %8];
    i32 %8 = add i32 %7, i32 -4;
    i32 %9 = strunc i32 %8 to i32;
    i1 %10 = scmp gt i32 %9, i32 4;
    cbr i1 %10(prob = 0.5), ^if.then, ^if.else;
}
