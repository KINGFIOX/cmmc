func @test(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = scmp neq i32 %var1, i32 0;
    ubr ^block1;
  ^block1:
    i32 %1 = phi [^entry, i32 0] [^block2, i32 %3];
    ubr ^block2;
  ^block2:
    i32 %2 = phi [^block1, i32 0] [^if.then, i32 %9];
    i32 %3 = phi [^block1, i32 %1] [^if.then, i32 %5];
    cbr i1 %0(prob = 0.5), ^block1, ^if.else;
  ^if.else:
    i32 %4 = or i32 %var0, i32 %3;
    i32 %5 = xor i32 %4, i32 6;
    i1 %6 = ucmp lt i32 %2, i32 3;
    cbr i1 %6(prob = 0.5), ^if.then, ^if.else1;
  ^if.then:
    i32 %7 = strunc i32 %2 to i32;
    i32 %8 = add i32 %7, i32 1;
    i32 %9 = ztrunc i32 %8 to i32;
    ubr ^block2;
  ^if.else1:
    ret i32 %5;
}
