func @main() -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
  ^entry:
    i32* %0 = ptrcast i32* @c to i32*;
    i32 %1 = load i32* %0;
    i1 %2 = icmp eq i32 %1, i32 0;
    cbr i1 %2(prob = 0.5), ^if.then, ^b;
  ^if.then:
    i32 %3 = phi [^entry, i32 1] [^if.then, i32 %5];
    i32 %4 = strunc i32 %3 to i32;
    i32 %5 = add i32 %4, i32 1;
    i1 %6 = icmp slt i32 %5, i32 5;
    cbr i1 %6(prob = 0.5), ^if.then, ^if.else;
  ^b:
    i32 %7 = phi [^entry, i32 0] [^if.else, i32 %12];
    ret i32 %7;
  ^if.else:
    i32 %8 = ztrunc i32 %3 to i32;
    i32 %9 = add i32 %8, i32 -1;
    i1 %10 = icmp ule i32 %8, i32 %9;
    i32 %11 = zext i1 %10 to i32;
    i32 %12 = strunc i32 %11 to i32;
    ubr ^b;
}
i32* @c = 0;
