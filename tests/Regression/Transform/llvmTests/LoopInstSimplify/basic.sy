// This file is automatically generated by llvm2c from llvm/test/Transforms/LoopInstSimplify/basic

// function declarations
uint32_t test1(uint32_t var0, uint32_t var1);
uint32_t test2(uint32_t var0, uint32_t var1);
uint32_t test3(uint32_t var0, uint32_t var1);
uint32_t test4(uint32_t var0, uint32_t var1, uint32_t var2);

uint32_t test1(uint32_t var0, uint32_t var1){
    uint32_t var2_phi;
    uint32_t var5_phi;
    int var3;
    int var4;
    block0:
    var2_phi = 0;
    goto block1;
    block1:
    var3 = ((((uint32_t)(((int)var1) + ((int)0))) - 0) & -1);
    var4 = (((int)var2_phi) + ((int)1));
    if (var4 < ((int)var0)) {
        var2_phi = var4;
        goto block1;
    } else {
        var5_phi = var3;
        return var5_phi;
    }
}

uint32_t test2(uint32_t var0, uint32_t var1){
    uint32_t var2_phi;
    uint32_t var3_phi;
    uint32_t var6_phi;
    int var4;
    int var5;
    block0:
    var2_phi = 0;
    var3_phi = var1;
    goto block1;
    block1:
    var4 = (((int)var3_phi) + ((int)0));
    var5 = (((int)var2_phi) + ((int)1));
    if (var5 < ((int)var0)) {
        var2_phi = var5;
        var3_phi = var4;
        goto block1;
    } else {
        var6_phi = var3_phi;
        return var6_phi;
    }
}

uint32_t test3(uint32_t var0, uint32_t var1){
    uint32_t var2_phi;
    uint32_t var3_phi;
    uint32_t var7_phi;
    uint32_t var9_phi;
    int var4;
    int var5;
    int var6;
    int var8;
    block0:
    var2_phi = 0;
    var3_phi = var1;
    goto block1;
    block1:
    var4 = (((int)var3_phi) + ((int)0));
    if (((int)var2_phi) < ((int)42)) {
        var5 = (((int)var4) + ((int)0));
        var7_phi = var5;
        goto block4;
    } else {
        var6 = (((int)var4) - ((int)0));
        var7_phi = var6;
        goto block4;
    }
    block4:
    var8 = (((int)var2_phi) + ((int)1));
    if (var8 < ((int)var0)) {
        var2_phi = var8;
        var3_phi = var7_phi;
        goto block1;
    } else {
        var9_phi = var3_phi;
        return var9_phi;
    }
}

uint32_t test4(uint32_t var0, uint32_t var1, uint32_t var2){
    uint32_t var3_phi;
    uint32_t var4_phi;
    uint32_t var6_phi;
    uint32_t var7_phi;
    uint32_t var10_phi;
    uint32_t var12_phi;
    int var5;
    int var8;
    int var9;
    int var11;
    block0:
    var3_phi = 0;
    var4_phi = var2;
    goto block1;
    block1:
    var5 = (((int)var4_phi) + ((int)0));
    var6_phi = 0;
    var7_phi = var5;
    goto block2;
    block2:
    var8 = (((int)var7_phi) + ((int)0));
    var9 = (((int)var6_phi) + ((int)1));
    if (var9 < ((int)var1)) {
        var6_phi = var9;
        var7_phi = var8;
        goto block2;
    } else {
        var10_phi = var7_phi;
        var11 = (((int)var3_phi) + ((int)1));
        if (var11 < ((int)var0)) {
            var3_phi = var11;
            var4_phi = var10_phi;
            goto block1;
        } else {
            var12_phi = var4_phi;
            return var12_phi;
        }
    }
}

