func @foo(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = strunc i32 %var0 to i32;
    i1 %1 = icmp slt i32 %0, i32 100;
    cbr i1 %1(prob = 0.5), ^if.then, ^if.else;
  ^if.then:
    i32 %2 = phi [^entry, i32 %0] [^if.then, i32 %10];
    i32 %3 = phi [^entry, i32 0] [^if.then, i32 %8];
    i32 %4 = strunc i32 %3 to i32;
    i32 %5 = add i32 %4, i32 -1;
    i32 %6 = ztrunc i32 %5 to i32;
    i1 %7 = icmp slt i32 %2, i32 50;
    i32 %8 = select i1 %7 ? i32 %6 : i32 %3;
    i32 %9 = add i32 %2, i32 1;
    i32 %10 = strunc i32 %9 to i32;
    i1 %11 = icmp slt i32 %10, i32 100;
    cbr i1 %11(prob = 0.5), ^if.then, ^if.else;
  ^if.else:
    i32 %12 = phi [^entry, i32 0] [^if.then, i32 %8];
    ret i32 %12;
}
