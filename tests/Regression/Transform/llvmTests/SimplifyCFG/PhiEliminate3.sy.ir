func @test(i32 %var0, i32 %var1, i32 %var2, i32 %var3, i32 %var4) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %var0, i32 0;
    cbr i1 %0(prob = 0.5), ^b, ^if.else;
  ^if.else:
    i1 %1 = icmp neq i32 %var1, i32 0;
    cbr i1 %1(prob = 0.5), ^if.then, ^if.else1;
  ^b:
    i32 %2 = phi [^entry, i32 3] [^if.then, i32 %6] [^if.else1, i32 %10];
    ret i32 %2;
  ^if.then:
    i32 %3 = add i32 %var2, i32 %var4;
    i32 %4 = add i32 %var3, i32 %3;
    i32 %5 = mul i32 %4, i32 2;
    i32 %6 = add i32 %5, i32 1;
    ubr ^b;
  ^if.else1:
    i32 %7 = xor i32 %var2, i32 %var4;
    i32 %8 = xor i32 %var3, i32 %7;
    i32 %9 = mul i32 %8, i32 2;
    i32 %10 = add i32 %9, i32 1;
    ubr ^b;
}
