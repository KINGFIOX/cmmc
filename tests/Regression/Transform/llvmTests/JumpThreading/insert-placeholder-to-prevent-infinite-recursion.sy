// This file is automatically generated by llvm2c from llvm/test/Transforms/JumpThreading/insert-placeholder-to-prevent-infinite-recursion

// function declarations
void s(void);

// global variable definitions
uint16_t a = 0;

void s(void){
    uint32_t var0_phi;
    uint16_t var1_phi;
    uint32_t var2_phi;
    uint8_t var3;
    uint32_t var4;
    uint16_t var5;
    block0:
    var0_phi = 0;
    var1_phi = 0;
    goto block1;
    block1:
    if (var0_phi == 0) {
        if (var0_phi == 0) {
            goto block15;
        } else {
            var2_phi = 0;
            goto block10;
        }
    } else {
        return;
    }
    block15:
    var5 = (var1_phi + 1);
    if (var5 == 0) {
        return;
    } else {
        var0_phi = 0;
        var1_phi = var5;
        goto block1;
    }
    block10:
    if (var2_phi) {
        goto block12;
    } else {
        var3 = ((uint8_t)0);
        goto block12;
    }
    block12:
    var4 = (0 | (0 | var2_phi));
    if (0) {
        goto block15;
    } else {
        var2_phi = var4;
        goto block10;
    }
}

