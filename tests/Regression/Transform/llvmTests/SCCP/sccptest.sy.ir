func @test1(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp eq i32 %var0, i32 0;
    i32 %1 = zext i1 %0 to i32;
    ret i32 %1;
}
func @test2(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ubr ^if.then;
  ^if.then:
    i32 %0 = phi [^entry, i32 0] [^if.then, i32 %5];
    i32 %1 = phi [^entry, i32 1] [^if.then, i32 %4];
    i32 %2 = strunc i32 %1 to i32;
    i1 %3 = icmp slt i32 %2, i32 20;
    i32 %4 = select i1 %3 ? i32 1 : i32 %0;
    i32 %5 = add i32 %0, i32 1;
    i32 %6 = strunc i32 %5 to i32;
    i1 %7 = icmp slt i32 %6, i32 100;
    cbr i1 %7(prob = 0.5), ^if.then, ^if.else;
  ^if.else:
    ret i32 %4;
}
