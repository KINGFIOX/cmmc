func @bar(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %var0, i32 255;
    i1 %1 = scmp eq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    i32 %3 = and i32 %2, i32 255;
    i32 %4 = shl i32 %0, i32 %3;
    i32 %5 = ztrunc i32 %4 to i32;
    i32 %6 = shl i32 %var1, i32 24;
    i32 %7 = lshr i32 %6, i32 24;
    i32 %8 = strunc i32 %7 to i32;
    i32 %9 = add i32 %8, i32 979;
    i32 %10 = ztrunc i32 %9 to i32;
    i1 %11 = ucmp eq i32 %5, i32 %10;
    i32 %12 = zext i1 %11 to i32;
    i32 %13 = ztrunc i32 %12 to i32;
    ret i32 %13;
}
func @foo(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %var0, i32 255;
    i1 %1 = scmp eq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    i32 %3 = ztrunc i32 %2 to i32;
    i32 %4 = shl i32 %var0, i32 %3;
    i32 %5 = and i32 %4, i32 255;
    i32 %6 = shl i32 %var1, i32 24;
    i32 %7 = lshr i32 %6, i32 24;
    i32 %8 = strunc i32 %7 to i32;
    i32 %9 = add i32 %8, i32 979;
    i32 %10 = ztrunc i32 %9 to i32;
    i1 %11 = ucmp eq i32 %5, i32 %10;
    i32 %12 = zext i1 %11 to i32;
    i32 %13 = ztrunc i32 %12 to i32;
    ret i32 %13;
}
func @foobar(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %var0, i32 255;
    i1 %1 = scmp eq i32 %0, i32 0;
    i32 %2 = zext i1 %1 to i32;
    i32 %3 = ztrunc i32 %2 to i32;
    i32 %4 = strunc i32 %3 to i32;
    i32 %5 = strunc i32 %0 to i32;
    i32 %6 = shl i32 %5, i32 %4;
    i32 %7 = and i32 %6, i32 255;
    i32 %8 = shl i32 %var1, i32 24;
    i32 %9 = lshr i32 %8, i32 24;
    i32 %10 = strunc i32 %9 to i32;
    i32 %11 = add i32 %10, i32 979;
    i32 %12 = ztrunc i32 %11 to i32;
    i1 %13 = ucmp eq i32 %7, i32 %12;
    i32 %14 = zext i1 %13 to i32;
    i32 %15 = ztrunc i32 %14 to i32;
    ret i32 %15;
}
