// This file is automatically generated by llvm2c from llvm/test/Transforms/SCCP/divrem

// function declarations
uint32_t PR57472(uint32_t var0);
uint32_t PR57472_alt(uint32_t var0);
uint8_t sdiv_nonneg0_nonneg1(uint8_t var0, uint8_t var1);
uint8_t sdiv_nonneg0_nonnegconst1(uint8_t var0);
uint8_t sdiv_nonnegconst0_nonneg1(uint8_t var0);
uint8_t sdiv_nonnegconst0_unknown1(uint8_t var0);
uint8_t sdiv_unknown0_nonneg1(uint8_t var0, uint8_t var1);
uint8_t sdiv_unknown0_nonnegconst1(uint8_t var0);
uint8_t srem_nonneg0_nonneg1(uint8_t var0, uint8_t var1);
uint8_t srem_nonneg0_nonnegconst1(uint8_t var0);
uint8_t srem_nonnegconst0_nonneg1(uint8_t var0);
uint8_t srem_nonnegconst0_unknown1(uint8_t var0);
uint8_t srem_unknown0_nonneg1(uint8_t var0, uint8_t var1);
uint8_t srem_unknown0_nonnegconst1(uint8_t var0);

uint32_t PR57472(uint32_t var0){
    uint32_t var2_phi;
    int var1;
    block0:
    if (((int)var0) >= ((int)0)) {
        var1 = (((int)var0) % ((int)16));
        var2_phi = var1;
        return var2_phi;
    } else {
        var2_phi = 42;
        return var2_phi;
    }
}

uint32_t PR57472_alt(uint32_t var0){
    uint32_t var2_phi;
    int var1;
    block0:
    if (var0 > 2000000000) {
        var2_phi = -42;
        return var2_phi;
    } else {
        var1 = (((int)16) / ((int)var0));
        var2_phi = var1;
        return var2_phi;
    }
}

uint8_t sdiv_nonneg0_nonneg1(uint8_t var0, uint8_t var1){
    block0:
    return ((char)(var0 & 127)) / ((char)((var1) >> (1)));
}

uint8_t sdiv_nonneg0_nonnegconst1(uint8_t var0){
    block0:
    return ((char)(((char)var0) * ((char)var0))) / ((char)42);
}

uint8_t sdiv_nonnegconst0_nonneg1(uint8_t var0){
    block0:
    return ((char)42) / ((char)((uint8_t)var0));
}

uint8_t sdiv_nonnegconst0_unknown1(uint8_t var0){
    block0:
    return ((char)42) / ((char)((char)((char)var0)));
}

uint8_t sdiv_unknown0_nonneg1(uint8_t var0, uint8_t var1){
    block0:
    return ((char)var0) / ((char)((var1) >> (1)));
}

uint8_t sdiv_unknown0_nonnegconst1(uint8_t var0){
    block0:
    return ((char)(var0 * var0)) / ((char)42);
}

uint8_t srem_nonneg0_nonneg1(uint8_t var0, uint8_t var1){
    block0:
    return ((char)(var0 & 127)) % ((char)((var1) >> (1)));
}

uint8_t srem_nonneg0_nonnegconst1(uint8_t var0){
    block0:
    return ((char)((uint8_t)var0)) % ((char)42);
}

uint8_t srem_nonnegconst0_nonneg1(uint8_t var0){
    block0:
    return ((char)42) % ((char)(var0 & 127));
}

uint8_t srem_nonnegconst0_unknown1(uint8_t var0){
    block0:
    return ((char)42) % ((char)((char)((char)var0)));
}

uint8_t srem_unknown0_nonneg1(uint8_t var0, uint8_t var1){
    block0:
    return ((char)var0) % ((char)((var1) >> (1)));
}

uint8_t srem_unknown0_nonnegconst1(uint8_t var0){
    block0:
    return ((char)(var0 * var0)) % ((char)42);
}

