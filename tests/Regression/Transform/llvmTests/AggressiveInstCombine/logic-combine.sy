// This file is automatically generated by llvm2c from llvm/test/Transforms/AggressiveInstCombine/logic-combine

// function declarations
uint8_t leaf1_and_a_false(uint8_t var0);
uint8_t leaf1_and_aa(uint8_t var0);
uint8_t leaf1_and_not(uint8_t var0);
uint8_t leaf1_or_not(uint8_t var0);
uint8_t leaf1_xor_aa(uint8_t var0);
uint8_t leaf2_or_ret_const_false(uint8_t var0, uint8_t var1);
uint8_t leaf2_or_ret_leaf(uint8_t var0, uint8_t var1);
uint32_t leaf2_type_is_i1(uint32_t var0, uint32_t var1);
uint8_t leaf2_xor(uint8_t var0, uint8_t var1);
uint8_t leaf2_xor_ret_const_false(uint8_t var0, uint8_t var1);
uint8_t leaf3_complex_ret_const_false(uint8_t var0, uint8_t var1, uint8_t var2);
uint8_t leaf3_complex_ret_leaf(uint8_t var0, uint8_t var1, uint8_t var2);
uint8_t leaf4_ret_const_true(uint8_t var0, uint8_t var1, uint8_t var2, uint8_t var3);
uint8_t leaf4_ret_leaf(uint8_t var0, uint8_t var1, uint8_t var2, uint8_t var3);
uint8_t leaf4_ret_leaf2(uint8_t var0, uint8_t var1, uint8_t var2, uint8_t var3);

uint8_t leaf1_and_a_false(uint8_t var0){
    block0:
    return var0 & 0;
}

uint8_t leaf1_and_aa(uint8_t var0){
    block0:
    return var0 & var0;
}

uint8_t leaf1_and_not(uint8_t var0){
    block0:
    return var0 & (var0 ^ -1);
}

uint8_t leaf1_or_not(uint8_t var0){
    block0:
    return var0 | (var0 ^ -1);
}

uint8_t leaf1_xor_aa(uint8_t var0){
    block0:
    return var0 ^ var0;
}

uint8_t leaf2_or_ret_const_false(uint8_t var0, uint8_t var1){
    uint8_t var2;
    uint8_t var3;
    block0:
    var2 = ((var0 | var1) ^ (var0 & var1));
    var3 = (var2 ^ var0);
    return var2 ^ var1;
}

uint8_t leaf2_or_ret_leaf(uint8_t var0, uint8_t var1){
    block0:
    return ((var0 | var1) ^ (var0 & var1)) ^ var0;
}

uint32_t leaf2_type_is_i1(uint32_t var0, uint32_t var1){
    block0:
    return ((!var0) ^ var1) | (var0 ^ var1);
}

uint8_t leaf2_xor(uint8_t var0, uint8_t var1){
    block0:
    return (var0 ^ var1) ^ var0;
}

uint8_t leaf2_xor_ret_const_false(uint8_t var0, uint8_t var1){
    block0:
    return ((var0 ^ var1) ^ var0) ^ var1;
}

uint8_t leaf3_complex_ret_const_false(uint8_t var0, uint8_t var1, uint8_t var2){
    block0:
    return (((var0 | var1) | var2) ^ -1) & var0;
}

uint8_t leaf3_complex_ret_leaf(uint8_t var0, uint8_t var1, uint8_t var2){
    block0:
    return (((var1 & var2) ^ -1) & var0) ^ ((var0 & var1) | (var0 ^ var2));
}

uint8_t leaf4_ret_const_true(uint8_t var0, uint8_t var1, uint8_t var2, uint8_t var3){
    block0:
    return (((var0 ^ var1) | var2) | ((var1 & var3) ^ -1)) | var0;
}

uint8_t leaf4_ret_leaf(uint8_t var0, uint8_t var1, uint8_t var2, uint8_t var3){
    block0:
    return ((((var0 ^ var1) | var2) | (((var1 & var3) ^ var2) ^ -1)) | var0) & var1;
}

uint8_t leaf4_ret_leaf2(uint8_t var0, uint8_t var1, uint8_t var2, uint8_t var3){
    block0:
    return ((((var0 ^ var1) | var2) | (((var1 & var3) ^ var2) ^ -1)) | var0) & var1;
}

