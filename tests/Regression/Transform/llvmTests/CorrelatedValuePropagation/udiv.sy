// This file is automatically generated by llvm2c from llvm/test/Transforms/CorrelatedValuePropagation/udiv

// function declarations
void test1(uint32_t var0);
void test2(uint32_t var0);
void test3(uint32_t var0, uint32_t var1);
void test4(uint32_t var0, uint32_t var1);
void test5(uint32_t var0);
void test6(uint32_t var0);
void test_nop(uint32_t var0);

void test1(uint32_t var0){
    uint32_t var1;
    block0:
    if (var0 <= 65535) {
        var1 = (var0 / 100);
        return;
    } else {
        return;
    }
}

void test2(uint32_t var0){
    uint32_t var1;
    block0:
    if (var0 <= 65536) {
        var1 = (var0 / 100);
        return;
    } else {
        return;
    }
}

void test3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    if ((var0 < 65535) && (var1 < 65535)) {
        var2 = (var0 / var1);
        return;
    } else {
        return;
    }
}

void test4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    if ((var0 < 65535) && (var1 <= 65536)) {
        var2 = (var0 / var1);
        return;
    } else {
        return;
    }
}

void test5(uint32_t var0){
    uint32_t var1;
    block0:
    var1 = ((var0 & 65535) / 42);
    return;
}

void test6(uint32_t var0){
    int var1;
    block0:
    if (var0 <= 255) {
        var1 = (((int)var0) / ((int)100));
        return;
    } else {
        return;
    }
}

void test_nop(uint32_t var0){
    uint32_t var1;
    block0:
    var1 = (var0 / 100);
    return;
}

