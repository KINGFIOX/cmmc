func @fn1() -> i32 { NoRecurse } {
  ^entry:
    i32* %0 = ptrcast i32* @a to i32*;
    i32 %1 = load i32* %0;
    i32 %2 = strunc i32 %1 to i32;
    i32 %3 = add i32 %2, i32 -1;
    i32* %4 = ptrcast i32* @d to i32*;
    i32 %5 = load i32* %4;
    i32 %6 = strunc i32 %5 to i32;
    i32 %7 = sub i32 %3, i32 %6;
    i32 %8 = strunc i32 %7 to i32;
    i32 %9 = strunc i32 %3 to i32;
    i32 %10 = add i32 %9, i32 -1;
    i32 %11 = sub i32 %10, i32 %8;
    i32 %12 = strunc i32 %11 to i32;
    i32 %13 = strunc i32 %10 to i32;
    i32 %14 = add i32 %13, i32 -1;
    i32 %15 = sub i32 %14, i32 %12;
    i32 %16 = strunc i32 %15 to i32;
    i32 %17 = strunc i32 %14 to i32;
    i32 %18 = add i32 %17, i32 -1;
    i32 %19 = sub i32 %18, i32 %16;
    i32 %20 = strunc i32 %19 to i32;
    i32 %21 = strunc i32 %18 to i32;
    i32 %22 = add i32 %21, i32 -1;
    i32 %23 = sub i32 %22, i32 %20;
    i32 %24 = ztrunc i32 %23 to i32;
    i32 %25 = ztrunc i32 %22 to i32;
    store i32* %0 with i32 %25;
    store i32* %4 with i32 %24;
    ret i32 0;
}
func @fn2() -> i32 { NoRecurse } {
  ^entry:
    i32* %0 = ptrcast i32* @a to i32*;
    i32 %1 = load i32* %0;
    i32 %2 = strunc i32 %1 to i32;
    i32 %3 = add i32 %2, i32 -1;
    i32* %4 = ptrcast i32* @d to i32*;
    i32 %5 = load i32* %4;
    i32 %6 = strunc i32 %5 to i32;
    i32 %7 = sub i32 %3, i32 %6;
    i32 %8 = strunc i32 %7 to i32;
    i32 %9 = strunc i32 %3 to i32;
    i32 %10 = add i32 %9, i32 -1;
    i32 %11 = sub i32 %10, i32 %8;
    i32 %12 = strunc i32 %11 to i32;
    i32 %13 = strunc i32 %10 to i32;
    i32 %14 = add i32 %13, i32 -1;
    i32 %15 = sub i32 %14, i32 %12;
    i32 %16 = strunc i32 %15 to i32;
    i32 %17 = strunc i32 %14 to i32;
    i32 %18 = add i32 %17, i32 -1;
    i32 %19 = sub i32 %18, i32 %16;
    i32 %20 = strunc i32 %19 to i32;
    i32 %21 = strunc i32 %18 to i32;
    i32 %22 = add i32 %21, i32 -1;
    i32 %23 = sub i32 %22, i32 %20;
    i32 %24 = ztrunc i32 %23 to i32;
    i32 %25 = ztrunc i32 %22 to i32;
    store i32* %0 with i32 %25;
    store i32* %4 with i32 %24;
    ret i32 0;
}
i32* @a, align 4 = 0;
i32* @d, align 4 = 0;
