func @add(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 4;
    i8 %2 = ztrunc i32 %1 to i8;
    ret i8 %2;
}
func @cst_add() -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i8 3;
}
func @cst_mul() -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i8 -13;
}
func @foo3x5(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %0, i32 %2;
    i8 %4 = ztrunc i32 %3 to i8;
    ret i8 %4;
}
func @foo3x6(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %1, i32 %2;
    i8 %4 = ztrunc i32 %3 to i8;
    ret i8 %4;
}
func @foo3x7(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %0, i32 %1;
    i32 %3 = mul i32 %1, i32 %1;
    i32 %4 = mul i32 %2, i32 %3;
    i8 %5 = ztrunc i32 %4 to i8;
    ret i8 %5;
}
func @foo4x10(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %2, i32 %2;
    i32 %4 = mul i32 %1, i32 %3;
    i8 %5 = ztrunc i32 %4 to i8;
    ret i8 %5;
}
func @foo4x11(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %0, i32 %1;
    i32 %3 = mul i32 %1, i32 %1;
    i32 %4 = mul i32 %3, i32 %3;
    i32 %5 = mul i32 %2, i32 %4;
    i8 %6 = ztrunc i32 %5 to i8;
    ret i8 %6;
}
func @foo4x12(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %2, i32 %2;
    i32 %4 = mul i32 %2, i32 %3;
    i8 %5 = ztrunc i32 %4 to i8;
    ret i8 %5;
}
func @foo4x13(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %0, i32 %2;
    i32 %4 = mul i32 %2, i32 %2;
    i32 %5 = mul i32 %3, i32 %4;
    i8 %6 = ztrunc i32 %5 to i8;
    ret i8 %6;
}
func @foo4x14(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %1, i32 %2;
    i32 %4 = mul i32 %2, i32 %2;
    i32 %5 = mul i32 %3, i32 %4;
    i8 %6 = ztrunc i32 %5 to i8;
    ret i8 %6;
}
func @foo4x15(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %0, i32 %1;
    i32 %3 = mul i32 %1, i32 %1;
    i32 %4 = mul i32 %2, i32 %3;
    i32 %5 = mul i32 %3, i32 %3;
    i32 %6 = mul i32 %4, i32 %5;
    i8 %7 = ztrunc i32 %6 to i8;
    ret i8 %7;
}
func @foo4x8(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %2, i32 %2;
    i8 %4 = ztrunc i32 %3 to i8;
    ret i8 %4;
}
func @foo4x9(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = mul i32 %0, i32 %0;
    i32 %2 = mul i32 %1, i32 %1;
    i32 %3 = mul i32 %2, i32 %2;
    i32 %4 = mul i32 %0, i32 %3;
    i8 %5 = ztrunc i32 %4 to i8;
    ret i8 %5;
}
func @idempotent(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i8 %1 = ztrunc i32 %0 to i8;
    ret i8 %1;
}
func @nilpotent() -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i8 0;
}
