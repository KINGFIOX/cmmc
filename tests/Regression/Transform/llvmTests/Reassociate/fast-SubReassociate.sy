// This file is automatically generated by llvm2c from llvm/test/Transforms/Reassociate/fast-SubReassociate

// function declarations
float test1(float var0, float var1);
float test2(float var0, float var1);
float test2_minimal(float var0, float var1);
float test2_reassoc(float var0, float var1);
float test3(float var0, float var1, float var2, float var3);
float test4(float var0, float var1, float var2, float var3);
float test4_reassoc(float var0, float var1, float var2, float var3);

float test1(float var0, float var1){
    block0:
    return ((-7.0E+0 + var0) - (5.0E+0 + var1)) + 1.2E+1;
}

float test2(float var0, float var1){
    block0:
    return ((float)(((float)(((float)var0) + ((float)-7.0E+0))) - ((float)(((float)var1) + ((float)5.0E+0))))) + ((float)1.2E+1);
}

float test2_minimal(float var0, float var1){
    block0:
    return ((var0 + -7.0E+0) - (var1 + 5.0E+0)) + 1.2E+1;
}

float test2_reassoc(float var0, float var1){
    block0:
    return ((var0 + -7.0E+0) - (var1 + 5.0E+0)) + 1.2E+1;
}

float test3(float var0, float var1, float var2, float var3){
    block0:
    return (var3 - (((var0 + 1.2E+1) + var1) + var2)) + 1.2E+1;
}

float test4(float var0, float var1, float var2, float var3){
    block0:
    return ((float)1.2E+1) + ((float)(((float)var3) - ((float)(((float)(((float)(((float)1.2E+1) + ((float)var0))) + ((float)var1))) + ((float)var2)))));
}

float test4_reassoc(float var0, float var1, float var2, float var3){
    block0:
    return 1.2E+1 + (var3 - (((1.2E+1 + var0) + var1) + var2));
}

