func @add_0(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %var0;
}
func @and_neg1(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i8 %1 = ztrunc i32 %0 to i8;
    ret i8 %1;
}
func @fadd_0(f32 %var0) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fadd f32 %var0, f32 -30;
    f32 %1 = fadd f32 %0, f32 30;
    ret f32 %1;
}
func @fmul_1(f32 %var0) -> f32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    f32 %0 = fmul f32 %var0, f32 4;
    f32 %1 = fmul f32 %0, f32 0.25;
    ret f32 %1;
}
func @mul_1(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = neg i32 %var0;
    i32 %1 = neg i32 %0;
    ret i32 %1;
}
func @or_0(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i8 %1 = ztrunc i32 %0 to i8;
    ret i8 %1;
}
func @xor_0(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i8 %1 = ztrunc i32 %0 to i8;
    ret i8 %1;
}
