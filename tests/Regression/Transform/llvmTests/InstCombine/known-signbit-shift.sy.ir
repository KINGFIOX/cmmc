func @test_no_sign_bit_conflict1(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %var0, i32 0;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = add i32 %1, i32 8192;
    i32 %3 = shl i32 %2, i32 18;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @test_no_sign_bit_conflict2(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp neq i32 %var0, i32 0;
    i32 %1 = zext i1 %0 to i32;
    i32 %2 = add i32 %1, i32 -8194;
    i32 %3 = shl i32 %2, i32 18;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @test_shift_negative(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i64 %0 = zext i32 %var0 to i64;
    i64 %1 = or i64 %0, i64 -2147483648;
    i32 %2 = strunc i64 %1 to i32;
    i32 %3 = and i32 %var1, i32 7;
    i32 %4 = strunc i32 %3 to i32;
    i32 %5 = shl i32 %2, i32 %4;
    i32 %6 = lshr i32 %5, i32 31;
    i32 %7 = ztrunc i32 %6 to i32;
    ret i32 %7;
}
func @test_shift_nonnegative(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = lshr i32 %var0, i32 2;
    i32 %1 = strunc i32 %0 to i32;
    i32 %2 = shl i32 %1, i32 3;
    i1 %3 = icmp sgt i32 %2, i32 -1;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
