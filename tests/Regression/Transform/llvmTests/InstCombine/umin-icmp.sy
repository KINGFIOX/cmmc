// This file is automatically generated by llvm2c from llvm/test/Transforms/InstCombine/umin-icmp

// function declarations
uint32_t eq_umin1(uint32_t var0, uint32_t var1);
uint32_t eq_umin2(uint32_t var0, uint32_t var1);
uint32_t eq_umin3(uint32_t var0, uint32_t var1);
uint32_t eq_umin4(uint32_t var0, uint32_t var1);
uint32_t ne_umin1(uint32_t var0, uint32_t var1);
uint32_t ne_umin2(uint32_t var0, uint32_t var1);
uint32_t ne_umin3(uint32_t var0, uint32_t var1);
uint32_t ne_umin4(uint32_t var0, uint32_t var1);
uint32_t uge_umin1(uint32_t var0, uint32_t var1);
uint32_t uge_umin2(uint32_t var0, uint32_t var1);
uint32_t uge_umin3(uint32_t var0, uint32_t var1);
uint32_t uge_umin4(uint32_t var0, uint32_t var1);
uint32_t ult_umin1(uint32_t var0, uint32_t var1);
uint32_t ult_umin2(uint32_t var0, uint32_t var1);
uint32_t ult_umin3(uint32_t var0, uint32_t var1);
uint32_t ult_umin4(uint32_t var0, uint32_t var1);

uint32_t eq_umin1(uint32_t var0, uint32_t var1){
    block0:
    return ((var0 < var1) ? var0 : var1) == var0;
}

uint32_t eq_umin2(uint32_t var0, uint32_t var1){
    block0:
    return ((var1 < var0) ? var1 : var0) == var0;
}

uint32_t eq_umin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 == ((var2 < var1) ? var2 : var1);
}

uint32_t eq_umin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 == ((var1 < var2) ? var1 : var2);
}

uint32_t ne_umin1(uint32_t var0, uint32_t var1){
    block0:
    return ((var0 < var1) ? var0 : var1) != var0;
}

uint32_t ne_umin2(uint32_t var0, uint32_t var1){
    block0:
    return ((var1 < var0) ? var1 : var0) != var0;
}

uint32_t ne_umin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 != ((var2 < var1) ? var2 : var1);
}

uint32_t ne_umin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 != ((var1 < var2) ? var1 : var2);
}

uint32_t uge_umin1(uint32_t var0, uint32_t var1){
    block0:
    return ((var0 < var1) ? var0 : var1) >= var0;
}

uint32_t uge_umin2(uint32_t var0, uint32_t var1){
    block0:
    return ((var1 < var0) ? var1 : var0) >= var0;
}

uint32_t uge_umin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 <= ((var2 < var1) ? var2 : var1);
}

uint32_t uge_umin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 <= ((var1 < var2) ? var1 : var2);
}

uint32_t ult_umin1(uint32_t var0, uint32_t var1){
    block0:
    return ((var0 < var1) ? var0 : var1) < var0;
}

uint32_t ult_umin2(uint32_t var0, uint32_t var1){
    block0:
    return ((var1 < var0) ? var1 : var0) < var0;
}

uint32_t ult_umin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 > ((var2 < var1) ? var2 : var1);
}

uint32_t ult_umin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 > ((var1 < var2) ? var1 : var2);
}

