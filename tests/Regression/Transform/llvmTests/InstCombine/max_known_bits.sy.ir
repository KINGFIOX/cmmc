func @foo(i16 %var0) -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i16 %var0 to i32;
    i32 %1 = and i32 %0, i32 255;
    i32 %2 = ztrunc i32 %1 to i32;
    i1 %3 = ucmp lt i32 %2, i32 255;
    i32 %4 = select i1 %3 ? i32 %2 : i32 255;
    i32 %5 = and i32 %4, i32 255;
    i16 %6 = ztrunc i32 %5 to i16;
    ret i16 %6;
}
func @llvm_smax_i16() -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i16 0;
}
func @llvm_smin_i16() -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i16 0;
}
func @min_max_clamp(i16 %var0) -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i1 %2 = scmp gt i32 %1, i32 -2048;
    i32 %3 = zext i16 %var0 to i32;
    i32 %4 = select i1 %2 ? i32 %3 : i32 -2048;
    i16 %5 = ztrunc i32 %4 to i16;
    i16 %6 = strunc i16 %5 to i16;
    i32 %7 = sext i16 %6 to i32;
    i1 %8 = scmp lt i32 %7, i32 2047;
    i32 %9 = and i32 %4, i32 65535;
    i32 %10 = select i1 %8 ? i32 %9 : i32 2047;
    i32 %11 = add i32 %10, i32 1;
    i16 %12 = ztrunc i32 %11 to i16;
    ret i16 %12;
}
func @min_max_clamp_2(i16 %var0) -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i1 %2 = scmp lt i32 %1, i32 2047;
    i32 %3 = zext i16 %var0 to i32;
    i32 %4 = select i1 %2 ? i32 %3 : i32 2047;
    i16 %5 = ztrunc i32 %4 to i16;
    i16 %6 = strunc i16 %5 to i16;
    i32 %7 = sext i16 %6 to i32;
    i1 %8 = scmp gt i32 %7, i32 -2048;
    i32 %9 = and i32 %4, i32 65535;
    i32 %10 = select i1 %8 ? i32 %9 : i32 -2048;
    i32 %11 = add i32 %10, i32 1;
    i16 %12 = ztrunc i32 %11 to i16;
    ret i16 %12;
}
func @min_max_clamp_3(i16 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i1 %2 = scmp gt i32 %1, i32 -2048;
    i32 %3 = zext i16 %var0 to i32;
    i32 %4 = select i1 %2 ? i32 %3 : i32 -2048;
    i16 %5 = ztrunc i32 %4 to i16;
    i16 %6 = strunc i16 %5 to i16;
    i32 %7 = sext i16 %6 to i32;
    i1 %8 = scmp lt i32 %7, i32 2047;
    i32 %9 = and i32 %4, i32 65535;
    i32 %10 = select i1 %8 ? i32 %9 : i32 2047;
    i32 %11 = add i32 %10, i32 1;
    i16 %12 = strunc i32 %11 to i16;
    i32 %13 = sext i16 %12 to i32;
    i32 %14 = ztrunc i32 %13 to i32;
    i32 %15 = add i32 %14, i32 -1;
    ret i32 %15;
}
func @min_max_clamp_4(i16 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i1 %2 = scmp lt i32 %1, i32 2047;
    i32 %3 = zext i16 %var0 to i32;
    i32 %4 = select i1 %2 ? i32 %3 : i32 2047;
    i16 %5 = ztrunc i32 %4 to i16;
    i16 %6 = strunc i16 %5 to i16;
    i32 %7 = sext i16 %6 to i32;
    i1 %8 = scmp gt i32 %7, i32 -2048;
    i32 %9 = and i32 %4, i32 65535;
    i32 %10 = select i1 %8 ? i32 %9 : i32 -2048;
    i32 %11 = add i32 %10, i32 1;
    i16 %12 = strunc i32 %11 to i16;
    i32 %13 = sext i16 %12 to i32;
    i32 %14 = ztrunc i32 %13 to i32;
    i32 %15 = add i32 %14, i32 -1;
    ret i32 %15;
}
func @min_max_clamp_intrinsic() -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i16 1;
}
func @min_max_clamp_intrinsic_2() -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i16 1;
}
func @min_max_clamp_intrinsic_3() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
func @min_max_clamp_intrinsic_4() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 0;
}
