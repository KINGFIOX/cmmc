// This file is automatically generated by llvm2c from llvm/test/Transforms/InstCombine/smin-icmp

// function declarations
uint32_t eq_smin1(uint32_t var0, uint32_t var1);
uint32_t eq_smin2(uint32_t var0, uint32_t var1);
uint32_t eq_smin3(uint32_t var0, uint32_t var1);
uint32_t eq_smin4(uint32_t var0, uint32_t var1);
uint32_t ne_smin1(uint32_t var0, uint32_t var1);
uint32_t ne_smin2(uint32_t var0, uint32_t var1);
uint32_t ne_smin3(uint32_t var0, uint32_t var1);
uint32_t ne_smin4(uint32_t var0, uint32_t var1);
uint32_t sge_smin1(uint32_t var0, uint32_t var1);
uint32_t sge_smin2(uint32_t var0, uint32_t var1);
uint32_t sge_smin3(uint32_t var0, uint32_t var1);
uint32_t sge_smin4(uint32_t var0, uint32_t var1);
uint32_t sgt_smin1(uint32_t var0, uint32_t var1);
uint32_t sgt_smin2(uint32_t var0, uint32_t var1);
uint32_t sgt_smin3(uint32_t var0, uint32_t var1);
uint32_t sgt_smin4(uint32_t var0, uint32_t var1);
uint32_t sle_smin1(uint32_t var0, uint32_t var1);
uint32_t sle_smin2(uint32_t var0, uint32_t var1);
uint32_t sle_smin3(uint32_t var0, uint32_t var1);
uint32_t sle_smin4(uint32_t var0, uint32_t var1);
uint32_t slt_smin1(uint32_t var0, uint32_t var1);
uint32_t slt_smin2(uint32_t var0, uint32_t var1);
uint32_t slt_smin3(uint32_t var0, uint32_t var1);
uint32_t slt_smin4(uint32_t var0, uint32_t var1);

uint32_t eq_smin1(uint32_t var0, uint32_t var1){
    block0:
    return ((var0 < var1) ? var0 : var1) == var0;
}

uint32_t eq_smin2(uint32_t var0, uint32_t var1){
    block0:
    return ((var1 < var0) ? var1 : var0) == var0;
}

uint32_t eq_smin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 == ((var2 < var1) ? var2 : var1);
}

uint32_t eq_smin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 == ((var1 < var2) ? var1 : var2);
}

uint32_t ne_smin1(uint32_t var0, uint32_t var1){
    block0:
    return ((var0 < var1) ? var0 : var1) != var0;
}

uint32_t ne_smin2(uint32_t var0, uint32_t var1){
    block0:
    return ((var1 < var0) ? var1 : var0) != var0;
}

uint32_t ne_smin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 != ((var2 < var1) ? var2 : var1);
}

uint32_t ne_smin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return var2 != ((var1 < var2) ? var1 : var2);
}

uint32_t sge_smin1(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var0 < var1) ? var0 : var1)) >= ((int)var0);
}

uint32_t sge_smin2(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var1 < var0) ? var1 : var0)) >= ((int)var0);
}

uint32_t sge_smin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) <= ((int)((var2 < var1) ? var2 : var1));
}

uint32_t sge_smin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) <= ((int)((var1 < var2) ? var1 : var2));
}

uint32_t sgt_smin1(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var0 < var1) ? var0 : var1)) > ((int)var0);
}

uint32_t sgt_smin2(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var1 < var0) ? var1 : var0)) > ((int)var0);
}

uint32_t sgt_smin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) < ((int)((var2 < var1) ? var2 : var1));
}

uint32_t sgt_smin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) < ((int)((var1 < var2) ? var1 : var2));
}

uint32_t sle_smin1(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var0 < var1) ? var0 : var1)) <= ((int)var0);
}

uint32_t sle_smin2(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var1 < var0) ? var1 : var0)) <= ((int)var0);
}

uint32_t sle_smin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) >= ((int)((var2 < var1) ? var2 : var1));
}

uint32_t sle_smin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) >= ((int)((var1 < var2) ? var1 : var2));
}

uint32_t slt_smin1(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var0 < var1) ? var0 : var1)) < ((int)var0);
}

uint32_t slt_smin2(uint32_t var0, uint32_t var1){
    block0:
    return ((int)((var1 < var0) ? var1 : var0)) < ((int)var0);
}

uint32_t slt_smin3(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) > ((int)((var2 < var1) ? var2 : var1));
}

uint32_t slt_smin4(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 + 3);
    return ((int)var2) > ((int)((var1 < var2) ? var1 : var2));
}

