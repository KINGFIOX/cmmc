func @eq_umax1(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ugt i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var0 : i32 %var1;
    i1 %2 = icmp eq i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @eq_umax2(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ult i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var1 : i32 %var0;
    i1 %2 = icmp eq i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @eq_umax3(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ult i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %0 : i32 %var1;
    i1 %3 = icmp eq i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @eq_umax4(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ugt i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %var1 : i32 %0;
    i1 %3 = icmp eq i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @ne_umax1(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ugt i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var0 : i32 %var1;
    i1 %2 = icmp neq i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @ne_umax2(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ult i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var1 : i32 %var0;
    i1 %2 = icmp neq i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @ne_umax3(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ult i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %0 : i32 %var1;
    i1 %3 = icmp neq i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @ne_umax4(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ugt i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %var1 : i32 %0;
    i1 %3 = icmp neq i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @ugt_umax1(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ugt i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var0 : i32 %var1;
    i1 %2 = icmp ult i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @ugt_umax2(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ult i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var1 : i32 %var0;
    i1 %2 = icmp ult i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @ugt_umax3(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ult i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %0 : i32 %var1;
    i1 %3 = icmp ult i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @ugt_umax4(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ugt i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %var1 : i32 %0;
    i1 %3 = icmp ult i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @ule_umax1(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ugt i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var0 : i32 %var1;
    i1 %2 = icmp uge i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @ule_umax2(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i1 %0 = icmp ult i32 %var0, i32 %var1;
    i32 %1 = select i1 %0 ? i32 %var1 : i32 %var0;
    i1 %2 = icmp uge i32 %var0, i32 %1;
    i32 %3 = zext i1 %2 to i32;
    i32 %4 = ztrunc i32 %3 to i32;
    ret i32 %4;
}
func @ule_umax3(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ult i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %0 : i32 %var1;
    i1 %3 = icmp uge i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
func @ule_umax4(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 3;
    i1 %1 = icmp ugt i32 %var1, i32 %0;
    i32 %2 = select i1 %1 ? i32 %var1 : i32 %0;
    i1 %3 = icmp uge i32 %0, i32 %2;
    i32 %4 = zext i1 %3 to i32;
    i32 %5 = ztrunc i32 %4 to i32;
    ret i32 %5;
}
