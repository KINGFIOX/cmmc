func @expand(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %var0, i32 1;
    i32 %1 = or i32 %0, i32 2;
    i32 %2 = and i32 %1, i32 1;
    ret i32 %2;
}
func @factorize(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %var0, i32 1;
    i32 %1 = or i32 %var0, i32 2;
    i32 %2 = and i32 %0, i32 %1;
    ret i32 %2;
}
func @factorize2(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 %var0;
}
func @factorize3(i32 %var0, i32 %var1, i32 %var2) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %var0, i32 %var2;
    i32 %1 = or i32 %var1, i32 %0;
    i32 %2 = and i32 %0, i32 %1;
    ret i32 %2;
}
func @factorize4(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = shl i32 %var1, i32 1;
    i32 %1 = sub i32 %0, i32 %var1;
    i32 %2 = mul i32 %var0, i32 %1;
    ret i32 %2;
}
func @factorize5(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = mul i32 %var1, i32 2;
    i32 %1 = sub i32 %0, i32 %var1;
    i32 %2 = mul i32 %var0, i32 %1;
    ret i32 %2;
}
