// This file is automatically generated by llvm2c from llvm/test/Transforms/InstCombine/prevent-cmp-merge

// function declarations
uint32_t test1(uint32_t var0, uint32_t var1);
uint32_t test1_logical(uint32_t var0, uint32_t var1);
uint32_t test2(uint32_t var0, uint32_t var1);
uint32_t test3(uint32_t var0, uint32_t var1);
uint32_t test3_logical(uint32_t var0, uint32_t var1);

uint32_t test1(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 ^ 5);
    return (var2 == 10) | (var2 == var1);
}

uint32_t test1_logical(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 ^ 5);
    return (var2 == 10) ? 1 : (var2 == var1);
}

uint32_t test2(uint32_t var0, uint32_t var1){
    uint32_t var2;
    block0:
    var2 = (var0 ^ var1);
    return (var2 == 0) ^ (var2 == 32);
}

uint32_t test3(uint32_t var0, uint32_t var1){
    int var2;
    block0:
    var2 = (((int)var0) - ((int)var1));
    return (var2 == 0) | (var2 == 31);
}

uint32_t test3_logical(uint32_t var0, uint32_t var1){
    int var2;
    block0:
    var2 = (((int)var0) - ((int)var1));
    return (var2 == 0) ? 1 : (var2 == 31);
}

