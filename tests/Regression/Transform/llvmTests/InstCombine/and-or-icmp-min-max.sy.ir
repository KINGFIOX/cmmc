func @sge_and_max(i8, i8) -> i32;
func @sge_and_max_commute(i8, i8) -> i32;
func @sge_and_max_commute_logical(i8, i8) -> i32;
func @sge_and_max_logical(i8, i8) -> i32;
func @sge_or_max(i8, i8) -> i32;
func @sge_or_max_commute(i8, i8) -> i32;
func @sge_or_max_commute_logical(i8, i8) -> i32;
func @sge_or_max_logical(i8, i8) -> i32;
func @sge_or_not_max(i8, i8) -> i32;
func @sge_or_not_max_commute(i8, i8) -> i32;
func @sge_or_not_max_commute_logical(i8, i8) -> i32;
func @sge_or_not_max_logical(i8, i8) -> i32;
func @sge_swap_and_max(i8, i8) -> i32;
func @sge_swap_and_max_commute(i8, i8) -> i32;
func @sge_swap_and_max_commute_logical(i8, i8) -> i32;
func @sge_swap_and_max_logical(i8, i8) -> i32;
func @sge_swap_or_max(i8, i8) -> i32;
func @sge_swap_or_max_commute(i8, i8) -> i32;
func @sge_swap_or_max_commute_logical(i8, i8) -> i32;
func @sge_swap_or_max_logical(i8, i8) -> i32;
func @sge_swap_or_not_max(i8, i8) -> i32;
func @sge_swap_or_not_max_commute(i8, i8) -> i32;
func @sge_swap_or_not_max_commute_logical(i8, i8) -> i32;
func @sge_swap_or_not_max_logical(i8, i8) -> i32;
func @sgt_and_min(i16, i16) -> i32;
func @sgt_and_min_commute(i8, i8) -> i32;
func @sgt_and_min_commute_logical(i8, i8) -> i32;
func @sgt_and_min_logical(i16, i16) -> i32;
func @sgt_and_not_min(i8, i8) -> i32;
func @sgt_and_not_min_commute(i8, i8) -> i32;
func @sgt_and_not_min_commute_logical(i8, i8) -> i32;
func @sgt_and_not_min_logical(i8, i8) -> i32;
func @sgt_or_not_min(i8, i8) -> i32;
func @sgt_or_not_min_commute(i8, i8) -> i32;
func @sgt_or_not_min_commute_logical(i8, i8) -> i32;
func @sgt_or_not_min_logical(i8, i8) -> i32;
func @sgt_swap_and_min(i8, i8) -> i32;
func @sgt_swap_and_min_commute(i8, i8) -> i32;
func @sgt_swap_and_min_commute_logical(i8, i8) -> i32;
func @sgt_swap_and_min_logical(i8, i8) -> i32;
func @sgt_swap_and_not_min(i8, i8) -> i32;
func @sgt_swap_and_not_min_commute(i8, i8) -> i32;
func @sgt_swap_and_not_min_commute_logical(i8, i8) -> i32;
func @sgt_swap_and_not_min_logical(i8, i8) -> i32;
func @sgt_swap_or_not_min(i8, i8) -> i32;
func @sgt_swap_or_not_min_commute(i8, i8) -> i32;
func @sgt_swap_or_not_min_commute_logical(i8, i8) -> i32;
func @sgt_swap_or_not_min_logical(i8, i8) -> i32;
func @sle_and_min(i8, i8) -> i32;
func @sle_and_min_commute(i8, i8) -> i32;
func @sle_and_min_commute_logical(i8, i8) -> i32;
func @sle_and_min_logical(i8, i8) -> i32;
func @sle_or_min(i8, i8) -> i32;
func @sle_or_min_commute(i8, i8) -> i32;
func @sle_or_min_commute_logical(i8, i8) -> i32;
func @sle_or_min_logical(i8, i8) -> i32;
func @sle_or_not_min(i8, i8) -> i32;
func @sle_or_not_min_commute(i8, i8) -> i32;
func @sle_or_not_min_commute_logical(i8, i8) -> i32;
func @sle_or_not_min_logical(i8, i8) -> i32;
func @sle_swap_and_min(i8, i8) -> i32;
func @sle_swap_and_min_commute(i8, i8) -> i32;
func @sle_swap_and_min_commute_logical(i8, i8) -> i32;
func @sle_swap_and_min_logical(i8, i8) -> i32;
func @sle_swap_or_min(i8, i8) -> i32;
func @sle_swap_or_min_commute(i8, i8) -> i32;
func @sle_swap_or_min_commute_logical(i8, i8) -> i32;
func @sle_swap_or_min_logical(i8, i8) -> i32;
func @sle_swap_or_not_min(i8, i8) -> i32;
func @sle_swap_or_not_min_commute(i8, i8) -> i32;
func @sle_swap_or_not_min_commute_logical(i8, i8) -> i32;
func @sle_swap_or_not_min_logical(i8, i8) -> i32;
func @slt_and_max(i8, i8) -> i32;
