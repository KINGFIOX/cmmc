func @or_test1() -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    ret i32 1;
}
func @or_test2(i8 %var0) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var0 to i32;
    i32 %1 = shl i32 %0, i32 7;
    i32 %2 = or i32 %1, i32 -128;
    i8 %3 = ztrunc i32 %2 to i8;
    ret i8 %3;
}
func @test1(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = and i32 %var0, i32 7;
    i32 %1 = and i32 %var1, i32 8;
    i32 %2 = or i32 %0, i32 %1;
    i32 %3 = and i32 %2, i32 7;
    ret i32 %3;
}
func @test2(i32 %var0, i8 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = zext i8 %var1 to i32;
    i32 %1 = or i32 %var0, i32 %0;
    i32 %2 = and i32 %1, i32 65536;
    ret i32 %2;
}
func @test3(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = shl i32 %var1, i32 1;
    i32 %1 = or i32 %var0, i32 %0;
    i32 %2 = and i32 %1, i32 1;
    ret i32 %2;
}
func @test4(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = lshr i32 %var1, i32 31;
    i32 %1 = or i32 %var0, i32 %0;
    i32 %2 = and i32 %1, i32 2;
    ret i32 %2;
}
