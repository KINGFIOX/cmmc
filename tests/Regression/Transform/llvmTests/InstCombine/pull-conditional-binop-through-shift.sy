// This file is automatically generated by llvm2c from llvm/test/Transforms/InstCombine/pull-conditional-binop-through-shift

// function declarations
uint32_t add_nosignbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t add_nosignbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t add_nosignbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t add_signbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t add_signbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t add_signbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t and_nosignbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t and_nosignbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t and_nosignbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t and_signbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t and_signbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t and_signbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t or_nosignbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t or_nosignbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t or_nosignbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t or_signbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t or_signbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t or_signbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t xor_nosignbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t xor_nosignbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t xor_nosignbit_select_shl(uint32_t var0, uint32_t var1);
uint32_t xor_signbit_select_ashr(uint32_t var0, uint32_t var1);
uint32_t xor_signbit_select_lshr(uint32_t var0, uint32_t var1);
uint32_t xor_signbit_select_shl(uint32_t var0, uint32_t var1);

uint32_t add_nosignbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 + 2147418112) : var0) >> ((uint32_t)8);
}

uint32_t add_nosignbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 + 2147418112) : var0) >> (8);
}

uint32_t add_nosignbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 + 2147418112) : var0) << ((uint32_t)8);
}

uint32_t add_signbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 + -65536) : var0) >> ((uint32_t)8);
}

uint32_t add_signbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 + -65536) : var0) >> (8);
}

uint32_t add_signbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 + -65536) : var0) << ((uint32_t)8);
}

uint32_t and_nosignbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 & 2147418112) : var0) >> ((uint32_t)8);
}

uint32_t and_nosignbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 & 2147418112) : var0) >> (8);
}

uint32_t and_nosignbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 & 2147418112) : var0) << ((uint32_t)8);
}

uint32_t and_signbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 & -65536) : var0) >> ((uint32_t)8);
}

uint32_t and_signbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 & -65536) : var0) >> (8);
}

uint32_t and_signbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 & -65536) : var0) << ((uint32_t)8);
}

uint32_t or_nosignbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 | 2147418112) : var0) >> ((uint32_t)8);
}

uint32_t or_nosignbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 | 2147418112) : var0) >> (8);
}

uint32_t or_nosignbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 | 2147418112) : var0) << ((uint32_t)8);
}

uint32_t or_signbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 | -65536) : var0) >> ((uint32_t)8);
}

uint32_t or_signbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 | -65536) : var0) >> (8);
}

uint32_t or_signbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 | -65536) : var0) << ((uint32_t)8);
}

uint32_t xor_nosignbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 ^ 2147418112) : var0) >> ((uint32_t)8);
}

uint32_t xor_nosignbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 ^ 2147418112) : var0) >> (8);
}

uint32_t xor_nosignbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 ^ 2147418112) : var0) << ((uint32_t)8);
}

uint32_t xor_signbit_select_ashr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 ^ -65536) : var0) >> ((uint32_t)8);
}

uint32_t xor_signbit_select_lshr(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 ^ -65536) : var0) >> (8);
}

uint32_t xor_signbit_select_shl(uint32_t var0, uint32_t var1){
    block0:
    return (var1 ? (var0 ^ -65536) : var0) << ((uint32_t)8);
}

