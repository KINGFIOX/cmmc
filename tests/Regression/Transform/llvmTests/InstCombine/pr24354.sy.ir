func @fn3() -> void { NoRecurse } {
  ^entry:
    i32* %0 = ptrcast i32* @c to i32*;
    i32 %1 = load i32* %0;
    i1 %2 = icmp eq i32 %1, i32 0;
    cbr i1 %2(prob = 0.5), ^if.then, ^rhsBlock;
  ^rhsBlock:
    i16* %3 = ptrcast i16* @a to i16*;
    i16 %4 = load i16* %3;
    i32 %5 = zext i16 %4 to i32;
    i1 %6 = icmp neq i32 %5, i32 0;
    i32 %7 = zext i1 %6 to i32;
    ubr ^b;
  ^if.then:
    i32* %8 = ptrcast i32* @b to i32*;
    i32 %9 = load i32* %8;
    i32 %10 = strunc i32 %9 to i32;
    i32 %11 = add i32 %10, i32 255;
    i32 %12 = ztrunc i32 %11 to i32;
    i1 %13 = icmp ugt i32 %12, i32 254;
    i32 %14 = zext i1 %13 to i32;
    i32 %15 = ztrunc i32 %14 to i32;
    i1 %16 = icmp eq i32 %15, i32 0;
    cbr i1 %16(prob = 0.5), ^b, ^rhsBlock;
  ^b:
    i32 %17 = phi [^rhsBlock, i32 %7] [^if.then, i32 0];
    i32 %18 = ztrunc i32 %17 to i32;
    i32* %19 = ptrcast i32* @d to i32*;
    store i32* %19 with i32 %18;
    ret;
}
i32* @c, align 8 = 0;
i32* @b, align 8 = 0;
i16* @a, align 8 = 0;
i32* @d, align 8 = 0;
