// This file is automatically generated by llvm2c from llvm/test/Transforms/InstCombine/minmax-demandbits

// function declarations
uint8_t and_min_7_7(uint8_t var0);
uint8_t and_min_7_8(uint8_t var0);
uint8_t and_min_7_9(uint8_t var0);
uint32_t and_umax_less(uint32_t var0);
uint32_t and_umax_more(uint32_t var0);
uint32_t and_umax_muchless(uint32_t var0);
uint32_t and_umin(uint32_t var0);
uint8_t f_10_1(uint8_t var0);
uint8_t f_191_192(uint8_t var0);
uint8_t f_1_1(uint8_t var0);
uint8_t f_32_32(uint8_t var0);
uint8_t or_min_31_30(uint8_t var0);
uint32_t or_umin(uint32_t var0);
uint32_t shr_umax(uint32_t var0);
uint8_t t_0_1(uint8_t var0);
uint8_t t_0_10(uint8_t var0);
uint8_t t_1_10(uint8_t var0);
uint8_t t_2_192(uint8_t var0);
uint8_t t_2_4(uint8_t var0);
uint8_t t_2_63_or(uint8_t var0);

uint8_t and_min_7_7(uint8_t var0){
    block0:
    return ((var0 < -7) ? var0 : -7) & -8;
}

uint8_t and_min_7_8(uint8_t var0){
    block0:
    return ((var0 < -8) ? var0 : -8) & -8;
}

uint8_t and_min_7_9(uint8_t var0){
    block0:
    return ((var0 < -9) ? var0 : -9) & -8;
}

uint32_t and_umax_less(uint32_t var0){
    block0:
    return ((31 > var0) ? 31 : var0) & -32;
}

uint32_t and_umax_more(uint32_t var0){
    block0:
    return ((32 > var0) ? 32 : var0) & -32;
}

uint32_t and_umax_muchless(uint32_t var0){
    block0:
    return ((12 > var0) ? 12 : var0) & -32;
}

uint32_t and_umin(uint32_t var0){
    block0:
    return ((15 < var0) ? 15 : var0) & -32;
}

uint8_t f_10_1(uint8_t var0){
    block0:
    return ((var0 > 10) ? var0 : 10) & 1;
}

uint8_t f_191_192(uint8_t var0){
    block0:
    return ((var0 > -65) ? var0 : -65) & -64;
}

uint8_t f_1_1(uint8_t var0){
    block0:
    return ((var0 > 1) ? var0 : 1) & 1;
}

uint8_t f_32_32(uint8_t var0){
    block0:
    return ((var0 > 32) ? var0 : 32) & -32;
}

uint8_t or_min_31_30(uint8_t var0){
    block0:
    return ((var0 < -30) ? var0 : -30) | 31;
}

uint32_t or_umin(uint32_t var0){
    block0:
    return ((15 < var0) ? 15 : var0) | 31;
}

uint32_t shr_umax(uint32_t var0){
    block0:
    return ((15 > var0) ? 15 : var0) >> (4);
}

uint8_t t_0_1(uint8_t var0){
    block0:
    return ((var0 > 0) ? var0 : 0) & 1;
}

uint8_t t_0_10(uint8_t var0){
    block0:
    return ((var0 > 0) ? var0 : 0) & 10;
}

uint8_t t_1_10(uint8_t var0){
    block0:
    return ((var0 > 1) ? var0 : 1) & 10;
}

uint8_t t_2_192(uint8_t var0){
    block0:
    return ((var0 > 2) ? var0 : 2) & -64;
}

uint8_t t_2_4(uint8_t var0){
    block0:
    return ((var0 > 2) ? var0 : 2) & 4;
}

uint8_t t_2_63_or(uint8_t var0){
    block0:
    return ((var0 > 2) ? var0 : 2) | 63;
}

