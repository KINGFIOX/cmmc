func @test(i32 %var0, i32 %var1, i32 %var2) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = strunc i32 %var1 to i32;
    i32 %1 = strunc i32 %var2 to i32;
    i32 %2 = sdiv i32 %0, i32 %1;
    i1 %3 = icmp neq i32 %var0, i32 0;
    cbr i1 %3(prob = 0.5), ^if.then, ^if.else;
  ^if.then:
    i32 %4 = add i32 %var1, i32 %var2;
    ubr ^b;
  ^if.else:
    i32 %5 = ztrunc i32 %2 to i32;
    ubr ^b;
  ^b:
    i32 %6 = phi [^if.then, i32 %4] [^if.else, i32 %5];
    ret i32 %6;
}
