func @f_t15_t01_t09(i64 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i64 %0 = lshr i64 %var0, i64 31;
    i32 %1 = ztrunc i64 %0 to i32;
    i32 %2 = shl i32 %1, i32 16;
    ret i32 %2;
}
func @must_drop_poison(i32 %var0, i32 %var1) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = strunc i32 %var1 to i32;
    i32 %1 = ztrunc i32 %0 to i32;
    i32 %2 = strunc i32 %1 to i32;
    i32 %3 = and i32 %var0, i32 255;
    i32 %4 = strunc i32 %3 to i32;
    i32 %5 = shl i32 %4, i32 %2;
    i8 %6 = ztrunc i32 %5 to i8;
    ret i8 %6;
}
func @set_shl_mask(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = or i32 %var0, i32 196609;
    i32 %1 = shl i32 %0, i32 %var1;
    i32 %2 = and i32 %1, i32 65536;
    ret i32 %2;
}
func @sext_shl_mask(i16 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = shl i32 %2, i32 %var1;
    i32 %4 = and i32 %3, i32 65535;
    ret i32 %4;
}
func @sext_shl_mask_higher(i16 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = shl i32 %2, i32 %var1;
    i32 %4 = and i32 %3, i32 65536;
    ret i32 %4;
}
func @sext_shl_trunc_larger(i16 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = shl i32 %2, i32 %var1;
    ret i32 %3;
}
func @sext_shl_trunc_same_size(i16 %var0, i32 %var1) -> i16 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = shl i32 %2, i32 %var1;
    i16 %4 = ztrunc i32 %3 to i16;
    ret i16 %4;
}
func @sext_shl_trunc_smaller(i16 %var0, i32 %var1) -> i8 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i16 %0 = strunc i16 %var0 to i16;
    i32 %1 = sext i16 %0 to i32;
    i32 %2 = ztrunc i32 %1 to i32;
    i32 %3 = shl i32 %2, i32 %var1;
    i8 %4 = ztrunc i32 %3 to i8;
    ret i8 %4;
}
