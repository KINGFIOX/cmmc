func @Ack(i32 %var0, i32 %var1) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless } {
  ^0:
    ubr ^entry;
  ^entry:
    i32 %1 = phi [^0, i32 %var1] [^if.then1, i32 1] [^if.else5, i32 %27];
    i32 %2 = phi [^0, i32 %var0] [^if.then1, i32 %6] [^if.else5, i32 %28];
    i1 %3 = icmp eq i32 %2, i32 0;
    cbr i1 %3(prob = 0.5), ^if.then, ^if.else;
  ^if.then:
    i32 %4 = add i32 %1, i32 1;
    ubr ^b;
  ^if.else:
    i1 %5 = icmp eq i32 %1, i32 0;
    cbr i1 %5(prob = 0.5), ^if.then1, ^if.else1;
  ^if.then1:
    i32 %6 = add i32 %2, i32 -1;
    ubr ^entry;
  ^if.else1:
    i32 %7 = add i32 %2, i32 -1;
    i32 %8 = add i32 %1, i32 -1;
    ubr ^entry1;
  ^b:
    i32 %9 = phi [^if.then, i32 %4] [^if.then4, i32 %23];
    ret i32 %9;
  ^entry1:
    i32 %10 = phi [^if.else1, i32 %8] [^if.then3, i32 1];
    i32 %11 = phi [^if.else1, i32 %2] [^if.then3, i32 %15];
    i1 %12 = icmp eq i32 %11, i32 0;
    cbr i1 %12(prob = 0.5), ^if.then2, ^if.else2;
  ^if.then2:
    i32 %13 = add i32 %10, i32 1;
    ubr ^entry2;
  ^if.else2:
    i1 %14 = icmp eq i32 %10, i32 0;
    cbr i1 %14(prob = 0.5), ^if.then3, ^if.else3;
  ^if.then3:
    i32 %15 = add i32 %11, i32 -1;
    ubr ^entry1;
  ^if.else3:
    i32 %16 = add i32 %10, i32 -1;
    i32 %17 = call (i32, i32) -> i32 @Ack(i32 %11, i32 %16);
    i32 %18 = add i32 %11, i32 -1;
    i32 %19 = call (i32, i32) -> i32 @Ack(i32 %18, i32 %17);
    ubr ^entry2;
  ^entry2:
    i32 %20 = phi [^if.then2, i32 %13] [^if.else3, i32 %19] [^if.then5, i32 1];
    i32 %21 = phi [^if.then2, i32 %7] [^if.else3, i32 %7] [^if.then5, i32 %25];
    i1 %22 = icmp eq i32 %21, i32 0;
    cbr i1 %22(prob = 0.5), ^if.then4, ^if.else4;
  ^if.then4:
    i32 %23 = add i32 %20, i32 1;
    ubr ^b;
  ^if.else4:
    i1 %24 = icmp eq i32 %20, i32 0;
    cbr i1 %24(prob = 0.5), ^if.then5, ^if.else5;
  ^if.then5:
    i32 %25 = add i32 %21, i32 -1;
    ubr ^entry2;
  ^if.else5:
    i32 %26 = add i32 %20, i32 -1;
    i32 %27 = call (i32, i32) -> i32 @Ack(i32 %21, i32 %26);
    i32 %28 = add i32 %21, i32 -1;
    ubr ^entry;
}
