func @foo1(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
  ^entry:
    i32 %0 = add i32 %var0, i32 2;
    ret i32 %0;
}
func @foo2(i32 %var0) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless } {
  ^entry:
    i32 %0 = add i32 %var0, i32 2;
    i32 %1 = call (i32) -> i32 @foo2(i32 %0);
    i32 %2 = add i32 %1, i32 2;
    i1 %3 = ucmp gt i32 %2, i32 10000;
    cbr i1 %3(prob = 0.5), ^if.then, ^if.else;
  ^if.then:
    i32 %4 = phi [^entry, i32 %2] [^if.else, i32 %8];
    i32 %5 = add i32 %4, i32 2;
    i1 %6 = ucmp gt i32 %5, i32 10000;
    cbr i1 %6(prob = 0.5), ^if.then1, ^if.else1;
  ^if.else:
    i32 %7 = phi [^entry, i32 %2] [^if.else, i32 %8];
    i32 %8 = add i32 %7, i32 2;
    i1 %9 = ucmp gt i32 %8, i32 10000;
    cbr i1 %9(prob = 0.5), ^if.then, ^if.else;
  ^if.else1:
    i32 %10 = phi [^if.then, i32 %5] [^if.else1, i32 %11];
    i32 %11 = add i32 %10, i32 2;
    i1 %12 = ucmp gt i32 %11, i32 10000;
    cbr i1 %12(prob = 0.5), ^if.then1, ^if.else1;
  ^if.then1:
    i32 %13 = phi [^if.then, i32 %5] [^if.else1, i32 %11];
    ret i32 %13;
}
