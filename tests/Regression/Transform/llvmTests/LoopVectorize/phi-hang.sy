// This file is automatically generated by llvm2c from llvm/test/Transforms/LoopVectorize/phi-hang

// function declarations
void test1(uint32_t var0);
void test2(void);

void test1(uint32_t var0){
    uint32_t var1_phi;
    uint32_t var2_phi;
    uint32_t var3_phi;
    uint32_t var4_phi;
    uint32_t var5_phi;
    int var6;
    block0:
    var1_phi = 1;
    var2_phi = var0;
    goto block1;
    block1:
    if (1) {
        var3_phi = var1_phi;
        var4_phi = var1_phi;
        var5_phi = var1_phi;
        goto block4;
    } else {
        var3_phi = 0;
        var4_phi = 0;
        var5_phi = 0;
        goto block4;
    }
    block4:
    var6 = (((int)var2_phi) + ((int)1));
    if (var6 == 0) {
        return;
    } else {
        var1_phi = var4_phi;
        var2_phi = var6;
        goto block1;
    }
}

void test2(void){
    uint32_t var0_phi;
    uint32_t var1_phi;
    uint32_t var2_phi;
    uint32_t var3;
    int var4;
    block0:
    var0_phi = 0;
    var1_phi = 0;
    var2_phi = 0;
    goto block1;
    block1:
    var3 = (var1_phi | var2_phi);
    var4 = (((int)var0_phi) + ((int)1));
    if (var4 == 0) {
        return;
    } else {
        var0_phi = var4;
        var1_phi = 1;
        var2_phi = var3;
        goto block1;
    }
}

