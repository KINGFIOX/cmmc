// This file is automatically generated by llvm2c from llvm/test/Transforms/IROutliner/outlining-isomorphic-predicates

// function declarations
void dontoutline_sgt(void);
void outline_sgt(void);
void outline_slt1(void);
void outline_slt2(void);
void outline_ugt1(void);
void outline_ugt2(void);
void outline_ult(void);

void dontoutline_sgt(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (((int)var0) > ((int)var1));
    return;
}

void outline_sgt(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (((int)var1) > ((int)var0));
    return;
}

void outline_slt1(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (((int)var0) < ((int)var1));
    return;
}

void outline_slt2(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (((int)var0) < ((int)var1));
    return;
}

void outline_ugt1(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (var0 > var1);
    return;
}

void outline_ugt2(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (var0 > var1);
    return;
}

void outline_ult(void){
    uint32_t var0;
    uint32_t var1;
    uint32_t var2;
    block0:
    var0 = 2;
    var1 = 3;
    var2 = (var1 < var0);
    return;
}

