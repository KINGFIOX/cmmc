// This file is automatically generated by llvm2c from llvm/test/Transforms/LoopStrengthReduce/nested-reduce

// function declarations
uint32_t foo(uint32_t var0, uint32_t var1, uint32_t var2, uint32_t var3);

uint32_t foo(uint32_t var0, uint32_t var1, uint32_t var2, uint32_t var3){
    uint32_t var4;
    uint32_t var5;
    uint32_t var6_phi;
    uint32_t var7_phi;
    uint32_t var9_phi;
    uint32_t var10_phi;
    uint32_t var11_phi;
    uint32_t var17_phi;
    uint32_t var8;
    uint32_t var12;
    uint32_t var13;
    uint32_t var14;
    uint32_t var15;
    uint32_t var16;
    uint32_t var18;
    block0:
    var4 = (((int)var2) > ((int)0));
    var5 = (var0 & 1);
    var6_phi = 0;
    var7_phi = 0;
    goto block1;
    block1:
    if (var4) {
        var8 = (((uint32_t)var6_phi) * 6);
        var9_phi = var7_phi;
        var10_phi = 0;
        goto block3;
    } else {
        var17_phi = var7_phi;
        goto block7;
    }
    block7:
    var18 = (var6_phi + 1);
    if (var18 == 4) {
        return var17_phi;
    } else {
        var6_phi = var18;
        var7_phi = var17_phi;
        goto block1;
    }
    block3:
    var11_phi = 0;
    goto block4;
    block4:
    var12 = (((uint32_t)var11_phi) + var10_phi);
    var13 = (var3 << ((uint32_t)((uint32_t)((uint8_t)(var12 + var8)))));
    var14 = (var12 + 1);
    if (var13 == var1) {
        var15 = ((var5 & var13) + var9_phi);
        if (((int)var14) < ((int)var2)) {
            var9_phi = var15;
            var10_phi = var14;
            goto block3;
        } else {
            var17_phi = var15;
            goto block7;
        }
    } else {
        var16 = (var11_phi + 1);
        if (((int)var14) < ((int)var2)) {
            var11_phi = var16;
            goto block4;
        } else {
            var17_phi = var9_phi;
            goto block7;
        }
    }
}

