func @bar(i32 %var0, i32 %var1) -> void { NoRecurse } {
  ^entry:
    i32 %0 = strunc i32 %var0 to i32;
    ubr ^block1;
  ^block1:
    i32 %1 = phi [^entry, i32 0] [^block4, i32 %6];
    i32 %2 = strunc i32 %1 to i32;
    i1 %3 = icmp sgt i32 %0, i32 %2;
    cbr i1 %3(prob = 0.5), ^if.then, ^if.else;
  ^if.then:
    i1 %4 = icmp eq i32 %var1, i32 0;
    cbr i1 %4(prob = 0.5), ^block4, ^if.else1;
  ^if.else:
    ret;
  ^block4:
    i32 %5 = add i32 %2, i32 1;
    i32 %6 = ztrunc i32 %5 to i32;
    ubr ^block1;
  ^if.else1:
    i32* %7 = ptrcast i32* @g to i32*;
    i32 %8 = load i32* %7;
    i32 %9 = strunc i32 %8 to i32;
    i32 %10 = add i32 %9, i32 1;
    i32 %11 = ztrunc i32 %10 to i32;
    store i32* %7 with i32 %11;
    ubr ^block4;
}
i32* @g, align 4 = 0;
