func @read() -> i32 { NoMemoryRead NoMemoryWrite };
func @write() -> void { NoMemoryRead NoMemoryWrite };
func @test_1_r07() -> i32 {
^entry:
    i32* %c = alloc i32;
    i32* %b = alloc i32;
    i32* %a = alloc i32;
    store i32* %a with i32 0;
    store i32* %b with i32 0;
    store i32* %c with i32 0;
    store i32* %a with i32 1;
    i32 %0 = load i32* %a;
    i1 %1 = scmp neq i32 %0, i32 0;
    cbr i1 %1(prob = 0.5), ^b1, ^b2;
^b1:
    i1 %2 = scmp neq i32 2, i32 0;
    ubr ^b2;
^b2:
    i1 %3 = phi [^b1, i1 %2] [^entry, i1 false];
    i32 %4 = zext i1 %3 to i32;
    store i32* %b with i32 %4;
    i32 %5 = load i32* %b;
    i1 %6 = scmp neq i32 %5, i32 0;
    cbr i1 %6(prob = 0.5), ^b4, ^b3;
^b3:
    i1 %7 = scmp neq i32 3, i32 0;
    ubr ^b4;
^b4:
    i1 %8 = phi [^b3, i1 %7] [^b2, i1 true];
    i32 %9 = zext i1 %8 to i32;
    store i32* %c with i32 %9;
    i32 %10 = load i32* %c;
    i32 %11 = or i32 %10, i32 4;
    store i32* %a with i32 %11;
    i32 %12 = load i32* %a;
    i32 %13 = and i32 %12, i32 5;
    store i32* %b with i32 %13;
    unreachable;
}
