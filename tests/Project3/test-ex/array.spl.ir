func @read() -> i32 { NoMemoryRead NoMemoryWrite };
func @write() -> void { NoMemoryRead NoMemoryWrite };
func @sum([2 * i32]* %x) -> i32 {
^entry:
    i32* %0 = getelementptr &([2 * i32]* %x)[i32 0][i32 0];
    i32 %1 = load i32* %0;
    i32* %2 = getelementptr &([2 * i32]* %x)[i32 0][i32 1];
    i32 %3 = load i32* %2;
    i32 %4 = add i32 %1, i32 %3;
    ret i32 %4;
}
func @main() -> i32 {
^entry:
    [2 * [2 * i32]]* %b = alloc [2 * [2 * i32]];
    [2 * i32]* %a = alloc [2 * i32];
    i32* %0 = getelementptr &([2 * i32]* %a)[i32 0][i32 0];
    i32 %1 = call () -> i32 @read();
    store i32* %0 with i32 %1;
    i32* %2 = getelementptr &([2 * i32]* %a)[i32 0][i32 1];
    i32 %3 = call () -> i32 @read();
    store i32* %2 with i32 %3;
    [2 * i32]* %4 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 0];
    i32* %5 = getelementptr &([2 * i32]* %4)[i32 0][i32 0];
    i32 %6 = call () -> i32 @read();
    store i32* %5 with i32 %6;
    [2 * i32]* %7 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 0];
    i32* %8 = getelementptr &([2 * i32]* %7)[i32 0][i32 1];
    i32 %9 = call () -> i32 @read();
    store i32* %8 with i32 %9;
    [2 * i32]* %10 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 1];
    i32* %11 = getelementptr &([2 * i32]* %10)[i32 0][i32 0];
    i32 %12 = call () -> i32 @read();
    store i32* %11 with i32 %12;
    [2 * i32]* %13 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 1];
    i32* %14 = getelementptr &([2 * i32]* %13)[i32 0][i32 1];
    i32 %15 = call () -> i32 @read();
    store i32* %14 with i32 %15;
    i32 %16 = call ([2 * i32]*) -> i32 @sum([2 * i32]* %a);
    call (i32) -> void @write(i32 %16);
    [2 * i32]* %17 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 0];
    i32* %18 = getelementptr &([2 * i32]* %17)[i32 0][i32 0];
    i32 %19 = load i32* %18;
    [2 * i32]* %20 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 0];
    i32* %21 = getelementptr &([2 * i32]* %20)[i32 0][i32 1];
    i32 %22 = load i32* %21;
    i32 %23 = add i32 %19, i32 %22;
    [2 * i32]* %24 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 1];
    i32* %25 = getelementptr &([2 * i32]* %24)[i32 0][i32 0];
    i32 %26 = load i32* %25;
    i32 %27 = add i32 %23, i32 %26;
    [2 * i32]* %28 = getelementptr &([2 * [2 * i32]]* %b)[i32 0][i32 1];
    i32* %29 = getelementptr &([2 * i32]* %28)[i32 0][i32 1];
    i32 %30 = load i32* %29;
    i32 %31 = add i32 %27, i32 %30;
    ret i32 %31;
}
