internal func @read() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @write() -> void { NoMemoryRead NoMemoryWrite };
func @sum([2 * i32]* %x) -> i32 { NoMemoryWrite NoSideEffect NoRecurse } {
^entry:
    i32* %0 = getelementptr &([2 * i32]* %x)[i32 0][i32 0];
    i32 %1 = load i32* %0;
    i32* %2 = getelementptr &([2 * i32]* %x)[i32 0][i32 1];
    i32 %3 = load i32* %2;
    i32 %4 = add i32 %1, i32 %3;
    ret i32 %4;
}
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry:
    i32 %0 = call () -> i32 @read();
    i32 %1 = call () -> i32 @read();
    i32 %2 = call () -> i32 @read();
    i32 %3 = call () -> i32 @read();
    i32 %4 = call () -> i32 @read();
    i32 %5 = call () -> i32 @read();
    i32 %6 = add i32 %0, i32 %1;
    call (i32) -> void @write(i32 %6);
    i32 %7 = add i32 %2, i32 %3;
    i32 %8 = add i32 %7, i32 %4;
    i32 %9 = add i32 %8, i32 %5;
    ret i32 %9;
}
