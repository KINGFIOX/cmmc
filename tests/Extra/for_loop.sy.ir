internal func @putint(i32) -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse Entry } {
^entry():
    call (i32) -> void @putint(i32 0);
    call (i32) -> void @putint(i32 1);
    call (i32) -> void @putint(i32 2);
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putint(i32 4);
    call (i32) -> void @putint(i32 5);
    call (i32) -> void @putint(i32 6);
    call (i32) -> void @putint(i32 7);
    call (i32) -> void @putint(i32 8);
    call (i32) -> void @putint(i32 9);
    call (i32) -> void @putint(i32 0);
    call (i32) -> void @putint(i32 1);
    call (i32) -> void @putint(i32 2);
    call (i32) -> void @putint(i32 3);
    call (i32) -> void @putint(i32 4);
    call (i32) -> void @putint(i32 5);
    call (i32) -> void @putint(i32 6);
    call (i32) -> void @putint(i32 7);
    call (i32) -> void @putint(i32 8);
    call (i32) -> void @putint(i32 9);
    ubr [ ^indirect i32 0 ];
^indirect(i32 %arg):
    i32 %0 = add i32 %arg, i32 1;
    i1 %1 = scmp eq i32 %0, i32 5;
    cbr i1 %1(prob = 0.5), [ ^indirect i32 %0 ], [ ^indirect1 i32 %0, i32 %0 ];
^indirect1(i32 %arg, i32 %arg1):
    i1 %0 = scmp gt i32 %arg, i32 9;
    cbr i1 %0(prob = 0.5), [ ^b i32 %arg1 ], [ ^indirect i32 %arg ];
^b(i32 %arg):
    ret i32 %arg;
}
