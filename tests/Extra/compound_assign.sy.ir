internal func @getint() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getch() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @getarray() -> i32 { NoMemoryRead };
internal func @getfloat() -> f32 { NoMemoryRead NoMemoryWrite };
internal func @getfarray() -> i32 { NoMemoryRead };
internal func @putint() -> void { NoMemoryRead NoMemoryWrite };
internal func @putch() -> void { NoMemoryRead NoMemoryWrite };
internal func @putarray() -> void { NoMemoryWrite };
internal func @putfloat() -> void { NoMemoryRead NoMemoryWrite };
internal func @putfarray() -> void { NoMemoryWrite };
internal func @starttime() -> void { NoMemoryRead NoMemoryWrite };
internal func @stoptime() -> void { NoMemoryRead NoMemoryWrite };
func @main() -> i32 { Entry } {
^entry:
    i32* %a = alloc i32;
    store i32* %a with i32 0;
    i32 %0 = load i32* %a;
    i32 %1 = add i32 %0, i32 1;
    store i32* %a with i32 %1;
    i32 %2 = load i32* %a;
    i32 %3 = sub i32 %2, i32 1;
    store i32* %a with i32 %3;
    i32 %4 = load i32* %a;
    i32 %5 = mul i32 %4, i32 1;
    store i32* %a with i32 %5;
    i32 %6 = load i32* %a;
    i32 %7 = sdiv i32 %6, i32 1;
    store i32* %a with i32 %7;
    i32 %8 = load i32* %a;
    i32 %9 = srem i32 %8, i32 10;
    store i32* %a with i32 %9;
    i32 %10 = load i32* %a;
    i32 %11 = xor i32 %10, i32 12;
    store i32* %a with i32 %11;
    i32 %12 = load i32* %a;
    i32 %13 = and i32 %12, i32 15;
    store i32* %a with i32 %13;
    i32 %14 = load i32* %a;
    i32 %15 = or i32 %14, i32 31;
    store i32* %a with i32 %15;
    i32 %16 = load i32* %a;
    ret i32 %16;
}
