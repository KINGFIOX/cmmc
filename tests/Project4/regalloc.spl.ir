internal func @read() -> i32 { NoMemoryRead NoMemoryWrite };
internal func @write() -> void { NoMemoryRead NoMemoryWrite };
func @test(i32 %a) -> i32 { NoMemoryRead NoMemoryWrite NoSideEffect Stateless NoRecurse } {
^0:
    i1 %1 = scmp eq i32 %a, i32 0;
    cbr i1 %1(prob = 0.5), ^b1, ^b;
^b:
    i32 %2 = phi [^0, i32 %a] [^b, i32 %4];
    i32 %3 = phi [^0, i32 0] [^b, i32 %5];
    i32 %4 = add i32 %2, i32 -1;
    i32 %5 = add i32 %3, i32 1;
    i1 %6 = scmp eq i32 %4, i32 0;
    cbr i1 %6(prob = 0.5), ^b1, ^b;
^b1:
    i32 %7 = phi [^0, i32 %a] [^b, i32 %4];
    i32 %8 = phi [^0, i32 0] [^b, i32 %5];
    i32 %9 = add i32 %8, i32 %7;
    ret i32 %9;
}
func @main() -> i32 { NoMemoryRead NoMemoryWrite NoRecurse } {
^entry:
    i32 %0 = call () -> i32 @read();
    i32 %1 = call () -> i32 @read();
    i32 %2 = call () -> i32 @read();
    i32 %3 = call () -> i32 @read();
    i32 %4 = call () -> i32 @read();
    i32 %5 = call () -> i32 @read();
    i32 %6 = call () -> i32 @read();
    i32 %7 = call () -> i32 @read();
    i32 %8 = call () -> i32 @read();
    i32 %9 = call () -> i32 @read();
    i32 %10 = call () -> i32 @read();
    i32 %11 = call () -> i32 @read();
    i32 %12 = call () -> i32 @read();
    i32 %13 = call () -> i32 @read();
    i32 %14 = call () -> i32 @read();
    i32 %15 = call () -> i32 @read();
    ubr ^b;
^b:
    i32 %16 = phi [^entry, i32 10] [^b, i32 %18];
    i32 %17 = phi [^entry, i32 0] [^b, i32 %19];
    i32 %18 = add i32 %16, i32 -1;
    i32 %19 = add i32 %17, i32 1;
    i1 %20 = scmp eq i32 %18, i32 0;
    cbr i1 %20(prob = 0.5), ^b1, ^b;
^b1:
    i32 %21 = add i32 %18, i32 %19;
    call (i32) -> void @write(i32 %21);
    ret i32 0;
}
